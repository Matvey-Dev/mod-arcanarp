#include <a_samp>
#include <Pawn.CMD>
#include <streamer>
#include <sampvoice>
#include <a_mysql>
#include <sscanf2>
#include <crashdetect>
#include <md5>
#include <fmt>
#include <CRP>
#include <nex-ac>
#include <KeyListener>
#include <foreach>
#include <cef>
#include <a_http>
#undef MAX_PLAYERS
const MAX_PLAYERS = 150;
main() {
	print("\n____________________________\n");
	print(" ARCANA FUN");
	print(" АВТОР МОДА - Mamedov");
	print("\n____________________________");
	cef_subscribe("callback_dialog_response", "CallbackDialogResponse");
}
AntiDeAMX()
{
      new a[][] =
      {
          "Unarmed (Fist)",
          "Brass K"
      };
      #pragma unused a
}
#if !defined gpci
    native gpci(playerid, serial[], len);
#endif
#pragma tabsize 0
//======================[ клиент - настройки ]======================//
new capturetime = 1; // 0 нет лимитов на капты // 1 есть
new XDON = 3; // сколько X донат
#define CEF_INTERFACE_BROWSER_ID 1
//======================[ Настройки подключения базы данных (ОСНОВНОЙ СЕРВЕР)]======================//
#define MySQL_HOST         "127.0.0.1" // [ MYSQL ] - HOST
#define MySQL_USER         "gs220257" // [ MYSQL ] - USER
#define MySQL_PASS         "Kuzya228terminator" // [ MYSQL ] - PASSWORD
#define MySQL_DB       	   "gs220257" // [ MYSQL ] - BASE
//======================[ Anti - Cheat ]======================//
#define AC_MAX_CODES 53
#define AC_MAX_CODE_LENGTH (3 + 1)
#define AC_MAX_CODE_NAME_LENGTH (33 + 1)
#define AC_CODE_TRIGGER_TYPE_DISABLED 0
#define AC_CODE_TRIGGER_TYPE_WARNING 1
#define AC_CODE_TRIGGER_TYPE_KICK 2
#define AC_MAX_TRIGGER_TYPES 3
#define AC_GLOBAL_TRIGGER_TYPE_PLAYER 0
//======================[ Настройки сервера ]======================//
#define CODELID            "2342462" // [ GROUP VK ] - КОД ДЛЯ ПОЛУЧЕНИЯ ДОСТУПА В ЛИД. КФ.
#define VK                 "arcana_rp" // [ GROUP VK ] - ГРУППА ВК
#define DEV                "arcana_rp" // [ GROUP VK ] - ГРУППА РАЗРАБОВ
#define FREE               "arcana_rp" // [ GROUP VK ] - ТОРГОВАЯ ПЛОЩАДКА И ТД!
#define FORUM              "forum.arcanarp.online" // [ SITE'S ] - FORUM
#define SITE               "arcanarp.online" // [ SITE'S ] - SITE
#define LIDCF          	   "cf7WxO" // Ссылка на Лид. Кф.
//======================[ Конфигурация ТС ]======================//
#define GARAGE_INT_MERIYA 1
#define GARAGE_INT_MVD 2
#define GARAGE_INT_CRB 3
#define GARAGE_INT_VCH 4
#define GARAGE_INT_GOPOTA 5
#define GARAGE_INT_SKINHEAD 6
#define GARAGE_INT_OFFCLUB 7
//======================[ Максы ]======================//
#define MAX_BANS 				5000
#define MAX_G					5000
#define MAX_VIP					8000
#define MAX_KV   				600
#define MAX_HOUSES      		150
#define MAX_BUSINESS            100
#define MAX_GROUP	            500
//======================[ Цвета ]======================//
#define COLOR_AC 				0xFF6347FF
#define COLOR_HELP 				0xCCFF33FF
#define COLOR_BLUE              0x33AAFFFF
#define COLOR_WHITE 		    0xCCCCCCFF
#define CG		 			    0xAFAFAFAA
#define CGR		 			    0x008000AA
#define COLOR_GRAD1 		    0xB4B5B700
#define COLOR_GRAD2 	    	0xBFC0C200
#define COLOR_GRAD3 	    	0xCBCCCE00
#define COLOR_GRAD4 	    	0xD8D8D800
#define COLOR_GRAD5 	     	0xE3E3E300
#define COLOR_GRAD6 	    	0xF0F0F0FF
#define CY			 			0xFFFF00AA
#define COLOR_RED               0xAA3333AA
#define COLOR_RADIO             0x69b867FF
#define COLOR_SINFO      		0x3498DBAA
#define COLOR_SSUCCESS    		0x26A65BAA
#define COLOR_SDANGER      		0xEF4836AA
#define COLOR_SWARNING      	0xF7CA18AA
#define COLOR_VISH				0xf00e5dFF
#define COLOR_LIGHTYELLOW		0xFFFF99FF
#define COLOOR_GOLUBOY			0x4dcfffFF
#define COLOR_ADMINCHAT         0x8fbedb00
#define COLOR_TOMATO      		0xFF6347FF
#define COLOR_BLACK             0x5e5e5eFF
//======================[ Максимальное количество GS имен ]======================//
#define MAX_GSNAME              9
//======================[ Макросы ]======================//
new str_t[1048]; //Для запросов
#define PRESSED(%0) 				(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) 				(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define mysql_tqueryf(%0,%1,%2)     str_t[0] = EOS, mysql_format(%0, str_t, sizeof(str_t), %1, %2) && mysql_tquery(%0, str_t)
#define callback:%0(%1)				forward %0(%1) ; public %0(%1)
FixSVarString(str[], size = sizeof(str)) for (new i = 0; ((str[i] &= 0xFF) != '\0') && (++i != size);) {}
#define getName(%0)  PI[%0][data_NAME]
new DeathNameTimer[MAX_PLAYERS];
#define 	SCM     	SendClientMessage
//======================[ Система походки ]======================//
#define WALK_DEFAULT    		0
#define WALK_NORMAL     		1
#define WALK_PED        		2
#define WALK_GANGSTA    		3
#define WALK_GANGSTA2   		4
#define WALK_OLD        		5
#define WALK_FAT_OLD    		6
#define WALK_FAT        		7
#define WALK_LADY       		8
#define WALK_LADY2      		9
#define WALK_WHORE      		10
#define WALK_WHORE2     		11
#define WALK_DRUNK      		12
#define WALK_BLIND      		13
//======================[ Система прокачки скиллов ]======================//
#define Ammo_PISTOL 			1
#define Ammo_SDPISTOL 			1
#define Ammo_DEAGLE             2
#define Ammo_SHOTGUN 			1
#define Ammo_UZI 				3
#define Ammo_MP5 				3
#define Ammo_AK47 				1
#define Ammo_M4A1 				1
#define Ammo_RIFLE 				1
#define KEY_AIM 				(128)
#define MAX_FRACTIONS         	8
#define INVALID_KV_ID 			-1
#define INVALID_HOUSE_ID 		-1
#define INVALID_BUSINESS_ID 	-1
#define INVALID_JB_ID           -1
#define INVALID_AB_ID           -1
#define cena_24                 5
#define cena_azs                3
#define cena_clothes            2
#define cena_gun                6
#define cena_eat                2
#define TRACK_KRUG              5
#define VAGONKA_ID 	   			1
#define DOSKA_ID       			2
#define BRUS_ID        			3
#define RUDA_ID        			4
#define MORKOV_ID      			5
#define KAPUSTA_ID     			6
#define OGUREC_ID      			7
#define POMIDOR_ID     			8
#define KARTOFEL_ID    			9
#define ORANGE_ID      			10
#define PERSIK_ID      			11
#define SLIVA_ID       			12
#define YABLOKO_ID     			13
#define FUEL_ID        			14
#define GATES_CLOSED  			1
#define GATES_OPEN      		2
#define COLOR_ORANGE            0xFFA500AA
#define COLOR_WHITE             0xCCCCCCFF
#define COLOR_LIGHTGREEN    	0x9ACD32AA
#define GCASH					25				//Зар.плата за 1ед. оружия.
#define D_GUNJOB			    1007			//ID диалога устройства на работу
#define D_GUNCJOB       		1008			//ID диалога завершения работы
#define MOVE_SPEED              100.0
#define ACCEL_RATE              0.03
#define CAMERA_MODE_NONE    	0
#define CAMERA_MODE_FLY     	1
#define MOVE_FORWARD    		1
#define MOVE_BACK       		2
#define MOVE_LEFT       		3
#define MOVE_RIGHT      		4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8
#define MAX_GANGZONE 			104
//===============================[ массивы ]=======================================//
static const stock GSName[MAX_GSNAME][20] = {
	"Игрок",
 	"NGM",
 	"JRGM",
 	"GM",
 	"GM+",
 	"LGM",
 	"SGM",
 	"SGM+",
 	"Разработчик"
};
static const stock Fraction_Name[MAX_FRACTIONS][32] = {
	"Гражданский",
	"Правительство",
 	"Войсковая часть",
 	"МО МВД",
 	"БЦРБ",
 	"Скинхеды",
 	"Гопота",
 	"Кавказцы"
};
enum noclipenum {
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
enum E_WEATHER_DATA {
	weather_name[25],
	weather_id,
	weather_degrees
};
new Float:Bankomats[4][4] = {
	{1797.4493, 2503.9673, 15.8725,90.00},
	{2114.6213, 1802.0273, 12.2200,90.00},
	{2382.6541, 1955.5677, 15.8600,90.00},
	{2328.0881, -1805.9023, 22.4540,90.00}
};
new const weapon_names[][] =
{
/*  0 */{"Без оружия"},                 /*  1 */{"Кастет"},                     /*  2 */{"Клюшка для гольфа"},
/*  3 */{"Полицейская дубинка"},        /*  4 */{"Нож"},                        /*  5 */{"Бейсбольная бита"},
/*  6 */{"Лопата"},                     /*  7 */{"Кий"},                        /*  8 */{"Катана"},
/*  9 */{"Бензопила"},                  /* 10 */{"Большой дилдо"},              /* 11 */{"Малый дилдо"},
/* 12 */{"Большой вибратор"},           /* 13 */{"Малый вибратор"},             /* 14 */{"Цветы"},
/* 15 */{"Трость"},                     /* 16 */{"Граната"},                    /* 17 */{"Слезоточивый газ"},
/* 18 */{"Коктейль Молотова"},          /* 19 */{""},/* 20 */{""},/* 21 */{""}, /* 22 */{"Кольт .45"},
/* 23 */{"Кольт .45 с глушителем"},     /* 24 */{"Desert Eagle"},				/* 25 */{"Дробовик"},
/* 26 */{"Обрез"},                      /* 27 */{"SPAS-12"},                    /* 28 */{"Микро-Узи"},
/* 29 */{"MP5"},                        /* 30 */{"АК-47"},                      /* 31 */{"M4"},
/* 32 */{"TEC-9"},                      /* 33 */{"Винтовка"},                   /* 34 */{"Снайперская винтовка"},
/* 35 */{"Гранатомёт"},                 /* 36 */{"Самонаводящийся гранатомёт"}, /* 37 */{"Огнемёт"},
/* 38 */{"Пулемёт"},                    /* 39 */{"Взрывпакет"},                 /* 40 */{"Детонатор"},
/* 41 */{"Баллончик с краской"},        /* 42 */{"Огнетушитель"},               /* 43 */{"Фотоаппарат"},
/* 44 */{"Прибор ночного видения"},     /* 45 */{"Тепловизор"},                 /* 46 */{"Парашют"}
};
new weather[][E_WEATHER_DATA] = {
	{"ясная погода", 18, 31},
	{"облачная погода", 18, 16},
	{"гром", 18, 17},
	{"сильный ветер", 18, 21},
	{"ясная погода", 18, 36}
};
enum SL {
	member,
	rang,
	f_name[20]
}
static pPickupID[MAX_PLAYERS];
new setleader_config[][SL] = {

	{1, 10,"Правительство"},
	{2, 10,"Войсковая часть"},
	{3, 10,"МО МВД"},
	{4, 10,"БЦРБ"},
	{5, 10,"Скинхеды"},
	{6, 10,"Гопота"},
	{7, 10,"Кавказцы"}
};
enum StopWar {
	frac_id,
	org_name[20]
}
new StopWar_cfg[][StopWar] = {

	{5,"Скинхеды"},
	{6,"Гопота"},
	{7,"Кавказцы"}
};
static const stock VehicleNames[][] = {
	"BMW X5","Audi A6 C8","Mustang Shelby GT500","Lexus GX460","BMW M5 F90 2021","Mercedes-Benz E63","Камаз-ММЗ","Камаз Мусорный","Audi A6 2019","Mercedes GL63","Audi R8","Lada Kalina",
	"Lexus GSF","Nissan Titan 2017","BMW M5","Porsche 911","Ambulance","Скорая помощь","Volkswagen Multivan","ВАЗ 2107","Nissan GTR","Washington","Infiniti JX 35 2013","Mr Whoopee","BF Injection",
	"Hunter","Audi A6","Газель","Инкасатор","ГАЗ-М22","Predator","ЛиАЗ-677М","Rhino","ЗИЛ 131","Hotknife","Trailer","Toyota MarkII","Ikarus 260","ГАЗ-2402",
	"ИЖ-412","Rumpo","RC Bandit","Romero","Packer","Monster","ЗИЗ-45","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","ГАЗ-3309","Caddy","Audi A6","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"BMW 535i","Mercedes GLE","Sanchez","Sparrow","Patriot","Audi A7","Coastguard","Dinghy","ГАЗ-21И","Toyota Land Cruiser","Rustler","ZR3 50","ИЖ-27151","ВАЗ-2114",
	"Toyota Supra","Велосипед","Burrito","ПАЗ-3205","Marquis","ГАЗ 2402","Dozer","Maverick","News Chopper","Chevrolet Niva","FBI Rancher","Virgo","ВАЗ 2109",
	"Jetmax","Hotring","Sandking","ЗАЗ-1102","Police Maverick","Boxville","ГАЗ-53","УАЗ-69","RC Goblin","Hotring A","Mersedes Benz E200",
	"Bloodring Banger","Rancher","Super GT","ГАЗ-2401"," УАЗ-452","Велик","Горный велик","Beagle","Cropdust","Stunt","КАМАЗ-54115","КАЗ-608В",
	"ВАЗ-21099","РАФ-2203"," ЕРАЗ-672","Shamal","Hydra","ИЖ Планета 5","NRG-500","Урал","Cement Truck","Эвакуатор","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","ГАЗ-3111","Bullet","ВАЗ 2424",
	"Москвич-434","Firetruck","Москвич-400","Москвич-2125","Москвич-2140","Cargobob","ЗАЗ-968А","Sunrise","ГАЗ 31105","Utility","Nevada","УАЗ-3303","ЗАЗ-968М","Monster A",
	"Monster B","Uranus","Toyota Celica","Tesla Model S","ИЖ Москвич-427","Elegy","Raindance","RC Tiger","ВАЗ 2108","ВАЗ 2104","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","ГАЗ-М20","Москвич-408","AT-400","ЗИЛ-157","Mersedes G65","BMW X5M","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Восход 3М","Euros","ЛиАЗ-677","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","ГАЗ-2401","ВАЗ 21099",
	"ВАЗ 2114","УАЗ 469","ИЖ-2717","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","ЛАЗ-699Р","Farm Plow","U Trailer"
};
enum gangzone {
	gzid,
	Float:gzminx,
	Float:gzminy,
	Float:gzmaxx,
	Float:gzmaxy,
	gzopg,
	standart_opg,
}
new dialog_MenuOwner = 7890;
enum {
	PROPOSITION_TYPE_GIVECHEST,
	PROPOSITION_TYPE_HI,
	PROPOSITION_TYPE_LIC,
	PROPOSITION_TYPE_DICE,
	PROPOSITION_TYPE_PASS,
	PROPOSITION_TYPE_SKILLS,
	PROPOSITION_TYPE_INVITE,
	PROPOSITION_TYPE_FREE,
	PROPOSITION_TYPE_LIC1,
	PROPOSITION_TYPE_LIC2,
	PROPOSITION_TYPE_MEDCARD,
	PROPOSITION_TYPE_GIVEMASK,
	PROPOSITION_TYPE_GIVEGUN,
	PROPOSITION_TYPE_SELLGUN,
	PROPOSITION_TYPE_HEAL,
};
new Float:casino_pos[][3] = {

	{2107.9355,-2428.8367,-42.4710},
	{2108.8875,-2428.8333,-42.4710},
	{2109.8511,-2428.8306,-42.4710},
	{2110.7646,-2428.8274,-42.4710},
	{2111.6980,-2428.8223,-42.4710},
	{2112.6499,-2428.8240,-42.4710}
};
enum AttachmentEnum {
    attachmodel,
    attachname[24]
}
new Float:Obmrok_x[MAX_PLAYERS], Float:Obmrok_y[MAX_PLAYERS], Float:Obmrok_z[MAX_PLAYERS];
static const stock ColorTeam[MAX_FRACTIONS][7] = {
	"FFFFFF",
	"ffeb9c",
 	"009900",
 	"2222FF",
 	"ff99cc",
 	"663399",
 	"66CCFF",
 	"339933"
};
new SkinMale[][] = {
	{134, 999},
	{137, 999},
	{230, 999},
	{239, 999},
	{134, 2000},
	{212, 2000},
	{200, 5000},
	{160, 2000},
	{49, 7500},
	{40, 7500},
	{241, 9999},
	{137, 30000},
	{273, 30000},
	{264, 39000},
	{254, 40000},
	{249, 45000},
	{23,  55000},
	{181, 75000},
	{42, 100000},
	{149, 129000},
	{223, 149000},
	{43, 149000},
	{137, 210000},
	{294, 340000},
	{174, 400000},
	{185, 450000},
	{208, 499999}
};
new SkinFeMale[][] = {
	{129, 999},
	{130, 999},
	{77, 999},
	{152, 5000},
	{157, 5000},
	{56, 5000},
	{145, 7500},
	{151, 7500},
	{40, 10000},
	{41, 10000},
	{55, 20000},
	{87, 30000},
	{93, 35000},
	{139, 50000},
	{141, 75000},
	{85, 90000},
	{12, 100000},
	{201, 149000},
	{246, 179000}
};
enum cinfocar {
	colorCar,
	colorcode[7],
}
new c_veh[53][cinfocar] = {
	{0,"000000"},
	{1,"F5F5F5"},
	{2,"2A77A1"},
	{3,"840410"},
	{4,"263739"},
	{5,"86446E"},
	{6,"D78E10"},
	{7,"4C75B7"},
	{8,"BDBEC6"},
	{9,"5E7072"},
	{10,"46597A"},
	{16,"335F3F"},
	{17,"730E1A"},
	{18,"7B0A2A"},
	{19,"9F9D94"},
	{20,"3B4E78"},
	{21,"732E3E"},
	{22,"691E3B"},
	{23,"96918C"},
	{24,"515459"},
	{32,"8494ab"},
	{40,"473532"},
	{44,"193826"},
	{79,"0e316d"},
	{87,"395a83"},
    {100,"406C8F"},
	{101,"1F253B"},
	{102,"AB9276"},
	{103,"134573"},
	{104,"96816C"},
	{105,"64686A"},
	{106,"105082"},
	{107,"A19983"},
	{108,"385694"},
	{109,"525661"},
	{110,"7F6956"},
	{111,"8C929A"},
	{112,"596E87"},
	{113,"473532"},
	{114,"44624F"},
	{115,"730A27"},
	{116,"223457"},
	{117,"640D1B"},
	{118,"A3ADC6"},
	{119,"695853"},
	{120,"9B8B80"},
	{121,"620B1C"},
	{122,"5B5D5E"},
	{123,"624428"},
	{124,"731827"},
	{125,"1B376D"},
	{126,"EC6AAE"},
	{161,"993e4d"}
};
enum color_info {
	ciCar,
	ciTD,
}
new color_veh[48][color_info] = {

	{1,0xF5F5F5FF},
	{2,0x2A77A1FF},
	{3,0x840410FF},
	{4,0x263739FF},
	{5,0x86446EFF},
	{6,0xD78E10FF},
	{7,0x4C75B7FF},
	{8,0xBDBEC6FF},
	{9,0x5E7072FF},
	{10,0x46597AFF},
    {0,0x000000FF},
    {100,0x406C8FFF},
	{101,0x1F253BFF},
	{102,0xAB9276FF},
	{103,0x134573FF},
	{104,0x96816CFF},
	{105,0x64686AFF},
	{106,0x105082FF},
	{107,0xA19983FF},
	{108,0x385694FF},
	{109,0x525661FF},
	{110,0x7F6956FF},
	{111,0x8C929AFF},
	{112,0x596E87FF},
	{113,0x473532FF},
	{114,0x44624FFF},
	{115,0x730A27FF},
	{116,0x223457FF},
	{117,0x640D1BFF},
	{118,0xA3ADC6FF},
	{119,0x695853FF},
	{120,0x9B8B80FF},
	{121,0x620B1CFF},
	{122,0x5B5D5EFF},
	{123,0x624428FF},
	{124,0x731827FF},
	{125,0x1B376DFF},
	{126,0xEC6AAEFF},
	{109,0x525661FF},
	{16,0x335F3FFF},
	{17,0x730E1AFF},
	{18,0x7B0A2AFF},
	{19,0x9F9D94FF},
	{20,0x3B4E78FF},
	{21,0x732E3EFF},
	{22,0x691E3BFF},
	{23,0x96918CFF},
	{24,0x515459FF}

};
enum AS_Info {
	asModel,
	asClass[16],
	asCena,
	asDonate,
	asSpeed
};
new PLAYER_COLOR_TEAM[10] = {
	0xFFFFFFFF, //
	0xffeb9cFF, // Правительство
	0x009900FF, // армия
	0x2222FFFF, // полиция
	0xff99ccFF, // больница
	0x663399BB, // скинхеды
	0x66CCFFFF, // гопота
	0x339933AA, // кавказ
	0x339999FF, // фсб
	0xd93434FF // сми
};
enum CC {
	COLOR[10]
}
new PLAYER_COLOR_CHAT[10][CC] = {
	"{FFFFFF}",
	"{ffeb9c}", // Правительство
	"{009900}", // армия
	"{2222FF}", // полиция
	"{FF99CC}", // больница
	"{663399}", // скинхеды
	"{66CCFF}", // гопота
	"{339933}", // кавказ
	"{339999}", // фсб
	"{d93434}" // сми
};
new autosalon_cars[41][AS_Info] = {
	{503,"Высокий",3150000,685,119},
	{402,"Высокий",3100000,675,119},
	{404,"Высокий",1435000,345,92},
	{405,"Высокий",2900000,670,102},
	{410,"Высокий",3299999,529,103},
	{415,"Высокий",2250000,570,107},
	{420,"Высокий",1850000,500,93},
	{579,"Высокий",5270000,915,149},
	{516,"Высокий",3250000,850,132},
	{522,"Высокий",1250000,430,114},
	{534,"Высокий",1650000,470,94},
	{540,"Высокий",2650000,570,133},
	{559,"Высокий",2100000,520,145},
	{560,"Высокий",7100000,1050,162},
	{458,"Высокий",2950000,705,122},
	{487,"Высокий",11000000,1380,160},
	{401,"Средний",1590000,649,76},
	{403,"Средний",850000,250,56},
	{409,"Средний",925000,420,79},
	{411,"Средний",550000,200,80},
	{413,"Средний",600000,199,61},
	{418,"Средний",450000,150,83},
	{419,"Средний",730000,450,83},
	{422,"Средний",700000,350,69},
	{426,"Средний",900000,290,79},
	{514,"Средний",560000,130,57},
	{523,"Средний",635000,155,105},
	{529,"Средний",435000,115,83},
	{551,"Средний",475000,120,92},
	{568,"Средний",435000,100,81},
	{424,"Низкий",70000,30,35},
	{500,"Низкий",75000,35,65},
	{508,"Низкий",80000,50,69},
	{509,"Низкий",15000,5,60},
	{510,"Низкий",20000,10,60},
	{521,"Низкий",215000,55,101},
	{528,"Низкий",165000,43,98},
	{547,"Низкий",145000,36,92},
	{461,"Низкий",205000,55,98},
	{463,"Низкий",245000,60,105},
	{468,"Низкий",245000,60,103}
};
new Float:karier_pos[5][3] = {

	{-2647.3594,264.6106,10.9310},
	{-2637.9077,270.6726,10.9310},
	{-2642.4097,274.4878,10.9310},
	{-2634.8616,264.5508,10.9310},
	{-2645.8374,257.4087,10.9310}
};
new Float:yablo_pos[7][3] = {

	{2071.0730,1028.7814,0.9984},
	{2085.7795,1129.7682,0.9978},
	{2131.5488,1059.8835,0.9984},
	{2059.8564,929.7821,3.0811},
	{2052.1260,1027.1688,1.0112},
	{2040.4258,1096.6528,2.3391},
	{2039.7137,1153.3387,2.4239}
};
new Float:ogorod_pos[4][3] = {

	{2133.8855,1766.3185,12.0000},
	{2125.6958,1777.6368,12.0000},
	{2125.8276,1767.4208,12.0000},
	{2130.9036,1776.5828,12.0000}
};
new Float:g_load_pos[5][3] = {

	{2398.9761,-626.6193,12.3683},
	{-617.0890,-192.6676,1.2362},
	{942.0146,-298.9775,4.1404},
	{255.3453,-901.7971,40.4502},
	{977.9893,632.9119,12.1615}

};
enum bInfo {

	data_ID,
	data_CLIENT,
 	data_NAME[50],
	data_OWNER[MAX_PLAYER_NAME],
	data_OWNED,
	data_PRICE,
	Float:data_ENTERX,
	Float:data_ENTERY,
	Float:data_ENTERZ,
	Float:data_BUYX,
	Float:data_BUYY,
	Float:data_BUYZ,
	Float:data_EXITX,
	Float:data_EXITY,
	Float:data_EXITZ,
	Float:data_TPEXITX,
	Float:data_TPEXITY,
	Float:data_TPEXITZ,
	Float:data_ANGLE,
	data_PROD,
	data_DAY,
	data_LOCK,
	data_TYPE,
	data_CENA,
	data_MAFIA,
	data_PRICEPROD,
	data_BANK,
	data_INT,
	data_VW,
	Text3D:data_TEXTBUY,
	Text3D:data_TEXTINFO,
    data_PICKENTER,
    data_PICKEXIT,
    data_MAPICON,
    data_CHEK,
    data_DOLG,
};
enum hInfo {
    data_ID,
    data_OWNER[MAX_PLAYER_NAME],
	data_DAY,
	data_CLASS,
	data_OWNED,
	data_PRICE,
	Float:data_CARX,
	Float:data_CARY,
	Float:data_CARZ,
	Float:data_CARANGLE,
	Float:data_ENTERX,
	Float:data_ENTERY,
	Float:data_ENTERZ,
	Float:data_EXITX,
	Float:data_EXITY,
	Float:data_EXITZ,
	data_INT,
	data_LOCK,
	data_PICKUPENTER,
	data_MAPICON,
	data_DOLG,
};
enum E_TELEPORT_STRUCT
{
	T_NAME[65],
	Float: T_PICKUP_POS_X,
	Float: T_PICKUP_POS_Y,
	Float: T_PICKUP_POS_Z,
	T_PICKUP_VIRTUAL_WORLD,
	Float: T_POS_X,
	Float: T_POS_Y,
	Float: T_POS_Z,
	Float: T_ANGLE,
	T_INTERIOR,
	T_VIRTUAL_WORLD,
};
enum frInfo {
	frName[24]
}
enum aname {
	aName[24]
}
new nname[][aname] = {

	{"Fedor_Novosadov"},
    {"Oleg_Duskin"},
    {"Vasily_Evanov"},
    {"Vitaly_Federov"},
    {"Pavel_Karpin"},
    {"Vasily_Rudnitskin"},
    {"Iosif_Falin"},
    {"Leonid_Bunin"},
    {"Dmitry_Bogdanov"},
    {"Spartak_Topolskin"},
    {"Boris_Gurkin"},
	{"Daniil_Rusakov"},
	{"Kirill_Markov"},
	{"Nikita_Prokopov"},
	{"Leonid_Litvin"},
	{"Gavriil_Slutzkov"},
	{"Timur_Zaleskov"},
	{"Pyotr_Sokolkin"},
	{"Ivan_Popovichev"},
	{"Roman_Urbanov"},
	{"Valentin_Doroshin"},
	{"Timur_Novosadov"},
	{"Matvei_Dolin"},
	{"Veniamin_Burdin"},
	{"Rostislav_Orlov"},
	{"Illarion_Rodin"},
	{"Pyotr_Bogdanov"},
	{"Boris_Romanov"},
	{"Ignat_Krupskin"},
	{"Rostislav_Orlov"},
	{"Illarion_Rodin"},
	{"Pyotr_Bogdanov"},
	{"Boris_Romanov"},
	{"Ignat_Krupskin"},
	{"Artur_Primackov"},
	{"Anatoly_Urbanov"},
	{"Albert_Wolskov"},
	{"Alexander_Markowkin"},
	{"Spartak_Kravin"},
	{"Igor_Polskov"},
	{"Timur_Topolskin"},
	{"Timur_Topolskin"},
	{"Afanasy_Kristov"},
	{"German_Petrovichev"},
	{"David_Elin"},
	{"Boris_Tunick"},
	{"Artur_Chaplin"},
	{"Vasily_Sokolkin"},
	{"Valentin_Dubov"},
	{"Spartak_Shubin"},
	{"Abram_Lazarov"},
	{"Robert_Sokolin"},
	{"Robert_Markow"},
	{"Stepan_Darin"},
	{"Viktor_Sadowin"},
	{"Gerasim_Olshanin"},
	{"Pavel_Burdin"},
	{"Albert_Russak"},
	{"Mark_Lukin"},
	{"Igor_Below"},
	{"Yegor_Shubin"},
	{"Marat_Petrow"},
	{"Maxim_Romanowskin"},
	{"Yan_Levin"},
	{"Peter_Levin"},
	{"Marat_Dubstov"}
};
new rang_gov[10][frInfo] = {
    {"Стажёр"},
    {"Водитель"},
    {"Охраник"},
    {"Секретарь"},
    {"Адвокат"},
    {"Налоговый инспектор"},
    {"Помощник Депутата"},
    {"Депутат"},
    {"Вице-Губернатор"},
    {"Губернатор"}
};
new rang_army[10][frInfo] = {
    {"Рядовой"},
    {"Ефрейтор"},
    {"Сержант"},
    {"Прапорщик"},
    {"Мл.Лейтенант"},
    {"Лейтенант"},
    {"Капитан"},
    {"Майор"},
    {"Подполковник"},
    {"Полковник"}
};
new rang_police[10][frInfo] = {
    {"Рядовой"},
    {"Сержант"},
    {"Старшина"},
    {"Прапорщик"},
    {"Мл. Лейтенант"},
    {"Лейтенант"},
    {"Капитан"},
    {"Майор"},
    {"Подполковник"},
    {"Полковник"}
};
new rang_hospital[10][frInfo] = {
    {"Травматолог"},
    {"Отоларинголог"},
    {"Психолог"},
    {"Нарколог"},
    {"Сексолог"},
    {"Ортопед"},
    {"Хирург"},
    {"Онколог"},
    {"Зам.Глав.Врача"},
    {"Глав.Врач"}
};
new rang_skinhead[10][frInfo] = {
    {"Чмо"},
    {"Пес"},
    {"Торпеда"},
    {"Косой"},
    {"Гвоздь"},
    {"Монгол"},
    {"Доцент"},
    {"Дрег"},
    {"Князь"},
    {"Отец"}
};
new rang_gopota[10][frInfo] = {
    {"Урод"},
    {"Недоделок"},
    {"Хорь"},
    {"Костыль"},
    {"Колька"},
    {"Матёрый"},
    {"Весёлый"},
    {"Рейнджер"},
    {"Директор"},
    {"Отец"}
};
new rang_kavkaz[10][frInfo] = {
    {"Шкура"},
    {"Лычкобой"},
    {"Шнырь"},
    {"Дюбель"},
    {"Тугрик"},
    {"Цыган"},
    {"Интелегент"},
    {"Скал"},
    {"Король"},
    {"Отец"}
};
forward Float:GetDistanceBetweenPlayers(p1,p2);
//================================ [ Переменные ] ======================================//
new NPC_ALL[30],
	NPC_ribolov,
	metall_give,
	gangwar,
	WarTimeMin,
	WarTimeSec,
	//snowobj[MAX_PLAYERS],
	CaptZone,
	send_proposition[MAX_PLAYERS] = {-1, ...}, // Отправленое предложения
	incoming_proposition[MAX_PLAYERS] = {-1, ...}, // Входящее предложения
	incoming_proposition_type[MAX_PLAYERS] = {-1, ...}, // Тип входящего предложения
	incoming_proposition_value[MAX_PLAYERS][2], // Значение входящего предложения
	grafity = 0,
	pTimerMessage[MAX_PLAYERS],
	pCurrectMessage[MAX_PLAYERS],
	pTimerMessageBomb[MAX_PLAYERS],
	pCurrectMessageBomb[MAX_PLAYERS],
	Global_Time,
	FollowBy[MAX_PLAYERS],
	TimerForPlayer[MAX_PLAYERS],
	pDialogTimer[MAX_PLAYERS],
	pDialogCurrectTime[MAX_PLAYERS],
	samolet,
	WeatherServer,
	capturezonespawn,
	samoletletit = 0,
	Text3D:TextSleep[MAX_PLAYERS],
	SV_LSTREAM:lstream[MAX_PLAYERS] = { SV_NULL, ... },
	TimerFloatDev[MAX_PLAYERS],
	noclipdata[MAX_PLAYERS][noclipenum],
	bool:animan[MAX_PLAYERS char],
	bool:X2DAY,
	FullPtPlayer[MAX_PLAYERS],
	avtobus_car_job[MAX_PLAYERS],
	bool:pCBugging[MAX_PLAYERS],
	ptmCBugFreezeOver[MAX_PLAYERS],
	ptsLastFiredWeapon[MAX_PLAYERS],
	dalnoboy_trayler[MAX_PLAYERS],
	dalnoboy_car[MAX_PLAYERS],
	gz_info[MAX_GANGZONE][gangzone],
	bool:payday[MAX_PLAYERS],
	Text:td_map_TD[1],
	Text3D:vehicletext,
	vehicle_static[99],
	CommandKill[2],
	Command[2],
	WarZone,
	ArmyVorota,
	ArmyVorota1,
	ArmyVorotaTimer,
	SkladTimer5,
	army_sklad_timer[MAX_PLAYERS],
	OlenMertw[5],
	Text3D:OlenMertwText[5],
	OlenMyaso[5],
	OlenID[5],
	DeathOlenID[5],
	OlenBT[5]=1,
	dalnaboy_check_pricep[MAX_PLAYERS],
	check_db_pricepadd[MAX_PLAYERS],
	ArendLodkaPlayer[MAX_PLAYERS],
	ArendLodkaPlayerTimer[MAX_PLAYERS],
	VelicArendaPlayer[MAX_PLAYERS],
	VelicArendaPlayerTimer[MAX_PLAYERS],
	metall_buy,
	myaso_sell,
	drugs_buy,
	totalgz,
	Dalnoboy_pickup,
	opgintvhod_offklub,
	opgintvihod_offklub,
	opgintvhod_gopota,
	opgintvihod_gopota,
	opgintvhod_skinhead,
	opgintvihod_skinhead,
	VhodArmy1,
	VhodArmy2,
	MeriyaGarageVhod,
	MeriyaGarageVihod,
	MVDGarageVhod,
	MVDGarageVihod,
	CRBGarageVhod,
	CRBGarageVihod,
	VchGarageVhod,
	VchGarageVihod,
	GopotaGarageVhod,
	GopotaGarageVihod,
	SkinheadGarageVhod,
	SkinheadGarageVihod,
	OffClubGarageVhod,
	OffClubGarageVihod,
	VhodArmyKazarmy,
	VihodArmyKazarmy,
	VhodArmyStolovaya,
	VihodArmyStolovaya,
	ArmyStolovaya,
	VhodArmyShatb,
	VihodArmyShatb,
	speedometer_Update[MAX_PLAYERS],
	VhodMeriya,
	VihodMeriya,
	VhodLiftMeriya,
	VihodLiftMeriya,
	VhodKaznaPickup,
	VihodKaznaPickup,
	bombacitve,
	bombplayer[MAX_PLAYERS],
	Kazna_GiveMoney,
	vxoddchmvd0,
    vxoddchmvd1,
	VhodUchastokMVD0,
	VhodUchastokMVD1,
	MVD_givegun_pickup,
	Pravo_givegun_pickup,
	vch_givegun_pickup,
	palata_vhod,
	palata_vihod,
	ordinatorskaya_vhod,
    ordinatorskaya_vihod,
	gunjob,
	ac_gun[MAX_PLAYERS][13],
	PlayerText:GZ_p[MAX_PLAYERS],
	Text:AutoSalon_Stats[3],
	Text:AutoSalon_Button[3],
	Text:AutoSalon_ButtonColor[2],
	Text:AutoSalon_Color[48],
	casino_stavka[MAX_PLAYERS],
	casino_update[MAX_PLAYERS],
	casino_timer[MAX_PLAYERS],
	casino_point[MAX_PLAYERS][4],
	bool:gomp_status,
	bool:mptk,
	Float:gomp_pos[3],
	help_spawn,
	engine,
	lights_text,
	alarm,
	doors_text,
	bonnet,
	boot,
	objective,
	Menu:SelectSkin,
	dbHandle,
	global_minute,
	restartserver,
	bizfin,
	Float:PosPU[3][MAX_PLAYERS],
	antiflood[MAX_PLAYERS],
	pickup_ash,
	pickhparmy,
	rentcater,
	Text:casino_fon[2],
	Text:casino_bet,
	PlayerText:casino_card[MAX_PLAYERS][4],
	PlayerText:casino_money[MAX_PLAYERS][2],
	bool:shield[MAX_PLAYERS],
	pickgmats,
	pickgmets,
	Float:oldposX[MAX_PLAYERS],Float:oldposY[MAX_PLAYERS],Float:oldposZ[MAX_PLAYERS],
	gLastTabUpdate[MAX_PLAYERS],
	PlayerText:buy_clothes_m[MAX_PLAYERS],
	Text:buy_clothes[6],
	police_barrier[2],
	police_barrier_status[2],
	bcrbvhod,
	bcrbvihod,
	bcrbvihod1,
	CRBPickCard,
	kazino_vhod,
	kazino_vihod,
	avtoschool_vhod,
	avtoschool_vihod,
	avtoschool_info,
	avtoschool_eks,
	vhodbank,
	vihodbank,
	army_wh[2],
	m_gopota,
	m_skinhead,
	m_kavkaz,
	sklad_fuel,
	buy_vagonka,
	sell_vagonka,
	buy_doska,
	sell_doska,
	buy_brus,
	sell_brus,
	buy_ruda,
	sell_ruda,
	buy_morkov,
	sell_morkov,
	buy_kapusta,
	sell_kapusta,
	buy_ogurec,
	sell_ogurec,
	buy_pomidor,
	sell_pomidor,
	buy_kartofel,
	sell_kartofel,
	buy_orange,
	sell_orange,
	buy_persiky,
	sell_persiky,
	buy_sliva,
	sell_sliva,
	buy_yabloki,
	sell_yabloki,
	buy_fuel,
	sell_fuel,
	rostov_wh[4],
	maykop_wh[4],
	odessa_wh[4],
	smi_money,
	rostov_sklad,
	Text3D:rostov_sklad_text,
	maykop_sklad,
	HOUSE_DATA[MAX_HOUSES][hInfo],
	TotalHouses,
	BUSINESS_DATA[MAX_BUSINESS][bInfo],
	TotalBusiness,
	TotalGroup,
	Text3D:maykop_sklad_text,
	odessa_sklad,
	Text3D:odessa_sklad_text,
	army_sklad,
	gov_car[10],
	army_car[10],
	police_car[10],
	hospital_car[10],
	rostov_car[10],
	maykop_car[10],
	rasform[MAX_PLAYERS],
	odessa_car[10],
	pick_ashanjob,
	pick_prodjob,
	pick_bank[3],
	checkcarhealthtimer,
	cEngine[MAX_VEHICLES],
	CHANGE_NAME[MAX_PLAYERS],
	TotalAB,
	TotalJB,
	army_sklad_zone,
	Text3D:army_sklad_text,
	PlayerText:adm_info[MAX_PLAYERS][12],
	avtobusjob,
	VchSkladGate,
	VchSkladGateTimer;
//======================[ Группы ]======================//
enum GROUP_DATA
{
	g_ID,
	g_NAME[24],
	g_FRACTION,
	g_SKIN,
	g_SKING,
	g_STANDART
};
new group[MAX_GROUP][GROUP_DATA];
//======================[ Игроки ]======================//
enum P_DATA
{
	data_ID,
	data_UID,
	data_GID,
	data_REPA,
	data_MPA,
	data_AWARN,
	data_NAME[MAX_PLAYER_NAME+1],
	ADMINSNUMBER,
	data_REGISTER_IP[32+1],
	data_LOGIN_IP[32+1],
	data_PASSWORD[32+1],
	data_EMAIL[50+1],
	data_GRNAME[25],
	data_TAG[50+1],
	data_REFERAL[MAX_PLAYER_NAME+1],
	data_REGDATE_DAY,
	data_REGDATE_MONTH,
	data_REGDATE_YEAR,
	data_LOGDATE_DAY,
	data_LOGDATE_MONTH,
	data_LOGDATE_YEAR,
	bool:data_LOGGED,
 	data_SEX,
	data_SKIN,
    data_MONEY,
    data_GPCIBAN,
	data_ADMLVL,
	data_ADMBOT,
	data_SETMOROZ,
	data_SNOW,
	data_SHOWFPS,
	data_PROMOCODE,
	data_PRIZETIME,
	data_PRIZEGIVE,
	data_SendName[MAX_PLAYER_NAME],
	data_LVL,
	data_DEATH,
	data_MEMBER,
	data_BL,
	data_LEADER,
	data_RANK,
	data_SKINM,
	data_BOOST,
	data_TAKEAKS,
	data_TRANSFER,
	data_TRANSFER_FRAC,
	data_TRANSFER_RANG,
	data_EXP,
	data_MUTE,
	data_MUTETIME,
	data_VMUTE,
	data_VMUTETIME,
	data_WARN,
	data_WARNTIME,
	data_SALARY,
	data_BANK,
	data_LICB,
	data_LICG,
	data_LICNUM,
	data_BUSINESS,
	data_HOUSE,
	data_CAR[2],
	data_CARb[2],
	data_CARFUEL[2],
	data_CAR_COLOR1[2],
	data_CAR_COLOR2[2],
	data_CAR_COLOR1b[2],
	data_CAR_COLOR2b[2],
	Float:data_CAR_POSX,
	Float:data_CAR_POSY,
	Float:data_CAR_POSZ,
	Float:data_CAR_ANGLE,
	data_PATR,
	data_DRUGS,
	data_USEDRUGS,
	data_WANTED,
	data_ZAKON,
	data_NUMBER,
	data_NUMBER_M,
	data_PHONESTATUS,
	data_MET,
	data_JAILTIME,
	data_JAIL,
 	data_DONATE,
	data_DONATE_P,
	data_ADMRETURN,
	data_AKS10,
	data_AKS9,
	data_AKS8,
	data_AKS7,
	data_AKS6,
	data_AKS5,
	data_AKS4,
	data_AKS3,
	data_AKS2,
	data_AKS1,
	data_AKS_USE,
	data_DONATE_ALL,
	data_PHONE,
	data_PHONEBOOK,
	data_DIR,
	data_SATIETY,
	data_DRINK,
	Float:data_HP,
	Float:data_ARM,
	data_MED,
	data_MEDNUM,
	data_SPAWN,
	data_HOSPITAL,
 	data_DEMORGAN,
 	data_DEMORGANTIME,
	data_BANG,
	data_BANGTIME,
	data_PISTOL,
	data_SDPISTOL,
	data_DEAGLE,
	data_SHOTGUN,
	data_MP5,
	data_AK47,
	data_SNIPERRIFLE,
	data_JOB,
	data_PADIK,
	data_KV,
	data_JB,
	data_AB,
	data_CONTRY,
	data_schooltestlevel[10],
	data_gameid,
	data_DSKILL,
	data_DEXP,
	data_Myaso,
	// NO SAVE
	data_ASCHEAT,
	data_CADMIN,
	data_SPAWNKULLAK,
	data_CAPTUREKILL,
	data_CAPTURECMD,
	data_CHEAT,
	data_HIDEME,
	data_CHANGESKIN,
	data_ECODE,
	bool:data_ANIM,
	data_WALK_TIMER,
	data_WALK_STYLE,
	data_SPEED_UPDATE,
	data_3SECOND,
	data_TESTER,
	data_MINUTE,
	data_PLAYER_TIMER_ID,
	data_AUTHPL,
	data_CEFLOAD,
	data_PLAYER_TIMER_IDCEF,
	data_PLAYER_TIMER_IDVK,
	data_AFK,
	data_START_JOB,
	data_PU,
	data_DREV_TIMER_ID,
	data_SHAHTA_TIMER_ID,
	data_YABLO_TIMER_ID,
	data_OGOROD_TIMER_ID,
	data_RENTJOB,
	data_RENTCAR,
	data_BUSCAR,
	data_ASH_CAR,
	data_ASH_TEST,
	data_CHEK,
	data_TRAILER,
	data_VEH,
	data_VEHb,
	data_HEALPACK,
	data_HEALPACKSKLAD,
	data_MASK,
	data_MASK_M,
	data_CALL,
	bool:data_CLICKTD,
	bool:data_CLOTHESMENU,
	bool:data_OPENAUTOSALON,
	bool:data_OPENCASINO,
	data_KANISTRA,
	data_ZAPCHASTI,
	data_AUTOSALON_CAR,
	data_CHANGECAR,
	data_CHANGECARb,
	data_ONECOLOR_AS,
	data_TWOCOLOR_AS,
	bool:data_EFIR,
	data_SETMARK,
	data_911_1,
    data_911_2,
    data_GUN[13],
	data_AMMO[13],
	data_PUTPATR,
	data_PUTMET,
	data_CHAT_TEXT[128],
	data_VIP,
	data_TIME,
	data_TIMERANK,
	data_REPORTS,
	data_UNICALID,
	data_VKID,
	data_MILITARY,
	data_MEDCARD,
	VIRTI,
	VIRTW,
	Float:STARTX,
	Float:STARTY,
	Float:STARTZ,
	Float:data_MPX,
	Float:data_MPY,
	Float:data_MPZ,
	data_MP,
	data_MPTK,
	LAST_IP[32+1],
	TWARN,
	data_FIXCOMPL
};
new PI[MAX_PLAYERS][P_DATA];
enum bjInfo
{
	data_ID,
 	data_NAME[50],
	data_OWNER[MAX_PLAYER_NAME],
	data_OWNED,
	data_PRICE,
	data_SKLAD,
	data_BANK,
	data_SELL_PRICE[5],
	data_BUY_PRICE,
	data_BUS_MONEY,
	data_JOB_MONEY,
	data_MODEL_JOB[5],
	Float:data_CAR_POSX[5],
	Float:data_CAR_POSY[5],
	Float:data_CAR_POSZ[5],
	Float:data_CAR_POSA[5],
	Float:data_INFO_POS[3],
	Float:data_JOB_POS[3],
	Float:data_RES_POS[3],
	Text3D:data_INFO,
	data_PICKUP[2],
	data_VEH_JOB[5],
	Text3D:data_VEH_TEXT[5],
	data_RESURS,
	data_PRIBYL,
	data_ZATRATY,
	Float:data_BUS_POS[3],
	Float:data_TRAILER_POS[4],
}
new JB_DATA[4][bjInfo];
enum baInfo
{
	data_ID,
 	data_NAME[50],
	data_OWNER[MAX_PLAYER_NAME],
	data_OWNED,
	data_PRICE,
	data_PROCENT,
	data_BANK,
	data_MODEL_JOB[7],
	Float:data_CAR_POSX[7],
	Float:data_CAR_POSY[7],
	Float:data_CAR_POSZ[7],
	Float:data_CAR_POSA[7],
	Float:data_INFO_POS[3],
	Float:data_JOB_POS[3],
	Text3D:data_INFO,
	data_PICKUP[2],
	data_VEH_JOB[7],
	data_PRIBYL,
}
new AB_DATA[2][baInfo];
enum kvInfo {
	data_ID,
	data_OWNER_1[MAX_PLAYER_NAME],
	data_OWNER_2[MAX_PLAYER_NAME],
	data_OWNER_3[MAX_PLAYER_NAME],
	data_OWNER_4[MAX_PLAYER_NAME],
	data_OWNER_5[MAX_PLAYER_NAME],
	data_OWNER_6[MAX_PLAYER_NAME],
	data_OWNED[6],
	data_PRICE[6],
	data_CLASS[6],
	data_DAY[6],
	data_LOCK[6],
	Float:data_CAR_POSX,
	Float:data_CAR_POSY,
	Float:data_CAR_POSZ,
	Float:data_CAR_POSA,
	Float:data_ENTER_POSX[6],
	Float:data_ENTER_POSY[6],
	Float:data_ENTER_POSZ[6],
	Float:data_EXIT_POSX[6],
	Float:data_EXIT_POSY[6],
	Float:data_EXIT_POSZ[6],
	Float:data_ENTER_X,
	Float:data_ENTER_Y,
	Float:data_ENTER_Z,
	Float:data_EXIT_X,
	Float:data_EXIT_Y,
	Float:data_EXIT_Z,
	data_PICK_ENTER,
	data_PICK_EXIT,
	data_PICKKV_ENTER[6],
	data_PICKKV_EXIT[6],
	Text3D:data_INFO[6],
	Text3D:data_INF_ENTER,
	Text3D:data_INF_EXIT,
	data_MAPICON
}
new KV_DATA[MAX_KV][kvInfo];
new TotalKV;
enum C_DATA {
	Text3D:data_TEXT,
	data_RENT,
	data_ENG,
	data_LAMP,
	data_LOCK,
	data_ODOM,
	data_FUEL,
	Float:data_PosX,
	Float:data_PosY,
	Float:data_PosZ,
	data_ASH_TEST,
	data_GRUZ,
	data_KOLVO,
	data_PATR,
	data_MET,
	data_CREATE,
	data_RIGHT_B,
	data_LEFT_B,
	data_BLICK[4],
}
new CAR_DATA[MAX_VEHICLES][C_DATA];
enum B_DATA {
	data_ID,
	data_DAY
}
new BANS_DATA[MAX_BANS][B_DATA];
enum BLACK_LIST {
	data_ID,
	data_DAY
}
new BL_DATA[256][BLACK_LIST];
new TotalBans;
new TotalBlackList;
enum BG_DATA {
	data_ID,
	data_DAY
}
enum Recvk {
	online,
	onlineday
}
new RecVK[Recvk];
new G_DATA[MAX_G][BG_DATA];
enum VIP_DATA {
	data_ID,
	data_DAY
}
new V_DATA[MAX_VIP][VIP_DATA];
new TotalG;
new TotalVIP;
enum {
	dialog_SETNAME,
	DLG_SPAWN,
	dialog_ABACK,
	dialog_REGISTER,
	dialog_EMAIL,
	dialog_ASALON,
	dialog_LOGIN,
	dialog_BGUN,
	dialog_REFERAL,
	dialog_SEX,
	dialog_CONTRY,
	dialog_DISCONNECT,
	dialog_ANIM,
	dialog_MAINMENU,
	dialog_SETTING,
	dialog_SETTING_1,
	dialog_SETTING_2,
	dialog_SETTING_PER,
	dialog_SETTING_PER_1,
	dialog_SETTING_PER_2,
	dialog_SETTING_PER_3,
	dialog_CHANGE_NAME,
	dialog_COMMAND,
	dialog_REPORT,
	dialog_BAN,
	dialog_ADMINS,
	dialog_WARNTIME,
	dialog_OK,
	dialog_SETSPAWN,
	dialog_DONATE,
	dialog_DONATE_1,
	dialog_DONATE_2,
	dialog_DONATE_3,
	dialog_DONATE_4,
	dialog_DONATE_5,
	dialog_DONATE_6,
	dialog_TAKE,
	dialog_DONATE_VIP,
	dialog_CONVERT,
	dialog_SPAWNHELP,
	dialog_SPAWNLAST,
	dialog_SETLEADER,
	dialog_TEMPMEMBER,
 	dialog_TEMPMEMBERANK,
	dialog_SETRANK,
	dialog_SETSKIN,
	dialog_SETSKINDEV,
	dialog_ASHAN_STARTJOB,
	dialog_ASHAN_STOPJOB,
	dialog_DREV_STARTJOB,
	dialog_DREV_STOPJOB,
	dialog_SHAHTA_STARTJOB,
	dialog_SHAHTA_STOPJOB,
	dialog_YABLO_STARTJOB,
	dialog_YABLO_STOPJOB,
	dialog_OGOROD_STARTJOB,
	dialog_OGOROD_STOPJOB,
	dialog_AB1_STARTJOB,
	dialog_AB1_STOPJOB,
	dialog_AB2_STARTJOB,
	dialog_AB2_STOPJOB,
	dialog_PROD_STARTJOB,
	dialog_PROD_STOPJOB,
	dialog_ADD_KV,
	dialog_HOUSE,
	dialog_SELL_HOUSE,
	dialog_KV,
	dialog_SELL_KV,
	dialog_ENTER_HOUSE,
	dialog_EXIT_HOUSE,
	dialog_BUSINESS,
    dialog_BUSINESSPRODBUY,
	dialog_JB,
	dialog_JB_1,
	dialog_JB_2,
	dialog_JB_3,
	dialog_JB_4,
	dialog_JB_5,
	dialog_JB_6,
	dialog_JB_7,
	dialog_JB_8,
	dialog_JB_9,
	dialog_JB_10,
	dialog_AB,
	dialog_AB_1,
	dialog_AB_2,
	dialog_AB_3,
	dialog_AB_4,
	dialog_AB_5,
	dialog_AB_6,
	dialog_AB_7,
	dialog_AB_8,
	dialog_RENTJOB,
	dialog_ASH_TEST,
	dialog_DHELP,
	dialog_DGPS,
	dialog_LOAD_LESOPILKA,
	dialog_LOAD_RUDNIK,
	dialog_LOAD_FRUCT,
	dialog_LOAD_OGOROD,
	dialog_LOAD_FUEL,
	dialog_LOAD,
	dialog_ADD_BUSINESS,
	dialog_ADD_BUSINESS_1,
	dialog_24_MENU,
	dialog_BUSINESSCONTROL,
	dialog_BUSINESS_INFO,
	dialog_BUSINESS_CHANGE_NAME,
	dialog_BUSINESS_CHANGE_CENA,
	dialog_BUSINESS_CHANGE_PRICEPRD,
	dialog_BUSINESS_GIVE_MONEY,
	dialog_BUSINESS_RE_MONEY,
	dialog_SELL_BUSINESS,
	dialog_BUYFUEL,
	dialog_BUYFUEL_1,
	dialog_BUYFUEL_2,
	dialog_BUYFUEL_3,
	dialog_BUYGUN,
	dialog_BUYGUN_1,
	dialog_BUYPROD,
	dialog_BUYPROD_1,
	dialog_PRODMENU,
	dialog_PRODMENU_1,
	dialog_PRODMENU_2,
	dialog_ADD_HOUSE,
	dialog_ADD_HOUSE_1,
	dialog_ADD_HOUSE_2,
	dialog_ADD_HOUSE_3,
	dialog_GPS,
	dialog_GPS_1,
	dialog_GPS_2,
	dialog_GPS_3,
	dialog_GPS_4,
	dialog_GPS_5,
	dialog_GPS_6,
	dialog_GPS_7,
	dialog_GPS_8,
	dialog_GPS_9,
	dialog_EAT_MENU,
	dialog_BANK,
	dialog_BANK_2,
	dialog_BANK_3,
	dialog_BANK_8,
	dialog_BANK_9,
	dialog_BUY_CAR,
	dialog_BUY_CAR_1,
	dialog_BUY_CAR_2,
    dialog_BUY_CAR_3,
    dialog_BUY_CAR_4,
	dialog_PERERAS,
	dialog_911_1,
	dialog_911_2,
	dialog_SELLCAR,
	dialog_SELLCAR_1,
	dialog_UTILCAR,
	dialog_UTILCAR_1,
	dialog_SKLAD,
	dialog_SKLAD_1,
	dialog_SKLAD_2,
	dialog_SKLAD_3,
	dialog_SKLAD_4,
	dialog_SKLAD_5,
	dialog_SKLAD_6,
	dialog_MAKEGUN,
	dialog_MAKEGUN_1,
	dialog_GUN_POLICE,
	dialog_RENTCATER,
	dialog_CATER,
	dialog_CASINO,
	dialog_ADMCOMMAND,
	dialog_FIXCAR,
	dialog_TP,
	dialog_schoolinfo,
	dialog_schooltest,
	dialog_schooltest1,
	dialog_schooltest2,
	dialog_schooltest3,
	dialog_schooltest4,
	dialog_schoolclose,
	dialog_vchstlovaya,
	dialog_dalnoboy,
	dialog_avtobusjob,
	dialog_ATTACH_INDEX,
	dialog_ATTACH_INDEX_SELECTION,
	dialog_ATTACH_EDITREPLACE,
	dialog_ATTACH_MODEL_SELECTION,
	dialog_ATTACH_BONE_SELECTION,
	dialog_ATTACH_OBJECT,
	dialog_GIVEGUNMVD,
	dialog_GIVEGUNPRAVO,
	dialog_GIVEGUNVCH,
	dialog_kazna,
	dialog_ribolovarenda,
	dialog_METALLBUY,
	d_blacklist,
	d_blinvite,
	d_bluninvite,
	d_blclear,
	dialog_DRUGBUY,
	dialog_CARDBUY,
	dialog_METALLGIVE,
 	dialog_MYASOSELL,
	DLG_INVITEGS,
	DLG_INVITEGSPLAYER,
	DLG_BAN,
	dialog_SETGZ,
	dialog_TUNGING
};
static PedMale[5] = {14,20,21,22,24};
static PedFeMale[6] = {10,12,13,31,38,39};
stock get_player_met(playerid) return PI[playerid][data_MET];
stock give_player_met(playerid,amount,log[]) {
    if(IsPlayerConnected(playerid)) {
	    PI[playerid][data_MET] += amount;
        new logtext[64],ctext[20];
	    if(amount < 0) {
			new text[20];
			format(text,sizeof(text),"-%d",amount);
			cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Металл"), CEFSTR("c13537"), CEFSTR(text));
	        format(ctext,sizeof(ctext),"-%d мт",amount);
   			SetPlayerChatBubble(playerid, ctext, 0xFF3333FF, 20.0, 1500);
			UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],1781);
	    }
	    else {
			new text[20];
			format(text,sizeof(text),"+%d",amount);
			cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Металл"), CEFSTR("418055"), CEFSTR(text));
	        format(ctext,sizeof(ctext),"+%d мт",amount);
         	SetPlayerChatBubble(playerid, ctext, 0x66FF33FF, 20.0, 1500);
         	UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],1788);
	    }
		format(logtext,sizeof(logtext),"%d %s", amount,log);
		AddLog("log_transfermoney",PI[playerid][data_NAME], logtext);
    }
}
stock split(const strsrc[], strdest[][], delimiter) {
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)) {
		if(strsrc[i]==delimiter || i==strlen(strsrc)) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0; li = i+1; aNum++;
		}
		i++;
	}
	return 1;
}
stock DB_Escape(text[]) {
	new
		ret[160],
		ch,
		i,
		j;
	while ((ch = text[i++]) && j < sizeof (ret)) {
		if (ch == '\'') {
			if (j < sizeof (ret) - 2) {
				ret[j++] = '\'';
				ret[j++] = '\'';
			}
		}
		else if (j < sizeof (ret)) {
			ret[j++] = ch;
		}
		else {
			j++;
		}
	}
	ret[sizeof (ret) - 1] = '\0';
	return ret;
}
stock GetNumberOfPaintjobsForVehicle(vehiclemodel) {
    switch(vehiclemodel) {
        case 483:
            return 1;
        case 575:
            return 2;
        case 534, 535, 536, 558, 559, 560, 561, 562, 565, 567, 576:
            return 3;
    }
    return 0;
}
stock ClearKillFeed(playerid = INVALID_PLAYER_ID) {
    if((playerid != INVALID_PLAYER_ID) && (0 == IsPlayerConnected(playerid)))
        return 0;
    goto L_start; {
        new dummy[16/(cellbits/charbits)];
        #emit const.pri dummy
    }
#if __Pawn < 0x030A
    SendDeathMessage(0, 0, 0),
    SendDeathMessageToPlayer(0, 0, 0, 0);
#endif
L_start:
    const CKF_MAGIC_ID = INVALID_PLAYER_ID - 1;
    new i = 5;
    #emit    push.c    CKF_MAGIC_ID
    #emit    push.c    CKF_MAGIC_ID
    if(playerid == INVALID_PLAYER_ID) {
        #emit    push.c    12
        do{
            #emit    sysreq.c    SendDeathMessage
        }while(--i != 0);
        #emit    stack    12
    }
    else {
        #emit    push.s    playerid
        #emit    push.c    16
        do{
            #emit    sysreq.c    SendDeathMessageToPlayer
        }while(--i != 0);
        #emit    stack    16
    }
    return 1;
}
stock Float:PointToPoint(Float:x,Float:y,Float:z,Float:x2,Float:y2,Float:z2)
	return floatsqroot(floatpower(floatabs(floatsub(x2,x)),2)+floatpower(floatabs(floatsub(y2,y)),2)+floatpower(floatabs(floatsub(z2,z)),2));
stock bool:IsRPNick(const name[]) {
    static i, __;
    if ('A' <= name[0] <= 'Z' && 'a' <= name[1] <= 'z') {
        for (i = 1, __ = 0;;) {
            switch (name[++i]) {
                case 'a'..'z':
                    continue;
                case '_':
                    if (__++, 'A' <= name[++i] <= 'Z' && 'a' <= name[++i] <= 'z')
                        continue;
                    else
                        break;
                case '\0':
                    return (i >= 4 && __ == 1);
                default:
                    return false;
            }
        }
    }
    return false;
}
stock GetVehicleSpeed(vehicleid) {
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}
callback: RespawnVehicles() {
	DestroyVehicle(army_car[0]);
	DestroyVehicle(army_car[1]);
	DestroyVehicle(army_car[2]);
	DestroyVehicle(army_car[3]);
	DestroyVehicle(army_car[4]);
	DestroyVehicle(army_car[5]);
	DestroyVehicle(army_car[6]);
	DestroyVehicle(army_car[7]);
	DestroyVehicle(army_car[8]);
	DestroyDynamic3DTextLabel(vehicletext);
	DestroyVehicle(hospital_car[1]);
	DestroyVehicle(hospital_car[2]);
	DestroyVehicle(hospital_car[3]);
	DestroyVehicle(hospital_car[4]);
	DestroyVehicle(hospital_car[5]);
	DestroyVehicle(hospital_car[6]);
	DestroyVehicle(hospital_car[7]);
	DestroyVehicle(gov_car[1]);
	DestroyVehicle(gov_car[2]);
	DestroyVehicle(gov_car[3]);
	DestroyVehicle(gov_car[4]);
	DestroyVehicle(gov_car[5]);
	DestroyVehicle(gov_car[6]);
	DestroyVehicle(gov_car[7]);
	DestroyVehicle(police_car[1]);
	DestroyVehicle(police_car[2]);
	DestroyVehicle(police_car[3]);
	DestroyVehicle(police_car[4]);
	DestroyVehicle(police_car[5]);
	DestroyVehicle(police_car[6]);
	DestroyVehicle(police_car[7]);
	DestroyVehicle(rostov_car[1]);
	DestroyVehicle(rostov_car[2]);
	DestroyVehicle(rostov_car[3]);
	DestroyVehicle(rostov_car[4]);
	DestroyVehicle(rostov_car[5]);
	DestroyVehicle(rostov_car[6]);
	DestroyVehicle(rostov_car[7]);
	DestroyVehicle(maykop_car[1]);
	DestroyVehicle(maykop_car[2]);
	DestroyVehicle(maykop_car[3]);
	DestroyVehicle(maykop_car[4]);
	DestroyVehicle(maykop_car[5]);
	DestroyVehicle(maykop_car[6]);
	DestroyVehicle(maykop_car[7]);
	DestroyVehicle(odessa_car[1]);
	DestroyVehicle(odessa_car[2]);
	DestroyVehicle(odessa_car[3]);
	DestroyVehicle(odessa_car[4]);
	DestroyVehicle(odessa_car[5]);
	DestroyVehicle(odessa_car[6]);
	DestroyVehicle(odessa_car[7]);
	LoadOrgCars();
	return 1;
}
stock LoadStaticCars() {
	GetVehicleParamsEx(vehicle_static[0],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[0],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[1],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[1],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[2],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[2],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[3],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[3],engine,lights_text,alarm,true,bonnet,boot,objective);
	GetVehicleParamsEx(vehicle_static[4],engine,lights_text,alarm,doors_text,bonnet,boot,objective);
	SetVehicleParamsEx(vehicle_static[4],engine,lights_text,alarm,true,bonnet,boot,objective);
	return 1;
}
stock LoadOrgCars() {
	army_car[0] = -1;
	army_car[1] = -1;
 	army_car[2] = -1;
	army_car[3] = -1;
	army_car[4] = -1;
	army_car[5] = -1;
	army_car[6] = -1;
	army_car[7] = -1;
	army_car[8] = -1;
    hospital_car[1] = -1;
    hospital_car[2] = -1;
    hospital_car[3] = -1;
    hospital_car[4] = -1;
    hospital_car[5] = -1;
    hospital_car[6] = -1;
    hospital_car[7] = -1;
    gov_car[1] = -1;
    gov_car[2] = -1;
    gov_car[3] = -1;
    gov_car[4] = -1;
    gov_car[5] = -1;
    gov_car[6] = -1;
    gov_car[7] = -1;
    police_car[1] = -1;
    police_car[2] = -1;
    police_car[3] = -1;
    police_car[4] = -1;
    police_car[5] = -1;
    police_car[6] = -1;
    police_car[7] = -1;
    rostov_car[1] = -1;
    rostov_car[2] = -1;
    rostov_car[3] = -1;
    rostov_car[4] = -1;
    rostov_car[5] = -1;
    rostov_car[6] = -1;
    rostov_car[7] = -1;
    maykop_car[1] = -1;
    maykop_car[2] = -1;
    maykop_car[3] = -1;
    maykop_car[4] = -1;
    maykop_car[5] = -1;
    maykop_car[6] = -1;
    maykop_car[7] = -1;
    odessa_car[1] = -1;
    odessa_car[2] = -1;
    odessa_car[3] = -1;
    odessa_car[4] = -1;
    odessa_car[5] = -1;
    odessa_car[6] = -1;
    odessa_car[7] = -1;
   	army_car[0] = CreateVehicle(433, 1820.8024,1669.9033,15.9475,358.8507, 1, 1, -1);
	army_car[1] = CreateVehicle(599, 326.4404,1497.1697,802.5969,88.9068, 1, 1, -1);
 	army_car[2] = CreateVehicle(597, 326.3926,1493.7565,802.5969,88.4669, 1, 1, -1);
	army_car[3] = CreateVehicle(597, 326.2626,1490.0011,802.5972,89.2875, 1, 1, -1);
	army_car[4] = CreateVehicle(598, 326.2924,1486.1971,802.5971,87.5999, 1, 1, -1);
	army_car[5] = CreateVehicle(598, 326.1497,1482.4484,802.5989,86.3812, 1, 1, -1);
	army_car[6] = CreateVehicle(598, 326.3166,1479.0099,802.5971,87.4990, 1, 1, -1);
	army_car[7] = CreateVehicle(598, 326.2693,1475.3011,802.5964,86.5957, 1, 1, -1);
	army_car[8] = CreateVehicle(601, 1816.5143,1669.4126,15.0190,0.9330, 1, 1, -1);
   	SetVehicleVirtualWorld(army_car[1], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[1], 1);
   	SetVehicleVirtualWorld(army_car[2], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[2], 1);
   	SetVehicleVirtualWorld(army_car[3], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[3], 1);
   	SetVehicleVirtualWorld(army_car[4], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[4], 1);
   	SetVehicleVirtualWorld(army_car[5], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[5], 1);
   	SetVehicleVirtualWorld(army_car[6], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[6], 1);
   	SetVehicleVirtualWorld(army_car[7], GARAGE_INT_VCH);
    LinkVehicleToInterior(army_car[7], 1);
	new textmz[144];
	format(textmz,sizeof(textmz),"{2d69b4}МЗКТ\n{33dd66}Патроны: {33dd66}%d/10000 шт.\n{33dd66}Металл: {33dd66}%d/10000 кг.",CAR_DATA[army_car[0]][data_PATR], CAR_DATA[army_car[0]][data_MET]);
	vehicletext = CreateDynamic3DTextLabel(textmz, 0x3366FFFF, 1749.4796,1750.9102,15.4706, 15, INVALID_PLAYER_ID, army_car[0], 0, -1);
    hospital_car[1] = CreateVehicle(416, 326.3926,1493.7565,802.5969,88.4669, 1, 1, -1);
    hospital_car[2] = CreateVehicle(416, 326.2626,1490.0011,802.5972,89.2875, 1, 1, -1);
    hospital_car[3] = CreateVehicle(416, 326.2924,1486.1971,802.5971,87.5999, 1, 1, -1);
    hospital_car[4] = CreateVehicle(416, 326.1497,1482.4484,802.5989,86.3812, 1, 1, -1);
    hospital_car[5] = CreateVehicle(416, 326.3166,1479.0099,802.5971,87.4990, 1, 1, -1);
    hospital_car[6] = CreateVehicle(551, 326.2693,1475.3011,802.5964,86.5957, 1, 1, -1);
    hospital_car[7] = CreateVehicle(551, 326.1411,1471.0062,802.5943,87.5927, 1, 1, -1);
   	SetVehicleVirtualWorld(hospital_car[1], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[1], 1);
   	SetVehicleVirtualWorld(hospital_car[2], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[2], 1);
   	SetVehicleVirtualWorld(hospital_car[3], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[3], 1);
   	SetVehicleVirtualWorld(hospital_car[4], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[4], 1);
   	SetVehicleVirtualWorld(hospital_car[5], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[5], 1);
   	SetVehicleVirtualWorld(hospital_car[6], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[6], 1);
   	SetVehicleVirtualWorld(hospital_car[7], GARAGE_INT_CRB);
    LinkVehicleToInterior(hospital_car[7], 1);
    gov_car[1] = CreateVehicle(551, 326.3926,1493.7565,802.5969,88.4669, 0, 0, -1);
    gov_car[2] = CreateVehicle(494, 326.2626,1490.0011,802.5972,89.2875, 1, 1, -1);
    gov_car[3] = CreateVehicle(494, 326.2924,1486.1971,802.5971,87.5999, 1, 1, -1);
    gov_car[4] = CreateVehicle(418, 326.1497,1482.4484,802.5989,86.3812, 1, 1, -1);
    gov_car[5] = CreateVehicle(418, 326.3166,1479.0099,802.5971,87.4990, 1, 1, -1);
    gov_car[6] = CreateVehicle(479, 326.2693,1475.3011,802.5964,86.5957, 1, 1, -1);
    gov_car[7] = CreateVehicle(480, 326.1411,1471.0062,802.5943,87.5927, 1, 1, -1);
   	SetVehicleVirtualWorld(gov_car[1], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[1], 1);
   	SetVehicleVirtualWorld(gov_car[2], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[2], 1);
   	SetVehicleVirtualWorld(gov_car[3], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[3], 1);
   	SetVehicleVirtualWorld(gov_car[4], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[4], 1);
   	SetVehicleVirtualWorld(gov_car[5], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[5], 1);
   	SetVehicleVirtualWorld(gov_car[6], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[6], 1);
   	SetVehicleVirtualWorld(gov_car[7], GARAGE_INT_MERIYA);
    LinkVehicleToInterior(gov_car[7], 1);
    police_car[1] = CreateVehicle(599, 326.3926,1493.7565,802.5969,88.4669, 1, 1, -1);
    police_car[2] = CreateVehicle(596, 326.2626,1490.0011,802.5972,89.2875, 1, 1, -1);
    police_car[3] = CreateVehicle(597, 326.2924,1486.1971,802.5971,87.5999, 1, 1, -1);
    police_car[4] = CreateVehicle(597, 326.1497,1482.4484,802.5989,86.3812, 1, 1, -1);
    police_car[5] = CreateVehicle(598, 326.3166,1479.0099,802.5971,87.4990, 1, 1, -1);
    police_car[6] = CreateVehicle(598, 326.2693,1475.3011,802.5964,86.5957, 1, 1, -1);
    police_car[7] = CreateVehicle(598, 326.1411,1471.0062,802.5943,87.5927, 1, 1, -1);
   	SetVehicleVirtualWorld(police_car[1], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[1], 1);
   	SetVehicleVirtualWorld(police_car[2], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[2], 1);
   	SetVehicleVirtualWorld(police_car[3], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[3], 1);
   	SetVehicleVirtualWorld(police_car[4], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[4], 1);
   	SetVehicleVirtualWorld(police_car[5], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[5], 1);
   	SetVehicleVirtualWorld(police_car[6], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[6], 1);
   	SetVehicleVirtualWorld(police_car[7], GARAGE_INT_MVD);
    LinkVehicleToInterior(police_car[7], 1);
    // ТС СКИНХЕДОВ
    rostov_car[1] = CreateVehicle(529, 326.3926,1493.7565,802.5969,88.4669, 1, 1, -1);
    rostov_car[2] = CreateVehicle(529, 326.2626,1490.0011,802.5972,89.2875, 1, 1, -1);
    rostov_car[3] = CreateVehicle(504, 326.2924,1486.1971,802.5971,87.5999, 1, 1, -1);
    rostov_car[4] = CreateVehicle(504, 326.1497,1482.4484,802.5989,86.3812, 1, 1, -1);
    rostov_car[5] = CreateVehicle(418, 326.3166,1479.0099,802.5971,87.4990, 1, 1, -1);
    rostov_car[6] = CreateVehicle(418, 326.2693,1475.3011,802.5964,86.5957, 1, 1, -1);
    rostov_car[7] = CreateVehicle(400, 326.1411,1471.0062,802.5943,87.5927, 1, 1, -1);
   	SetVehicleVirtualWorld(rostov_car[1], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[1], 1);
   	SetVehicleVirtualWorld(rostov_car[2], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[2], 1);
   	SetVehicleVirtualWorld(rostov_car[3], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[3], 1);
   	SetVehicleVirtualWorld(rostov_car[4], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[4], 1);
   	SetVehicleVirtualWorld(rostov_car[5], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[5], 1);
   	SetVehicleVirtualWorld(rostov_car[6], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[6], 1);
   	SetVehicleVirtualWorld(rostov_car[7], GARAGE_INT_SKINHEAD);
    LinkVehicleToInterior(rostov_car[7], 1);
	// ТС ГОПОТЫ
    maykop_car[1] = CreateVehicle(529, 326.3926,1493.7565,802.5969,88.4669, 24, 24, -1);
    maykop_car[2] = CreateVehicle(529, 326.2626,1490.0011,802.5972,89.2875, 24, 24, -1);
    maykop_car[3] = CreateVehicle(504, 326.2924,1486.1971,802.5971,87.5999, 24, 24, -1);
    maykop_car[4] = CreateVehicle(504, 326.1497,1482.4484,802.5989,86.3812, 24, 24, -1);
    maykop_car[5] = CreateVehicle(418, 326.3166,1479.0099,802.5971,87.4990, 24, 24, -1);
    maykop_car[6] = CreateVehicle(418, 326.2693,1475.3011,802.5964,86.5957, 24, 24, -1);
    maykop_car[7] = CreateVehicle(400, 326.1411,1471.0062,802.5943,87.5927, 24, 24, -1);
   	SetVehicleVirtualWorld(maykop_car[1], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[1], 1);
   	SetVehicleVirtualWorld(maykop_car[2], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[2], 1);
   	SetVehicleVirtualWorld(maykop_car[3], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[3], 1);
   	SetVehicleVirtualWorld(maykop_car[4], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[4], 1);
   	SetVehicleVirtualWorld(maykop_car[5], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[5], 1);
   	SetVehicleVirtualWorld(maykop_car[6], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[6], 1);
   	SetVehicleVirtualWorld(maykop_car[7], GARAGE_INT_GOPOTA);
    LinkVehicleToInterior(maykop_car[7], 1);
	// ТС Кавказцев
    odessa_car[1] = CreateVehicle(529, 326.3926,1493.7565,802.5969,88.4669, 0, 0, -1);
    odessa_car[2] = CreateVehicle(529, 326.2626,1490.0011,802.5972,89.2875, 0, 0, -1);
    odessa_car[3] = CreateVehicle(504, 326.2924,1486.1971,802.5971,87.5999, 0, 0, -1);
    odessa_car[4] = CreateVehicle(504, 326.1497,1482.4484,802.5989,86.3812, 0, 0, -1);
    odessa_car[5] = CreateVehicle(418, 326.3166,1479.0099,802.5971,87.4990, 0, 0, -1);
    odessa_car[6] = CreateVehicle(418, 326.2693,1475.3011,802.5964,86.5957, 0, 0, -1);
    odessa_car[7] = CreateVehicle(400, 326.1411,1471.0062,802.5943,87.5927, 0, 0, -1);
   	SetVehicleVirtualWorld(odessa_car[1], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[1], 1);
   	SetVehicleVirtualWorld(odessa_car[2], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[2], 1);
   	SetVehicleVirtualWorld(odessa_car[3], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[3], 1);
   	SetVehicleVirtualWorld(odessa_car[4], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[4], 1);
   	SetVehicleVirtualWorld(odessa_car[5], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[5], 1);
   	SetVehicleVirtualWorld(odessa_car[6], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[6], 1);
   	SetVehicleVirtualWorld(odessa_car[7], GARAGE_INT_OFFCLUB);
    LinkVehicleToInterior(odessa_car[7], 1);
    CAR_DATA[army_car[0]][data_FUEL] = 50;
    CAR_DATA[army_car[1]][data_FUEL] = 50;
    CAR_DATA[army_car[2]][data_FUEL] = 50;
    CAR_DATA[army_car[3]][data_FUEL] = 50;
    CAR_DATA[army_car[4]][data_FUEL] = 50;
    CAR_DATA[army_car[5]][data_FUEL] = 50;
    CAR_DATA[army_car[6]][data_FUEL] = 50;
    CAR_DATA[army_car[7]][data_FUEL] = 50;
	CAR_DATA[army_car[8]][data_FUEL] = 50;
    CAR_DATA[hospital_car[1]][data_FUEL] = 50;
    CAR_DATA[hospital_car[2]][data_FUEL] = 50;
    CAR_DATA[hospital_car[3]][data_FUEL] = 50;
    CAR_DATA[hospital_car[4]][data_FUEL] = 50;
    CAR_DATA[hospital_car[5]][data_FUEL] = 50;
    CAR_DATA[hospital_car[6]][data_FUEL] = 50;
    CAR_DATA[hospital_car[7]][data_FUEL] = 50;
    CAR_DATA[gov_car[1]][data_FUEL] = 50;
    CAR_DATA[gov_car[2]][data_FUEL] = 50;
    CAR_DATA[gov_car[3]][data_FUEL] = 50;
    CAR_DATA[gov_car[4]][data_FUEL] = 50;
    CAR_DATA[gov_car[5]][data_FUEL] = 50;
    CAR_DATA[gov_car[6]][data_FUEL] = 50;
    CAR_DATA[gov_car[7]][data_FUEL] = 50;
    CAR_DATA[police_car[1]][data_FUEL] = 50;
    CAR_DATA[police_car[2]][data_FUEL] = 50;
    CAR_DATA[police_car[3]][data_FUEL] = 50;
    CAR_DATA[police_car[4]][data_FUEL] = 50;
    CAR_DATA[police_car[5]][data_FUEL] = 50;
    CAR_DATA[police_car[6]][data_FUEL] = 50;
    CAR_DATA[police_car[7]][data_FUEL] = 50;
    CAR_DATA[rostov_car[1]][data_FUEL] = 50;
    CAR_DATA[rostov_car[2]][data_FUEL] = 50;
    CAR_DATA[rostov_car[3]][data_FUEL] = 50;
    CAR_DATA[rostov_car[4]][data_FUEL] = 50;
    CAR_DATA[rostov_car[5]][data_FUEL] = 50;
    CAR_DATA[rostov_car[6]][data_FUEL] = 50;
    CAR_DATA[rostov_car[7]][data_FUEL] = 50;
    CAR_DATA[maykop_car[1]][data_FUEL] = 50;
    CAR_DATA[maykop_car[2]][data_FUEL] = 50;
    CAR_DATA[maykop_car[3]][data_FUEL] = 50;
    CAR_DATA[maykop_car[4]][data_FUEL] = 50;
    CAR_DATA[maykop_car[5]][data_FUEL] = 50;
    CAR_DATA[maykop_car[6]][data_FUEL] = 50;
    CAR_DATA[maykop_car[7]][data_FUEL] = 50;
    CAR_DATA[odessa_car[1]][data_FUEL] = 50;
    CAR_DATA[odessa_car[2]][data_FUEL] = 50;
    CAR_DATA[odessa_car[3]][data_FUEL] = 50;
    CAR_DATA[odessa_car[4]][data_FUEL] = 50;
    CAR_DATA[odessa_car[5]][data_FUEL] = 50;
    CAR_DATA[odessa_car[6]][data_FUEL] = 50;
    CAR_DATA[odessa_car[7]][data_FUEL] = 50;
	return 1;
}
stock gpname(playerid) {
    new Name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Name, sizeof Name);
    return Name;
}
stock PreloadAllAnimLibs (playerid) {
    PreloadAnimLib(playerid,"AIRPORT");
    PreloadAnimLib(playerid,"Attractors");
    PreloadAnimLib(playerid,"BAR");
    PreloadAnimLib(playerid,"BASEBALL");
    PreloadAnimLib(playerid,"BD_FIRE");
    PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"benchpress");
    PreloadAnimLib(playerid,"BF_injection");
    PreloadAnimLib(playerid,"BIKED"
    PreloadAnimLib(playerid,"BIKEH");
    PreloadAnimLib(playerid,"BIKELEAP");
    PreloadAnimLib(playerid,"BIKES");
    PreloadAnimLib(playerid,"BIKEV");
    PreloadAnimLib(playerid,"BIKE_DBZ");
    PreloadAnimLib(playerid,"BLOWJOBZ");
    PreloadAnimLib(playerid,"BMX");
    PreloadAnimLib(playerid,"BOMBER");
    PreloadAnimLib(playerid,"BOX");
    PreloadAnimLib(playerid,"BSKTBALL");
    PreloadAnimLib(playerid,"BUDDY");
    PreloadAnimLib(playerid,"BUS");
    PreloadAnimLib(playerid,"CAMERA");
    PreloadAnimLib(playerid,"CAR");
    PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"CAR_CHAT");
    PreloadAnimLib(playerid,"CASINO");
    PreloadAnimLib(playerid,"CHAINSAW");
    PreloadAnimLib(playerid,"CHOPPA");
    PreloadAnimLib(playerid,"CLOTHES");
    PreloadAnimLib(playerid,"COACH");
    PreloadAnimLib(playerid,"COLT45");
    PreloadAnimLib(playerid,"COP_AMBIENT");
    PreloadAnimLib(playerid,"COP_DVBYZ");
    PreloadAnimLib(playerid,"CRACK");
    PreloadAnimLib(playerid,"CRIB");
    PreloadAnimLib(playerid,"DAM_JUMP");
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"DEALER");
    PreloadAnimLib(playerid,"DILDO");
    PreloadAnimLib(playerid,"DODGE");
    PreloadAnimLib(playerid,"DOZER");
    PreloadAnimLib(playerid,"DRIVEBYS");
    PreloadAnimLib(playerid,"FAT");
    PreloadAnimLib(playerid,"FIGHT_B");
    PreloadAnimLib(playerid,"FIGHT_C");
    PreloadAnimLib(playerid,"FIGHT_D");
    PreloadAnimLib(playerid,"FIGHT_E");
    PreloadAnimLib(playerid,"FINALE");
    PreloadAnimLib(playerid,"FINALE2");
    PreloadAnimLib(playerid,"FLAME");
    PreloadAnimLib(playerid,"Flowers");
    PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"Freeweights");
    PreloadAnimLib(playerid,"GANGS");
    PreloadAnimLib(playerid,"GHANDS");
    PreloadAnimLib(playerid,"GHETTO_DB");
    PreloadAnimLib(playerid,"goggles");
    PreloadAnimLib(playerid,"GRAFFITI");
    PreloadAnimLib(playerid,"GRAVEYARD");
    PreloadAnimLib(playerid,"GRENADE");
    PreloadAnimLib(playerid,"GYMNASIUM");
    PreloadAnimLib(playerid,"HAIRCUTS");
    PreloadAnimLib(playerid,"HEIST9");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"INT_OFFICE");
    PreloadAnimLib(playerid,"INT_SHOP");
    PreloadAnimLib(playerid,"JST_BUISNESS");
    PreloadAnimLib(playerid,"KART");
    PreloadAnimLib(playerid,"KISSING");
    PreloadAnimLib(playerid,"KNIFE");
    PreloadAnimLib(playerid,"LAPDAN1");
    PreloadAnimLib(playerid,"LAPDAN2");
    PreloadAnimLib(playerid,"LAPDAN3");
    PreloadAnimLib(playerid,"LOWRIDER");
    PreloadAnimLib(playerid,"MD_CHASE");
    PreloadAnimLib(playerid,"MD_END");
    PreloadAnimLib(playerid,"MEDIC");
    PreloadAnimLib(playerid,"MISC");
    PreloadAnimLib(playerid,"MTB");
    PreloadAnimLib(playerid,"MUSCULAR");
    PreloadAnimLib(playerid,"NEVADA");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"OTB");
    PreloadAnimLib(playerid,"PARACHUTE");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"PAULNMAC");
    PreloadAnimLib(playerid,"ped");
    PreloadAnimLib(playerid,"PLAYER_DVBYS");
    PreloadAnimLib(playerid,"PLAYIDLES");
    PreloadAnimLib(playerid,"POLICE");
    PreloadAnimLib(playerid,"POOL");
    PreloadAnimLib(playerid,"POOR");
    PreloadAnimLib(playerid,"PYTHON");
    PreloadAnimLib(playerid,"QUAD");
    PreloadAnimLib(playerid,"QUAD_DBZ");
    PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"RIFLE");
    PreloadAnimLib(playerid,"RIOT");
    PreloadAnimLib(playerid,"ROB_BANK");
    PreloadAnimLib(playerid,"ROCKET");
    PreloadAnimLib(playerid,"RUSTLER");
    PreloadAnimLib(playerid,"RYDER");
    PreloadAnimLib(playerid,"SCRATCHING");
    PreloadAnimLib(playerid,"SHAMAL");
    PreloadAnimLib(playerid,"SHOP");
    PreloadAnimLib(playerid,"SHOTGUN");
    PreloadAnimLib(playerid,"SILENCED");
    PreloadAnimLib(playerid,"SKATE");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"SNIPER");
    PreloadAnimLib(playerid,"SPRAYCAN");
    PreloadAnimLib(playerid,"STRIP");
    PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"SWAT");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"SWIM");
    PreloadAnimLib(playerid,"SWORD");
    PreloadAnimLib(playerid,"TANK");
    PreloadAnimLib(playerid,"TATTOOS");
    PreloadAnimLib(playerid,"TEC");
    PreloadAnimLib(playerid,"TRAIN");
    PreloadAnimLib(playerid,"TRUCK");
    PreloadAnimLib(playerid,"UZI");
    PreloadAnimLib(playerid,"VAN");
    PreloadAnimLib(playerid,"VENDING");
    PreloadAnimLib(playerid,"VORTEX");
    PreloadAnimLib(playerid,"WAYFARER");
    PreloadAnimLib(playerid,"WEAPONS");
    PreloadAnimLib(playerid,"WUZI");
   	return 1;
}
stock SaveGZ(gzopg1, gz) {
    new str_q[90];
    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `gangzone` SET `gzopg` = '%d' WHERE `gzid` = '%d'", gzopg1, gz_info[gz][gzid]), print("SaveGZ");
	mysql_function_query(dbHandle, str_q, false, "", "");
	return 1;
}
stock GivePlayerHealth(playerid,Float:health) {
	new Float:hp;
	GetPlayerHealth(playerid, hp);
	SetPlayerHealthAC(playerid,hp+health);
}
stock GivePlayerArmour(playerid,Float:Armour, Float:Armplayer) {
    if(Armplayer+Armour < 0) SetPlayerArmour(playerid, 0);
	else SetPlayerArmour(playerid, Armplayer+Armour);
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart) return 1;
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart) {
	new Float:oldposx, Float:oldposy, Float:oldposz, Float:Health,Float:hpcar,carid = -1;
	GetPlayerHealth(damagedid, Health);
	GetPlayerPos(damagedid, oldposx, oldposy, oldposz);
	if(GetPlayerState(damagedid) == PLAYER_STATE_DRIVER) {
		carid = GetPlayerVehicleID(damagedid);
		GetVehicleHealth(carid, hpcar);
	}
	if(playerid != INVALID_PLAYER_ID) {
		if(PI[playerid][data_MPTK] != 1) {
			if(PI[playerid][data_MEMBER] == 0) return 1;
			if(PI[damagedid][data_MEMBER] == PI[playerid][data_MEMBER] && GetPlayerVirtualWorld(playerid) == 0) {
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SetPlayerHealthAC(damagedid, Health);
				SendClientMessagef(playerid, CG, "Урон заблокирован: игрок %s[%d] является вашим союзником", PI[damagedid][data_NAME],damagedid);
			}
		}
		if(PI[damagedid][data_HIDEME] == 1) {
			SetPlayerHealthAC(damagedid, 250);
			if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
			return SendClientMessage(playerid, CG, "Урон заблокирован: игрок является Игровым Мастером");
		}
		if(gangwar > 0) {
			if(!IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133)) {
				if(IsPlayerToKvadrat(damagedid, 1449.5,-1355, 1591.5, -1133)) {
					SetPlayerHealthAC(damagedid, Health);
					return SendClientMessagef(playerid, CG, "Урон заблокирован: игрок %s[%d] находиться на зоне захвата", PI[damagedid][data_NAME],damagedid);
				}
			}
		}
		if(gangwar > 0)  {
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) && IsPlayerToKvadrat(damagedid, 1449.5,-1355, 1591.5, -1133)) {
				if(PI[playerid][data_MEMBER] == Command[0])  {
					if(PI[damagedid][data_MEMBER] == Command[1]) {
						if(GetPVarInt(playerid,"kdhealcapt") < gettime())  SetPVarInt(damagedid,"kdhealcapt",gettime() + 30);
					}
				}
				if(PI[playerid][data_MEMBER] == Command[1]) {
					if(PI[damagedid][data_MEMBER] == Command[0]) {
						if(GetPVarInt(playerid,"kdhealcapt") < gettime()) SetPVarInt(damagedid,"kdhealcapt",gettime() + 30);
					}
				}
			}
		}
		if(!IsPlayerCops(playerid)) {
			if(PlayerToKvadrat(playerid,  1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
			PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
			PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
			PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
			PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
			PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) {
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SendClientMessage(playerid, CG, "Урон заблокирован: вы находитесь в Зелёной Зоне");
				SetPlayerHealthAC(damagedid, Health);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnfreezePlayer", 2000, false, "i", playerid);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
			}
		}
		if(!IsPlayerCops(playerid)) {
			if(PlayerToKvadrat(damagedid,  1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(damagedid) == 0 || // БЦРБ
			PlayerToKvadrat(damagedid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(damagedid) == 0 || // Правительство
			PlayerToKvadrat(damagedid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(damagedid) == 0 || // рудник
			PlayerToKvadrat(damagedid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(damagedid) == 0 || // казино
			PlayerToKvadrat(damagedid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(damagedid) == 0 || // автошкола
			PlayerToKvadrat(damagedid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(damagedid) == 0) {
				if(IsPlayerInAnyVehicle(damagedid)) SetVehicleHealth(carid, hpcar);
				SendClientMessagef(playerid, CG, "Урон заблокирован: игрок %s[%d] находится в Зелёной Зоне", PI[damagedid][data_NAME],damagedid);
				SetPlayerHealthAC(damagedid, Health);
				TogglePlayerControllable(playerid, false);
				SetTimerEx("UnfreezePlayer", 2000, false, "i", playerid);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
			}
		}
		new slot = getWeaponIdSlot(playerid);
		if(slot != 0 && slot != -1 && weaponid != 0) if(PI[playerid][data_GUN][slot] == 0 || PI[playerid][data_AMMO][slot] == 0) return printf("[test_ac] slot: %d, playerid: %d, damagedid: %d, amount: %d, weaponid: %d",slot,playerid, damagedid, amount, weaponid);
	}
	return 1;
}
callback: PlayerOglushen(damagedid, playerid) {
	ClearAnimations(damagedid);
	TogglePlayerControllable(playerid, 1);
	return SetPVarInt(damagedid, "OglushEn", 0);
}
callback: CheckDalnaboyPricep(playerid) {
	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) {
		PI[playerid][data_START_JOB] = 0;
        DestroyVehicle(dalnoboy_car[playerid]);
        DestroyVehicle(dalnoboy_trayler[playerid]);
        DeletePVar(playerid, "dalnaboy_start");
        DisablePlayerRaceCheckpoint(playerid);
        KillTimer(dalnaboy_check_pricep[playerid]);
        DisableRemoteVehicleCollisions(playerid, 0);
 	}
	return 1;
}
stock is_text_invalid(text[]) {
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "=", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ";", true) != -1) return 1;
	if(strfind(text, "|", true) != -1) return 1;
	return 0;
}
callback: ArmySkladTimer(playerid) {
	if(!PlayerToPoint(1.7, playerid, 1567.5477,1823.2529,15.6548)) return KillTimer(army_sklad_timer[playerid]);
	switch(PI[playerid][data_MEMBER]) {
		case 2,5,6,7: {
			if(army_wh[1] > 0) {
				if(PI[playerid][data_VIP] == 0)
				{
				    if(PI[playerid][data_PATR] < 400)
					{
						new patr,str[47];
						patr = RandomEX(2,5);
						PI[playerid][data_PATR] += patr;
						if(PI[playerid][data_PATR] > 400) PI[playerid][data_PATR] = 400;
						if(PI[playerid][data_MET] > 40) PI[playerid][data_MET] = 40;
						army_wh[1] -= patr;
						SaveWarehouse();
						UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],2577);
						UpdatePlayerDataIntNoLog(playerid, "patr", PI[playerid][data_PATR]);
						format(str,sizeof(str),"Загружено патронов: %d / 400 шт", PI[playerid][data_PATR]);
						cef_emit_event(playerid, "show-ammo-notify", CEFSTR(str), CEFSTR("7fa1a1"));
				    }
					else SendClientMessage(playerid, CG, "У Вас полные карманы патронов, места больше нет");
				}
				else
				{
				    if(PI[playerid][data_PATR] < 800)
					{
						new patr,str[47];
						patr = RandomEX(2,5);
						PI[playerid][data_PATR] += patr;
						if(PI[playerid][data_PATR] > 800) PI[playerid][data_PATR] = 800;
						if(PI[playerid][data_MET] > 80) PI[playerid][data_MET] = 80;
						army_wh[1] -= patr;
						SaveWarehouse();
						UpdatePlayerDataInt(playerid, "met", PI[playerid][data_MET],2595);
						UpdatePlayerDataIntNoLog(playerid, "patr", PI[playerid][data_PATR]);
						format(str,sizeof(str),"Загружено патронов: %d / 400 шт", PI[playerid][data_PATR]);
						cef_emit_event(playerid, "show-ammo-notify", CEFSTR(str), CEFSTR("7fa1a1"));
					}
				    else SendClientMessage(playerid, CG, "У Вас полные карманы патронов, места больше нет");
				}
			}
			new str_1[256];
			format(str_1,sizeof(str_1),"{f18c2b}Армейский склад\n\n{FFFFFF}Металл: %d кг.\n{fccf39}Патроны: %d шт.",army_wh[0],army_wh[1]);
			UpdateDynamic3DTextLabelText(army_sklad_text, -1, str_1);
		}
	}
	return 1;
}
callback: ArmyVorotaClose() {
	MoveObject(ArmyVorota,1892.07, 1719.18, 15.69, 2.5,  0.00, 0.00, 92.00);
	MoveObject(ArmyVorota1,1891.89, 1724.66, 15.69, 2.5,   0.00, 0.00, 92.00);
	return KillTimer(ArmyVorotaTimer);
}
callback: SkladClose() {
	MoveObject(VchSkladGate, 1568.80, 1809.53, 16.25, 2.5,   0.00, 0.00, 90.00);
	return KillTimer(SkladTimer5);
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) {
	if(hittype == BULLET_HIT_TYPE_OBJECT) {
		if(OlenMertw[0] == 1) return 1;
        if(--OlenBT[0] > 0) return 1;
        DestroyObject(OlenID[0]);
        OlenMertw[0] = 1;
        OlenMyaso[0] = 1;
        OlenMertwText[0] = Create3DTextLabel("{ffa500}Мёртвый олень\nНажмите 'H' чтобы подобрать мясо",-1,-2385.64, -540.90, 40.31+1.5,30.0,0,1);
        DeathOlenID[0] = CreateObject(19315, -2385.64, -540.90, 39.31,   95.00, -33.00, -69.00);
    }
	if(hittype == BULLET_HIT_TYPE_OBJECT && hitid == OlenID[1]) {
    	if(OlenMertw[1] == 1) return 1;
        if(--OlenBT[1] > 0) return 1;
        DestroyObject(OlenID[1]);
        OlenMertw[1] = 1;
        OlenMyaso[1] = 1;
        OlenMertwText[1] = Create3DTextLabel("{ffa500}Мёртвый олень\nНажмите 'H' чтобы подобрать мясо",-1,-2489.48, -314.69, 41.65+1.5,30.0,0,1);
        DeathOlenID[1] = CreateObject(19315, -2489.48, -314.69, 41.25, 85.00, 0.00, 0.00);
    }
	if(hittype == BULLET_HIT_TYPE_OBJECT && hitid == OlenID[2]) {
    	if(OlenMertw[2] == 1) return 1;
        if(--OlenBT[2] > 0) return 1;
        DestroyObject(OlenID[2]);
        OlenMertw[2] = 1;
        OlenMyaso[2] = 1;
        OlenMertwText[2] = Create3DTextLabel("{ffa500}Мёртвый олень\nНажмите 'H' чтобы подобрать мясо",-1, -1615.30, -957.28, 47.79,30.0,0,1);
        DeathOlenID[2] = CreateObject(19315, -1615.30, -957.28, 47.34, 90.00, 0.00, 0.00);
    }
	if(hittype == BULLET_HIT_TYPE_OBJECT && hitid == OlenID[3]) {
    	if(OlenMertw[3] == 1) return 1;
        if(--OlenBT[3] > 0) return 1;
        DestroyObject(OlenID[3]);
        OlenMertw[3] = 1;
        OlenMyaso[3] = 1;
        OlenMertwText[3] = Create3DTextLabel("{ffa500}Мёртвый олень\nНажмите 'H' чтобы подобрать мясо",-1,-1409.18, -1292.77, 56.52,30.0,0,1);
        DeathOlenID[3] = CreateObject(19315, -1409.17, -1292.74, 56.15, 78.00, 7.00, 10.00);
    }
	if(hittype == BULLET_HIT_TYPE_OBJECT && hitid == OlenID[4]) {
    	if(OlenMertw[4] == 1) return 1;
        if(--OlenBT[4] > 0) return 1;
        DestroyObject(OlenID[4]);
        OlenMertw[4] = 1;
        OlenMyaso[4] = 1;
        OlenMertwText[4] = Create3DTextLabel("{ffa500}Мёртвый олень\nНажмите 'H' чтобы подобрать мясо",-1,-860.03, -2546.97, 27.62,30.0,0,1);
        DeathOlenID[4] = CreateObject(19315, -860.03, -2546.97, 27.15,   90.00, 0.00, 0.00);
    }
	return 1;
}
callback: RespawnOleni() {
	DestroyObject(DeathOlenID[0]);
	DestroyObject(DeathOlenID[1]);
	DestroyObject(DeathOlenID[2]);
	DestroyObject(DeathOlenID[3]);
	DestroyObject(DeathOlenID[4]);
    DestroyObject(OlenID[0]);
    DestroyObject(OlenID[1]);
    DestroyObject(OlenID[2]);
    DestroyObject(OlenID[3]);
    DestroyObject(OlenID[4]);
    Delete3DTextLabel(OlenMertwText[0]);
    Delete3DTextLabel(OlenMertwText[1]);
    Delete3DTextLabel(OlenMertwText[2]);
    Delete3DTextLabel(OlenMertwText[3]);
    Delete3DTextLabel(OlenMertwText[4]);
   	OlenMertw[0] = 0;
	OlenMertw[1] = 0;
	OlenMertw[2] = 0;
	OlenMertw[3] = 0;
	OlenMertw[4] = 0;
   	OlenID[0] = CreateObject(19315, -2385.64, -540.90, 39.73, 0.00, -3.00, -47.00);
	OlenID[1] = CreateObject(19315, -2489.48, -314.69, 41.65, 0.00, 0.00, 0.00);
    OlenID[2] = CreateObject(19315, -1615.30, -957.28, 47.79, 0.00, 0.00, 0.00);
    OlenID[3] = CreateObject(19315, -1409.18, -1292.77, 56.52,   0.00, 0.00, 0.00);
    OlenID[4] = CreateObject(19315, -860.03, -2546.97, 27.62,   0.00, 0.00, 0.00);
    return 1;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
    new Float:hp;
    new carid = GetPlayerVehicleID(playerid);
    GetVehicleHealth(carid, hp);
    if(hp > 351) {
    	cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Авария (двигатель заглох)"));
		GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
		SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
		CAR_DATA[carid][data_ENG] = 0;
		cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));
		hp = hp/10;
		cef_emit_event(playerid, "update-speed-text", CEFINT(1), CEFINT(floatround(hp, floatround_round)));
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		switch(random(2)) {
		    case 0: PlayerPlaySound(playerid, 1148, x, y, z);
		    case 1: PlayerPlaySound(playerid, 1009, x, y, z);
			case 2: PlayerPlaySound(playerid, 1009, x, y, z);
		}
    }
    return 1;
}
stock GetString(const param1[], const param2[], log = 0)
{
	if(!log) return !strcmp(param1, param2, false);
	else return !strcmp(param1, param2, true);
}
callback: SetRandomWeather() {
	new rand = random(sizeof weather);
	SendClientMessageToAllf(0x00cc33FF, "[Прогноз погоды] в области ожидается %s (+%d °С)", weather[rand][weather_name], weather[rand][weather_degrees]);
    WeatherServer = weather[rand][weather_id];
	return SetWeather(WeatherServer);
}
callback: SetPlayerDrunkLevelNull(playerid) return SetPlayerDrunkLevel(playerid, 0);
public OnGameModeInit() {
	SvDebug(SV_TRUE);
	CreateObjectMode();
	checkcarhealthtimer = SetTimer("CheckCarHealth", 1000, 1);
	CreateObject(1895, 1913.80, 1734.63, 12.48,   0.00, 2.00, 90.00);
	SetTimer("RespawnOleni", 900*1000, 1);
	CreateDynamicObject(18151, 2083.04, 1809.66, 20.87,   0.00, 0.00, 0.00);
	OlenID[0] = CreateObject(19315, -2385.64, -540.90, 39.73, 0.00, -3.00, -47.00);
	OlenID[1] = CreateObject(19315, -2489.48, -314.69, 41.65, 0.00, 0.00, 0.00);
	OlenID[2] = CreateObject(19315, -1615.30, -957.28, 47.79, 0.00, 0.00, 0.00);
	OlenID[3] = CreateObject(19315, -1409.18, -1292.77, 56.52,   0.00, 0.00, 0.00);
	OlenID[4] = CreateObject(19315, -860.03, -2546.97, 27.62,   0.00, 0.00, 0.00);
	ManualVehicleEngineAndLights();
	new text[64];
	army_sklad_text = CreateDynamic3DTextLabel(text, -1, 1567.5477,1823.2529,15.6548, 20,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	X2DAY = true;
	{
		new vk_to[250];
		format(vk_to, sizeof(vk_to), "Перезапуск сервера. Приятной игры <3");
		SendServerStock(vk_to, 6);
	}
	for(new i;i < sizeof(Bankomats);i ++) CreateDynamicPickup(1212, 1, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2], -1);
	new hour, minute, second;
	gettime(hour, minute, second);
	SetWorldTime(hour);
	Create3DTextLabel("{008000}Водитель автобуса", -1, 1790.3601,2270.9595,16.7525, 20.0, 0);
	avtobusjob = CreateDynamicPickup(1275, 23, 1790.3601,2270.9595,15.7525, -1);
	CreateObject(19313, 1892.29, 1709.41, 16.18,   0.00, 0.00, -90.00);
	CreateObject(19313, 1891.77, 1734.28, 16.18,   0.00, 0.00, -90.00);
    CreateObject(966, 1447.30, 2368.45, 12.60,   0.00, 0.00, 270.75);
    VchSkladGate = CreateObject(1717, 1568.80, 1809.53, 16.25,   0.00, 0.00, 90.00);
	samolet = CreateObject(1681, 2153.00, -2808.01, 252.78,   0.00, 0.00, 0.00, 300.0);
	MoveObject(samolet,  2085.67, 2749.81, 252.78, 120000,  0.00, 0.00, 0.0);
	Create3DTextLabel("{008000}Банк\nБатырево", -1,1795.1494,2039.2830,15.8942, 20.0, 0);
	vhodbank = CreateDynamicPickup(1318, 23, 1795.1494,2039.2830,15.8942, -1);
	vihodbank = CreateDynamicPickup(1318, 23, 1535.9500,1807.5229,578.6213, -1);
	pick_bank[0] = CreateDynamicPickup(1274, 23, 1534.6836,1820.4808,578.6213, -1);
	pick_bank[1] = CreateDynamicPickup(1274, 23, 1537.8619,1820.2335,578.6213, -1);
	pick_bank[2] = CreateDynamicPickup(1274, 23, 1540.8298,1820.5121,578.6213, -1);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1534.6836,1820.4808,578.6213, 6.5, 92);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1537.8619,1820.2335,578.6213, 6.5, 92);
	Create3DTextLabel("{008000}/bank\nКлавиша B", -1,1540.8298,1820.5121,578.6213, 6.5, 92);
	opgintvihod_offklub = CreateDynamicPickup(1318, 23, -2126.9673,2389.1584,1501.8101, 1);
	opgintvhod_offklub = CreateDynamicPickup(1318, 23, -567.9614,-1364.4374,41.1188, -1);
	opgintvhod_gopota = CreateDynamicPickup(1318, 23, 2215.5474,-2597.8342,21.9600, -1);
	opgintvihod_gopota = CreateDynamicPickup(1318, 23, -2126.9673,2389.1584,1501.8101, 2);
	opgintvhod_skinhead = CreateDynamicPickup(1318, 23, 2611.4048,1766.9838,2.4167, -1);
	opgintvihod_skinhead = CreateDynamicPickup(1318, 23, -2126.9673,2389.1584,1501.8101, 3);
	Create3DTextLabel("{008000}Мэрия птг. Батырево", -1, 1818.2981,2095.7285,17.1631, 20.0, 0);
	VhodMeriya = CreateDynamicPickup(1318, 23, 1818.2981,2095.7285,16.1631, -1);
	VihodMeriya = CreateDynamicPickup(1318, 23, 1158.0463,2576.4780,1112.4800, -1);
	VhodLiftMeriya = CreateDynamicPickup(1318, 23, 1165.9119,2561.0637,1112.4962, -1);
	VihodLiftMeriya = CreateDynamicPickup(1318, 23, 1148.6302,2553.4089,1115.5863, -1);
	VhodKaznaPickup = CreateDynamicPickup(1318, 23, 1147.7219,2565.4226,1112.4800, -1);
	VihodKaznaPickup = CreateDynamicPickup(1318, 23, -1362.6874,1240.6281,2102.4299, -1);
	Kazna_GiveMoney = CreateDynamicPickup(19134, 23, -1359.6760,1238.8599,2102.4299, -1);
    Pravo_givegun_pickup = CreateDynamicPickup(1239, 23, 1137.63,2549.29,1115.56, -1);
    vch_givegun_pickup = CreateDynamicPickup(19134, 23, 743.2869,1525.6694,2002.1899, -1);
	MVD_givegun_pickup = CreateDynamicPickup(19134, 23, 2129.0156,-1966.3600,903.5000, -1);
	Create3DTextLabel("{008000}/clear\nдля снятия розыска", -1, 1456.4865,1627.6499,697.1956, 5.0, 1);
	Create3DTextLabel("{008000}КПЗ", -1, -290.6737,-1550.2627,44.7515, 20.0, 0);
	vxoddchmvd0 = CreateDynamicPickup(1318, 23, -290.6737,-1550.2627,43.7515, -1);
	vxoddchmvd1 = CreateDynamicPickup(1318, 23, 2136.4746,-1990.4489,901.4700, -1);
	Create3DTextLabel("{008000}МО МВД", -1, -300.5956,-1556.6754,42.3687, 20.0, 0);
	VhodUchastokMVD0 = CreateDynamicPickup(1318, 23, -300.5956,-1556.6754,41.3687, -1);
	VhodUchastokMVD1 = CreateDynamicPickup(1318, 23, 1457.5537,1606.2422,696.3035, -1);
	VhodArmy1 = CreateDynamicPickup(1318, 23, 1919.4459, 2304.0505, 15.5697, -1);
	VhodArmy2 = CreateDynamicPickup(1318, 23, 2491.6785, 210.5859, 1502.4700, -1);
	palata_vhod = CreateDynamicPickup(1318, 23, -691.4985,1617.8883,1002.0200, -1);
	palata_vihod = CreateDynamicPickup(1318, 23, 1324.4685,2505.1799,1002.1400, -1);
	ordinatorskaya_vhod = CreateDynamicPickup(1318, 23,  -688.8463,1666.1891,1002.0200, -1);
	ordinatorskaya_vihod = CreateDynamicPickup(1318, 23, -2851.9490,2814.9189,1002.1600, -1);
	bcrbvhod = CreateDynamicPickup(1318, 23,  1913.4232,2190.7832,16.9179, -1);
	bcrbvihod = CreateDynamicPickup(1318, 23,  -679.4802,1633.7867,1002.0200, -1);
	bcrbvihod1 = CreateDynamicPickup(1318, 23,  -679.4778,1630.4673,1002.0200, -1);
	Create3DTextLabel("{008000}Казино", -1, 2313.8247,-1924.8029,22.4338, 10.0, 0);
	kazino_vhod = CreateDynamicPickup(1318, 23, 2313.8247,-1924.8029,22.4338, -1);
	kazino_vihod = CreateDynamicPickup(1318, 23, 1250.2820,1525.8630,835.2716, -1);
	Create3DTextLabel("{008000}Автошкола", -1, 1843.0927,1451.3744,10.7364, 10.0, 0);
	avtoschool_vhod = CreateDynamicPickup(1318, 23, 1843.0927,1451.3744,10.7364, -1);
	avtoschool_vihod = CreateDynamicPickup(1318, 23, 2261.1738,2721.2053,1122.4604, -1);
	avtoschool_info = CreateDynamicPickup(1239, 23,2277.3806,2711.6648,1122.4604, -1);
	avtoschool_eks = CreateDynamicPickup(1210, 23, 2275.4622,2708.3694,1122.4604, -1);
	Create3DTextLabel("{008000}Казарма", -1, 1787.7538,1786.4166,17.2422, 20.0, 0);
	VhodArmyKazarmy = CreateDynamicPickup(1318, 23, 1787.7538,1786.4166,16.2422, -1);
	VihodArmyKazarmy  = CreateDynamicPickup(1318, 23, 742.7764,1506.8319,2002.1899, -1);
	Create3DTextLabel("{008000}Столовая", -1, 1845.2889,1758.6733,16.8422, 20.0, 0);
	VhodArmyStolovaya = CreateDynamicPickup(1318, 23, 1845.2889,1758.6733,15.8422, -1);
	VihodArmyStolovaya = CreateDynamicPickup(1318, 23, -2433.8774,1812.5083,2053.4800, -1);
	ArmyStolovaya = CreateDynamicPickup(1314, 23, -2430.6829,1801.1373,2053.4800, -1);
	Create3DTextLabel("{3377cc}Войсковая часть\n{33dd66}Начальство", -1, 1787.4512,1757.1879,16.3500, 20.0, 0);
	VhodArmyShatb = CreateDynamicPickup(1318, 23, 1787.4512,1757.1879,15.3500, -1);
	VihodArmyShatb = CreateDynamicPickup(1318, 23, -123.2984,1383.7922,1208.6801, -1);
	Create3DTextLabel("{3377cc}Парковка\n{33dd66}Мэрия", -1,1791.4037, 2080.9326, 15.8538, 20.0, 0);
	MeriyaGarageVhod = CreateDynamicPickup(1318, 23, 1791.4037, 2080.9326, 15.8538, -1);
	MeriyaGarageVihod = CreateDynamicPickup(1318, 23, 312.9515, 1474.6503, 802.5100, 1);
	Create3DTextLabel("{3377cc}Парковка\n{33dd66}МО МВД", -1,-262.2690,-1563.1116,41.1352, 20.0, 0);
	MVDGarageVhod = CreateDynamicPickup(1318, 23, -262.2690,-1563.1116,41.1352, -1);
	MVDGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 2);
	Create3DTextLabel("{008000}Въезд", -1,1947.6292,2180.4321,15.9317+1, 20.0, 0);
	CRBGarageVhod = CreateDynamicPickup(1318, 23, 1944.0989,2180.5466,15.9317, -1);
	CRBGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 3);
	Create3DTextLabel("{008000}Въезд", -1,2304.1958,-2285.7551,22.9721, 20.0, 0);
	VchGarageVhod = CreateDynamicPickup(1318, 23, 1832.7134,1667.8809,15.2794, -1);
	VchGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 4);
	Create3DTextLabel("{008000}Въезд", -1,2244.4736,-2585.2373,21.9600, 20.0, 0);
	GopotaGarageVhod = CreateDynamicPickup(1318, 23, 2244.4736,-2585.2373,21.9600, -1);
	GopotaGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 5);
	Create3DTextLabel("{008000}Въезд", -1,1830.7931,1666.5521,15.2794, 20.0, 0);
	SkinheadGarageVhod = CreateDynamicPickup(1318, 23, 2627.8494,1784.4728,2.3624, -1);
	SkinheadGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 6);
	Create3DTextLabel("{008000}Въезд", -1,-562.5096,-1392.1708,42.1858, 20.0, 0);
	OffClubGarageVhod = CreateDynamicPickup(1318, 23, -560.5803,-1392.5817,41.1923, -1);
	OffClubGarageVihod = CreateDynamicPickup(1318, 23, 312.9515,1474.6503,802.5100, 7);
	army_sklad = CreateDynamicCP(1567.5477,1823.2529,15.6548, 3,  0, 0, -1, 50.0);
	NPC_ALL[0] = CreateActor(149, 1921.8282, 2096.4849, 15.7053,91.9485);
	ApplyActorAnimation(NPC_ALL[0],"SMOKING","M_smklean_loop",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[1] = CreateActor(146, 1920.4588, 2096.3789, 15.7053,269.3558);
	ApplyActorAnimation(NPC_ALL[1],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[2] = CreateActor(2, 1890.2318, 2025.9119, 17.3818, 178.9477);
	ApplyActorAnimation(NPC_ALL[2],"GRAVEYARD", "mrnF_loop",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[3] = CreateActor(137, 1840.4908, 2037.1929, 15.4456, 0);
	ApplyActorAnimation(NPC_ALL[3],"INT_HOUSE", "BED_LOOP_L",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[4] = CreateActor(295, 1822.4370,2086.6152,15.8538,208.6428);
	ApplyActorAnimation(NPC_ALL[4],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[5] = CreateActor(228, 1823.1276,2085.9524,15.8534,38.3961);
	ApplyActorAnimation(NPC_ALL[5],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[6] = CreateActor(187, 1822.3309,2085.7205,15.8538,318.4312);
	ApplyActorAnimation(NPC_ALL[6],"PED","IDLE_chat",4.1, 1, 1, 1, 1, 2000);
	NPC_ALL[9] = CreateActor(189, 1540.8746,1822.7574,578.6213,179.6009);
	NPC_ALL[10] = CreateActor(11, 1537.7498,1822.6302,578.6213,179.6007);
	NPC_ALL[11] = CreateActor(12, 1534.5968,1822.4430,578.6213,177.3375);
	//
	NPC_ALL[12] = CreateActor(134, 1799.7273,2506.5293,15.8725,300.6712);
	ApplyActorAnimation(NPC_ALL[12],"COP_AMBIENT","Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	Create3DTextLabel("{FFFFFF}Деревенский дурачок {ff6633}Носов\n{FFFFFF}Нажмите {ff6633}B", -1,1799.7273,2506.5293,15.8725, 7.0, 0);
	//
	NPC_ALL[13] = CreateActor(78, 2313.4927,-1845.1414,21.9900,34.4994);
	ApplyActorAnimation(NPC_ALL[12],"COP_AMBIENT","Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	Create3DTextLabel("{FFFFFF}Деревенский дурачок {ff6633}Макс\n{FFFFFF}Нажмите {ff6633}B", -1,2313.4927,-1845.1414,21.9900, 7.0, 0);
	//
	SetActorVirtualWorld(NPC_ALL[9], 92);
	SetActorVirtualWorld(NPC_ALL[10], 92);
	SetActorVirtualWorld(NPC_ALL[11], 92);
	Create3DTextLabel("{FFFF00}Рыболов\nНажмите 'H' для разговора", -1,  2808.5137,-2148.5676, 20.0471, 5.0, 0);
	NPC_ribolov = CreateActor(44, 2808.5137,-2148.5676, 19.0471, 87.6485);
	ApplyActorAnimation(NPC_ribolov,"COP_AMBIENT", "Coplook_loop", 4.1, 1, 1, 1, 1,2000);
	Create3DTextLabel("{FFFF00}Ферма", -1, 2134.7983,1795.7491,13.0000, 20.0, 0);
	JB_DATA[3][data_PICKUP][1] = CreateDynamicPickup(1275, 23, 2134.7983,1795.7491,12.0000, -1);
	Create3DTextLabel("{FFFF00}Шахта", -1, -2636.9402,254.1115,11.9310, 20.0, 0);
	JB_DATA[1][data_PICKUP][1] = CreateDynamicPickup(1275, 23, -2636.9402,254.1115,10.9310, -1);
	Create3DTextLabel("{FFFF00}Покупка\nметалла", -1, 2047.0425,1396.1771,26.4762, 20.0, 0);
	metall_buy = CreateDynamicPickup(19134, 23, 2047.0425,1396.1771,26.4762, -1);
	Create3DTextLabel("{FFFF00}Склада\nвеществ", -1, 1894.9059,1186.5181,30.3239, 20.0, 0);
	drugs_buy = CreateDynamicPickup(1279, 23, 1894.9059,1186.5181,30.3239, -1);
	Create3DTextLabel("{FFFF00}Получение\nмедицинской справки", -1, -688.7606,1631.3787,1002.0200+1, 20.0, 1, 1);
	CRBPickCard = CreateDynamicPickup(19134, 23, -688.7606,1631.3787,1002.0200, -1);
	Create3DTextLabel("{FFFF00}Склад металла", -1, 1852.0610,1669.5519,16.2934, 20.0, 0);
	metall_give = CreateDynamicPickup(19134, 23, 1852.0610,1669.5519,15.2934, -1);
	Create3DTextLabel("{FFFF00}Мясокомбинат", -1, -2243.6970,263.2379,25.5337, 20.0, 0);
	myaso_sell = CreateDynamicPickup(2803, 23, -2243.6970,263.2379,24.5337, -1);
	Create3DTextLabel("{FFFF00}Дайвер", -1, 1986.9636,1001.2310,16.3208, 20.0, 0);
	CreateActor(48, 1986.9636,1001.2310,15.3208,142.0948);
	JB_DATA[2][data_PICKUP][1] = CreateDynamicPickup(1275, 23, 1986.5718,1000.6503,15.2924, -1);
	Create3DTextLabel("{FFFF00}Дальнобойщики", -1, 1969.7487,-2603.8992,12.4823, 20.0, 0);
	Dalnoboy_pickup = CreateDynamicPickup(1275, 23, 1969.7487,-2603.8992,11.4823, -1);
	sklad_fuel = 50000;
	sell_vagonka = RandomEX(3,10);
	sell_doska = RandomEX(3,10);
	sell_brus = RandomEX(3,10);
	sell_ruda = RandomEX(3,10);
	sell_morkov = RandomEX(3,10);
	sell_kapusta = RandomEX(3,10);
	sell_ogurec = RandomEX(3,10);
	sell_pomidor = RandomEX(3,10);
	sell_kartofel = RandomEX(3,10);
	sell_orange = RandomEX(3,10);
	sell_persiky = RandomEX(3,10);
	sell_sliva = RandomEX(3,10);
	sell_yabloki = RandomEX(3,10);
	sell_fuel = RandomEX(3,10);
	AntiDeAMX();
	restartserver = 0;
	bizfin = 0;
	SendRconCommand("hostname Arcana RP - игра про Россию");
	SendRconCommand("mapname NEW GAME");
	LoadTextDraws();
 	dbHandle = mysql_connect(MySQL_HOST, MySQL_USER, MySQL_DB, MySQL_PASS);
	if(mysql_errno(dbHandle) != 0) 	print("Подключение к Базе - ошибка");
	else print("Подключение к Базе - успешно");
	mysql_log(LOG_ERROR | LOG_WARNING);
	mysql_function_query(dbHandle, "SET NAMES cp1251", false, "", "");
	mysql_set_charset("cp1251");
	mysql_function_query(dbHandle, "SELECT * FROM `warehouse`",true, "LoadWarehouse", "");
	mysql_function_query(dbHandle, "SELECT * FROM `group`",true, "LoadGroups", "");
	mysql_function_query(dbHandle, "SELECT * FROM `houses`",true, "LoadHouses", "");
	mysql_function_query(dbHandle, "SELECT * FROM `business`",true, "LoadBusiness", "");
	mysql_function_query(dbHandle, "SELECT * FROM `gangzone`",true, "LoadGZ", "");
	SetTimer("SecondTimer",1000,true);
	SetTimer("MinutTimer",1000*60,true);
	SelectSkin = CreateMenu("Victim", 1, 50.0, 160.0, 90.0);
	SetMenuColumnHeader(SelectSkin, 0, "Choose skin");
	AddMenuItem(SelectSkin,0,"> Next");
	AddMenuItem(SelectSkin,0,"< Back");
	AddMenuItem(SelectSkin,0,"Select");
	LimitPlayerMarkerRadius(65.0);
	AllowInteriorWeapons(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(55.0);
	SetGameModeText("• ОБНОВЛЕНИЕ •");
	police_barrier_status[0] = GATES_CLOSED;
	police_barrier_status[1] = GATES_CLOSED;
	Create3DTextLabel("{33FF33}/remont - 4000 рублей", -1, 2155.4773,-1850.3280,18.3538, 10.0, 0);
	pickgmats = CreateDynamicPickup(3013, 23, -1080.2941,2187.2947,38.0763, 0);
	help_spawn = CreateDynamicCP(2748.1580,-2458.2456,21.6890,1.0,0,0,-1,5.0);
	Create3DTextLabel("{33FF33}Помощь для новичков", -1, 2748.1580,-2458.2456,21.6890, 10.0, 0);
	pickup_ash = CreateDynamicPickup(1239, 23, 1915.1434, 2232.8154, 16.2557, 0);
	for(new i = 0; i < MAX_VEHICLES; i++) {
		ClearCarData(i);
		CAR_DATA[i][data_FUEL] = 50;
	}
	Streamer_SetTickRate(50);
	CreateDynamicMapIcon(1915.6339,2301.6677,15.5697, 20, -1, 0, -1, -1, 400.0);// Военкомат
	CreateDynamicMapIcon(1913.3300,2183.4705,15.7060, 22, -1, 0, -1, -1, 400.0);// болька
	CreateDynamicMapIcon(1760.4059,2277.9885,15.4877, 11, -1, 0, -1, -1, 400.0);// Автобусник
	CreateDynamicMapIcon(1795.1661,2039.2810,15.8942, 52, -1, 0, -1, -1, 400.0);// банк Батырёво
	CreateDynamicMapIcon(2325.5154,-1803.9813,22.4540, 55, -1, 0, -1, -1, 400.0);// автосалон
	CreateDynamicMapIcon(2313.8247,-1924.8029,22.4338, 25, -1, 0, -1, -1, 400.0);// казино
	CreateDynamicMapIcon(2130.9451,1792.1238,11.6093, 14, -1, 0, -1, -1, 400.0);// ферма
	CreateDynamicMapIcon(2619.0984,1769.8547,2.0025, 59, -1, 0, -1, -1, 400.0);// скинхеды
	CreateDynamicMapIcon(2215.5708,-2597.6665,21.9600, 58, -1, 0, -1, -1, 400.0);// гопота
	CreateDynamicMapIcon(-568.0607,-1375.1918,41.1309, 60, -1, 0, -1, -1, 400.0);// кавказ
	CreateDynamicMapIcon(1966.9902,-2604.1121,10.8149, 51, -1, 0, -1, -1, 400.0);// дальнобой
	CreateDynamicMapIcon(-303.3520,-1555.1500,41.1196, 30, -1, 0, -1, -1, 400.0);// мусарная
	CreateDynamicMapIcon(2808.5137,-2148.5676,19.0471, 9, -1, 0, -1, -1, 400.0);// аренда лодок
	CreateDynamicMapIcon(2196.3562,-1925.6718,18.8125, 19, -1, 0, -1, -1, 400.0);// коцертная сцена
	ArmyVorota = CreateObject(988, 1892.07, 1719.18, 15.69,   0.00, 0.00, 92.00);
	ArmyVorota1 = CreateObject(988, 1891.89, 1724.66, 15.69,   0.00, 0.00, 92.00);
	Create3DTextLabel("{5eb477}Нажмите\nB", -1, 1571.53, 1809.43, 15.89, 4.3, 0);
	Create3DTextLabel("{5eb477}Нажмите\nB", -1, 1565.95, 1809.91, 15.89, 4.3, 0);
	LoadOrgCars();
	LoadStaticCars();
	new minuite;
	Global_Time = gettime(hour,minuite,second);
	SetTimer("ChangeServer0", 500, false);
	return 1;
}
public OnGameModeExit()
{
	KillTimer(checkcarhealthtimer);
	mysql_close(dbHandle);
	foreach(new pl:Player) SavePlayerData(pl);
	SaveWarehouse();
	return 1;
}
public OnPlayerRequestClass(playerid, classid) {

	if(GetPVarInt(playerid,"player_auth") == 1) {
		SetPlayerToSpawn(playerid);
		SetPlayerSkinAC(playerid, PI[playerid][data_SKIN]);
	}
	else {
		SetPVarInt(playerid,"player_auth",1);
		SetPlayerVirtualWorld(playerid, playerid);
		InterpolateCameraPos(playerid, 1835.58, 2073.23, 16.06+5, 1839.09, 2092.53, 16.08+5, 150000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1823.26, 2094.96, 15.85, 1823.26, 2094.96, 15.85, 150000, CAMERA_MOVE);
	 	SpawnPlayer(playerid);
	}
	return 1;
}
public SV_VOID:OnPlayerActivationKeyPress(SV_UINT:playerid, SV_UINT:keyid) {
    if(keyid == 0x58 && lstream[playerid]) {
	    if(GetPVarInt(playerid, "SpecBool") != 1) {
			SvAttachSpeakerToStream(lstream[playerid], playerid);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
		}
		else SvDetachSpeakerFromStream(lstream[playerid], playerid);
	}
}
public SV_VOID:OnPlayerActivationKeyRelease(SV_UINT:playerid, SV_UINT:keyid) if (keyid == 0x58 && lstream[playerid]) SvDetachSpeakerFromStream(lstream[playerid], playerid);
callback: SpeedUpdate(playerid) {
	new carid = GetPlayerVehicleID(playerid), Float:hp;
	cef_emit_event(playerid, "update-speed-text", CEFINT(2), CEFINT(CAR_DATA[carid][data_FUEL]));
    GetVehicleHealth(carid, hp);
	hp = hp/10;
	cef_emit_event(playerid, "update-speed-text", CEFINT(1), CEFINT(floatround(hp, floatround_round)));
	if(CAR_DATA[carid][data_ENG] == 0) {
		cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));
		cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(0));
	}
	else {
		cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(1));
		cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(1));
	}
	if(CAR_DATA[carid][data_LAMP] == 0) cef_emit_event(playerid, "update-speed-icon", CEFINT(3), CEFINT(0));
	else cef_emit_event(playerid, "update-speed-icon", CEFINT(3), CEFINT(1));
	if(CAR_DATA[carid][data_LOCK] == 0) cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(0));
	else cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(1));
}
stock ClearConnect(playerid) {
	PI[playerid][data_HIDEME] = 0;
	PI[playerid][data_schooltestlevel] = 0;
	PI[playerid][data_CHEAT] = 0;
	TimerForPlayer[playerid] = MAX_PLAYERS;
	FollowBy[playerid] = MAX_PLAYERS;
	PI[playerid][data_MP] = 0;
	PI[playerid][data_ID] = -1;
	clearDialogTimer(playerid);
	SetPVarInt(playerid,"gunadm",0);
	SetPVarInt(playerid,"JoinGame",0);
	SetPVarInt(playerid, "deathcapture", 0);
	SetPVarInt(playerid, "TempFollowBy", -1);
	SetPVarInt(playerid, "anim_load",1);
	SetPVarInt(playerid,"reg_account", 0);
	SetPVarInt(playerid, "cefload", 0);
	cEngine[GetPlayerVehicleID(playerid)] = 0;
	gLastTabUpdate[playerid] = 0;
	SetPlayerVirtualWorld(playerid, playerid);
	if(bombacitve == 1) return RemoveBuildingForPlayer(playerid, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	//
	GetPlayerName(playerid, PI[playerid][data_NAME], MAX_PLAYER_NAME);
	//
	PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
	PI[playerid][data_RENTCAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_TRAILER] = INVALID_VEHICLE_ID;
	PI[playerid][data_VEH] = INVALID_VEHICLE_ID;
	return 1;
}
stock Other(playerid) {
	GetPlayerIp(playerid,PI[playerid][data_LOGIN_IP],32);
	getdate(PI[playerid][data_LOGDATE_YEAR], PI[playerid][data_LOGDATE_MONTH], PI[playerid][data_LOGDATE_DAY]);
	army_sklad_zone = CreateDynamicCircle(1567.5477,1823.2529, 3.0, 0, 0, -1);
	capturezonespawn = CreateDynamicCube(1449.5,-1355, 1591.5, -1133, 850.0, 0, 0, -1);
    PI[playerid][data_PLAYER_TIMER_ID] = SetTimerEx("PlayerUpdate", 1000, true, "d", playerid);
	if(bombacitve == 1) return RemoveBuildingForPlayer(playerid, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	printf("%s %d %d", getName(playerid), GetPVarInt(playerid,"reg_account"), GetPVarInt(playerid,"select_skin"));
    if (SvGetVersion(playerid) == SV_NULL) SendClientMessage(playerid, 0x7394dcFF, "[Client voice] {FFFFFF}Could not find plugin sampvoice.");
    else if (SvHasMicro(playerid) == SV_FALSE) SendClientMessage(playerid, 0x7394dcFF, "[Client voice] {FFFFFF}The microphone could not be found.");
    else if ((lstream[playerid] = SvCreateDLStreamAtPlayer(15.0, SV_INFINITY, playerid, 0xf00e5d, "VOICE"))) SvAddKey(playerid, 0x58);
	return 1;
}
public OnPlayerConnect(playerid) {
	ClearPlayerData(playerid);
	ClearConnect(playerid);
	SetPVarInt(playerid, "Auth",1);
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BSKTBALL");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"GFUNK");
    SetSpawnInfo(playerid, NO_TEAM, 0, 0.0, 0.0, 0.0, 1.0, 0, 0, 0, 0, 0, 0);
    SetPlayerColor(playerid, 0xB5BBBA00);
	LoadPlayerTextDraws(playerid);
	RemoveBuild(playerid);
	Other(playerid);
	new str_q[256];
    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE name = '%s'",PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, true, "MysqlLoadingAccount", "d", playerid);
	cef_create_browser(playerid, CEF_INTERFACE_BROWSER_ID, "http://f0838161.xsph.ru/arcanacef/index.htm", false, false);
	return 1;
}
public OnPlayerEnterDynamicArea(playerid, areaid) {
	if(areaid == army_sklad_zone) {
		FullPtPlayer[playerid] = 1;
        army_sklad_timer[playerid] = SetTimerEx("ArmySkladTimer", 2000, true, "d", playerid);
    }
	if(areaid == capturezonespawn) {
		if(gangwar > 0) {
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133)) {
				if(PI[playerid][data_ADMLVL] > 1) {
					SendClientMessage(playerid, 0xa2d0f9FF, "Вы попали в зону стрелы, так-как Вы игровой мастер, Вас сняла система.");
					PI[playerid][data_ADMRETURN] = PI[playerid][data_ADMLVL];
				}
				return 1;
		    }
	    }
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid,checkpointid) {
    if(checkpointid == help_spawn) return ShowPlayerDialog(playerid, dialog_SPAWNHELP, DIALOG_STYLE_LIST, "{f00e5d}Помощь", "С чего начать играть?", "Выбрать", "Отмена");
 	if(checkpointid == army_sklad) return 1;
	return 1;
}
public OnPlayerDisconnect(playerid, reason) {
	if(GetPVarInt(playerid, "asalon") == 1) {
		new str_q[256];
		format(str_q, sizeof(str_q), "UPDATE `accounts` SET `startx` = '2323.1794', `starty` = '-1804.2302', `startz` = '22.4540' WHERE `id` = '%d'", PI[playerid][data_ID]);
		mysql_query(dbHandle, str_q, false);
	}
	DeletePVar(playerid,"cefload");
	cef_destroy_browser(playerid, 74583);
	DeletePVar(playerid,"deathcapture");
	DeletePVar(playerid,"reg_account");
	DeletePVar(playerid,"WrongPassword");
	PI[playerid][data_MP] = 0;
	SavePlayerData(playerid);
    if(PI[playerid][data_HIDEME] == 1) if(PI[playerid][data_ADMLVL] == 0) return PI[playerid][data_HIDEME] = 0;
	if(GetPVarType(playerid, "ConnectPTimer")) KillTimer(GetPVarInt(playerid, "ConnectPTimer"));
    DeletePVar(playerid,"PlayerCuffed");
	DeletePVar(playerid,"Auth");
	if(GetPVarInt(playerid, "AvtoBus_start") != 0) DestroyVehicle(avtobus_car_job[playerid]);
	if(GetPVarInt(playerid, "dalnaboy_start") != 0) {
		DestroyVehicle(dalnoboy_trayler[playerid]);
        DestroyVehicle(dalnoboy_car[playerid]);
        DeletePVar(playerid, "dalnaboy_start");
        return KillTimer(dalnaboy_check_pricep[playerid]);
	}
    if(lstream[playerid]) {
        SvDeleteStream(lstream[playerid]);
        lstream[playerid] = SV_NULL;
    }
	if(GetPVarInt(playerid, "Arenda_Lodki") != 0) DestroyVehicle(ArendLodkaPlayer[playerid]);
	if(GetPVarInt(playerid, "Arenda_Velica") != 0) DestroyVehicle(VelicArendaPlayer[playerid]);
	PI[playerid][data_schooltestlevel] = 0;
    if(GetPVarInt(playerid,"PlayerCuffed") == 1 && PI[playerid][data_WANTED] >= 1) {
 	    PI[playerid][data_JAIL] = 1;
		PI[playerid][data_JAILTIME] = 1800;
		PI[playerid][data_WANTED] = 0;
		SendClientMessageToAllf(COLOR_TOMATO,"%s вышел из игры при задержании (+30 минут ареста)",PI[playerid][data_NAME]);
 	}
	if(PI[playerid][data_OPENAUTOSALON] == true) {
 		DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
  		PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
		HideAutoSalonMenu(playerid);
	}
 	if(PI[playerid][data_OPENCASINO] == true) KillTimer(casino_timer[playerid]);
	if(PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][data_RENTJOB]);
	if(PI[playerid][data_RENTCAR] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][data_RENTCAR]);
	if(PI[playerid][data_TRAILER] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][data_TRAILER]);
	if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][data_VEH]);
    KillTimer(PI[playerid][data_PLAYER_TIMER_ID]);
	KillTimer(PI[playerid][data_PLAYER_TIMER_IDVK]);
	KillTimer(PI[playerid][data_PLAYER_TIMER_IDCEF]);
	KillTimer(PI[playerid][data_AUTHPL]);
	KillTimer(PI[playerid][data_CEFLOAD]);
	KillTimer(check_db_pricepadd[playerid]);
    KillTimer(TimerFloatDev[playerid]);
    new szDisconnectReason[3][] = {
        "Таймаут/Краш",
        "Выход",
        "Кик/Бан"
    };
    if(PI[playerid][data_ADMLVL] >= 1 && PI[playerid][data_ADMLVL] < 6) {
	    new str[MAX_PLAYER_NAME+75];
		format(str,sizeof(str),"[%s #%d] %s[%d] вышел с сервера. Причина: %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,szDisconnectReason[reason]);
		SendAdminMessage(COLOR_ADMINCHAT,str);
    }
	printf("Игрок - %s покинул игру!", PI[playerid][data_NAME],szDisconnectReason[reason]);
	return 1;
}
callback: SetDeathNamePlayerid(playerid) SetPlayerName(playerid, PI[playerid][data_NAME]);
callback: SetDeathNameKillerid(killerid) SetPlayerName(killerid, PI[killerid][data_NAME]);
public OnPlayerDeath(playerid, killerid, reason) {

	if(!IsPlayerToKvadrat(playerid,  1511, 1657.5, 1896, 1833.5) && GetPlayerInterior(playerid) == 0)
	if(GetPVarInt(playerid, "PlayerObmorok") == 0 && !IsPlayerToKvadrat(playerid,  1511, 1657.5, 1896, 1833.5) && GetPlayerInterior(playerid) == 0)
	{
	    if(PI[playerid][data_MEMBER] != 5 && gangwar == 0 && !IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) ||
		PI[playerid][data_MEMBER] != 6 && gangwar == 0 && !IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) ||
		PI[playerid][data_MEMBER] != 7 && gangwar == 0 && !IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133))
		{
		    GetPlayerPos(playerid, Obmrok_x[playerid], Obmrok_y[playerid], Obmrok_z[playerid]);

			SpawnPlayerAC(playerid);
			SetPlayerHealth(playerid, 3);

			SetTimerEx("PlayerObmorokTwo", 200, false, "d", playerid);
			SetPVarInt(playerid, "PlayerObmorok", 1);

			SendClientMessagef(playerid, COLOR_TOMATO, "Игрок %s[%d] положил Вас в обморок", PI[killerid][data_NAME], killerid);
			return SendClientMessagef(killerid, COLOR_TOMATO, "Вы положили в обморок игрока %s[%d]", PI[playerid][data_NAME], playerid);
		}
	}
	PI[playerid][data_DEATH] = 3;
	SvMutePlayerEnable(playerid);
	SetTimerEx("DeathMute", 2700, false, "d", playerid);
	if(gangwar > 0)  {
		if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133) && IsPlayerToKvadrat(killerid, 1449.5,-1355, 1591.5, -1133)) {
			if(PI[playerid][data_MEMBER] == Command[0])  {
				if(PI[killerid][data_MEMBER] == Command[1]) {
					new gun = GetPlayerWeapon(killerid),kill[120];
					format(kill, sizeof kill, "Вы убили игрока %s[%d] (%s)", PI[playerid][data_NAME], playerid, weapon_names[gun]);
					cef_emit_event(killerid, "show-capture-kill", CEFSTR(kill));
					SendClientMessage(killerid, CY, "За участие в стреле Вы получите вознаграждение в следующий PayDay");
					PI[killerid][data_CAPTUREKILL]++;
					if(gun != 35 && gun != 36 && gun != 37 && gun != 38 && gun != 39 && gun != 40 && gun != 16)CommandKill[1]++;
					for(new i; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] && PI[i][data_MEMBER] <= 7) {
							cef_emit_event(i, "insert-to-kill", CEFSTR(PI[killerid][data_NAME]), CEFINT(gun), CEFSTR(PI[playerid][data_NAME]));
							cef_emit_event(i, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
						}
					}
					SetPVarInt(playerid, "deathcapture", 1);
					SetPlayerHealthAC(playerid, 176);
					cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы умерли"));
				}
			}
			if(PI[playerid][data_MEMBER] == Command[1]) {
				if(PI[killerid][data_MEMBER] == Command[0]) {
					new gun = GetPlayerWeapon(killerid),kill[120];
					format(kill, sizeof kill, "Вы убили игрока %s[%d] (%s)", PI[playerid][data_NAME], playerid, weapon_names[gun]);
					cef_emit_event(killerid, "show-capture-kill", CEFSTR(kill));
					SendClientMessage(killerid, CY, "За участие в стреле Вы получите вознаграждение в следующий PayDay");
					PI[killerid][data_CAPTUREKILL]++;
					CommandKill[0]++;
					for(new i; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] && PI[i][data_MEMBER] <= 7) {
							cef_emit_event(i, "insert-to-kill", CEFSTR(PI[killerid][data_NAME]), CEFINT(gun), CEFSTR(PI[playerid][data_NAME]));
							cef_emit_event(i, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
						}
					}
					SetPVarInt(playerid, "deathcapture", 1);
					SetPlayerHealthAC(playerid, 176);
					cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы умерли"));
				}
			}
		}
	}
	PI[playerid][data_MASK_M] = 0;
	if(animan{playerid}) animan{playerid} = false;
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY) CancelFlyMode(playerid);
	PI[playerid][data_schooltestlevel] = 0;
	if(GetPVarInt(playerid, "deathcapture") == 0) {
		if(PI[playerid][data_JAIL] == 0) {
			if(PI[playerid][data_DEMORGAN] == 0) {
				PI[playerid][data_HOSPITAL] = 1;
				cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы попали в больницу"));
			}
		}
		PI[playerid][data_HP] = 5;
	}
    if(playerid != 65535 && killerid != 65535) {
		if(IsPlayerCops(killerid) && PI[playerid][data_WANTED] != 0) {
			new str_3[256];
			format(str_3,sizeof(str_3),"[Всем постам] %s %s  арестовал подозреваемого %s", rang_police[PI[killerid][data_RANK]-1][frName],PI[killerid][data_NAME],PI[playerid][data_NAME]);
			SendFractionMessage(PI[killerid][data_MEMBER],CY,str_3);
			PI[playerid][data_JAIL] = 1;
	 		PI[playerid][data_JAILTIME] = 600*PI[playerid][data_WANTED];
	 		PI[playerid][data_WANTED] = 0;
			UnfreezePlayer(playerid);
			SetPlayerWantedLevel(playerid,PI[playerid][data_WANTED]);
			SetPlayerToSpawn(playerid);
			SetPlayerSpecialAction(playerid, 0);
			RemovePlayerAttachedObject(playerid, 5);
			DeletePVar(playerid,"PlayerCuffed");
			give_player_money(killerid,3000*PI[playerid][data_WANTED],"#78",22079);
			new pay[20];
			format(pay,sizeof(pay),"+%dР",3000*PI[playerid][data_WANTED]);
			cef_emit_event(killerid, "show-notify-no-img", CEFSTR("Премия за арест преступника"), CEFSTR("418055"), CEFSTR(pay));
		}
		else if(!IsPlayerCops(killerid) && PI[killerid][data_MEMBER] != 2 && PI[killerid][data_MEMBER] != 5 && PI[killerid][data_MEMBER] != 6 && PI[killerid][data_MEMBER] != 7) {
		    if(PI[killerid][data_WANTED] < 6) {
				PI[killerid][data_WANTED]++;
				SetPlayerWantedLevel(killerid,PI[killerid][data_WANTED]);
				SendClientMessagef(killerid,COLOR_TOMATO,"Ваш уровень розыска повышен за убийство игрока %s[%d]",PI[playerid][data_NAME], playerid);
				if(PI[killerid][data_ZAKON] > -100) PI[killerid][data_ZAKON]--;
			}
		}
	}
    ResetWeaponAll(playerid);
    SetPVarInt(playerid,"spawn_ac",1);
    SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
    if(GetPVarInt(playerid,"K_Times") > 1) return AC_Kick(playerid, 4);
	if(PI[playerid][data_LOGGED] == false) return AC_Kick(playerid, 5);
	if(killerid == playerid) return BanEx(playerid, "Gay Kill");
	if(!IsPlayerConnected(killerid) && killerid != 65535) return BanEx(playerid, "Lol Kill");
	new name[MAX_PLAYER_NAME];
	new str_1[256];
	if (killerid != INVALID_PLAYER_ID) {
		GetPlayerName(killerid, name, sizeof name);
		format(str_1, sizeof(str_1), "%s[%d]", name, killerid);
		SetPlayerName(killerid, str_1);
	}
	DeathNameTimer[playerid] = SetTimerEx("SetDeathNamePlayerid", 200, false, "d", playerid);
    DeathNameTimer[killerid] = SetTimerEx("SetDeathNameKillerid", 200, false, "d", killerid);
	new str_4[144];
 	GetPlayerName(playerid, name, sizeof name);
	format(str_4, sizeof(str_4), "%s[%d]", name, playerid);
	SetPlayerName(playerid, str_4);
 	foreach(new i:Player) if(PI[i][data_ADMLVL] >= 1) SendDeathMessageToPlayer(i, killerid, playerid, reason);
	return 1;
}
public OnVehicleSpawn(vehicleid) return DestroyVehicle(vehicleid);
public OnVehicleDeath(vehicleid, killerid) return RespawnVehicles();
public OnPlayerText(playerid, text[]) {
	if(PI[playerid][data_LOGGED] == false) return false;
	if(PI[playerid][data_MUTE] == 1) {
		SendClientMessage(playerid,CG,"Ваш чат заблокирован. Посмотреть время до разблокировки (/time)");
		return false;
	}
	if(CheckString(text)) PlayerGetsChatBan(playerid, text);
    antiflood[playerid]++;
    strmid(PI[playerid][data_CHAT_TEXT], text, 0, 128, 128);
 	NotReklama(playerid, text);
	if(GetPVarInt(playerid, "SpecBool") == 1) {
		new message[144];
	    format(message, sizeof(message), "[%s #%d] %s[%d]: %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,text);
	    SendAdminMessage(COLOR_BLUE, message);
	}
	if(PI[playerid][data_HIDEME] != 0) {
		new message[144];
  		format(message, sizeof(message), "Игровой Мастер: {FFFFFF}%s", text);
		ProxDetector(30.0, playerid, message, 0xDD3366FF, 0xDD3366FF, 0xDD3366FF, 0xDD3366FF ,0xDD3366FF);
		SetPlayerChatBubble(playerid, text, 0x81a4cdFF, 20.0, 3000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0) {
	 		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
			PI[playerid][data_ANIM] = true;
 		}
		return 0;
	}
	if(PI[playerid][data_CALL] != -1 && PI[PI[playerid][data_CALL]][data_CALL] == playerid) {
        SendClientMessagef(PI[playerid][data_CALL],0xFFFF33FF,"[Звонок]%s: %s",PI[playerid][data_NAME],text);
		SendClientMessagef(playerid,CG,"[Звонок] %s: %s",PI[PI[PI[playerid][data_CALL]][data_CALL]][data_NAME],text);
		return 0;
 	}
 	if(!strcmp(text,"xD",true)) {
		new message[144];
		format(message, sizeof(message), "%s валяется от смеха", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "валяется от смеха", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"(",true)) {
	    new message[144];
		format(message, sizeof(message), "%s грустит", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "грустит", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"((",true)) {
	    new message[144];
		format(message, sizeof(message), "%s сильно расстроился", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "сильно расстроился", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"чВ",true)) {
	    new message[144];
		format(message, sizeof(message), "%s валяется от смеха", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "валяется от смеха", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,")",true)) {
	    new message[144];
		format(message, sizeof(message), "%s улыбается", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "улыбается", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(!strcmp(text,"))",true)) {
	    new message[144];
		format(message, sizeof(message), "%s смеётся", PI[playerid][data_NAME]);
		ProxDetector(20.0, playerid, message, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
		SetPlayerChatBubble(playerid, "смеётся", 0xFF99CCFF, 20.0, 4000);
		return 0;
	}
	if(PI[playerid][data_MASK_M] == 1) {
		if(PI[playerid][data_VIP] != 0) {
			new chat_str[188];
			format(chat_str, sizeof(chat_str), "- %s {121212}(%s)[%d] {dc143c}[А+]", text, PI[playerid][data_NAME], playerid);
			ProxDetector(30.0, playerid, chat_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0 && GetPVarInt(playerid, "Sleep")) {
				if(GetPVarInt(playerid, "OglushEn") != 1) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
				if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
				PI[playerid][data_ANIM] = true;
			}
			return 0;
		}
		else {
			new chat_str[188];
			format(chat_str, sizeof(chat_str), "- %s {121212}(%s)[%d]", text, PI[playerid][data_NAME], playerid);
			ProxDetector(30.0, playerid, chat_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
			SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0 && GetPVarInt(playerid, "Sleep")) {
				if(GetPVarInt(playerid, "OglushEn") != 1) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
				if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
				PI[playerid][data_ANIM] = true;
			}
			return 0;
		}
	}
	if(PI[playerid][data_VIP] != 0) {
		new chat_str[188];
	    format(chat_str, sizeof(chat_str), "- %s %s(%s)[%d] {dc143c}[А+]", text, PLAYER_COLOR_CHAT[PI[playerid][data_MEMBER]][COLOR], PI[playerid][data_NAME], playerid);
		ProxDetector(30.0, playerid, chat_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
		SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0 && GetPVarInt(playerid, "Sleep")) {
	 	    if(GetPVarInt(playerid, "OglushEn") != 1) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
			if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
			PI[playerid][data_ANIM] = true;
	 	}
	 	return 0;
	}
	new chat_str[188];
    format(chat_str, sizeof(chat_str), "- %s %s(%s)[%d]", text, PLAYER_COLOR_CHAT[PI[playerid][data_MEMBER]][COLOR], PI[playerid][data_NAME], playerid);
	ProxDetector(30.0, playerid, chat_str, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE, COLOR_WHITE);
	SetPlayerChatBubble(playerid, text, 0x9db7ddFF, 20.0, 4000);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPVarInt(playerid,"UseAnim") == 0 && GetPVarInt(playerid, "Sleep")) {
 	    if(GetPVarInt(playerid, "OglushEn") != 1) ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,1,1,1,1);
		if(PI[playerid][data_ANIM] == false) SetTimerEx("anim_OFF", 1400, 0, "d", playerid);
		PI[playerid][data_ANIM] = true;
 	}
	return 0;
}
public OnPlayerCommandText(playerid, cmdtext[]) return 0;
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	if(vehicleid == ArendLodkaPlayer[playerid]) if(GetPVarInt(playerid, "Arenda_Lodki") != 0) return KillTimer(ArendLodkaPlayerTimer[playerid]);
	if(vehicleid == VelicArendaPlayer[playerid]) if(GetPVarInt(playerid, "Arenda_Velica") != 0) return KillTimer(VelicArendaPlayerTimer[playerid]);
    if(IsPlayerAttachedObjectSlotUsed(playerid,1) && IsPlayerAttachedObjectSlotUsed(playerid,2) && PI[playerid][data_START_JOB] == 2) {
		SendClientMessage(playerid,COLOR_AC,"Вы разбили тележку");
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		DisablePlayerCheckpoint(playerid);
		ClearAnim(playerid);
		SetPVarInt(playerid, "tovar", 0);
		DeletePVar(playerid,"ac_timer");
  		switch(random(4)) {
			case 0: SetPlayerCheckpoint(playerid, 2343.2356,-618.4960,12.0020, 2.0);
			case 1: SetPlayerCheckpoint(playerid, 2350.2246,-627.0235,12.0020, 2.0);
			case 2: SetPlayerCheckpoint(playerid, 2330.1829,-614.6138,12.0020, 2.0);
			case 3: SetPlayerCheckpoint(playerid, 2324.1658,-621.3287,12.0020, 2.0);
		}
 	}
	if(IsPlayerAttachedObjectSlotUsed(playerid,1) && PI[playerid][data_START_JOB] == 1) {
		SendClientMessage(playerid,COLOR_AC,"Вы уронили товар");
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		DisablePlayerCheckpoint(playerid);
		SetPVarInt(playerid, "tovar", 0);
		DeletePVar(playerid,"ac_timer");
		ClearAnimations(playerid);
		switch(random(2)) {
			case 0: SetPlayerCheckpoint(playerid, 2719.6956,-2325.5881,17.9660, 2.0);
			case 1: SetPlayerCheckpoint(playerid, 2742.4841,-2357.4810,17.9660, 2.0);
		}
 	}
	if(IsPlayerAttachedObjectSlotUsed(playerid,1) && PI[playerid][data_START_JOB] == 5) {
	    SendClientMessage(playerid,COLOR_AC,"Вы уронили ящик");
		DisablePlayerCheckpoint(playerid);
		ClearAnim(playerid);
		SetPVarInt(playerid, "process", 0);
		SetPVarInt(playerid, "tovar", 0);
		DeletePVar(playerid,"ac_timer");
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
		new pos = random(13);
  		SetPVarInt(playerid, "ogorod_pos", pos);
		SetPlayerCheckpoint(playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2], 2.0);
	}
	if(PI[playerid][data_START_JOB] == 4) {
		cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Нет доступа"));
		new Float:player_posX, Float:player_posY, Float:player_posZ;
		GetPlayerPos(playerid, player_posX, player_posY, player_posZ);
		SetPlayerPos(playerid,player_posX, player_posY, player_posZ+0.1);
	}
 	if(IsPlayerAttachedObjectSlotUsed(playerid,3) && PI[playerid][data_START_JOB] == 3) {
		SendClientMessage(playerid,COLOR_AC,"Вы разбили тележку");
		if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
		if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
		SetPlayerAttachedObject(playerid,1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
		DisablePlayerCheckpoint(playerid);
		SetPVarInt(playerid, "tovar", 0);
		DeletePVar(playerid,"ac_timer");
		new pos = random(5);
		SetPVarInt(playerid, "karier_pos", pos);
		SetPlayerCheckpoint(playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2], 2.0);
	}
	return 1;
}
callback: ArendLodkaDelete(playerid, vehicleid) {
	SendClientMessage(playerid, CG, "Вы не вернулись в лодку в течении 90 секунд, она была отбуксирована");
	DestroyVehicle(ArendLodkaPlayer[playerid]);
	DeletePVar(playerid, "Arenda_Lodki");
}
callback: VelicArendaDelete(playerid, vehicleid) {
	SendClientMessage(playerid, CG, "Вы не сели на велосепед/скутер в течении 90 секунд, он был отбуксирован");
	DestroyVehicle(VelicArendaPlayer[playerid]);
	return DeletePVar(playerid, "Arenda_Velica");
}
public OnPlayerExitVehicle(playerid, vehicleid) {
	if(GetPVarInt(playerid, "Arenda_Lodki") != 0) {
	    if(vehicleid == ArendLodkaPlayer[playerid]) {
			SendClientMessage(playerid, CG, "У Вас есть 90 секунд, чтобы вернуться в лодку. Иначе аренда завершится");
			ArendLodkaPlayerTimer[playerid] = SetTimerEx("ArendLodkaDelete", 90000, false, "i", playerid);
		}
	}
	if(GetPVarInt(playerid, "Arenda_Velica") != 0) {
	    if(vehicleid == VelicArendaPlayer[playerid]) {
			SendClientMessage(playerid, CG, "У Вас есть 90 секунд, чтобы сесть на велосипед/скутер. Иначе аренда завершится");
			VelicArendaPlayerTimer[playerid] = SetTimerEx("VelicArendaDelete", 90000, false, "i", playerid);
		}
	}
	if(GetPVarInt(playerid, "dalnaboy_start") != 0) {
		PI[playerid][data_START_JOB] = 0;
		SendClientMessage(playerid, 0xffcd00FF, "Вы покинули транспорт, работа была завершена принудительно!");
		DestroyVehicle(dalnoboy_trayler[playerid]);
        DestroyVehicle(dalnoboy_car[playerid]);
        DeletePVar(playerid, "dalnaboy_start");
        DisablePlayerRaceCheckpoint(playerid);
        KillTimer(dalnaboy_check_pricep[playerid]);
        return DisableRemoteVehicleCollisions(playerid, 0);
	}
	if(GetPVarInt(playerid, "AvtoBus_start") != 0) {
		SendClientMessage(playerid, 0xffcd00FF, "Вы покинули транспорт, работа была завершена принудительно!");
        DestroyVehicle(GetPlayerVehicleID(playerid));
        SetPlayerPosAC(playerid, 1770.7213,2262.4343,15.5700);
        DeletePVar(playerid, "AvtoBus_start");
        return DisablePlayerRaceCheckpoint(playerid);
	}
    GetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate) {
    new carid = GetPlayerVehicleID(playerid);
    if(newstate == PLAYER_STATE_DRIVER) {
		new Weap[2];
        GetPlayerWeaponData(playerid, 4, Weap[0], Weap[1]);
        SetPlayerArmedWeapon(playerid, Weap[0]);
	    if(GetVehicleModel(carid) == 510) HidePlayerSpeedometer(playerid);
		else ShowPlayerSpeedometer(playerid);
	}
    if(newstate == PLAYER_STATE_ONFOOT) HidePlayerSpeedometer(playerid);
    if(newstate == PLAYER_STATE_ONFOOT || newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER) {
 	}
	if(oldstate == 3 && newstate == 1) {
        for(new b = 0; b < TotalJB; b++) {
            if(carid == JB_DATA[b][data_VEH_JOB][0] ||
			carid == JB_DATA[b][data_VEH_JOB][1] ||
			carid == JB_DATA[b][data_VEH_JOB][2] ||
			carid == JB_DATA[b][data_VEH_JOB][3] ||
			carid == JB_DATA[b][data_VEH_JOB][4]) PI[playerid][data_BUSCAR] = INVALID_VEHICLE_ID;
        }

    }
    else if(oldstate == 1 && newstate == 3) {
        for(new b = 0; b < TotalJB; b++) {
            if(carid == JB_DATA[b][data_VEH_JOB][0] ||
			carid == JB_DATA[b][data_VEH_JOB][1] ||
			carid == JB_DATA[b][data_VEH_JOB][2] ||
			carid == JB_DATA[b][data_VEH_JOB][3] ||
			carid == JB_DATA[b][data_VEH_JOB][4]) {
			    if(PlayerToPoint(250.0, playerid, 2518.826171, -2145.580322, 21.816497)) PI[playerid][data_BUSCAR] = carid;
			}
        }
	}
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        if(PI[playerid][data_LICB] == 0 && PI[playerid][data_ASH_TEST] == 0) {
            if(!IsABMX(carid)) {
				SendClientMessage(playerid, -1, "У Вас нет водитеських прав");
             	RemovePlayerFromVehicle(playerid);
 			}
        }
        if(carid == gov_car[0] || carid == gov_car[1] || carid == gov_car[2] || carid == gov_car[3] || carid == gov_car[4] ||
		carid == gov_car[5] || carid == gov_car[6] || carid == gov_car[7]) {
	        if(PI[playerid][data_MEMBER] != 1) {
	            SendClientMessage(playerid,CG,"Данный транспорт Вам недоступен");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == army_car[0]) {
	        if(PI[playerid][data_MEMBER] != 2) {
	        	if(PI[playerid][data_RANK] < 2) {
					SendClientMessage(playerid, CG, "Этот транспорт можно использовать с 2 ранга");
             		RemovePlayerFromVehicleAC(playerid);
             		return 1;
				}
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Войсковая часть");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == army_car[1] ||
		carid == army_car[2] || carid == army_car[3] || carid == army_car[4] || carid == army_car[5] ||
		carid == army_car[6] || carid == army_car[7] || carid == army_car[8]) {
	        if(PI[playerid][data_MEMBER] != 2) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Кавказцы");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == police_car[0] || carid == police_car[1] ||carid == police_car[2] ||
		carid == police_car[3] || carid == police_car[4] || carid == police_car[5] || carid == police_car[6] ||
		carid == police_car[7]) {
	        if(PI[playerid][data_MEMBER] != 3) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Кавказцы");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == hospital_car[0] || carid == hospital_car[1] || carid == hospital_car[2] || carid == hospital_car[3] ||
		carid == hospital_car[4] || carid == hospital_car[5] || carid == hospital_car[6] || carid == hospital_car[7]) {
	        if(PI[playerid][data_MEMBER] != 4) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации БЦРБ");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == rostov_car[0] || carid == rostov_car[1] || carid == rostov_car[2] || carid == rostov_car[3]
		|| carid == rostov_car[4] || carid == rostov_car[5] || carid == rostov_car[6] || carid == rostov_car[7]) {
	        if(PI[playerid][data_MEMBER] != 5) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Скинхеды");
             	RemovePlayerFromVehicleAC(playerid);
				return 1;
	        }
	    }
	    if(carid == rostov_car[3] || carid == rostov_car[4] || carid == rostov_car[5] || carid == rostov_car[6]) {
	        if(PI[playerid][data_RANK] < 5) {
	            SendClientMessage(playerid,CG,"Этот транспорт можно использовать с 5 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == rostov_car[7]) {
	        if(PI[playerid][data_RANK] < 9) {
	            SendClientMessage(playerid,CG,"Данный транспорт доступен с 9 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == maykop_car[0] || carid == maykop_car[1] || carid == maykop_car[2] || carid == maykop_car[3]
		|| carid == maykop_car[4] || carid == maykop_car[5] || carid == maykop_car[6] || carid == maykop_car[7]) {
  			if(PI[playerid][data_MEMBER] != 6) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Гопота");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == maykop_car[3] || carid == maykop_car[4] || carid == maykop_car[5] || carid == maykop_car[6]) {
	        if(PI[playerid][data_RANK] < 5) {
	            SendClientMessage(playerid,CG,"Этот транспорт можно использовать с 5 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == maykop_car[7]) {
	        if(PI[playerid][data_RANK] < 9) {
	            SendClientMessage(playerid,CG,"Этот транспорт можно использовать с 9 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == odessa_car[0] || carid == odessa_car[1] || carid == odessa_car[2] || carid == odessa_car[3]
		|| carid == odessa_car[4] || carid == odessa_car[5] || carid == odessa_car[6] || carid == odessa_car[7]) {
	        if(PI[playerid][data_MEMBER] != 7) {
	            SendClientMessage(playerid,CG,"Этот транспорт пренадлежит организации Кавказцы");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == odessa_car[3] || carid == odessa_car[4] || carid == odessa_car[5] || carid == odessa_car[6]) {
	        if(PI[playerid][data_RANK] < 5) {
	            SendClientMessage(playerid,CG,"Этот транспорт можно использовать с 5 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
	    if(carid == odessa_car[7]) {
	        if(PI[playerid][data_RANK] < 9) {
	            SendClientMessage(playerid,CG,"Этот транспорт можно использовать с 9 ранга");
             	return RemovePlayerFromVehicleAC(playerid);
	        }
	    }
    }
	return 1;
}
public OnPlayerEnterCheckpoint(playerid) {
    if(GetPVarInt(playerid, "Gjob") == 1) {
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
		SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
		SendClientMessage(playerid, 0xffcd00FF, "Следуйте к вашему рабочему столу.");
		new gcheck = random(6);
		if(gcheck == 0) SetPlayerCheckpoint(playerid,2744.1,-2180.4,21.9,1.5);
		if(gcheck == 1) SetPlayerCheckpoint(playerid,2752.6,-2185.5,21.9,1.5);
		if(gcheck == 2) SetPlayerCheckpoint(playerid,2748.5,-2193.5,21.9,1.5);
		if(gcheck == 3) SetPlayerCheckpoint(playerid,2744.3,-2190.2,21.9,1.5);
		if(gcheck == 4) SetPlayerCheckpoint(playerid,2743.1,-2200.8,21.9,1.5);
		return SetPVarInt(playerid, "Gjob",2);
	}
	if(GetPVarInt(playerid, "Gjob") == 2) {
		DisablePlayerCheckpoint(playerid);
		RemovePlayerAttachedObject(playerid,3);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "BUDDY", "buddy_reload", 4.1, 1, 1, 1, 1, 0);
		SetPlayerAttachedObject(playerid,3,355,14,0.401943,0.011442,0.010348,106.050292,330.509094,3.293162,1.000000,1.000000,1.000000);
		return SetTimerEx("Gunjobanim", 7000, false, "i", playerid);
	}
	if(GetPVarInt(playerid, "Gjob") == 3) {
		RemovePlayerAttachedObject(playerid,3);
		ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
		SetPVarInt(playerid,"GUN",GetPVarInt(playerid,"GUN")+1);
		SendClientMessagef(playerid,0xffcd00FF,"Оружия собрано: {3377cc}%d ед.",GetPVarInt(playerid,"GUN"));
		SetPVarInt(playerid,"Gjob",1);
		new mcheck = random(1);
		if(mcheck == 0) SetPlayerCheckpoint(playerid,2757.6001000,-2182.8000500,21.8000000,1.5);
	}
	if(PlayerToPoint(5.0, playerid, GetPVarFloat(playerid, "bomb_pos_x"),GetPVarFloat(playerid, "bomb_pos_y"),GetPVarFloat(playerid, "bomb_pos_z"))) {
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "bomb_pos_x");
	    DeletePVar(playerid, "bomb_pos_y");
	    DeletePVar(playerid, "bomb_pos_z");
		bombplayer[playerid] = 0;
		ApplyAnimation(playerid,"BOMBER","BOM_PLANT",4.0, 0,0,0,0,0);
		SendClientMessage(playerid,CY,"Вы заминировали забор. Он взорвётся через {3377cc}20 сек{FFFF00}, отойдите от него подальше!");
		SetTimerEx("BombVCH", 20000, false, "i", playerid);
	}
    if(PlayerToPoint(5.0, playerid, GetPVarFloat(playerid, "gps_pos_x"),GetPVarFloat(playerid, "gps_pos_y"),GetPVarFloat(playerid, "gps_pos_z"))) {
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid, "gps_pos_x");
	    DeletePVar(playerid, "gps_pos_y");
	    DeletePVar(playerid, "gps_pos_z");
     	return SendClientMessage(playerid,0x006400AA,"Вы достигли точки назначения");
	}
	if(GetPVarInt(playerid,"job_bus") != 0 && PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID) {
	    new b = GetPVarInt(playerid,"job_bus")-1;
		if(PlayerToPoint(5.0, playerid, 2518.826171, -2145.580322, 21.816497)) {
			SetPlayerCheckpoint(playerid, JB_DATA[b][data_BUS_POS][0],JB_DATA[b][data_BUS_POS][1], JB_DATA[b][data_BUS_POS][2], 5.0);
			return SendClientMessage(playerid,0xffcd00FF,"Дождитесь пока к Вам сядут пассажиры и отправляйтесь обратно на предприятие  ({3377cc}на карте отмечена красная метка{ffcd00})");
		}
		if(PlayerToPoint(5.0, playerid, JB_DATA[b][data_BUS_POS][0],JB_DATA[b][data_BUS_POS][1], JB_DATA[b][data_BUS_POS][2])) {
		    new chel, money;
		    for(new i = 0; i < MAX_PLAYERS; i++) {
		        if(!IsPlayerConnected(i) || playerid == i) continue;
		        if(PI[i][data_BUSCAR] == PI[playerid][data_RENTJOB]) {
					chel++;
					PI[i][data_BUSCAR] = INVALID_VEHICLE_ID;
					SendClientMessage(i,0xffcd00FF, "Вас привезли на предприятие. Чтобы устроиться на работу подойдите к {3377cc}синей майке");
				}
		    }
		    SetPVarInt(playerid, "all_tovar", GetPVarInt(playerid, "all_tovar")+chel);
			money = GetPVarInt(playerid, "all_tovar") * JB_DATA[b][data_BUS_MONEY];
		  	SendClientMessagef(playerid,0xffcd00FF,"Доставлено новых рабочих: {3377cc}%d человек{ffcd00}. Всего заработано: {3377cc}%d рублей",chel, money);
			SetPlayerCheckpoint(playerid, 2518.826171, -2145.580322, 21.816497, 5.0);
		  	return SendClientMessage(playerid,0xffcd00FF,"Отправляйтесь в Южный за новыми рабочими ({3377cc}на карте отмечена красная метка{ffcd00})");
		}
	}
    if(PI[playerid][data_START_JOB] == 1) {
	    if(PlayerToPoint(2.0, playerid, 2500.0134, -652.8276, 12.2740) && GetPVarInt(playerid,"tovar") == 1) {
		    SetPVarInt(playerid,"ac_timer", 4);
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
			DisablePlayerCheckpoint(playerid);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	       	SetPVarInt(playerid,"all_tovar",GetPVarInt(playerid,"all_tovar")+1);
	       	SetPVarInt(playerid,"tovar",0);
			SendClientMessagef(playerid,0xffcd00FF,"Вы доставили товар на склад. Всего доставлено: {3377cc}%d шт",GetPVarInt(playerid,"all_tovar"));
			switch(random(2)) {
				case 0: SetPlayerCheckpoint(playerid, 2719.6956,-2325.5881,17.9660, 2.0);
			 	case 1: SetPlayerCheckpoint(playerid, 2742.4841,-2357.4810,17.9660, 2.0);
			}
			return 1;
		}
	    if(PlayerToPoint(2.0, playerid, 2719.6956,-2325.5881,17.9660) || PlayerToPoint(2.0, playerid, 2742.4841,-2357.4810,17.9660)) {
		    SetPVarInt(playerid,"ac_timer",4);
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
			DisablePlayerCheckpoint(playerid);
	       	SetPVarInt(playerid,"tovar",1);
 			SetPlayerAttachedObject(playerid,1, 1279,5,0.052000,0.044999,0.192999,-76.999969,-3.999996,104.099876,0.576000,0.666999,0.717000);
			SetPlayerCheckpoint(playerid, 2500.0134, -652.8276, 12.2740, 2.0);
	        return 1;
		}
	}
	if(PI[playerid][data_START_JOB] == 2) {
	    if(PlayerToPoint(2.0, playerid, 2377.9910,-597.2129,12.1172) && GetPVarInt(playerid,"tovar") != 0) {
		    SetPVarInt(playerid,"ac_timer",4);
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    JB_DATA[0][data_RESURS] += GetPVarInt(playerid,"tovar");
		    JB_DATA[0][data_SKLAD] += GetPVarInt(playerid,"tovar");
			DisablePlayerCheckpoint(playerid);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	       	SetPVarInt(playerid,"all_tovar",GetPVarInt(playerid,"all_tovar")+GetPVarInt(playerid,"tovar"));
			SendClientMessagef(playerid,0xffcd00FF,"Вы доставили {3377cc}%d кг{ffcd00}. древесины на склад. Всего доставлено: {3377cc}%d кг",GetPVarInt(playerid,"tovar"),GetPVarInt(playerid,"all_tovar"));
			SetPVarInt(playerid,"tovar",0);
			switch(random(4)) {
				case 0: SetPlayerCheckpoint(playerid, 2343.2356,-618.4960,12.0020, 2.0);
			 	case 1: SetPlayerCheckpoint(playerid, 2350.2246,-627.0235,12.0020, 2.0);
			 	case 2: SetPlayerCheckpoint(playerid, 2330.1829,-614.6138,12.0020, 2.0);
				case 3: SetPlayerCheckpoint(playerid, 2324.1658,-621.3287,12.0020, 2.0);
		 	}
    		ClearAnim(playerid);
    		return 1;
		}
	    if(PlayerToPoint(2.0, playerid, 2343.2356,-618.4960,12.0020) ||
		PlayerToPoint(2.0, playerid, 2350.2246,-627.0235,12.0020) ||
		PlayerToPoint(2.0, playerid, 2330.1829,-614.6138,12.0020) ||
		PlayerToPoint(2.0, playerid, 2324.1658,-621.3287,12.0020)) {
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    ClearAnimations(playerid);
			DisablePlayerCheckpoint(playerid);
			GiveWeapon(playerid, 9, 1);
	    	ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.1,1,0,0,1,1111000);
	    	PI[playerid][data_DREV_TIMER_ID] = SetTimerEx("DrevLoaded",5000,false,"i",playerid);
			SetPVarInt(playerid, "process", 1);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid, "job_x",x);
			SetPVarFloat(playerid, "job_y",y);
			SetPVarFloat(playerid, "job_z",z);
			return 1;
		}
	}
	if(PI[playerid][data_START_JOB] == 3) {
	    if(PlayerToPoint(2.0, playerid, -2665.7866,263.4012,10.9310)) {
		    SetPVarInt(playerid,"ac_timer",1);
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    JB_DATA[1][data_RESURS] += GetPVarInt(playerid,"tovar");
		    JB_DATA[1][data_SKLAD] += GetPVarInt(playerid,"tovar");
			ClearAnim(playerid);
			SetPVarInt(playerid, "all_tovar", GetPVarInt(playerid, "all_tovar")+GetPVarInt(playerid, "tovar"));
			SendClientMessagef(playerid, 0xffcd00FF, "Руда доставлена на склад. Всего доставлено: {3377cc}%d ед {ffcd00}сырья",GetPVarInt(playerid, "all_tovar"));
			SetPVarInt(playerid, "tovar", 0);
	        if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
	        if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
	        SetPlayerAttachedObject(playerid,1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
	        DisablePlayerCheckpoint(playerid);
	        new pos = random(5);
	        SetPVarInt(playerid, "karier_pos", pos);
	        SetPlayerCheckpoint(playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2], 2.0);
	        return 1;
	   	}
		new pos = GetPVarInt(playerid, "karier_pos");
	   	if(PlayerToPoint(2.0, playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2])) {
	   	    if(IsPlayerInAnyVehicle(playerid)) return 1;
	   	    ClearAnimations(playerid);
	   	    ApplyAnimation(playerid, "BASEBALL", "Bat_4", 4.1, 1, 0, 0, 0, 0);
	       	PI[playerid][data_SHAHTA_TIMER_ID] = SetTimerEx("KamenLoaded",5000,false,"i",playerid);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "process", 1);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid, "job_x",x);
			SetPVarFloat(playerid, "job_y",y);
			SetPVarFloat(playerid, "job_z",z);
			return 1;
	   	}
	}
	if(PI[playerid][data_START_JOB] == 4)
	{
	    if(PlayerToPoint(2.0, playerid, 1996.3546,1008.5398,14.9956))
		{
		    SetPVarInt(playerid,"ac_timer",3);
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    JB_DATA[2][data_RESURS] += 50;
		    JB_DATA[2][data_SKLAD] += 50;
			ClearAnim(playerid);
			SetPlayerSpecialAction(playerid, 0);
			SetPVarInt(playerid, "all_tovar", GetPVarInt(playerid, "all_tovar")+GetPVarInt(playerid, "tovar"));
			SendClientMessagef(playerid, 0xffcd00FF, "Вы доставили ящик на склад. Всего доставлено:{3377cc} %d шт",GetPVarInt(playerid, "all_tovar"));
			SetPVarInt(playerid, "tovar", 0);
	        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	        DisablePlayerCheckpoint(playerid);
	        new pos = random(7);
	        SetPVarInt(playerid, "yablo_pos", pos);
	        SetPlayerCheckpoint(playerid, yablo_pos[pos][0], yablo_pos[pos][1], yablo_pos[pos][2], 2.0);
	        return 1;
	   	}
		new pos = GetPVarInt(playerid, "yablo_pos");
	   	if(PlayerToPoint(2.0, playerid, yablo_pos[pos][0], yablo_pos[pos][1], yablo_pos[pos][2])) {
	   	    if(IsPlayerInAnyVehicle(playerid)) return 1;
	   	    ClearAnimations(playerid);
	   	    SetPVarInt(playerid, "yablo_check",0);
	       	PI[playerid][data_YABLO_TIMER_ID] = SetTimerEx("YabloLoaded",1000,true,"i",playerid);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "process", 1);
			SendClientMessage(playerid, 0xffcd00FF, "Вы начали сбор мусора, дождитесь сообщения о доставке");
			ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid, "job_x",x);
			SetPVarFloat(playerid, "job_y",y);
			SetPVarFloat(playerid, "job_z",z);
			return 1;
	   	}
	}
    if(PI[playerid][data_START_JOB] == 5) {
	    if(PlayerToPoint(2.0, playerid, 2121.9841,1816.7822,12.1923)) {
		    if(IsPlayerInAnyVehicle(playerid)) return 1;
		    SetPVarInt(playerid,"ac_timer",1);
			ClearAnim(playerid);
			SetPlayerSpecialAction(playerid, 0);
			SetPVarInt(playerid, "all_tovar", GetPVarInt(playerid, "all_tovar")+GetPVarInt(playerid, "tovar"));
			SendClientMessagef(playerid, 0xffcd00FF, "Вы доставили ящик на склад. Всего доставлено: {3377cc}%d шт",GetPVarInt(playerid, "all_tovar"));
			SetPVarInt(playerid, "tovar", 0);
	        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
	        DisablePlayerCheckpoint(playerid);
	        new pos = random(4);
	        SetPVarInt(playerid, "ogorod_pos", pos);
	        SetPlayerCheckpoint(playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2], 2.0);
	        return 1;
	   	}
		new pos = GetPVarInt(playerid, "ogorod_pos");
	   	if(PlayerToPoint(2.0, playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2])) {
	   	    if(IsPlayerInAnyVehicle(playerid)) return 1;
	   	    ClearAnimations(playerid);
	   	    ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
	       	PI[playerid][data_OGOROD_TIMER_ID] = SetTimerEx("OgorodLoaded",5000,false,"i",playerid);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "process", 1);
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			SetPVarFloat(playerid, "job_x",x);
			SetPVarFloat(playerid, "job_y",y);
			SetPVarFloat(playerid, "job_z",z);
			return 1;
	   	}
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid) return 1;
public OnPlayerEnterRaceCheckpoint(playerid) {
	if(PlayerToPoint(10.0, playerid, -2351.3767,258.0399,23.6756) ||
	PlayerToPoint(10.0, playerid, 2978.3062,-720.5325,12.7500) ||
	PlayerToPoint(10.0, playerid, 2325.0569,-264.0050,1.6073) ||
	PlayerToPoint(10.0, playerid, 1976.2108,1652.2156,15.9200) ||
	PlayerToPoint(10.0, playerid, -442.7106,-1575.0638,40.9470)) {
		if(GetPVarInt(playerid, "dalnaboy_start") != 0) {
		    if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, 0xffcd00FF, "Вы не доставили прицеп");
			SendClientMessage(playerid, 0xffcd00FF, "Вы доставили груз, работа была завершена.");
			DestroyVehicle(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
            DestroyVehicle(GetPlayerVehicleID(playerid));
            give_player_money(playerid, 95000,"#71",4066);
            DeletePVar(playerid, "dalnaboy_start");
            DisablePlayerRaceCheckpoint(playerid);
        	KillTimer(dalnaboy_check_pricep[playerid]);
	        return 1;
		}
	}
	if(PlayerToPoint(4.0, playerid, 1839.5603,2041.6285,15.6350)) {
		if(GetPVarInt(playerid, "AvtoBus_start") != 0) {
			SendClientMessage(playerid, 0xf4b400FF, "Вы приехали на остановку '{3377cc}Банк{f4b400}', подождите входа пассажиров.");
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 0, 1873.4270,2329.9841,15.7010, 1873.4270,2329.9841,15.7010, 4);
		}
	}
	if(PlayerToPoint(4.0, playerid, 1873.4270,2329.9841,15.7010)) {
		if(GetPVarInt(playerid, "AvtoBus_start") != 0) {
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 0, 1840.1328,2506.4243,15.4144,1840.1328,2506.4243,15.4144, 4);
		}
 	}
	if(PlayerToPoint(4.0, playerid, 1840.1328,2506.4243,15.4144)) {
		if(GetPVarInt(playerid, "AvtoBus_start") != 0) {
			SendClientMessage(playerid, 0xf4b400FF, "Вы приехали на остановку '{3377cc}Автовокзал{f4b400}', подождите входа пассажиров.");
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 0, 2093.1394,1779.9329,11.7994, 2093.1394,1779.9329,11.7994, 4);
		}
 	}
 	if(PlayerToPoint(4.0, playerid, 2093.1394,1779.9329,11.7994)) {
		if(GetPVarInt(playerid, "AvtoBus_start") != 0) {
			SendClientMessage(playerid, 0xf4b400FF, "Вы приехали на остановку '{3377cc}Ферма{f4b400}', подождите входа пассажиров и отправляйтесь сдать автобус.");
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 1, 1784.1431,2259.1089,15.7841, 1784.1431,2259.1089,15.7841, 4);
		}
 	}
 	if(PlayerToPoint(4.0, playerid, 1784.1431,2259.1089,15.7841)) {
		if(GetPVarInt(playerid, "AvtoBus_start") != 0) {

			SendClientMessage(playerid, 0xf4b400FF, "Вы завершили рабочий день (Водитель автобуса)");
			SendClientMessage(playerid, 0xf4b400FF, "Всего заработано: {ffa800}34800 руб");
            DestroyVehicle(GetPlayerVehicleID(playerid));
            give_player_money(playerid, 34800,"#71",4106);
            DeletePVar(playerid, "AvtoBus_start");
			DisablePlayerRaceCheckpoint(playerid);
		}
 	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) return 1;
public OnRconCommand(cmd[]) return 1;
public OnPlayerRequestSpawn(playerid) {
	if(GetPVarInt(playerid,"player_auth") == 0) return Kick(playerid);
	return 1;
}
public OnObjectMoved(objectid) {
	if(objectid == samolet) {
	    if(samoletletit == 0) {
	    	MoveObject(samolet,  2153.00, -2808.01, 252.78, 120000,  0.00, 0.00, 180.0);
	    	samoletletit = 1;
	    }
	    else {
	    	MoveObject(samolet,  2085.67, 2749.81, 252.78, 120000,  0.00, 0.00, 0.0);
	    	samoletletit = 0;
	    }
	}
	return 1;
}
public OnPlayerObjectMoved(playerid, objectid) return 1;
public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
    if(!IsValidDynamicPickup(pickupid) || pPickupID[playerid]) return 0;
    pPickupID[playerid] = pickupid;
    SetPVarInt(playerid,"pickup",pickupid);
	for(new g = 0; g < TotalBusiness; g++) {
		if(pickupid == BUSINESS_DATA[g][data_PICKENTER]) {
			BUSINESS_DATA[g][data_CLIENT]++;
			SetPVarInt(playerid, "business", g);
			if(BUSINESS_DATA[g][data_TYPE] == 1) return 1;
			if(BUSINESS_DATA[g][data_LOCK] == 0 || !strcmp(PI[playerid][data_NAME],BUSINESS_DATA[g][data_OWNER],true)) {
                if(BUSINESS_DATA[g][data_TYPE] == 2) {
					SetPlayerFacingAngle(playerid, 178.0463);
       				SetCameraBehindPlayer(playerid);
					SetPlayerPosAC(playerid,578.4819,84.4839,382.6700);
				}
   				if(BUSINESS_DATA[g][data_TYPE] == 3) SetPlayerPosAC(playerid,204.5834,870.3509,1019.1500), SetCameraBehindPlayer(playerid);
				if(BUSINESS_DATA[g][data_TYPE] == 6) {
					if(GetPVarInt(playerid,"kdpickup") > gettime()) return 1;
					return ShowPlayerDialog(playerid, dialog_ASALON, DIALOG_STYLE_MSGBOX, "{db2751}Автосалон", "Вы действительно хотите попасть в автосалон?", "Да", "Нет");
				}
				else {
					SetPlayerInterior(playerid,BUSINESS_DATA[g][data_INT]);
					SetPlayerVirtualWorld(playerid,BUSINESS_DATA[g][data_VW]);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				}
            }
            else cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Этот бизенес закрыт"));
        }
        if(pickupid == BUSINESS_DATA[g][data_PICKEXIT]) {
	        SetPlayerPosAC(playerid,BUSINESS_DATA[g][data_TPEXITX], BUSINESS_DATA[g][data_TPEXITY], BUSINESS_DATA[g][data_TPEXITZ]);
	        SetPlayerFacingAngle(playerid, BUSINESS_DATA[g][data_ANGLE]);
	        SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid,0);
            SetPlayerVirtualWorld(playerid,0);
			DeletePVar(playerid, "business");
		}
    }
	for(new kv = 0; kv < TotalKV; kv++) {
		if(pickupid == KV_DATA[kv][data_PICK_ENTER]) {
	        SetPVarInt(playerid, "padik", kv);
			SetPlayerPosAC(playerid, 36.0538,1923.8887,1113.7346);
			SetPlayerFacingAngle(playerid, 179.8331);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]);
			SetCameraBehindPlayer(playerid);
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		}
		if(pickupid == KV_DATA[kv][data_PICK_EXIT]) {
            SetPlayerPosAC(playerid, KV_DATA[kv][data_CAR_POSX], KV_DATA[kv][data_CAR_POSY], KV_DATA[kv][data_CAR_POSZ]);
			SetPlayerFacingAngle(playerid, KV_DATA[kv][data_CAR_POSA]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		}
	}
	if(pickupid == metall_buy) ShowPlayerDialog(playerid, dialog_METALLBUY, DIALOG_STYLE_INPUT, "{f00e5d}Покупка металла", "Введите колличество металла, которое Вы хотите купить:\n{f00e5d}Стоимость 1 кг: 30 руб", "Купить", "Закрыть");
	if(pickupid == drugs_buy) ShowPlayerDialog(playerid, dialog_DRUGBUY, DIALOG_STYLE_INPUT, "{f00e5d}Покупка веществ", "Введите колличество веществ, которое Вы хотите купить:\n{f00e5d}Стоимость 1 г: 50 руб", "Купить", "Закрыть");
	if(pickupid == CRBPickCard) {
		if(PI[playerid][data_MEDCARD] != 0) return SendClientMessage(playerid, CG, "У Вас уже есть медицинская карта");
		ShowPlayerDialog(playerid, dialog_CARDBUY, DIALOG_STYLE_MSGBOX, "{F00E5D}Покупка медицинской карты", "Вы действительно хотите преобрести медицинскую карту за {f00e5d}750 рублей?", "Да", "Нет");
	}
	if(pickupid == metall_give) {
		if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, CG, "Склад доступен только военным");
		ShowPlayerDialog(playerid, dialog_METALLGIVE, DIALOG_STYLE_INPUT, "{f00e5d}Получение металла", "Введите колличество металла для выдачи в поле ниже", "Купить", "Закрыть");
	}
	if(pickupid == myaso_sell) {
	    if(PI[playerid][data_Myaso] <= 0) return SendClientMessage(playerid, CG, "У Вас нет мяса на руках");
		new str_3[185];
		format(str_3,sizeof(str_3),"Вы хотите продать %d кг мяса за %d рублей?", PI[playerid][data_Myaso], PI[playerid][data_Myaso]*6500);
		ShowPlayerDialog(playerid, dialog_MYASOSELL, DIALOG_STYLE_MSGBOX, "{f00e5d}Мясокомбинат", str_3, "Продать", "Закрыть");
	}
    if(pickupid == gunjob) {
		if(GetPVarInt(playerid, "Gunjob") == 0) ShowPlayerDialog(playerid, D_GUNJOB, 0, "Сборщик оружия", "Вы действительно хотите начать работу?", "Да", "Нет");
		else ShowPlayerDialog(playerid, D_GUNCJOB, 0, "Сборщик оружия", "Вы действительно хотите завершить работу?", "Да", "Нет");
	}
    if(pickupid == JB_DATA[0][data_PICKUP][0] || pickupid == JB_DATA[1][data_PICKUP][0] || pickupid == JB_DATA[2][data_PICKUP][0] ||
	pickupid == JB_DATA[3][data_PICKUP][0] || pickupid == AB_DATA[0][data_PICKUP][0] || pickupid == AB_DATA[1][data_PICKUP][0]) return 1;
    if(PI[playerid][data_PU] == 1) return 0;
	else {
		PI[playerid][data_PU] = 1;
		GetPlayerPos(playerid, PosPU[0][playerid], PosPU[1][playerid], PosPU[2][playerid]);
	}
	new str_home[256];
	for(new h = 0; h < TotalHouses; h++) {
		if(HOUSE_DATA[h][data_PICKUPENTER] == pickupid) {
			SetPVarInt(playerid, "house", h);
	       	if(HOUSE_DATA[h][data_OWNED] == 1) {
		  		format(str_home,sizeof(str_home),"Номер дома: %d\nВладелец: {3274c7}%s\nНазвание: Аракановый\nСтоимость: %d руб\nКварплата: 1499 руб / день", h+1, HOUSE_DATA[h][data_OWNER], HOUSE_DATA[h][data_PRICE], HOUSE_DATA[h][data_DAY]);
		  		return ShowPlayerDialog(playerid, dialog_ENTER_HOUSE, DIALOG_STYLE_MSGBOX, "{f00e5d}Дом куплен", str_home, "Войти", "Отмена");
			}
	    	else {
	    		format(str_home,sizeof(str_home),"Номер дома: %d\nНазвание: Аракановый\nСтоимость: %d рублей\nКварплата: 1499 руб / день",h+1,HOUSE_DATA[h][data_PRICE]);
		     	return ShowPlayerDialog(playerid, 7900, DIALOG_STYLE_MSGBOX, "{f00e5d}Дом продаётся", str_home, "Купить", "Отмена");
			}
		}
	}
	if(pickupid == rentcater) return ShowPlayerDialog(playerid, dialog_RENTCATER, DIALOG_STYLE_MSGBOX, "{f00e5d}Аренда катера", "Вы желаете арендовать прогулочный катер за 25.000 рублей?", "Арендовать", "Отмена");
	if(pickupid == avtoschool_info) {
		new sctring[450], str[450];
		format(str,sizeof(str),"Общие правила ПДД:\n\n");
		strcat(sctring,str);
		format(str,sizeof(str),"1. Максимальная скорость в неселенных пунктах - 60 км/час\n");
		strcat(sctring,str);
		format(str,sizeof(str),"2. Если Вас остановил инспектор ДПС, Вы должны остановится, спросить удостоверение инспектора и предъявить права и документы на Ваше ТС.\n");
		strcat(sctring,str);
		format(str,sizeof(str),"3. Обгон разрешен если:\n");
		strcat(sctring,str);
		format(str,sizeof(str),"3.1. Водитель не загромождает Вам обзор встречной полосы\n");
		strcat(sctring,str);
		format(str,sizeof(str),"3.2. Скорость водителя обгоняемого ТС, не выше чем 100 км/час.\n");
		strcat(sctring,str);
		format(str,sizeof(str),"4. Водителю ТС запрещается водить транспорт будучи не трезвым.\n\n");
		strcat(sctring,str);
		format(str,sizeof(str),"Желаем Вам удачи, приятной игры :)");
		strcat(sctring,str);
		ShowPlayerDialog(playerid, dialog_schoolinfo, DIALOG_STYLE_MSGBOX, "{f00e5d}Справочник", sctring, "Закрыть", "");
		return 1;
	}
	if(pickupid == avtoschool_eks) {
	    if(PI[playerid][data_LICB] == 1) return SendClientMessage(playerid, CG, "У Вас уже есть водительские права");
	    PI[playerid][data_schooltestlevel] = 0;
		return ShowPlayerDialog(playerid, dialog_schooltest, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", "Вы действительно хотите сдать экзамен на водительские права?", "Да", "Нет");
	}
	if(pickupid == Dalnoboy_pickup) {
	    if(PI[playerid][data_LICB] != 1) return SendClientMessage(playerid, CG, "У Вас нет водительских прав");
	    if(PI[playerid][data_LVL] < 3) return SendClientMessage(playerid, CG, "Работа дальнобойщика доступна с 3-го уровня");
	    if(GetPVarInt(playerid, "dalnaboy_start") != 0) return SendClientMessage(playerid, CG, "Вы уже работаете дальнобойщиком");
	    PI[playerid][data_schooltestlevel] = 0;
		new str_3[185];
		format(str_3,sizeof(str_3),"Вы действительно хотите устроиться на работу дальнобойщиком?");
		return ShowPlayerDialog(playerid, dialog_dalnoboy, DIALOG_STYLE_MSGBOX, "{f00e5d}Дальнобойщики", str_3, "Да", "Нет");
	}
	if(pickupid == avtobusjob) {
 		if(PI[playerid][data_LICB] != 1) return SendClientMessage(playerid, CG, "У Вас нет водительских прав");
 		if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, CG, "Работа водителя автобуса доступна с 2-го уровня");
		new str_3[185];
		format(str_3,sizeof(str_3),"}Вы действительно хотите устроиться на работу водителем автобуса?");
		return ShowPlayerDialog(playerid, dialog_avtobusjob, DIALOG_STYLE_MSGBOX, "{f00e5d}Водитель автобус", str_3, "Да", "Нет");
	}
	if(pickupid == avtoschool_vhod) {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 2260.9907,2718.0132,1122.4604);
		SetPlayerFacingAngle(playerid, 179.4687);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == avtoschool_vihod) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1846.1957,1451.5331,10.0355);
		SetPlayerFacingAngle(playerid, 86.71);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodMeriya) {
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 1158.0021,2572.6350,1112.4800);
		SetPlayerFacingAngle(playerid, 179.0270);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodMeriya) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1824.3256,2095.8198,15.8522);
		SetPlayerFacingAngle(playerid, 270.6051);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodLiftMeriya) {
		if(PI[playerid][data_MEMBER] != 1) return SendClientMessage(playerid, CG, "Вы не являетесь сотрудником мэрии");
	    SetPlayerVirtualWorld(playerid, 13);
	    SetPlayerInterior(playerid, 13);
	    SetPlayerPos(playerid, 1148.5103,2548.7615,1115.5601);
		SetPlayerFacingAngle(playerid, 180.5137);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodLiftMeriya) {
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 1166.2997,2564.0164,1112.4800);
		SetPlayerFacingAngle(playerid, 358.1927);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodKaznaPickup) {
		if(PI[playerid][data_MEMBER] == 1) {
			if(PI[playerid][data_RANK] == 10) {
			    SetPlayerVirtualWorld(playerid, 13);
			    SetPlayerInterior(playerid, 13);
			    SetPlayerPos(playerid, -1359.5652,1240.2517,2102.4299);
				SetPlayerFacingAngle(playerid, 268.3569);
				SetCameraBehindPlayer(playerid);
				Freeze(playerid);
			}
		}
		else return SendClientMessage(playerid, CG, "В это помещение может войти только Мэр");
		return 1;
	}
	if(pickupid== VihodKaznaPickup) {
	    SetPlayerVirtualWorld(playerid, 13);
	    SetPlayerInterior(playerid, 13);
	    SetPlayerPos(playerid, 1149.9795,2565.3928,1112.4800);
		SetPlayerFacingAngle(playerid, 271.4862);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == Kazna_GiveMoney) return ShowPlayerDialog(playerid, dialog_kazna, DIALOG_STYLE_MSGBOX, "{f00e5d}Казна", "Вы можете взять 5000 рублей из общей казны.\nОбратите внимание на то, что Вам разрешено брать лишь 5000 рублей в час", "Выбрать", "Закрыть");
	if(pickupid == VhodArmy1) {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 2491.6360, 212.7043, 1502.4700);
		SetPlayerFacingAngle(playerid, 359.0);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodArmy2) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1917.7921, 2302.9739, 15.5697);
		SetPlayerFacingAngle(playerid, 119.0);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VhodArmyKazarmy) {
        if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, CG, "Вход в казармы доступен только военным");
	    SetPlayerVirtualWorld(playerid, 5);
	    SetPlayerInterior(playerid, 5);
	    SetPlayerPos(playerid, 742.7545,1510.1522,2002.1899);
		SetPlayerFacingAngle(playerid, 0.8219);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodArmyKazarmy) {
		if(PI[playerid][data_HOSPITAL] == 1) return SendClientMessage(playerid,CG,"Вы должны пройти курс восстановления");
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1787.6969,1778.3534,15.3500);
		SetPlayerFacingAngle(playerid, 180.3085);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid  == VhodArmyStolovaya) {
		if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, CG, "Вход в столовую доступен только военным");
	    SetPlayerVirtualWorld(playerid, 6);
	    SetPlayerInterior(playerid, 6);
	    SetPlayerPos(playerid, -2434.6191,1808.5900,2053.4800);
		SetPlayerFacingAngle(playerid, 180.2651);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodArmyStolovaya) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1838.4071,1758.8162,15.3500);
		SetPlayerFacingAngle(playerid, 89.8224);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == ArmyStolovaya) return ShowPlayerDialog(playerid, dialog_vchstlovaya, DIALOG_STYLE_LIST, "{f00e5d}Столовая ВЧ", "1. Гречка с мясом\n2. Батончик 'Жизнь'\n3. Сухой паёк", "Выбрать", "Закрыть");
	if(pickupid == VhodArmyShatb) {
		if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, CG, "Вход в штаб доступен только военным");
	    SetPlayerVirtualWorld(playerid, 7);
	    SetPlayerInterior(playerid, 7);
	    SetPlayerPos(playerid, -119.5845,1383.6361,1208.6801);
		SetPlayerFacingAngle(playerid, 270.4205);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VihodArmyShatb) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1787.6018,1760.7035,15.3500);
		SetPlayerFacingAngle(playerid, 359.6785);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == vhodbank) {
	    SetPlayerVirtualWorld(playerid, 92);
	    SetPlayerInterior(playerid, 92);
	    SetPlayerPos(playerid, 1536.0514,1811.5703,578.6213);
		SetPlayerFacingAngle(playerid, 359.6876);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == vihodbank) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1794.86,2041.26,15.87);
		SetPlayerFacingAngle(playerid, 357.97);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == kazino_vhod) {
	    SetPlayerVirtualWorld(playerid, 12);
	    SetPlayerInterior(playerid, 12);
	    SetPlayerPos(playerid, 1250.3680,1521.8926,835.2716);
		SetPlayerFacingAngle(playerid, 179.7863);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == kazino_vihod) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2310.3567,-1924.6207,21.9619);
		SetPlayerFacingAngle(playerid, 90.0);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == palata_vhod) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 2);
	    SetPlayerPos(playerid, 1326.9725,2505.1501,1002.1400);
		SetPlayerFacingAngle(playerid, 267.5599);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == palata_vihod) {
		if(PI[playerid][data_HOSPITAL] == 1) return SendClientMessage(playerid,CG,"Вы должны пройти курс восстановления");
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, -689.3057,1619.0341,1002.0200);
		SetPlayerFacingAngle(playerid, 0.1491);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == ordinatorskaya_vhod) {
  		if(PI[playerid][data_MEMBER] != 4) return SendClientMessage(playerid,CG,"Вы не являетесь сотрудником БЦРБ");
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 2);
  		SetPlayerPos(playerid, -2848.6548,2814.5430,1002.1600);
		SetPlayerFacingAngle(playerid, 269.7516);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == ordinatorskaya_vihod) {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
  		SetPlayerPos(playerid, -688.8541,1662.8464,1002.0200);
		SetPlayerFacingAngle(playerid, 180.3450);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == bcrbvhod)
    {
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);

  		SetPlayerPos(playerid, -682.8159,1632.3666,1002.0200);
		SetPlayerFacingAngle(playerid, 88.3299);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
   	if(pickupid == bcrbvihod)
    {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);

  		SetPlayerPos(playerid, 1907.2657,2191.3411,15.9317);
		SetPlayerFacingAngle(playerid, 91.7125);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
   	if(pickupid == bcrbvihod1)
    {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);

  		SetPlayerPos(playerid, 1907.2657,2191.3411,15.9317);
		SetPlayerFacingAngle(playerid, 91.7125);
		SetCameraBehindPlayer(playerid);
		Freeze(playerid);
		return true;
    }
    if(pickupid == opgintvhod_offklub) {
        if(PI[playerid][data_MEMBER] != 7) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Кавказцы");
	    SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
  		SetPlayerPos(playerid, -2126.8560,2392.1062,1501.8101);
		SetPlayerFacingAngle(playerid, 359.9464);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
  	if(pickupid == opgintvihod_offklub) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, -565.2095,-1366.1256,41.1228);
		SetPlayerFacingAngle(playerid, 235.9672);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvhod_gopota) {
    	if(PI[playerid][data_MEMBER] != 6) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Гопота");
	    SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerInterior(playerid, 2);
  		SetPlayerPos(playerid, -2126.8560,2392.1062,1501.8101);
		SetPlayerFacingAngle(playerid, 359.9464);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvihod_gopota) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, 2215.7695,-2593.9531,21.9600);
		SetPlayerFacingAngle(playerid, 267.8065);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvhod_skinhead) {
    	if(PI[playerid][data_MEMBER] != 5) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Скинхедов");
	    SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 3);
  		SetPlayerPos(playerid, -2126.8560,2392.1062,1501.8101);
		SetPlayerFacingAngle(playerid, 359.9464);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
    if(pickupid == opgintvihod_skinhead) {
	    SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
  		SetPlayerPos(playerid, 2611.4929,1770.3994,2.4167);
		SetPlayerFacingAngle(playerid, 271.39);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == pickgmats) {
		switch(PI[playerid][data_MEMBER]) {
		    case 2: {
		        if(PI[playerid][data_PUTPATR] == 0 && PI[playerid][data_PUTMET] == 0) {
		            PI[playerid][data_PUTPATR] = 1;
		            SetPlayerAttachedObject(playerid, 3, 3013,5,0.040999,0.202999,0.192999,101.299987,1.999999,75.800003,1.000000,1.000000,1.000000);
		    		SetPlayerSpecialAction(playerid,25);
					SendClientMessage(playerid, -1, "Подойдите к грузовику и введите: /put");
		        }
		    }
		}
		return 1;
	}
	if(pickupid == pickgmets) {
		switch(PI[playerid][data_MEMBER]) {
		    case 2: {
		        if(PI[playerid][data_PUTMET] == 0 && PI[playerid][data_PUTPATR] == 0) {
		            PI[playerid][data_PUTMET] = 1;
		            SetPlayerAttachedObject(playerid, 3, 3013,5,0.040999,0.202999,0.192999,101.299987,1.999999,75.800003,1.000000,1.000000,1.000000);
		    		SetPlayerSpecialAction(playerid,25);
					SendClientMessage(playerid, -1, "Подойдите к грузовику и введите: /put");
		        }
		    }
		}
	    return 1;
	}
	if(pickupid == rostov_sklad && PI[playerid][data_MEMBER] == 5) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{f00e5d}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
	if(pickupid == maykop_sklad && PI[playerid][data_MEMBER] == 6) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{f00e5d}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
	if(pickupid == odessa_sklad && PI[playerid][data_MEMBER] == 7) return ShowPlayerDialog(playerid, dialog_SKLAD, DIALOG_STYLE_LIST, "{f00e5d}Склад ОПГ", "1. Взять металл\n2. Взять патроны\n3. Взять вещества\n4. Положить металл\n5. Положить патроны\n6. Положить вещества", "Выбрать", "Отмена");
	if(pickupid == pickhparmy) {
	    SetPlayerHealthAC(playerid, 100);
		return SetPlayerArmourAC(playerid, 100);
	}
    if(pickupid == vxoddchmvd0) {
		if(PI[playerid][data_MEMBER] != 3) return SendClientMessage(playerid, CG, "Вы не являетесь сотрудником МО МВД");
        SetPlayerVirtualWorld(playerid, 1);
        SetPlayerInterior(playerid, 1);
        SetPlayerPos(playerid, 2136.4258,-1988.2084,901.4700);
        SetPlayerFacingAngle(playerid, 358.0699);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == vxoddchmvd1) {
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 0);
        SetPlayerPos(playerid, -287.8202,-1551.5719,43.7515);
        SetPlayerFacingAngle(playerid, 238.1529);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
	if(pickupid == MeriyaGarageVhod) {
	    if(PI[playerid][data_MEMBER] != 1) return SendClientMessage(playerid, CG, "Вы не являетесь сотрудником мэрии");
 		SetPlayerVirtualWorld(playerid, 1);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == MeriyaGarageVihod) {
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1790.8265,2086.4673,15.8538);
		SetPlayerFacingAngle(playerid, 359.5308);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == Pravo_givegun_pickup) {
		if(PI[playerid][data_MEMBER] != 1) return SendClientMessage(playerid, COLOR_BLACK, "У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, dialog_GIVEGUNPRAVO, DIALOG_STYLE_LIST, "{f00e5d}Получение оружия", "1. Desert Eagle\n2. ТТ с глушителем\n3. AKС-74У", "Получить", "Отмена");
	}
	if(pickupid == MVDGarageVhod) {
	    if(PI[playerid][data_MEMBER] != 3) return SendClientMessage(playerid, CG, "Вы не являетесь сотрудником МО МВД");
 		SetPlayerVirtualWorld(playerid, 2);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == MVDGarageVihod) {
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, -264.8573,-1561.5525,41.1352);
		SetPlayerFacingAngle(playerid, 60.5274);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == CRBGarageVhod)
	{
	    if(PI[playerid][data_MEMBER] != 4) return SendClientMessage(playerid, CG, "Вы не являетесь сотрудником БЦРБ");
 		SetPlayerVirtualWorld(playerid, 3);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == CRBGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1944.0120,2176.3442,15.9317);
		SetPlayerFacingAngle(playerid, 178.2826);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VchGarageVhod)
	{
	    if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, CG, "Вы не являетесь военным");
 		SetPlayerVirtualWorld(playerid, 4);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == VchGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 1832.6777,1672.6553,15.2794);
		SetPlayerFacingAngle(playerid, 357.8175);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
    if(pickupid == GopotaGarageVhod)
    {
	    if(PI[playerid][data_MEMBER] != 6) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Гопота");
 		SetPlayerVirtualWorld(playerid, 5);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == GopotaGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2234.1951,-2582.3884,22.0132);
		SetPlayerFacingAngle(playerid, 176.5772);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
    if(pickupid == SkinheadGarageVhod)
    {
	    if(PI[playerid][data_MEMBER] != 5) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Скинхеды");
 		SetPlayerVirtualWorld(playerid, 6);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
    }
	if(pickupid == SkinheadGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid, 2624.5217,1784.3579,2.3580);
		SetPlayerFacingAngle(playerid, 93.5138);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == OffClubGarageVhod)
	{
	    if(PI[playerid][data_MEMBER] != 7) return SendClientMessage(playerid, CG, "Вы не являетесь участником ОПГ Кавказцы");
 		SetPlayerVirtualWorld(playerid, 7);
	    SetPlayerInterior(playerid, 1);
	    SetPlayerPos(playerid, 315.2472,1474.5933,802.5100);
		SetPlayerFacingAngle(playerid, 268.2195);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	if(pickupid == OffClubGarageVihod)
	{
 		SetPlayerVirtualWorld(playerid, 0);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerPos(playerid,  -559.2497,-1390.2672,41.1920);
		SetPlayerFacingAngle(playerid, 328.7131);
		SetCameraBehindPlayer(playerid);
		return Freeze(playerid);
	}
	// МВД #2
    if(pickupid == VhodUchastokMVD0) {
        SetPlayerVirtualWorld(playerid, 1);
        SetPlayerInterior(playerid, 1);
        SetPlayerPos(playerid, 1457.6888,1609.8812,696.3035);
        SetPlayerFacingAngle(playerid, 2.1439);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
    if(pickupid == VhodUchastokMVD1) {
        SetPlayerVirtualWorld(playerid, 0);
        SetPlayerInterior(playerid, 0);
        SetPlayerPos(playerid, -304.2080,-1554.4020,40.9230);
        SetPlayerFacingAngle(playerid, 56.4780);
        SetCameraBehindPlayer(playerid);
		FreezePlayer(playerid);
		SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
    }
	if(pickupid == MVD_givegun_pickup) {
		if(PI[playerid][data_MEMBER] != 3) return SendClientMessage(playerid, COLOR_BLACK, "У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, dialog_GIVEGUNMVD, DIALOG_STYLE_LIST, "{f00e5d}Государственный склад", "1. Взять аптечки\n2. Взять оружие", "Взять", "Закрыть");
	}
	if(pickupid == vch_givegun_pickup) {
		if(PI[playerid][data_MEMBER] != 2) return SendClientMessage(playerid, COLOR_BLACK, "У Вас нет доступа к этому складу");
		ShowPlayerDialog(playerid, dialog_GIVEGUNVCH, DIALOG_STYLE_LIST, "{f00e5d}Оружейный склад", "1. Лопата\t\t1+\t1\n2. Бронижелет\t\t2+\t-\n3. Desert Eagle\t\t1+\t35\n4. AKC-74Y\t\t1+\t90\n5. AK-47\t\t2+\t90\n6. Country Rifle\t\t3+\t10", "Взять", "Закрыть");
	}
	if(pickupid == pick_prodjob) {
        if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации, Вам доступны только веременные работы.");
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 8) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_PROD_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Главный склад","Вы желаете начать рабочий день?\n\n{3399FF}Для работы требуется 3 уровень", "Начать", "Отмена");
			else ShowPlayerDialog(playerid, dialog_PROD_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Главный склад","Вы желаете завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == pick_ashanjob) {
        if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации, Вам доступны только веременные работы.");
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 1) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_ASHAN_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Анашан","Вы желаете начать рабочий день?", "Начать", "Отмена");
			else ShowPlayerDialog(playerid, dialog_ASHAN_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Анашан","Вы желаете завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == pickup_ash) {
	    if(PI[playerid][data_LICB] == 1) return SendClientMessage(playerid,CG,"У Вас уже есть водительские права");
		if(PI[playerid][data_ASH_TEST] == 1) return SendClientMessage(playerid,CG,"Вы уже проходите тест");
        ShowPlayerDialog(playerid, dialog_ASH_TEST, DIALOG_STYLE_MSGBOX, "{f00e5d}Экзамен по вождению", "Вы желаете получить водительские права?\nСтоимость экзамена: 5000 рублей", "Начать", "Отмена");
		return 1;
	}
    if(pickupid == JB_DATA[0][data_PICKUP][1]) {
        if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации, Вам доступны только веременные работы.");
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 2) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_DREV_STARTJOB, DIALOG_STYLE_LIST, "{f00e5d}Лесопилка","Рабочий\nВодитель", "Начать", "Отмена");
			else ShowPlayerDialog(playerid, dialog_DREV_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Лесопилка","Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == JB_DATA[1][data_PICKUP][1]) {
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 3) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_SHAHTA_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Работа шахтёра","Вы хотите устроиться на работу шахтёром?\nВаша основвная задача - добыча железной руды и угля.\n\nОбратите внимание: если Вы покинете территорию\nшахты, заработнная плата будет аннулирована", "Да", "Нет");
			else ShowPlayerDialog(playerid, dialog_SHAHTA_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Работа шахтёра","Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == JB_DATA[2][data_PICKUP][1]) {
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 4) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_YABLO_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Дайвер","Вы желаете начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid, dialog_YABLO_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Дайвер","Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == JB_DATA[3][data_PICKUP][1]) {
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 5) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_OGOROD_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Ферма","Вы желаете начать рабочий день?", "Да", "Нет");
			else ShowPlayerDialog(playerid, dialog_OGOROD_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Ферма","Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == AB_DATA[0][data_PICKUP][1]) {
        if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации, Вам доступны только веременные работы.");
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 6) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_AB1_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Автобаза","Вы желаете начать рабочий день?\n\n{3399FF}Для работы требуется 5 уровень", "Начать", "Отмена");
			else ShowPlayerDialog(playerid, dialog_AB1_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Автобаза","Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
    if(pickupid == AB_DATA[1][data_PICKUP][1]) {
        if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации, Вам доступны только веременные работы.");
        if(PI[playerid][data_START_JOB] == 0 || PI[playerid][data_START_JOB] == 7) {
			if(PI[playerid][data_START_JOB] == 0) ShowPlayerDialog(playerid, dialog_AB2_STARTJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Автобаза" , "Вы желаете начать рабочий день?\n\n{3399FF}Для работы требуется 5 уровень", "Начать", "Отмена");
			else ShowPlayerDialog(playerid, dialog_AB2_STOPJOB, DIALOG_STYLE_MSGBOX, "{f00e5d}Автобаза" , "Вы уверены, что хотите завершить рабочий день?", "Завершить", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Вы уже где-то работаете");
        return 1;
    }
	return 1;
}
public OnQueryError(errorid, error[], callback[], query[], connectionHandle) return print(error);
stock ShowPlayerSpeedometer(playerid) {
	cef_emit_event(playerid, "show-speed");
	speedometer_Update[playerid] = SetTimerEx("SpeedUpdate", 1000, true, "d", playerid);
	return 1;
}
stock HidePlayerSpeedometer(playerid) {
	cef_emit_event(playerid, "hide-speed");
    KillTimer(speedometer_Update[playerid]);
    return 1;
}
callback: CBugFreezeOver(playerid) {
	TogglePlayerControllable(playerid, true);
	pCBugging[playerid] = false;
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row) {
	printf("%s OnPlayerSelectedMenuRow", PI[playerid][data_NAME]);
    if(GetPlayerMenu(playerid) == SelectSkin) {
   		switch(row) {
      		case 0: {
      		    if(PI[playerid][data_SEX] == 1) {
					PI[playerid][data_CHANGESKIN]++;
		 			if(PI[playerid][data_CHANGESKIN] >= 5) PI[playerid][data_CHANGESKIN] = 0;
					SetPlayerSkinAC(playerid, PedMale[PI[playerid][data_CHANGESKIN]]);
		 		}
		  		else {
					PI[playerid][data_CHANGESKIN]++;
		 			if(PI[playerid][data_CHANGESKIN] >= 6) PI[playerid][data_CHANGESKIN] = 0;
					SetPlayerSkinAC(playerid, PedFeMale[PI[playerid][data_CHANGESKIN]]);
		 		}
                ShowMenuForPlayer(SelectSkin, playerid);
            }
            case 1: {
            	if(PI[playerid][data_SEX] == 1) {
		  			PI[playerid][data_CHANGESKIN]--;
		  			if(PI[playerid][data_CHANGESKIN] <= -1) PI[playerid][data_CHANGESKIN] = 4;
		            SetPlayerSkinAC(playerid, PedMale[PI[playerid][data_CHANGESKIN]]);
				}
				else {
		    		PI[playerid][data_CHANGESKIN]--;
			     	if(PI[playerid][data_CHANGESKIN] <= -1) PI[playerid][data_CHANGESKIN] = 5;
			 		SetPlayerSkinAC(playerid, PedFeMale[PI[playerid][data_CHANGESKIN]]);
		      	}
                ShowMenuForPlayer(SelectSkin, playerid);
            }
			case 2:
            {
				if(GetPVarInt(playerid,"reg_account") == 0) return Kick(playerid);
                if(GetPVarInt(playerid,"select_skin") == 0) return Kick(playerid);
                DeletePVar(playerid,"select_skin");
				DeletePVar(playerid,"reg_account");
                PI[playerid][data_SKIN] = GetPlayerSkin(playerid);
                PI[playerid][data_LVL] = 1;
                PI[playerid][data_ZAKON] = 100;
                PI[playerid][data_DEMORGAN] = 0;
                PI[playerid][data_LOGGED] = true;
                TogglePlayerControllable(playerid, true);
                DeletePVar(playerid,"player_auth");
                SendClientMessage(playerid, 0xFF9999FF, "Поздравляем с успешно регистрацией на нашем сервере {FFFF99}Arcana РП");
                SendClientMessage(playerid, 0xFF9999FF, "Рекомендуем сразу же привязать страницу ВКонтакте чтобы в будующем Вы могли восстановить свой аккаунт");
               // SendClientMessage(playerid, 0xFF9999FF, "Для привязки страницы используйте команду {FFFF99}/vk");
                SendClientMessage(playerid, 0xFF9999FF, "Если у Вас есть вопросы которые относятся к серверу Вы их всегда можете задать нам используя команду: {FFFF99}/report");
                SendClientMessage(playerid, 0xFF9999FF, "Для быстрого развития Вы можете использовать промокоды от ютуберов. Используйте команду: {FFFF99}/promo");
				CreateAccount(playerid);
				SetPlayerToSpawn(playerid);
				cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
				new a_str[115];
				format(a_str,sizeof(a_str),"[Регистрация] %s[%d] только что создал аккаунт, получено: (денег - %d) (донат - %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY], PI[playerid][data_DONATE]);
				SendAdminMessage(COLOR_RED, a_str);
		    }
        }
    }
	return 1;
}
public OnPlayerExitedMenu(playerid) return 1;
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) return 1;
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	if(PRESSED(KEY_WALK)) {
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		   new veh = GetPlayerVehicleID(playerid);
		   new engine1,lights1,alarm1,doors_text1,bonnet1,boot1,objective1;
		   GetVehicleParamsEx(veh,engine1,lights1,alarm1,doors_text1,bonnet1,boot1,objective1);
		   if(CAR_DATA[veh][data_LAMP] == 0) {
		      SetVehicleParamsEx(veh,engine1,VEHICLE_PARAMS_ON,alarm1,doors_text1,bonnet1,boot1,objective1);
		      CAR_DATA[veh][data_LAMP] = 1;
		   }
		   else {
		      SetVehicleParamsEx(veh,engine1,VEHICLE_PARAMS_OFF,alarm1,doors_text1,bonnet1,boot1,objective1);
		      CAR_DATA[veh][data_LAMP] = 0;
		   }
		}
	    for(new h = 0; h < TotalHouses; h++){
	    	if(PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ]) && GetPlayerVirtualWorld(playerid) == HOUSE_DATA[h][data_ID]) {
	            ShowPlayerDialog(playerid, dialog_EXIT_HOUSE, DIALOG_STYLE_MSGBOX, "{f00e5d}Дом", "Вы желаете покинуть дом?", "Выйти", "Отмена");
	            return 1;
	        }
		}
		for(new k = 0; k < 6; k++)
		{
		    new kv = GetPVarInt(playerid, "padik");
		    if(PlayerToPoint(1.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]) && GetPlayerVirtualWorld(playerid) == KV_DATA[kv][data_ID])
			{
			    if(KV_DATA[kv][data_LOCK][k] == 1) return cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Эта квартира закрыта"));
	            SetPlayerPosAC(playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]);
				SetPlayerFacingAngle(playerid, 0.0);
				SetPlayerInterior(playerid, k+1);
				SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]+k);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
	            return true;
			}
			else if(PlayerToPoint(1.0, playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]) && GetPlayerVirtualWorld(playerid) == KV_DATA[kv][data_ID]+k)
			{
				SetPlayerPosAC(playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]);
				SetPlayerFacingAngle(playerid, 0.0);
				SetPlayerInterior(playerid, 1);
				SetPlayerVirtualWorld(playerid, KV_DATA[kv][data_ID]);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				return true;
			}
		}
	}
	if(newkeys == 1 || PRESSED(1)) {
        new Weap[2];
        GetPlayerWeaponData(playerid, 4, Weap[0], Weap[1]);
        SetPlayerArmedWeapon(playerid, Weap[0]);
    }
    if(IsAtBankomat(playerid,0.5)) {
		if(GetPVarInt(playerid,"kdpickupbank") > gettime()) return 1;
		SetPVarInt(playerid,"kdpickupbank",gettime() + 3);
		new str_3[185];
		format(str_3,sizeof(str_3),"1. Банковская карта {f00e5d}(№ %d)\n2. Оплата имущества\n3. Медицинские услуги", PI[playerid][data_ID]);
		ShowPlayerDialog(playerid, 8999, DIALOG_STYLE_LIST, "{f00e5d}Банкомат", str_3, "Далее", "Закрыть");
	}
    if(!pCBugging[playerid] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT || !pCBugging[playerid] && GetPlayerState(playerid) == 1) {
		if(PRESSED(KEY_FIRE)) {
			switch(GetPlayerWeapon(playerid)) {
				case WEAPON_DEAGLE, WEAPON_SHOTGUN, WEAPON_SNIPER: {
					ptsLastFiredWeapon[playerid] = gettime();
				}
			}
		}
		else if(PRESSED(KEY_CROUCH)) {
			if((gettime() - ptsLastFiredWeapon[playerid]) < 1) {
				TogglePlayerControllable(playerid, false);
				pCBugging[playerid] = true;
				KillTimer(ptmCBugFreezeOver[playerid]);
				ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0, 0,0,0,0,0);
				ptmCBugFreezeOver[playerid] = SetTimerEx("CBugFreezeOver", 950, false, "i", playerid);
			}
		}
	}
	if(newkeys == KEY_YES) {
        if(PI[playerid][data_ADMLVL] < 1) return  true;
		new as[80], as2[80], as3[80], as4[64];
		switch(PI[playerid][data_HIDEME]) {
			case 0: format(as,sizeof(as),"{252525}Скрыть ник \t\t\t\t{ce6c4f}Отключено");
			case 1: format(as,sizeof(as),"{252525}Скрыть ник \t\t\t\t{4eaa77}Включено");
		}
		switch(PI[playerid][data_ASCHEAT]) {
			case 0: format(as2,sizeof(as2),"{252525}Оповещения анти-чита \t\t{ce6c4f}Отключены");
			case 1: format(as2,sizeof(as2),"{252525}Оповещения анти-чита \t\t{4eaa77}Включены");
		}
		switch(PI[playerid][data_CADMIN]) {
			case 0: format(as3,sizeof(as3),"{252525}Админский чат \t\t{ce6c4f}Отключены");
			case 1: format(as3,sizeof(as3),"{252525}Админский чат \t\t{4eaa77}Включены");
		}
		new str_3[512];
		format(str_3,sizeof(str_3),"\
		{252525}1. %s\n\
		2. Установить никнейм\t{252525}Вручную\n\
		3. Сгенерировать никнейм\t\t{252525}Автоматически\n\
		4. Установить невидимый скин.\n\
		5. Установить погоду на сервере.\n\
		6. Установить точку МП.\n\
		7. Выдать себе JetPack\n\
		{252525}8. %s\n\
		{252525}9. %s", as, as2, as3, as4);
		return CEF__Dialog(playerid, 7213, DIALOG_STYLE_LIST, "{db2751}Настройки игрового мастера", str_3, "Изменить", "Закрыть");
	}
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY) {
  		if(PRESSED(KEY_SPRINT)) noclipdata[playerid][accelmul] += 2.5;
		else if(RELEASED(KEY_SPRINT)) noclipdata[playerid][accelmul] -= 2.5;
		else if(PRESSED(KEY_WALK)) noclipdata[playerid][accelmul] = noclipdata[playerid][accelmul]/10;
		else if(RELEASED(KEY_WALK)) noclipdata[playerid][accelmul] = 0.0;
	}
    if(PRESSED(KEY_SECONDARY_ATTACK)) {
	    if(GetPVarInt(playerid,"select_skin") == 1) ShowMenuForPlayer(SelectSkin,playerid);
	    for(new i = 0; i < sizeof(casino_pos); i++) {
	 	    if(PlayerToPoint(0.2, playerid, casino_pos[i][0], casino_pos[i][1], casino_pos[i][2]) && PI[playerid][data_OPENCASINO] == false) {
			    new sd[25], st[25];
				casino_stavka[playerid] = 0;
				casino_update[playerid] = 0;
    			format(sd, sizeof(sd), "%d RUB", get_player_money(playerid));
    			format(st, sizeof(st), "%d RUB", casino_stavka[playerid]);
    			PlayerTextDrawSetString(playerid,casino_money[playerid][0],sd);
    			PlayerTextDrawSetString(playerid,casino_money[playerid][1],st);
    			PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
				PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
				PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
				PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
			    ShowCasinoGame(playerid);
			    SendClientMessage(playerid, COLOR_AC, "Для выхода используйте: ESC");
			    return 1;
			}
 		}
	}
    if(PRESSED(16)) {
	    if(GetPVarInt(playerid, "UseAnim") == 1) {
		    ClearAnim(playerid);
		    DeletePVar(playerid, "UseAnim");
		    DeletePVar(playerid, "piss");
		    return 1;
		}
	}
    if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
    || ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
    || ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
    && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
    	PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
	}
	if(PRESSED(KEY_JUMP)) {
	    if(GetPVarInt(playerid, "tovar") != 0 && PI[playerid][data_START_JOB] == 2) {
			SendClientMessage(playerid,0xffcd00FF,"Вы разбили тележку");
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "tovar", 0);
			DeletePVar(playerid,"ac_timer");
	  		switch(random(4)) {
				case 0: SetPlayerCheckpoint(playerid, 2343.2356,-618.4960,12.0020, 2.0);
				case 1: SetPlayerCheckpoint(playerid, 2350.2246,-627.0235,12.0020, 2.0);
				case 2: SetPlayerCheckpoint(playerid, 2330.1829,-614.6138,12.0020, 2.0);
				case 3: SetPlayerCheckpoint(playerid, 2324.1658,-621.3287,12.0020, 2.0);
			}
	 	}
		if(GetPVarInt(playerid, "tovar") != 0 && PI[playerid][data_START_JOB] == 1) {
			SendClientMessage(playerid,0xffcd00FF,"Вы уронили товар");
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "tovar", 0);
			DeletePVar(playerid,"ac_timer");
	  		switch(random(2)) {
				case 0: SetPlayerCheckpoint(playerid, 2719.6956,-2325.5881,17.9660, 2.0);
				case 1: SetPlayerCheckpoint(playerid, 2742.4841,-2357.4810,17.9660, 2.0);
			}
 		}
 		if(GetPVarInt(playerid, "tovar") != 0 && PI[playerid][data_START_JOB] == 3){
			SendClientMessage(playerid,0xffcd00FF,"Вы разбили тележку");
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
			SetPlayerAttachedObject(playerid,1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "tovar", 0);
			DeletePVar(playerid,"ac_timer");
	  		new pos = random(5);
			SetPVarInt(playerid, "karier_pos", pos);
		  	SetPlayerCheckpoint(playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2], 2.0);
 		}
 		if(GetPVarInt(playerid, "tovar") != 0 && PI[playerid][data_START_JOB] == 4)
		{
			SendClientMessage(playerid,0xffcd00FF,"Вы уронили ящик");
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
			DisablePlayerCheckpoint(playerid);
			ClearAnim(playerid);
			SetPVarInt(playerid, "process", 0);
			SetPVarInt(playerid, "tovar", 0);
			SetPVarInt(playerid, "yablo_check", 0);
			DeletePVar(playerid,"ac_timer");
			new pos = random(7);
			SetPVarInt(playerid, "yablo_pos", pos);
			SetPlayerCheckpoint(playerid, yablo_pos[pos][0], yablo_pos[pos][1], yablo_pos[pos][2], 2.0);
		}

		if(GetPVarInt(playerid, "tovar") != 0 && PI[playerid][data_START_JOB] == 5)
		{
		    SendClientMessage(playerid,0xffcd00FF,"Вы уронили ящик");
			DisablePlayerCheckpoint(playerid);
			ClearAnim(playerid);
			SetPVarInt(playerid, "process", 0);
			SetPVarInt(playerid, "tovar", 0);
			DeletePVar(playerid,"ac_timer");
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
			new pos = random(4);
			SetPVarInt(playerid, "ogorod_pos", pos);
			SetPlayerCheckpoint(playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2], 2.0);
		}
	}
	if(newkeys == 262144) {
		if(PlayerToPoint(3.0, playerid, 2132.8718,1790.2057,12.0000) || PlayerToPoint(3.0, playerid, 1994.8816,976.9962,15.4012) || PlayerToPoint(3.0, playerid, -2632.4607,254.1363,10.9310)) return ShowPlayerDialog(playerid, dialog_vchstlovaya, DIALOG_STYLE_LIST, "{f00e5d}Бабка безделушка", "1. Булка с мясом\n2. Пирожное картошка\n3. Компот", "Выбрать", "Закрыть");
		if(PlayerToPoint(3.0, playerid, 2808.5137,-2148.5676,19.0471)) return ShowPlayerDialog(playerid, dialog_ribolovarenda, DIALOG_STYLE_MSGBOX, "{f00e5d}Рыболов", "Эх, в наше время почти нет достойных мореплавотелей которые будут покорять просторы морей и озёр.\nЮнга, может быть ты хочешь побывать какое - то время мореплавателем? Вдруг ты станешь великим моряком?\nТакой шанс нельзя упускать! Арендуй у меня лодку и плавай сколько влезет, я бы и удочки тебе дал,\nвот только жена их сломала, когда узнала, что я спиниг купил на юбилей вместо подарка.\n\n{f00e5d}Цена аренды лодки: 20000 рублей.", "Аренда", "Закрыть");
		if(PlayerToPoint(3.0, playerid,  -2385.64, -540.90, 39.31) && OlenMertw[0] == 1) {
			if(OlenMertw[0] != 1) return 1;
		    if(OlenMyaso[0] != 1) return SendClientMessage(playerid, CG, "Олень мёртв, но его мясо уже кто - то забрал");
            OlenMyaso[0] = 0;
            PI[playerid][data_Myaso] += 1;
			SendClientMessagef(playerid, 0xffcd00FF, "Вы подобрали {3377cc}1 кг {ffcd00}мяса, всего мяса {3377cc}%d кг", PI[playerid][data_Myaso]);
            UpdatePlayerDataInt(playerid, "Myaso", PI[playerid][data_Myaso],5230);
            ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
            SetTimerEx("ClearAnimPlayer",5000,false,"i",playerid);
		}
		if(PlayerToPoint(3.0, playerid, -2489.48, -314.69, 41.25) && OlenMertw[1] == 1) {
			if(OlenMertw[1] != 1) return 1;
		    if(OlenMyaso[1] != 1) return SendClientMessage(playerid, CG, "Олень мёртв, но его мясо уже кто - то забрал");
            OlenMyaso[1] = 0;
            PI[playerid][data_Myaso] += 1;
			new str_1[256];
			format(str_1,sizeof(str_1),"Вы подобрали 1 кг мяса, всего мяса у Вас: %d кг", PI[playerid][data_Myaso]);
            SendClientMessage(playerid, CY, str_1);
            UpdatePlayerDataInt(playerid, "Myaso", PI[playerid][data_Myaso],5243);
            ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
            SetTimerEx("ClearAnimPlayer",5000,false,"i",playerid);
		}
		if(PlayerToPoint(3.0, playerid, -1615.30, -957.28, 47.79) && OlenMertw[2] == 1) {
			if(OlenMertw[2] != 1) return 1;
		    if(OlenMyaso[2] != 1) return SendClientMessage(playerid, CG, "Олень мёртв, но его мясо уже кто - то забрал");
            OlenMyaso[2] = 0;
            PI[playerid][data_Myaso] += 1;
			new str_1[256];
			format(str_1,sizeof(str_1),"Вы подобрали 1 кг мяса, всего мяса у Вас: %d кг", PI[playerid][data_Myaso]);
            SendClientMessage(playerid, CY, str_1);
            UpdatePlayerDataInt(playerid, "Myaso", PI[playerid][data_Myaso],5256);
            ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
            SetTimerEx("ClearAnimPlayer",5000,false,"i",playerid);
		}
		if(PlayerToPoint(3.0, playerid, -1409.17, -1292.74, 56.15) && OlenMertw[3] == 1) {
			if(OlenMertw[3] != 1) return 1;
		    if(OlenMyaso[3] != 1) return SendClientMessage(playerid, CG, "Олень мёртв, но его мясо уже кто - то забрал");
            OlenMyaso[3] = 0;
            PI[playerid][data_Myaso] += 1;
			new str_1[256];
			format(str_1,sizeof(str_1),"Вы подобрали 1 кг мяса, всего мяса у Вас: %d кг", PI[playerid][data_Myaso]);
            SendClientMessage(playerid, CY, str_1);
            UpdatePlayerDataInt(playerid, "Myaso", PI[playerid][data_Myaso],5269);
            ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
            SetTimerEx("ClearAnimPlayer",5000,false,"i",playerid);
		}
		if(PlayerToPoint(3.0, playerid, -860.03, -2546.97, 27.15) && OlenMertw[4] == 1) {
			if(OlenMertw[4] != 1) return 1;
		    if(OlenMyaso[4] != 1) return SendClientMessage(playerid, CG, "Олень мёртв, но его мясо уже кто - то забрал");
            OlenMyaso[4] = 0;
            PI[playerid][data_Myaso] += 1;
			new str_1[256];
			format(str_1,sizeof(str_1),"Вы подобрали 1 кг мяса, всего мяса у Вас: %d кг", PI[playerid][data_Myaso]);
            SendClientMessage(playerid, CY, str_1);
            UpdatePlayerDataInt(playerid, "Myaso", PI[playerid][data_Myaso],5282);
            ApplyAnimation(playerid, "BOMBER","BOM_Plant_Loop",4.0,1,0,0,0,0);
            SetTimerEx("ClearAnimPlayer",5000,false,"i",playerid);
		}
	}
	if(newkeys == 2 && IsPlayerInAnyVehicle(playerid)) {
		new carid = GetPlayerVehicleID(playerid);
		if(PI[playerid][data_MEMBER] == 1) {
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 1789.5536,2078.9685,15.8538)) {
				if(carid == gov_car[0] || carid == gov_car[1] || carid == gov_car[2] || carid == gov_car[3] || carid == gov_car[4] ||
				carid == gov_car[5] || carid == gov_car[6] || carid == gov_car[7]) {
					new vehicle = GetPlayerVehicleID(playerid);
	           		SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 1);
		 	        SetVehicleZAngle(vehicle, 269.1992);
		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 1);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100)) {
					new vehicle = GetPlayerVehicleID(playerid);
            		SetVehiclePos(vehicle, 1793.7211,2092.6294,15.6204);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 359.5654);
		 	        SetPlayerPosAC(playerid, 1793.7211,2092.6294,15.6204);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 2) {
			if(IsPlayerInRangeOfPoint(playerid, 7.0, 1830.7931,1666.5521,15.2794)) {
		 	    if(carid == army_car[0] || carid == army_car[1] ||
				carid == army_car[2] || carid == army_car[3] || carid == army_car[4] || carid == army_car[5] ||
				carid == army_car[6] || carid == army_car[7]) {
					new vehicle = GetPlayerVehicleID(playerid);
	           		SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        SetVehicleVirtualWorld(vehicle, 4);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleZAngle(vehicle, 269.1992);
	           		SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 4);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100)) {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 1834.9825,1674.1138,15.3670);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 357.2794);
		 	        SetPlayerPosAC(playerid, 1834.9825,1674.1138,15.3670);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 3) {
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -264.6449,-1565.3790,41.1352)) {
				if(carid == police_car[0] || carid == police_car[1] ||carid == police_car[2] ||
				carid == police_car[3] || carid == police_car[4] || carid == police_car[5] || carid == police_car[6] ||
				carid == police_car[7]) {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 2);
		 	        SetVehicleZAngle(vehicle, 269.1992);
		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 2);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100)) {
				new vehicle = GetPlayerVehicleID(playerid);
	 	        SetVehiclePos(vehicle, -269.1837,-1554.7892,41.1591);
	 	        LinkVehicleToInterior(vehicle, 0);
	 	        SetVehicleVirtualWorld(vehicle, 0);
	 	        SetVehicleZAngle(vehicle, 58.1255);
	 	        SetPlayerPosAC(playerid, -269.1837,-1554.7892,41.1591);
         		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 4) {
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 2148.02,1808.58,12.22)) {
				if(carid == hospital_car[0] || carid == hospital_car[1] || carid == hospital_car[2] || carid == hospital_car[3] ||
				carid == hospital_car[4] || carid == hospital_car[5] || carid == hospital_car[6] || carid == hospital_car[7]) {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 3);
		 	        SetVehicleZAngle(vehicle, 269.1992);
		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 3);
		    		SetPlayerInterior(playerid, 1);
		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100)) {
				new vehicle = GetPlayerVehicleID(playerid);
	 	        SetVehiclePos(vehicle, 2147.23,1804.75,12.29);
	 	        LinkVehicleToInterior(vehicle, 0);
	 	        SetVehicleVirtualWorld(vehicle, 0);
	 	        SetVehicleZAngle(vehicle, 176.13);
	 	        SetPlayerPosAC(playerid, 2147.23,1804.75,12.29);
         		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 5)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 2629.1829,1782.5292,2.3826))
	 	    {
				if(carid == rostov_car[0] || carid == rostov_car[1] || carid == rostov_car[2] || carid == rostov_car[3]
				|| carid == rostov_car[4] || carid == rostov_car[5] || carid == rostov_car[6] || carid == rostov_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 6);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 6);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
				}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 2623.1372,1786.0825,2.3460);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 89.8413);

		 	        SetPlayerPosAC(playerid, 2623.1372,1786.0825,2.3460);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 6)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 2234.1951,-2582.3884,22.0132))
	 	    {
		 	    if(carid == maykop_car[0] || carid == maykop_car[1] || carid == maykop_car[2] || carid == maykop_car[3]
				|| carid == maykop_car[4] || carid == maykop_car[5] || carid == maykop_car[6] || carid == maykop_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 5);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 5);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 2234.1951,-2582.3884,22.0132);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 180.5444);

		 	        SetPlayerPosAC(playerid, 2234.1951,-2582.3884,22.0132);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 7)
	 	{
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, -562.5096,-1392.1708,41.1858))
	 	    {
		 	    if(carid == odessa_car[0] || carid == odessa_car[1] || carid == odessa_car[2] || carid == odessa_car[3]
				|| carid == odessa_car[4] || carid == odessa_car[5] || carid == odessa_car[6] || carid == odessa_car[7])
				{
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, 318.8180, 1481.3219, 802.5327);
		 	        LinkVehicleToInterior(vehicle, 1);
		 	        SetVehicleVirtualWorld(vehicle, 7);
		 	        SetVehicleZAngle(vehicle, 269.1992);

		 	        SetPlayerPosAC(playerid, 318.8180, 1481.3219, 806.5327);
	         		SetPlayerVirtualWorld(playerid, 7);
		    		SetPlayerInterior(playerid, 1);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	    		}
	 	    }
	 	    if(IsPlayerInRangeOfPoint(playerid, 7.0, 312.8904,1493.8380,802.5100))
	 	    {
					new vehicle = GetPlayerVehicleID(playerid);
		 	        SetVehiclePos(vehicle, -554.0991,-1385.4324,41.2775);
		 	        LinkVehicleToInterior(vehicle, 0);
		 	        SetVehicleVirtualWorld(vehicle, 0);
		 	        SetVehicleZAngle(vehicle, 327.6629);

		 	        SetPlayerPosAC(playerid, -554.0991,-1385.4324,41.2775);
	         		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);

		    		PutPlayerInVehicle(playerid, vehicle, 0);
	 	    }
	 	}
	 	if(PI[playerid][data_MEMBER] == 2) {
	 	    if(IsPlayerInRangeOfPoint(playerid, 15.0, 1891.87, 1724.55, 16.49)) {
	 	        MoveObject(ArmyVorota, 1892.07, 1714.18, 15.69, 2.5, 0.00, 0.00, 92.00);
	 	        MoveObject(ArmyVorota1,1891.89, 1728.66, 15.69, 2.5, 0.00, 0.00, 92.00);
	 	        ArmyVorotaTimer = SetTimer("ArmyVorotaClose", 10000, 0);
			}
	 	}
	}
	if((newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK))) {
		if(GetPlayerWeapon(playerid) == 41) {
		    if(PlayerToPoint(3.0, playerid, 1787.6428,2347.9565,15.4276)) {
		        if(grafity != 1) {
					new grafityobj;
					grafityobj = CreateObject(1490, 1788.78, 2348.43, 15.83,   0.00, 0.00, 33.48);
					new str_1[256];
					format(str_1,sizeof(str_1),"%s", PI[playerid][data_TAG]);
					SetObjectMaterialText(grafityobj, str_1, 0, OBJECT_MATERIAL_SIZE_256x256,"Segoe Script",50,0,0xFF000000, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		        	grafity = 1;
				}
			}
	     	new Float:x, Float:y, Float:z;
			GetVehiclePos(PI[playerid][data_VEH], x, y ,z);
		    if(PlayerToPoint(3.0, playerid, x, y, z)) {
    			if(GetPlayerWeapon(playerid) == 41) {
				    if(GetPlayerState(playerid) == 2) {
					    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
							new carid = GetPlayerVehicleID(playerid);
							switch(CAR_DATA[carid][data_LAMP]) {
								case 0: {
									GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
									SetVehicleParamsEx(carid,engine,true,alarm,doors_text,bonnet,boot,objective);
									CAR_DATA[carid][data_LAMP] = 1;
									cef_emit_event(playerid, "update-speed-icon", CEFINT(3), CEFINT(1));
					    		}
								case 1: {
					      			GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
									SetVehicleParamsEx(carid,engine,false,alarm,doors_text,bonnet,boot,objective);
									CAR_DATA[carid][data_LAMP] = 0;
									cef_emit_event(playerid, "update-speed-icon", CEFINT(3), CEFINT(0));
								}
							}
							SpeedUpdate(playerid);
						}
						return 1;
					}
					ShowPlayerDialog(playerid, dialog_PERERAS, DIALOG_STYLE_LIST, "{f00e5d}Выберите цвет", "{252525}1. {000000}|||\n{252525}2. {FFFFFF}|||\n{252525}3. {0078a4}|||\n{252525}4. {ef8f00}|||\n{252525}5. {9b0108}|||\n{252525}6. {7e95ad}|||", "Перекрасить", "Отмена");
				}
		    }
     	}
	    if(PlayerToKvadrat(playerid,  1892, 2104.5, 1959, 2213.5) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
		PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
		PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
		PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
		PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
		PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) {
		    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		        if(PI[playerid][data_MEMBER] != 3) {
	   				TogglePlayerControllable(playerid, false);
	 		 		SetTimerEx("UnfreezePlayer", 3000, false, "i", playerid);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
				}
			}
		}
		if(GetPlayerInterior(playerid) != 0) {
  			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
      			if(PI[playerid][data_MEMBER] != 3) {
					TogglePlayerControllable(playerid, false);
			 		SetTimerEx("UnfreezePlayer", 3000, false, "i", playerid);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1);
				}
			}
		}
 	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        new carid = GetPlayerVehicleID(playerid);
        if(!IsABMX(carid)) {
        	if(PRESSED(KEY_ACTION)) {
    	    	new Float:health;
			    GetVehicleHealth(carid, health);
			    if (health <= 351) return cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Двигатель сломан"));
                if(CAR_DATA[carid][data_FUEL] <= 0) return SendClientMessage(playerid,CG,"В машине нет топлива");
				switch(CAR_DATA[carid][data_ENG]) {
					case 0: {
						cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(1));
						cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(1));
						GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
						SetVehicleParamsEx(carid,true,lights_text,alarm,doors_text,bonnet,boot,objective);
						CAR_DATA[carid][data_ENG] = 1;
    				}
      				case 1: {
						cef_emit_event(playerid, "update-speed-icon", CEFINT(1), CEFINT(0));
						cef_emit_event(playerid, "update-speed-icon", CEFINT(4), CEFINT(0));
           				GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
						SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
						CAR_DATA[carid][data_ENG] = 0;
	         		}
				}
				SpeedUpdate(playerid);
				return 1;
	        }
         	if(PRESSED(4)) {
			    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					switch(CAR_DATA[carid][data_LAMP]) {
						case 0: {
							GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
							SetVehicleParamsEx(carid,engine,true,alarm,doors_text,bonnet,boot,objective);
							CAR_DATA[carid][data_LAMP] = 1;
			    		}
						case 1: {
			      			GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
							SetVehicleParamsEx(carid,engine,false,alarm,doors_text,bonnet,boot,objective);
							CAR_DATA[carid][data_LAMP] = 0;
						}
					}
					SpeedUpdate(playerid);
				}
				return 1;
			}
		}
		else {
		    GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
			SetVehicleParamsEx(carid,true,lights_text,alarm,doors_text,bonnet,boot,objective);
			CAR_DATA[carid][data_ENG] = 1;
		}
	    if(PlayerToPoint(10.0, playerid,  37.8415,305.3781,12.0264))
	    {
			if(!IsPlayerCops(playerid)) return SendClientMessage(playerid, CG, "Данное действие Вам недоступно");
			if(police_barrier_status[0] == GATES_CLOSED) {
			    PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
				MoveObject(police_barrier[0], 39.51, 308.39, 11.85+0.0004, 0.0004, 0.00, 0.00, 67.30);
	            police_barrier_status[0] = GATES_OPEN;
            }
            else {
                PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
	            police_barrier_status[0] = GATES_CLOSED;
	            MoveObject(police_barrier[0], 39.51, 308.39, 11.85-0.0004, 0.0004, 0.00, 270.00, 67.30);
            }
			return 1;
		}
		else if(PlayerToPoint(10.0, playerid,  214.54, 1503.96, 11.75)) {
			if(!IsPlayerCops(playerid)) return SendClientMessage(playerid, CG, "Данное действие Вам недоступно");
			if(police_barrier_status[1] == GATES_CLOSED) {
			    PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
				MoveObject(police_barrier[1], 214.54, 1503.96, 11.75+0.0004, 0.0004, 0.00, 0.00, 78.00);
	            police_barrier_status[1] = GATES_OPEN;
            }
            else {
                PlayerPlaySound(playerid, 41603, 0.0, 0.0, 0.0);
	            police_barrier_status[1] = GATES_CLOSED;
	            MoveObject(police_barrier[1], 214.54, 1503.96, 11.75-0.0004, 0.0004, 0.00, 270.00, 78.00);
            }
			return 1;
		}
	}
	return 1;
}
callback: VchSkladGateClose() {
    MoveObject(VchSkladGate, 1568.80, 1809.53, 16.25, 2.5, 0.0, 0.0, 90.0);
    KillTimer(VchSkladGateTimer);
    return 1;
}
public OnRconLoginAttempt(ip[], password[], success) {
    if(success || !success) {
    	new YouIP[16];
     	for(new i = 0; i <= MAX_PLAYERS; i++) {
       		if(IsPlayerConnected(i)) {
     			GetPlayerIp(i, YouIP, sizeof(YouIP));
     			if(!strcmp(ip, YouIP, true)) {
                   printf("[INFO] %s attemp is RCON",ip);
                   Kick(i);
                   return 1;
               }
           }
       }
	}
	return 1;
}
callback: NoRoof(playerid) {
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID ) {
        new Float:speed = GetVehicleSpeed(carid);
        new cm=GetVehicleModel(carid);
        switch(cm) {
            case 430,446,452,453,454,472,473,484,493,595, 548:{return 1;}
            default:{}
        }
        if(speed > 5) {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            SetPlayerPos(playerid, slx+2.5, sly+2.5, slz+0.5);
            ApplyAnimation(playerid, "ped", "BIKE_fallR", 4.0, 0, 1, 0, 0, 0,0);
            SetTimerEx("anim2", 1100, 0, "d", playerid);
        }
    }
    return 1;
}
callback: anim2(playerid) return ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
public OnPlayerUpdate(playerid) {
	if(PI[playerid][data_MASK_M] != 0) SetPlayerColor(playerid, 0x33333300);
	else {
 		new M = PI[playerid][data_MEMBER];
	    SetPlayerColor(playerid, PLAYER_COLOR_TEAM[M]);
	}
	if(PlayerToPoint(3.0, playerid, 1799.7273,2506.5293,15.8725))
	{
		SetPVarInt(playerid, "button", 1);
		if(GetPVarInt(playerid, "button") != 1) cef_emit_event(playerid, "show-button", CEFSTR("LALT"), CEFSTR("ПОГОВОРИТЬ С НИКИТОЙ"));
	}
	if(GetPVarInt(playerid, "button") == 1) {
		if(!PlayerToPoint(3.0, playerid, 1799.7273,2506.5293,15.8725)) cef_emit_event(playerid, "hide-button"), SetPVarInt(playerid, "button", 0);
	}
	if(GetPlayerState(playerid) == 2) { //фикс взрыва тс
		new carid = GetPlayerVehicleID(playerid);
	    new Float:hpveh; GetVehicleHealth(carid, hpveh);
		if(hpveh < 350) SetVehicleHealth(carid,351.0);
	}
	new PlayerInt = GetPlayerInterior(playerid);
	if(PlayerInt != 0) {
	    SetPlayerWeather(playerid, 1);
	    SetPlayerTime(playerid, 12, 0);
	}
	else {
		new hour, minute, second;
  		gettime(hour, minute, second);
	    SetPlayerWeather(playerid, WeatherServer);
	    SetPlayerTime(playerid, hour, 0);
	}
	NoRoof(playerid);
    if(Player_Speed(playerid) > 300) {
	}
	if(pPickupID[playerid]) {
        new pickupid = pPickupID[playerid];
        if(!IsValidDynamicPickup(pickupid)) pPickupID[playerid] = 0;
        else {
            new Float:pos_x, Float:pos_y, Float:pos_z;
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_X, pos_x);
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Y, pos_y);
            Streamer_GetFloatData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_Z, pos_z);
            if(!IsPlayerInRangeOfPoint(playerid, 2.0, pos_x, pos_y, pos_z)) pPickupID[playerid] = 0;
        }
    }
	if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
		new Float:vec[3];
		GetPlayerCameraFrontVector(playerid, vec[0], vec[1], vec[2]);
		new bool:possible_crasher = false;
		for (new i = 0; !possible_crasher && i < sizeof(vec); i++)
		if (floatabs(vec[i]) > 10.0)
		possible_crasher = true;
		if (possible_crasher) return printf("[server_log] %s is. Crasher.",PI[playerid][data_LOGIN_IP]);
	}
    if(PI[playerid][data_AFK] > 1) SetPlayerChatBubble(playerid, "", -1, 20.0, 1100), ReloadCef(playerid);
    PI[playerid][data_AFK] = -1;
    if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY) {
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);
		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100)) MoveCamera(playerid);
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr) {
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0) {
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				SavePlayerData(playerid);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else {
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
		return 0;
	}
	return 1;
}
public OnPlayerStreamIn(playerid, forplayerid) {
	if(PI[forplayerid][data_HIDEME] == 1) return ShowPlayerNameTagForPlayer(playerid, forplayerid, false);
	return 1;
}
public OnPlayerStreamOut(playerid, forplayerid) return 1;
public OnVehicleStreamIn(vehicleid, forplayerid) return 1;
public OnVehicleStreamOut(vehicleid, forplayerid) return 1; //tp
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	while(strfind(inputtext,"%s",true)!=-1) strdel(inputtext,strfind(inputtext,"%s",true),strfind(inputtext,"%s",true)+2);
	while(strfind(inputtext,"%",true)!=-1) strdel(inputtext,strfind(inputtext,"%",true),strfind(inputtext,"%",true)+2);
	//printf("OnDialogResponse player %s use dialog - %d, response - %d, inputtext - %s", PI[playerid][data_NAME], dialogid, response, inputtext);
	switch(dialogid) {
	    case dialog_REGISTER: {
	    	if(!response) Dialog_PLAYER_REGISTER(playerid);
			if(response) {
			    if(strlen(inputtext) == 0) return Dialog_PLAYER_REGISTER(playerid);
				if(strlen(inputtext) < 6 || strlen(inputtext) > 30) return SendClientMessage(playerid, 0x33CC33AA,"Длина пароля должна быть от 6 до 30 символов"),Dialog_PLAYER_REGISTER(playerid);
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ',', '`', '=': return SendClientMessage(playerid, 0x33CC33AA, "Разрешено использовать только латинские буквы и цифры"),Dialog_PLAYER_REGISTER(playerid);
				}
				getdate(PI[playerid][data_REGDATE_YEAR], PI[playerid][data_REGDATE_MONTH], PI[playerid][data_REGDATE_DAY]);
				GetPlayerIp(playerid,PI[playerid][data_REGISTER_IP],32);
				strmid(PI[playerid][data_PASSWORD], inputtext, 0, strlen(inputtext), 30);
				ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{f00e5d}Почта", "\
				{FFFFFF}Введите адрес Вашей электронной почты\n\
				Он нужен для восстановления доступа к аккаунту\n\
				В случае его взлома или если забудете пароль\n\n\
				{f00e5d}Убедитесь в правильности ввода Вашей почты", "Далее", "");
			}
		}
		case dialog_EMAIL: {
            if(response || !response) {
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{f00e5d}Email", "{FFFFFF}Введите адрес Вашей электронной почты\nИспользуя его, Вы сможете восстановить доступ к аккаунту\nв случае его взлома или если забудете пароль\n\n{f00e5d}Убедитесь в правильности ввода и нажмите 'Далее'", "Далее", "");
                if(strfind(inputtext, "@", true) == -1 || strfind(inputtext, "\n", true) != -1 || strfind(inputtext, ".", true) == -1) {
	 				ShowPlayerDialog(playerid, dialog_EMAIL, DIALOG_STYLE_INPUT, "{f00e5d}Почта", "\
					{FFFFFF}Введите адрес Вашей электронной почты\n\
					Он нужен для восстановления доступа к аккаунту\n\
					В случае его взлома или если забудете пароль\n\n\
					{f00e5d}Убедитесь в правильности ввода Вашей почты", "Далее", "");
                    return true;
                }
                strmid(PI[playerid][data_EMAIL], inputtext, 0, strlen(inputtext), 50);
                ShowPlayerDialog(playerid, dialog_SEX, DIALOG_STYLE_MSGBOX, "{f00e5d}Пол", "{FFFFFF}Выберете пол вашего персонажа", "Мужской", "Женский");
            }
        }
		case dialog_BGUN: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
                    case 0: {
						if(GetPVarInt(playerid,"kdbg1") > gettime()) return SendClientMessage(playerid, CG, "Покупать оружие можно раз в 10 секунд");
                        if(PI[playerid][data_MONEY] < 10000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки DESERT EAGLE (100 пт) нужно 10 тысяч", "Закрыть", "");
                        PI[playerid][data_MONEY] -= 10000;
                        GivePlayerWeapon(playerid, 24, 100);
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 10 тысяч вирт");
						new a_str[115];
						format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил DesertEagle (/buygun) (списано 10 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
						SendAdminMessage(COLOR_ADMINCHAT, a_str);
						SetPVarInt(playerid,"kdbg1",gettime() + 10);
                    }
                    case 1: {
						if(GetPVarInt(playerid,"kdbg1") > gettime()) return SendClientMessage(playerid, CG, "Покупать оружие можно раз в 10 секунд");
                        if(PI[playerid][data_MONEY] < 10000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки AK-47 (250 пт) нужно 10 тысяч", "Закрыть", "");
                        PI[playerid][data_MONEY] -= 10000;
                        GivePlayerWeapon(playerid, 30, 250);
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 10 тысяч вирт");
						new a_str[115];
						format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил AK-47 (/buygun) (списано 10 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
						SendAdminMessage(COLOR_ADMINCHAT, a_str);
						SetPVarInt(playerid,"kdbg1",gettime() + 10);
                    }
                    case 2: {
						if(GetPVarInt(playerid,"kdbg") > gettime()) return SendClientMessage(playerid, CG, "Покупать пакеты можно раз в 15 секунд");
                        if(PI[playerid][data_MONEY] < 15000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки 'Мелкий пакет' нужно 15 тысяч", "Закрыть", "");
                        PI[playerid][data_MONEY] -= 15000;
                        GivePlayerWeapon(playerid, 24, 75);
						GivePlayerWeapon(playerid, 31, 150);
						GivePlayerWeapon(playerid, 27, 75);
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 15 тысяч вирт");
						new a_str[115];
						format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил Малый пакет (/buygun) (списано 15 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
						SendAdminMessage(COLOR_ADMINCHAT, a_str);
						SetPVarInt(playerid,"kdbg",gettime() + 15);
                    }
                    case 3: {
						if(GetPVarInt(playerid,"kdbg") > gettime()) return SendClientMessage(playerid, CG, "Покупать пакеты можно раз в 15 секунд");
                        if(PI[playerid][data_MONEY] < 20000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки 'Средний пакет' нужно 20 тысяч", "Закрыть", "");
                        PI[playerid][data_MONEY] -= 20000;
                        GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 27, 150);
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 20 тысяч вирт");
						new a_str[115];
						format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил Средний пакет (/buygun) (списано 20 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
						SendAdminMessage(COLOR_ADMINCHAT, a_str);
						SetPVarInt(playerid,"kdbg",gettime() + 15);
                    }
                    case 4: {
						if(GetPVarInt(playerid,"kdbg") > gettime()) return SendClientMessage(playerid, CG, "Покупать пакеты можно раз в 15 секунд");
                        if(PI[playerid][data_MONEY] < 35000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки 'Большой пакет' нужно 35 тысяч", "Закрыть", "");
                        PI[playerid][data_MONEY] -= 35000;
                        GivePlayerWeapon(playerid, 24, 250);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 27, 250);
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 35 тысяч вирт");
						new a_str[115];
						format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил Большой пакет (/buygun) (списано 35 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
						SendAdminMessage(COLOR_ADMINCHAT, a_str);
						SetPVarInt(playerid,"kdbg",gettime() + 15);
                    }
                    case 5: {
						if(GetPVarInt(playerid,"kdhp") > gettime()) return SendClientMessage(playerid, CG, "Покупать ХП можно раз в 15 секунд");
                        if(PI[playerid][data_MONEY] < 5000) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки '176 здоровья' нужно 5 тысяч", "Закрыть", "");
                        if(gangwar > 1) {
							if(PI[playerid][data_MEMBER] == Command[0]) return SendClientMessage(playerid, CG, "Нельзя покупать оружие/здоровье во время захвата территории.");
							if(PI[playerid][data_MEMBER] == Command[1]) return SendClientMessage(playerid, CG, "Нельзя покупать оружие/здоровье во время захвата территории.");
						}
						else {
							PI[playerid][data_MONEY] -= 5000;
                        	SetPlayerHealthAC(playerid, 176);
							SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 5 тысяч вирт");
							new a_str[115];
							format(a_str,sizeof(a_str),"[Внимание] %s[%d] купил ХП (/buygun) (списано 5 тысяч, всего денег: %d, LVL: %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY],PI[playerid][data_LVL]);
							SendAdminMessage(COLOR_ADMINCHAT, a_str);
							SetPVarInt(playerid,"kdhp",gettime() + 15);
						}
                    }
				}
			}
		}
		case dialog_ASALON: {
			if(!response) return 1;
			if(response) {
				SetPVarInt(playerid,"kdpickup",gettime() + 3);
				if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
				for(new c = 0; c < 2; c++) {
					if(PI[playerid][data_CAR][c] == 0) {
						SendClientMessage(playerid,COLOR_AC,"Чтобы покинуть автосалон нажмите клавишу 'ESC'");
						PI[playerid][data_CHANGECAR] = 0;
						SetPlayerPosAC(playerid,294.8927,1720.3408-20,11.8301);
						InterpolateCameraPos(playerid, 287.2545,1720.2989,13.1431, 287.2545,1720.2989,13.1431, 1000);
						InterpolateCameraLookAt(playerid, 287.2545,1720.2989,13.1431, 287.2545,1720.2989,13.1431, 1000);
						FreezePlayer(playerid);
						SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
						PI[playerid][data_AUTOSALON_CAR] = CreateVehicle(autosalon_cars[PI[playerid][data_CHANGECAR]][asModel], 294.8927,1720.3408,11.8301,22.2060, PI[playerid][data_ONECOLOR_AS], PI[playerid][data_TWOCOLOR_AS], 36000);
						SetVehicleVirtualWorld(PI[playerid][data_AUTOSALON_CAR], playerid);
						SetPlayerVirtualWorld(playerid, playerid);
						ShowAutoSalonMenu(playerid);
						return 1;
					}
				}
				return SendClientMessage(playerid,CG,"У Вас нет свободных парковочный мест (занято: 2 / 2)");
			}
		}
		case 9888: {
		    if(!response) return 1;
		    if(response) {
				new vk_send[250];
		        switch(listitem) {
		            case 0: {
		                if(capturetime == 1) {
							SendClientMessage(playerid, 0x00aa33AA, "Вы выключили задержки на захваты территорий");
							capturetime = 0;
							format(vk_send, sizeof(vk_send), "[ *all ] Игровой мастер %s выключил задержки на захваты территорий",PI[playerid][data_NAME]);
							SendVKTest(playerid, vk_send, 3);
							return 1;
						}
						if(capturetime == 0) {
							SendClientMessage(playerid, 0x00aa33AA, "Вы включили задержки на захваты территорий");
							capturetime = 1;
							format(vk_send, sizeof(vk_send), "[ *all ] Игровой мастер %s включил задержки на захваты территорий",PI[playerid][data_NAME]);
							SendVKTest(playerid, vk_send, 3);
							return 1;
						}
		            }
				}
		    }
		}
		case dialog_LOGIN: {
			if(response || !response) {
			    if(strlen(inputtext) == 0) return Dialog_PLAYER_LOGIN(playerid);
				if(strlen(inputtext) < 6 || strlen(inputtext) > 30) return SendClientMessage(playerid, 0x33CC33AA,"Длина пароля должна быть от 6 до 30 символов"),Dialog_PLAYER_LOGIN(playerid);
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я': return SendClientMessage(playerid, 0x33CC33AA, "Разрешено использовать только латинские буквы и цифры"),Dialog_PLAYER_LOGIN(playerid);
				}
			    new name[MAX_PLAYER_NAME + 1];
				GetPlayerName(playerid, name, sizeof(name));
    			strmid(PI[playerid][data_PASSWORD], inputtext, 0, strlen(inputtext), 50);
				printf("SELECT * FROM `accounts` WHERE `name` = '%s' AND `password` = MD5('%s')", PI[playerid][data_NAME],PI[playerid][data_PASSWORD]);
				new str[135];
				mysql_format(dbHandle,str, sizeof(str), "SELECT * FROM `banlist` WHERE `name` = '%s' LIMIT 1", PI[playerid][data_NAME]);
				mysql_function_query(dbHandle, str, true, "CheckBan", "d", playerid);
			}
		}
  		case dialog_SEX: {
  		    if(!response)PI[playerid][data_SEX] = 2;
  		    if(response)PI[playerid][data_SEX] = 1;
  		    PI[playerid][data_CONTRY] = 0;
  		    ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, "{f00e5d}Реферал", "{FFFFFF}Если Вы узнали о нашем сервере от своего друга\nто можете ввести его ник в нижнем окошке\n\n{f00e5d}За регистрацию Вам сразу дадут призы!", "Далее", "");
  		}
  		case dialog_CONTRY: {
    		PI[playerid][data_CONTRY] = listitem;
  		    ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, "{f00e5d}Реферал", "{FFFFFF}Если Вы узнали о нашем сервере от своего друга\nто можете ввести его ник в нижнем окошке\n\n{f00e5d}За регистрацию Вам сразу дадут призы!", "Далее", "");
  		}
		case dialog_REFERAL: {
		    if(response || !response) {
		        for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ',', '`', '=': return SendClientMessage(playerid, 0x33CC33AA, "Разрешено использовать только латинские буквы и цифры"),ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, "{f00e5d}Реферал", "{FFFFFF}Если Вы узнали о нашем сервере от своего друга\nто можете ввести его ник в нижнем окошке\n\n{f00e5d}За регистрацию Вам сразу дадут призы!", "Далее", "Пропустить");
				}
		        if(strfind(inputtext,PI[playerid][data_NAME], true) != -1) return ShowPlayerDialog(playerid, dialog_REFERAL, DIALOG_STYLE_INPUT, "{f00e5d}Реферал", "{FFFFFF}Если Вы узнали о нашем сервере от своего друга\nто можете ввести его ник в нижнем окошке\n\n{f00e5d}За регистрацию Вам сразу дадут призы!", "Далее", "Пропустить");
			    strmid(PI[playerid][data_REFERAL], inputtext, 0, strlen(inputtext), 24);
			    SetPVarInt(playerid,"reg_account", 1);
	      		CreateAcc(playerid);
      		}
		}
		case DLG_SPAWN:
		{
			if(!response) return SetPlayerToSpawn(playerid);
		    if(response)
		    {
		    	SetPlayerToSpawn(playerid);
				SetPlayerPos(playerid, PI[playerid][STARTX], PI[playerid][STARTY], PI[playerid][STARTZ]+2);
			    SetPlayerVirtualWorld(playerid, PI[playerid][VIRTW]);
			    SetPlayerInterior(playerid, PI[playerid][VIRTI]);
			    SetPlayerFacingAngle(playerid, 180.0);
			    SetCameraBehindPlayer(playerid);
			    Freeze(playerid);
			}
		}
		case 8009: {
			if(!response) return open_mainmenu(playerid);
            if(response) return open_mainmenu(playerid);
        }
        case 9827: {
            if(response) {
                if(PI[playerid][data_LOGGED] == false) return 1;
				if(strlen(inputtext) == 0) return SendClientMessage(playerid, CG, "Никнейм должен содержать как минимум 1 символ");
				new str_1[256];
                format(str_1, sizeof(str_1), "[%s #%d] %s[%d] установил себе временный никнейм (%s)", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, (inputtext));
                SendAdminMessage(COLOR_ADMINCHAT, str_1);
                SetPlayerName(playerid, inputtext);
            }
        }
		case dialog_DONATE_4: {
			if(!response) return 1;
			if(response) {
				if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"Сначала купите телефон");
				if(PI[playerid][data_DONATE] < 150) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки 4-х значного номера телефона требуется 150 донат-поинтов.", "Закрыть", "");
  		    	if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{f00e5d}Покупка 4-х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
				if(strlen(inputtext) < 4 || strlen(inputtext) > 4) return SendClientMessage(playerid, CG,"Длина номера 4 символа"), ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{f00e5d}Покупка 4х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
				PI[playerid][data_DONATE] -= 150;
				PI[playerid][data_NUMBER] = strval(inputtext);
				UpdatePlayerDataInt(playerid, "number", PI[playerid][data_NUMBER],6015);
				UpdatePlayerDataInt(playerid, "donate", PI[playerid][data_DONATE],6016);
				SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 150 донат-поинтов.");
			}
		}
		case dialog_DONATE_3: {
			if(!response) return 1;
			if(response) {
			    if(PI[playerid][data_DONATE] < 50) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для смены игрового никнейма требуется 50 донат-поинтов.", "Закрыть", "");
		    	if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{f00e5d}Изменение никнейма", "{f00e5d}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{f00e5d}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				if(strlen(inputtext) < 5 || strlen(inputtext) > 24) return SendClientMessage(playerid, CG,"Длина ника от 5 до 24 символов"), ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{f00e5d}Изменение никнейма", "{f00e5d}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{f00e5d}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ' ','-':
					return ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{f00e5d}Изменение никнейма", "{f00e5d}Вы собераетесь изменить игровой никнейм своего персонажа\n\n{f00e5d}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				}
				strmid(CHANGE_NAME[playerid], inputtext, 0, strlen(inputtext), MAX_PLAYER_NAME);
				SetPVarInt(playerid, "change_name_status", 1);
				new str_q[85];
				mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", CHANGE_NAME[playerid]);
				mysql_function_query(dbHandle, str_q, true, "CheckNameDonate", "ds", playerid, CHANGE_NAME[playerid]);
			}
		}
		case dialog_DONATE_1: {
		    if(!response) return 1;
		    if(response) {
		        if(PI[playerid][data_DONATE] < 100) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки всех навыков стрельбы требуется 100 донат-поинтов.", "Закрыть", "");
		        PI[playerid][data_PISTOL] = 100;
				PI[playerid][data_SDPISTOL] = 100;
				PI[playerid][data_DEAGLE] = 100;
				PI[playerid][data_SHOTGUN] = 100;
				PI[playerid][data_MP5] = 100;
				PI[playerid][data_AK47] = 100;
				PI[playerid][data_SNIPERRIFLE] = 100;
		        SetPlayerSkills(playerid);
		        PI[playerid][data_DONATE] -= 100;
		        new str_q[98];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
    			mysql_function_query(dbHandle, str_q, false, "", "");
				SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 100 донат-поинтов.");
			}
		}
		case dialog_DONATE_2: {
		    if(!response) return 1;
		    if(response) {
		        if(PI[playerid][data_DONATE] < 60) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для снятия предупреждения требуется 60 донат-поинтов.", "Закрыть", "");
				if(PI[playerid][data_WARN] == 0) return SendClientMessage(playerid, CG, "У Вас нет предупреждений");
				PI[playerid][data_WARN] = 0;
		        PI[playerid][data_WARNTIME] = 0;
		        PI[playerid][data_DONATE] -= 60;
		        new str_q[98];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
    			mysql_function_query(dbHandle, str_q, false, "", "");
				SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 60 донат-поинтов.");
			}
		}
		case dialog_DHELP: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
		               	new str_1[256];
						strcat(str_1, "{FFCC33}На нашем сервере дальнобойщики занимают ведущию роль\n");
						strcat(str_1, "{FFCC33}Именно от них зависит стоимость продуктов в бизнесах\n");
						strcat(str_1, "{FFCC33}Работать дальнобойщиком - это интересно, прибыльно и весело\n");
						strcat(str_1, "{FFCC33}Вас всегда будут поджидать на пути различные приключения\n\n");
						strcat(str_1, "{252525}Изучайте мониторинг цен с помощью специального меню в /dhelp\n");
						strcat(str_1, "{252525}Смотрите закупочную цену товаров и цену экспорта на складе\n");
						strcat(str_1, "{252525}Не задерживайтесь долго с грузом, т.к фукты и овощи могут испортиться\n");
						strcat(str_1, "{252525}Дружелюбно общайтесь с другими дальнобойщиками с помощью рации /r\n");
						strcat(str_1, "{252525}Не нарушайте ПДД и соблюдайте скоростной режим\n\n");
						strcat(str_1, "{66FFCC}Желаем Вам успехов в освоении данной професии");
						ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Информация",str_1, "Закрыть", "");
		            }
		            case 1: {
		                new str_dialog[512], str_dialog2[512];
						format(str_dialog,sizeof(str_dialog),"{3399FF}ООО 'Пиломатериалы'\n");
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Вагонка: {00CC99}%d {252525}- {FF6666}%d\n",buy_vagonka,sell_vagonka);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Доска: {00CC99}%d {252525}- {FF6666}%d\n",buy_doska,sell_doska);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Брус: {00CC99}%d {252525}- {FF6666}%d\n\n",buy_brus,sell_brus);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{3399FF}ООО 'Рудник'\n");
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Руда: {00CC99}%d {252525}- {FF6666}%d\n\n",buy_ruda,sell_ruda);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{3399FF}ООО 'Сад'\n");
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Яблоки: {00CC99}%d {252525}- {FF6666}%d\n",buy_yabloki,sell_yabloki);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Сливы: {00CC99}%d {252525}- {FF6666}%d\n",buy_sliva,sell_sliva);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Персики: {00CC99}%d {252525}- {FF6666}%d\n",buy_persiky,sell_persiky);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Апельсины: {00CC99}%d {252525}- {FF6666}%d\n\n",buy_orange,sell_orange);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{3399FF}ООО 'Огород'\n");
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Картофель: {00CC99}%d {252525}- {FF6666}%d\n",buy_kartofel,sell_kartofel);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Помидоры: {00CC99}%d {252525}- {FF6666}%d\n",buy_pomidor,sell_pomidor);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Огурцы: {00CC99}%d {252525}- {FF6666}%d\n",buy_ogurec,sell_ogurec);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Капуста: {00CC99}%d {252525}- {FF6666}%d\n",buy_kapusta,sell_kapusta);
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Морковь: {00CC99}%d {252525}- {FF6666}%d\n\n",buy_morkov,sell_morkov);
	                    strcat(str_dialog2,str_dialog);
	                    format(str_dialog,sizeof(str_dialog),"{3399FF}Нефтезавод\n");
						strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{252525}Топливо: {00CC99}%d {252525}- {FF6666}%d\n\n",buy_fuel,sell_fuel);
	                    strcat(str_dialog2,str_dialog);
	                    format(str_dialog,sizeof(str_dialog),"{00CC99}Цена покупки товара на предприятии помечена зеленым цветом\n");
	                    strcat(str_dialog2,str_dialog);
						format(str_dialog,sizeof(str_dialog),"{FF6666}Цена продажи товара на склад помечена красным цветом");
	                    strcat(str_dialog2,str_dialog);
		                ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Мониторинг",str_dialog2, "Закрыть", "");
		            }
		            case 2:  ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Команды","/load - загрузить груз\n/unload - разгрузить груз", "Закрыть", "");
					case 3: {
						new skill, exp, sctring[100], str[64];
					    skill = PI[playerid][data_DSKILL]+1;
					    new exexp = skill*600;
					    exp = exexp+5200;
						if(PI[playerid][data_DSKILL] < 50) {
							format(str,sizeof(str),"Ваш навык: %d\n",skill);
						    strcat(sctring,str);
							format(str,sizeof(str),"Опыт: %d из %d",PI[playerid][data_DEXP],exp);
		                    strcat(sctring,str);
	                    }
						else {
						    format(str,sizeof(str),"Ваш навык: %d\n",skill);
						    strcat(sctring,str);
							format(str,sizeof(str),"Опыт: %d",PI[playerid][data_DEXP]);
		                    strcat(sctring,str);
						}
		                ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Навык",sctring, "Закрыть", "");
					}
					case 4: ShowPlayerDialog(playerid, dialog_DGPS, DIALOG_STYLE_LIST,"{f00e5d}Навигатор","1. Главный склад\n2. ООО 'Пилометериалы'\n3. ООО 'Рудник'\n4. ООО 'Сад'\n5. ООО 'Огород'\n6. Нефтезавод", "Выбрать", "Отмена");
		        }
			}
		}
		case dialog_SPAWNLAST:
		{
		    if(!response)
		    {
				DeletePVar(playerid,"player_auth");
		        PI[playerid][data_LOGGED] = true;
		        CancelSelectTextDraw(playerid);
		        TogglePlayerControllable(playerid, true);
		        TogglePlayerSpectating(playerid, 0);
		        SpawnPlayerAC(playerid);
		    }
		    if(response)
		    {
				DeletePVar(playerid,"player_auth");
		        PI[playerid][data_LOGGED] = true;
		        CancelSelectTextDraw(playerid);
		        TogglePlayerControllable(playerid, true);
		        TogglePlayerSpectating(playerid, 0);
		        SpawnPlayerAC(playerid);
		        SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid, 0);
		        SetPlayerPos(playerid, PI[playerid][STARTX], PI[playerid][STARTY], PI[playerid][STARTZ]);
		    }
			for(new i = 0; i < 13; i++) if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
			if(PI[playerid][data_ADMLVL] != 0) {
				pDialogCurrectTime[playerid] = gettime() + 1;
				pDialogTimer[playerid] = SetTimerEx("DialogPravilaAdm", 500, true, "i", playerid);
			}
		}
		case dialog_DGPS:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2398.9829);
						SetPVarFloat(playerid, "gps_pos_y", -971.9788);
						SetPVarFloat(playerid, "gps_pos_z", 2.1992);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2398.9829, -971.9788, 2.1992, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "Главный склад отмечен на карте");
		            }
		            case 1:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2398.9761);
						SetPVarFloat(playerid, "gps_pos_y", -626.6193);
						SetPVarFloat(playerid, "gps_pos_z", 12.3683);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2398.9761, -626.6193, 12.3683, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "ООО 'Пиломатериалы' отмечено на карте");
		            }
		            case 2:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", -617.0890);
						SetPVarFloat(playerid, "gps_pos_y", -192.6676);
						SetPVarFloat(playerid, "gps_pos_z", 1.2362);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,-617.0890, -192.6676, 1.2362, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "ООО 'Рудник' отмечено на карте");
		            }
		            case 3:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 942.0146);
						SetPVarFloat(playerid, "gps_pos_y", -298.9775);
						SetPVarFloat(playerid, "gps_pos_z", 4.1404);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,942.0146, -298.9775, 4.1404, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "ООО 'Сад' отмечено на карте");
		            }
		            case 4:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 255.3453);
						SetPVarFloat(playerid, "gps_pos_y", -901.7971);
						SetPVarFloat(playerid, "gps_pos_z", 40.4502);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,255.3453, -901.7971, 40.4502, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "ООО 'Огород' отмечено на карте");
		            }
		            case 5:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 977.9893);
						SetPVarFloat(playerid, "gps_pos_y", 632.9119);
						SetPVarFloat(playerid, "gps_pos_z", 12.1615);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid, 977.9893, 632.9119, 12.1615, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "Нефтебаза отмечена на карте");
		            }
		        }
		    }
		}
		case dialog_ADD_KV: {
         	if(!response) return 1;
    		if(response) {
                SetPVarInt(playerid,"addkv",1);
				SendClientMessage(playerid,-1, "Встанте на место, где будет появляться игрок после выхода из подъезда (/tpc)");
			}
		}
		case D_GUNJOB: {
         	if(!response) return 1;
			SetPVarInt(playerid, "GSkin",GetPlayerSkin(playerid));
			new gskin = random(2);
			if(gskin == 0) SetPlayerSkin(playerid, 258);
			if(gskin == 1) SetPlayerSkin(playerid, 259);
			SendClientMessage(playerid,COLOR_ORANGE,"Вы начали работу сборщика оружия. Следуйте к столу, чтобы взять ящик с металлом.");
			SetPVarInt(playerid,"Gunjob",1), SetPVarInt(playerid,"Gjob",1);
			new mcheck = random(1);
			if(mcheck == 0) SetPlayerCheckpoint(playerid,2757.6001000,-2182.8000500,21.8000000,1.5);
        }
        case D_GUNCJOB: {
	       	if(!response) return 1;
			SetPlayerSkin(playerid, GetPVarInt(playerid, "GSkin"));
			SendClientMessagef(playerid,COLOR_ORANGE,"Вы закончили работу. Заработано: %i долларов.",GetPVarInt(playerid, "GUN")*GCASH);
			give_player_money(playerid, GetPVarInt(playerid, "GUN")*50,"#83",6395);
			RemovePlayerAttachedObject(playerid, 3);
			DeletePVar(playerid, "Gunjob"), DeletePVar(playerid, "GUN"), DeletePVar(playerid, "Gjob"), DeletePVar(playerid, "GSkin");
			DisablePlayerCheckpoint(playerid);
        }
        case DLG_INVITEGSPLAYER: {
            if(!response) return 1;
            if(response) {
             	new i = GetPVarInt(playerid, "AdmID");
   				switch(listitem) {
	                case 0: {
	                    PI[i][data_ADMLVL] = 0;
	                    PI[i][ADMINSNUMBER] = 0;
	                    PI[i][data_VIP] = 0;
	                    SendClientMessage(playerid, -1, "Срок действия Arcana плюс закончилась");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d снял Вас с поста следящего{ff2457} :(", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6411);
						UpdatePlayerDataInt(i, "vip", PI[i][data_VIP],6412);
                        UpdatePlayerDataInt(i, "ADMINSNUMBER", PI[i][ADMINSNUMBER],6413);
	                }
	                case 1: {
	                    PI[i][data_ADMLVL] = 1;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на NGM");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до NGM, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6419);
	                }
	                case 2: {
	                    PI[i][data_ADMLVL] = 2;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на JRGM");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до JRGM, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6425);
	                }
	                case 3: {
	                    PI[i][data_ADMLVL] = 3;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на GM");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до GM, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6431);
	                }
	                case 4: {
	                    PI[i][data_ADMLVL] = 4;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на GM+");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до GM+, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6437);
	                }
	                case 5: {
	                    PI[i][data_ADMLVL] = 5;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на LGM");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до LGM, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6443);
	                }
	                case 6: {
	                    PI[i][data_ADMLVL] = 6;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на SGM");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до SGM, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6449);
	                }
	                case 7: {
	                    PI[i][data_ADMLVL] = 7;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на DEV");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до DEV, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6455);
	                }
	                case 8: {
	                    PI[i][data_ADMLVL] = 8;
	                    SendClientMessage(playerid, -1, "Вы изменили уровень GS для игрока на DEV+");
	                    SendClientMessagef(i,CY,"Игровой мастер #%d изменил ваш уровень следящего до DEV+, {ff2457}/ahelp", PI[playerid][ADMINSNUMBER]);
	                    UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL],6461);
	                }
				}
				new vk_send[250];
				format(vk_send, sizeof(vk_send), "Игровой мастер %s назначил %s на пост игрового мастера ('%d уровня')",PI[playerid][data_NAME], PI[i][data_NAME], PI[i][data_ADMLVL]);
				SendVKTest(playerid, vk_send, 3);
			}
        }
        case DLG_INVITEGS: {
            if(!response) return 1;
            if(response) {
                new i = GetPVarInt(playerid, "AdmID");
                if(!strlen(inputtext)) {
                    SendClientMessage(playerid, CG, "Вы ничего не ввели");
                    new string[95];
					format(string, 144, "Введите номер игрового мастера для {2770eb}%s[%d]", PI[i][data_NAME], i);
					ShowPlayerDialog(playerid, DLG_INVITEGS, DIALOG_STYLE_INPUT, "{f00e5d}GS-номер", string, "Назначить", "Отмена");
					return 1;
                }
                if(strval(inputtext) < 1 && strval(inputtext) > 999) {
                    SendClientMessage(playerid, CG, "Номер не может быть меньше 1 и больше 999");
                    new string[95];
					format(string, 144, "Введите номер игрового мастера для {2770eb}%s[%d]", PI[i][data_NAME], i);
					ShowPlayerDialog(playerid, DLG_INVITEGS, DIALOG_STYLE_INPUT, "{f00e5d}GS-номер", string, "Назначить", "Отмена");
					return 1;
                }
                SetPVarInt(playerid, "AdmNumber", strval(inputtext));
                new str_q[98];
		        mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `adminsnumber` = '%d'", strval(inputtext));
				mysql_function_query(dbHandle, str_q, true, "CheckAdmNumber", "d", playerid);
            }
        }
		case dialog_CONVERT: {
		    if(!response) return 1;
		    if(response) {
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		        if(strval(inputtext) > PI[playerid][data_DONATE]) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "У Вас нет такой суммы донат-поинтов для конвертации!", "Закрыть", "");
				PI[playerid][data_DONATE] -= strval(inputtext);
				give_player_money(playerid,strval(inputtext)*3000,"#5",6500);
				new str_q[98];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
    			mysql_function_query(dbHandle, str_q, false, "", "");
				new str1[70],pay1[20];
				format(str1,sizeof(str1),"Конвертация %d донат-поинтов",strval(inputtext));
				format(pay1,sizeof(pay1),"+%dР",strval(inputtext)*3000);
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str1), CEFSTR("418055"), CEFSTR(pay1));
			}

		}
		case dialog_COMMAND: {
            if(!response) return open_mainmenu(playerid);
			if(response) {
			    switch(listitem) {
			        case 0: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Общие","/me - показать действие\n/do - показать действие от 3-го лица\n/try - действие игрока (random)\n/anim - список анимаций\n/eject - выбросить из машины\n/pay - передать деньги\n/lic - показать лицензии\n/pass - показать паспорт\n/skills - показать свои навыки\n/hi - приветствие\n/setspawn - сменить спавн\n/leaders - лидеры онлайн", "Закрыть", "");
					case 1: {
	 				    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
						ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Недвижимость","/home - панель управления дома/квартиры\n/car - доставить транспорт к дому", "Закрыть", "");
					}
					case 2: {
	 				    if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID &&
						 PI[playerid][data_AB] == INVALID_AB_ID &&
						 PI[playerid][data_JB] == INVALID_JB_ID) return SendClientMessage(playerid, CG, "У вас нет бизнеса");
						ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Недвижимость","/business - панель управления бизнеса", "Закрыть", "");
					}
					case 3: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Автомобиль","/lock - закрыть/открыть автомобиль\n/en - завести/заглушить двигатель\n/lights_text - вкл/выкл фары\n/sellcar - продать личный автомобиль", "Закрыть", "");
			        case 4: return 1;
					case 5: {
			            if(PI[playerid][data_MEMBER] == 0) return SendClientMessage(playerid,CG,"Вы не состоите в организации");
						switch(PI[playerid][data_MEMBER]) {
							case 1: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n/rr - OOC чат организации\n/d - чат депортамента\n/members - члены организации онлайн\n/free - освободить игрока из тюрьмы (для адвокатов)\n/licsell - продать лицензии (для секретарей)", "Закрыть", "");
							case 2: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n/rr - OOC чат организации\n/d - чат депортамента\n/members - члены организации онлайн\n/putammo - разгрузить грузовик\n/put - положить металл/патроны в грузовик\n/makegun - создать оружие", "Закрыть", "");
							case 3: {
								ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n\
								/rr - OOC чат организации\n\
								/d - чат депортамента\n\
								/members - члены организации online\n\
								/su - выдать розыск\n\
								/pheal - поднять игрока из обморока\n\
								/clear - обнулировать розыск\n\
								/cuff - надеть наручники\n\
								/uncuff - снять наручники\n\
								/incar - посадить игрока в машину\n\
								{/uncar - вытащить игрка из машины\n\
								/arrest - провести арест\n\
								/wanted - список преступников\n\
								/setmark - поиск преступника\n\
								/tc - принять вызов", "Закрыть", "");
							}
							case 4: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n/rr - OOC чат организации\n/d - чат депортамента\n/members - члены организации онлайн\n/heal - предложить курс лечения", "Закрыть", "");
							case 5,6,7: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n/rr - OOC чат организации\n/members - члены организации онлайн\n/capture - начать захват территории\n/gun - создать оружие", "Закрыть", "");
							case 8: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Организация","/r - чат организации\n/rr - OOC чат организации\n/d - чат депортамента\n/members - члены организации онлайн\n/news - панель новостей", "Закрыть", "");
						}
					}
			        case 6: {
			            if(PI[playerid][data_LEADER] == 0) return SendClientMessage(playerid,CG,"Вы не являетесь лидером организации");
						switch(PI[playerid][data_LEADER]) {
						    case 1,2,4,8,9: {
								new str_3[512];
								strcat(str_3, "/gov - Гос.Новости\n");
								strcat(str_3, "/invite - принять\n");
								strcat(str_3, "/uninvite - уволить\n");
								strcat(str_3, "/setrang - изменить ранг\n");
								strcat(str_3, "/setskin - изменить скин\n");
								strcat(str_3, "/allmembers - список членов организации\n");
								strcat(str_3, "/offuninvite - уволить оффлайн\n");
								strcat(str_3, "/twarn - выдать выговор сотруднику\n");
								strcat(str_3, "/untwarn - снять выговор сотруднику\n");
								strcat(str_3, "/offtwarn - выдать выговор в оффлайне (доступно заместителям)\n");
								ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Лидерство",str_3, "Закрыть", "");
							}
							case 3: {
								new str_3[512];
								strcat(str_3, "/gov - Гос.Новости\n");
								strcat(str_3, "/invite - принять\n");
								strcat(str_3, "/uninvite - уволить\n");
								strcat(str_3, "/setrang - изменить ранг\n");
								strcat(str_3, "/setskin - изменить скин\n");
								strcat(str_3, "/allmembers - список членов организации\n");
								strcat(str_3, "/offuninvite - уволить оффлайн\n");
								strcat(str_3, "/twarn - выдать выговор сотруднику\n");
								strcat(str_3, "/untwarn - снять выговор сотруднику\n");
								strcat(str_3, "/offtwarn - выдать выговор в оффлайне (доступно заместителям)\n");
							    ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Лидерство",str_3, "Закрыть", "");
							}
                            case 5,6,7: {
								new str_3[512];
								strcat(str_3, "/invite - принять\n");
								strcat(str_3, "/uninvite - уволить\n");
								strcat(str_3, "/setrang - изменить ранг\n");
								strcat(str_3, "/setskin - изменить скин\n");
								strcat(str_3, "/allmembers - список членов организации\n");
								strcat(str_3, "/offuninvite - уволить оффлайн\n");
								strcat(str_3, "/twarn - выдать выговор сотруднику\n");
								strcat(str_3, "/untwarn - снять выговор сотруднику\n");
								strcat(str_3, "/offtwarn - выдать выговор в оффлайне (доступно заместителям)\n");
								ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Лидерство",str_3, "Закрыть", "");
							}
						}
					}
			    }
			}
		}
		case dialog_PROD_STARTJOB: {
		    if(!response) return 1;
		    if(response) {
		        if(PI[playerid][data_LVL] < 3 && PI[playerid][data_ADMLVL] < 1) return SendClientMessage(playerid, CG, "Для начала работы требуется 3 уровень");
		        SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Возьмите продуктовый грузовик на стоянке склада");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
		        PI[playerid][data_START_JOB] = 8;
		        SetPlayerSkinAC(playerid, 254);
		    }
		}
		case dialog_PROD_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
			    SendClientMessage(playerid, 0xffcd00FF, "Вы завершили рабочий день");
				PI[playerid][data_START_JOB] = 0;
				if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				if(PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID) {
					new car = PI[playerid][data_RENTJOB];
					CAR_DATA[car][data_RENT] = INVALID_PLAYER_ID;
					PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
					SetVehicleToRespawn(car);
				}
		    }
		}
		case dialog_ASHAN_STARTJOB: {
		    if(!response) return 1;
		    if(response) {
		        SetPVarInt(playerid, "tovar", 0);
		        SetPVarInt(playerid, "all_tovar", 0);
		        PI[playerid][data_START_JOB] = 1;
		        SetPlayerSkinAC(playerid, 254);
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
		        switch(random(2)) {
			 	 	case 0: SetPlayerCheckpoint(playerid, 2719.6956,-2325.5881,17.9660, 2.0);
			 	 	case 1: SetPlayerCheckpoint(playerid, 2742.4841,-2357.4810,17.9660, 2.0);
		 	 	}
		 	 	SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Отправляйтесь на склад за товаром");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
		    }
		}
		case dialog_ASHAN_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
				if(PI[playerid][data_VIP] == 1) {
					new str_1[256];
					format(str_1,sizeof(str_1),"Вы завершили рабочий день. Доставлено товаров: %d шт. Ваша зарплата: %d рублей {f00e5d}(x2)",GetPVarInt(playerid,"all_tovar"),GetPVarInt(playerid,"all_tovar")*360*2*2);
    				SendClientMessage(playerid, 0xffcd00FF, str_1);
					give_player_money(playerid, GetPVarInt(playerid,"all_tovar")*360*2*2,"#6",6663);
				}
				else {
					new str_1[256];
				    format(str_1,sizeof(str_1),"Вы завершили рабочий день. Доставлено товаров: %d шт. Ваша зарплата: %d рублей",GetPVarInt(playerid,"all_tovar"),GetPVarInt(playerid,"all_tovar")*360*2);
					SendClientMessage(playerid, 0xffcd00FF, str_1);
					give_player_money(playerid, GetPVarInt(playerid,"all_tovar")*360*2,"#6",6669);
				}
                DeletePVar(playerid,"ac_timer");
				DeletePVar(playerid, "tovar");
				DeletePVar(playerid, "all_tovar");
				SetPlayerSpecialAction(playerid, 0);
				PI[playerid][data_START_JOB] = 0;
				if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			 	DisablePlayerCheckpoint(playerid);
		    }
		}
		case dialog_PRODMENU:
		{
		    if(!response) return 1;
		    if(response)
	  		{
	  		    switch(listitem)
	  		    {
	  		        case 0:
	  		        {
	  		            new bugfix,dtext[256];
	  		            for(new b = 0; b < TotalBusiness; b++)
	  		            {
							if(BUSINESS_DATA[b][data_PROD] < 900 && BUSINESS_DATA[b][data_OWNED] == 1)
							{
								if(BUSINESS_DATA[b][data_TYPE] != 1) format(dtext,sizeof(dtext),"%s{99FF00}%s (ID %d){252525} требуется: {f00e5d}%d {252525}шт, цена: {f00e5d}%d рублей\n",dtext,BUSINESS_DATA[b][data_NAME], b+1, 1000-BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_PRICEPROD]);
								else format(dtext,sizeof(dtext),"%s{99FF00}%s (ID %d){252525} требуется: {f00e5d}%d {252525}л, цена: {f00e5d}%d рублей\n",dtext,BUSINESS_DATA[b][data_NAME], b+1, 1000-BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_PRICEPROD]);
								bugfix = 1;
							}
	  		            }
	  		            if(bugfix == 1) ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Мониторинг", dtext, "Закрыть", "");
						else ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Мониторинг", "В данный момент нет новых заказов", "Закрыть", "");
				  	}
				  	case 1:
	  		        {
	  		            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CG, "Нужно находится внутри тягача");
						new car = GetPlayerVehicleID(playerid);
						new type[25],dtext[80];
						switch(CAR_DATA[car][data_GRUZ])
						{
						    case 0: type = "Нет";
							case 1: type = "Топливо";
							case 2: type = "Товары для 24/7";
							case 3: type = "Брендовая одежда";
							case 4: type = "Оружие и патроны";
						}
						format(dtext,sizeof(dtext),"Объем груза: %d ед.\nТип товара: %s", CAR_DATA[car][data_KOLVO], type);
	  		            ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"Информация о грузе",dtext, "Закрыть", "");
				  	}
				  	case 2: ShowPlayerDialog(playerid, dialog_PRODMENU_1, DIALOG_STYLE_LIST,"{f00e5d}Навигатор", "Главный склад\nПоиск бизнеса", "Выбрать", "Отмена");
	  		    }
	  		}
		}
		case dialog_PRODMENU_1: {
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
				        SetPVarFloat(playerid, "gps_pos_x", 2398.9829);
						SetPVarFloat(playerid, "gps_pos_y", -971.9788);
						SetPVarFloat(playerid, "gps_pos_z", 2.1992);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2398.9829, -971.9788, 2.1992, 5.0);
				        SendClientMessage(playerid, 0x006400FF, "Главный склад отмечен на карте");
			        }
					case 1: ShowPlayerDialog(playerid, dialog_PRODMENU_2, DIALOG_STYLE_INPUT,"{f00e5d}Поиск бизнеса", "Введите номер бизнеса", "Найти", "Отмена");
			    }
			}
		}
		case dialog_PRODMENU_2: {
		    if(!response) return 1;
		    if(response) {
		        if(strval(inputtext) < 1 || strval(inputtext) > TotalBusiness) return SendClientMessage(playerid, CG, "Бизнес не найден");
				new b = strval(inputtext)-1;
                SetPVarFloat(playerid, "gps_pos_x", BUSINESS_DATA[b][data_ENTERX]);
				SetPVarFloat(playerid, "gps_pos_y", BUSINESS_DATA[b][data_ENTERY]);
				SetPVarFloat(playerid, "gps_pos_z", BUSINESS_DATA[b][data_ENTERZ]);
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid,BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],5.0);
				SendClientMessage(playerid, 0x006400FF, "Бизнес был отмечен на карте");
			}
		}
  		case dialog_CASINO: {
			if(!response) return 1;
			if(response) {
			    if(PI[playerid][data_OPENCASINO] == false) return 1;
			    if(casino_update[playerid] != 0) return SendClientMessage(playerid, CG, "Дождитесь окончания игры");
				if(get_player_money(playerid) < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
			    if(strval(inputtext) < 1000 || strval(inputtext) > 100000) return SendClientMessage(playerid, CG, "Сумма ставки должна быть от 1000 до 100000 рублей");
				new str_1[25];
				new str_3[25];
				casino_stavka[playerid] = strval(inputtext);
				give_player_money(playerid, -casino_stavka[playerid], "co#1",6763);
				casino_update[playerid] = 0;
 				format(str_1, sizeof(str_1), "%d RUB", get_player_money(playerid));
 				format(str_3, sizeof(str_3), "%d RUB", casino_stavka[playerid]);
	    		PlayerTextDrawSetString(playerid,casino_money[playerid][0],str_1);
	    		PlayerTextDrawSetString(playerid,casino_money[playerid][1],str_3);
	    		casino_timer[playerid] = SetTimerEx("CasinoUpdate", 100, true, "d", playerid);
			}
		}
		case dialog_CATER: {
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
						if(PI[playerid][data_DRINK] <= 90) PI[playerid][data_DRINK] += 0;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил спранк",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил спранк", 0xFF99CCFF, 20.0, 4000);
					}
		         	case 1: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил кофе",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил кофе", 0xFF99CCFF, 20.0, 4000);
			        }
			       	case 2: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил пиво",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил пиво", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+1000);
			        }
			        case 3: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил водку",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил водку", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
			        }
			        case 4: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил вино",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил вино", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000)SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+3000);
			        }
			        case 5: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил коньяк",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил коньяк", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+4000);
			        }
			        case 6: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил виски",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил виски", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);

			        }
			        case 7: {
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
						new str_1[44];
						format(str_1,sizeof(str_1),"%s выпил ром",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил ром", 0xFF99CCFF, 20.0, 4000);
	                    if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+10000);
			        }
			    }
			}
		}

		case dialog_DREV_STARTJOB: {
		    if(!response) return 1;
		    if(response) {
		        PI[playerid][data_START_JOB] = 2;
				switch(listitem) {
				    case 0: {
				        SetPVarInt(playerid, "tovar", 0);
				        SetPVarInt(playerid, "all_tovar", 0);
				        SetPlayerSkinAC(playerid, 254);
				        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
				        if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid, 2);
		    			PreloadAnimLib(playerid,"CHAINSAW");
				        switch(random(4)) {
					 	 	case 0: SetPlayerCheckpoint(playerid, 2343.2356,-618.4960,12.0020, 2.0);
					 	 	case 1: SetPlayerCheckpoint(playerid, 2350.2246,-627.0235,12.0020, 2.0);
					 	 	case 2: SetPlayerCheckpoint(playerid, 2330.1829,-614.6138,12.0020, 2.0);
					 	 	case 3: SetPlayerCheckpoint(playerid, 2324.1658,-621.3287,12.0020, 2.0);
				 	 	}
				 	 	SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. На вашем радаре отмечена красная метка, отправляйтесь туда и приступайте к работе");
						SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
					}
					case 1:
					{
					    if(PI[playerid][data_LICB] == 0) return SendClientMessage(playerid, CG, "У Вас нет водительских прав");
					    SetPVarInt(playerid, "job_bus", 1);
					    SetPVarInt(playerid, "all_tovar", 0);
					    SetPlayerSkinAC(playerid, 254);
				        SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Возьмите автомобиль и отправляйтесь в Южный на ЖД вокзал");
						SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
					}
				}
			}
		}
		case dialog_DREV_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
		        if(GetPVarInt(playerid, "job_bus") == 0) {
			        new money = GetPVarInt(playerid,"all_tovar")*JB_DATA[0][data_JOB_MONEY];
			        if(JB_DATA[0][data_BANK] >= money) {
			            if(PI[playerid][data_VIP] == 1 || X2DAY == true) {
							SendClientMessagef(playerid, 0xffcd00FF, "Вы завершили рабочий день. Доставлено древесины: {3377cc}%d кг{ffcd00}. Ваша зарплата: {3377cc}%d{ffcd00} рублей {f00e5d}(x2)",GetPVarInt(playerid,"all_tovar"),money*8);
							give_player_money(playerid, money*8,"#7",6900);
						}
						else {
							SendClientMessagef(playerid, 0xffcd00FF, "Вы завершили рабочий день. Доставлено древесины: {3377cc}%d кг{ffcd00}. Ваша зарплата: {3377cc}%d{ffcd00} рублей",GetPVarInt(playerid,"all_tovar"),money*4);
							give_player_money(playerid, money*4,"#7",6904);
						}
						JB_DATA[0][data_BANK] -= money;
						JB_DATA[0][data_ZATRATY] += money;
					}
					else if(JB_DATA[0][data_BANK] < money) {
						SendClientMessagef(playerid, 0xffcd00FF, "Вы завершили рабочий день. Доставлено древесины: {3377cc}%d кг",GetPVarInt(playerid,"all_tovar"));
						SendClientMessage(playerid, COLOR_AC, "К сожалению у владельца предприятия закончились деньги");
					}
                    SetPlayerSpecialAction(playerid, 0);
                    DeletePVar(playerid,"ac_timer");
     				DeletePVar(playerid, "tovar");
					DeletePVar(playerid, "all_tovar");
					PI[playerid][data_START_JOB] = 0;
					if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
					else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
					if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
					if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
				 	DisablePlayerCheckpoint(playerid);
				}
				else {
				    new money = GetPVarInt(playerid,"all_tovar")*JB_DATA[0][data_BUS_MONEY];
			        if(JB_DATA[0][data_BANK] >= money) {
						SendClientMessagef(playerid, 0xffcd00FF, "Вы завершили рабочий день. Доставлено: {3377cc}%d человек{ffcd00}. Ваша зарплата: {3377cc}%d рублей",GetPVarInt(playerid,"all_tovar"),money*8);
						give_player_money(playerid, money*8,"#8",6928);
						JB_DATA[0][data_BANK] -= money;
						JB_DATA[0][data_ZATRATY] += money;
					}
					else if(JB_DATA[0][data_BANK] < money) {
						SendClientMessagef(playerid, 0xffcd00FF, "Вы завершили рабочий день. Доставлено: {3377cc}%d человек",GetPVarInt(playerid,"all_tovar"));
						SendClientMessage(playerid, COLOR_AC, "К сожалению у владельца предприятия закончились деньги");
					}
					DeletePVar(playerid,"ac_timer");
	    			DeletePVar(playerid, "job_bus");
     				DeletePVar(playerid, "all_tovar");
					PI[playerid][data_START_JOB] = 0;
					if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
					else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				 	DisablePlayerCheckpoint(playerid);
				 	if(PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID) {
						new car = PI[playerid][data_RENTJOB];
					    CAR_DATA[car][data_RENT] = INVALID_PLAYER_ID;
					    PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
					    SetVehicleToRespawn(car);
					}
				}
		    }
		}
		case dialog_SHAHTA_STARTJOB: {
		    if(!response) return 1;
		    if(response) {
		        PI[playerid][data_START_JOB] = 3;
		        PreloadAnimLib(playerid,"BASEBALL");
		        SetPVarInt(playerid, "all_tovar", 0);
		        SetPVarInt(playerid, "tovar", 0);
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
		        SetPlayerAttachedObject(playerid, 1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
		        SetPlayerSkinAC(playerid, 254);
		        new pos = random(5);
		        SetPVarInt(playerid, "karier_pos", pos);
		        SetPlayerCheckpoint(playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2], 2.0);
		 	 	SendClientMessage(playerid, 0xffcd00FF, "Вы начали работу шахтёра");
				SendClientMessage(playerid, 0xffcd00FF, "Добывайте железную и угольную руду в шахте");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
			}
		}
		case dialog_AB: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
		                new b = PI[playerid][data_AB];
					    new str_1[256];
						new str_3[256];
					    format(str_1,sizeof(str_1),"Автобаза: '%s'\n",AB_DATA[b][data_NAME]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"Владелец: %s\n",AB_DATA[b][data_OWNER]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"Стоимость: {c89522}%d рублей\n\n",AB_DATA[b][data_PRICE]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"Зарплата водителей: {c89522}%d процентов\n",AB_DATA[b][data_PROCENT]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"Прибыль автобазы за сегодня: {c89522}%d рублей\n",AB_DATA[b][data_PRIBYL]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"На счету автобазы: {c89522}%d рублей\n",AB_DATA[b][data_BANK]);
						strcat(str_3,str_1);
					    ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{c89522}Статистика автобазы",str_3, "Закрыть", "");
		            }
					case 1: {
					    new b = PI[playerid][data_AB];
						new str_3[144];
						for(new d = 0; d < 7; d++) {
						    if(AB_DATA[b][data_MODEL_JOB][d] == 0) strcat(str_3,"{33FF99}Место свободно\n");
						    else strcat(str_3,"{FF6666}Место занято\n");
						}
					    ShowPlayerDialog(playerid, dialog_AB_1, DIALOG_STYLE_LIST,"{c89522}Управление автопарком",str_3, "Выбрать", "Отмена");
					}
					case 2: {
					    new b = PI[playerid][data_AB];
						new str_3[185];
						format(str_3,sizeof(str_3),"Зарплата: %d процент(ов)\n{FFCC33}Это процент который будет отдаваться водителям с чистой прибыли от продажи груза\n\n{252525}Введите в окошко новую цену", AB_DATA[b][data_PROCENT]);
					    ShowPlayerDialog(playerid, dialog_AB_5, DIALOG_STYLE_INPUT,"{c89522}Зарплата водителей",str_3, "Изменить", "Отмена");
					}
					case 3: {
					    new b = PI[playerid][data_AB];
						new str_3[185];
						format(str_3,sizeof(str_3),"Баланс: %d рублей\nВведите сумму, которую желаете снять со счета",AB_DATA[b][data_BANK]);
					    ShowPlayerDialog(playerid, dialog_AB_7, DIALOG_STYLE_INPUT,"{c89522}Снять деньги со счета",str_3, "Снять", "Отмена");
					}
					case 4: ShowPlayerDialog(playerid, dialog_AB_8, DIALOG_STYLE_INPUT,"{c89522}Положить деньги на счет","Введите сумму, которую желаете положить счет", "Положить", "Отмена");
					case 5: {
					    new b = PI[playerid][data_AB];
						new str_3[95];
						format(str_3,sizeof(str_3),"Вы желаете продать свою автобазу за %d рублей?",AB_DATA[b][data_PRICE]/2);
					    ShowPlayerDialog(playerid, dialog_AB_4, DIALOG_STYLE_MSGBOX,"{c89522}Продажа автобазы",str_3, "Продать", "Отмена");
					}
		        }
		    }
		}
		case dialog_AB_7: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_AB];
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		        if(AB_DATA[b][data_BANK] < strval(inputtext)) return SendClientMessage(playerid, CG, "Недостаточно средств на счету предприятия");
                AB_DATA[b][data_BANK] -= strval(inputtext);
                give_player_money(playerid, strval(inputtext), "#86",7030);
			}
		}
		case dialog_AB_8: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_AB];
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		        if(get_player_money(playerid) < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно средств на руках");
                AB_DATA[b][data_BANK] += strval(inputtext);
                give_player_money(playerid, -strval(inputtext), "#87",7040);
			}
		}
	    case dialog_AB_1: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_AB];
				SetPVarInt(playerid, "listitem",listitem);
                if(AB_DATA[b][data_MODEL_JOB][listitem] == 0) ShowPlayerDialog(playerid, dialog_AB_2, DIALOG_STYLE_MSGBOX,"{f00e5d}Покупка тягача","Вы желаете приобрести новый тягач?\nДанная услуга будет Вам стоить: 200000 рублей", "Купить", "Отмена");
				else ShowPlayerDialog(playerid, dialog_AB_3, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа тягача","Вы желаете продать один из тягачей автобазы?\nВам будет выплачено: 150000 рублей", "Продать", "Отмена");
		    }
		}
		case dialog_AB_2: {
		    if(!response) return 1;
		    if(response) ShowPlayerDialog(playerid, dialog_AB_6, DIALOG_STYLE_LIST,"{f00e5d}Выберете тягач","403\n514\n515", "Купить", "Отмена");
		}
		case dialog_AB_6: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_AB];
				new list = GetPVarInt(playerid, "listitem");
				switch(listitem) {
				    case 0: AB_DATA[b][data_MODEL_JOB][list] = 403;
				    case 1: AB_DATA[b][data_MODEL_JOB][list] = 514;
				    case 2: AB_DATA[b][data_MODEL_JOB][list] = 515;
				}
				if(AB_DATA[b][data_BANK] < 200000) return SendClientMessage(playerid, CG, "На счету автобазы недостаточно денег");
				AB_DATA[b][data_BANK] -= 200000;
				SendClientMessage(playerid, 0x00CC99FF, "Вы купили новый тягач для автобазы за 200000 рублей");
				SendClientMessage(playerid, 0x00CC99FF, "Деньги были сняты со счета Вашей автобазы");
				AB_DATA[b][data_VEH_JOB][list] = CreateVehicle(AB_DATA[b][data_MODEL_JOB][list], AB_DATA[b][data_CAR_POSX][list], AB_DATA[b][data_CAR_POSY][list], AB_DATA[b][data_CAR_POSZ][list], AB_DATA[b][data_CAR_POSA][list], -1, -1, 600);
                ClearCarData(AB_DATA[b][data_VEH_JOB][list]);
                CAR_DATA[AB_DATA[b][data_VEH_JOB][list]][data_FUEL] = 50;
                SaveABData(b);
		    }
		}
        case dialog_GUN_POLICE: {
			if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
    					if(PI[playerid][data_MEMBER] == 3 && PI[playerid][data_RANK] == 1) return SendClientMessage(playerid, CG, "На первом ранге данное оружие недоступно");
						GiveWeapon(playerid, 24, 50);
					}
			        case 1: {
					    if(PI[playerid][data_MEMBER] == 3 && PI[playerid][data_RANK] == 1) return SendClientMessage(playerid, CG, "На первом ранге данное оружие недоступно");
						GiveWeapon(playerid, 29, 250);
					}
			        case 2:GiveWeapon(playerid, 3, 1);
			        case 3:SetPlayerHealthAC(playerid, 100);
			        case 4:SetPlayerArmourAC(playerid, 100);
			        case 5: {
			            if(shield[playerid] == false) {
	                        SetPlayerAttachedObject(playerid, 1, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0);
	                        shield[playerid] = true;
	                    }
			        }
			        case 6:GiveWeapon(playerid, 12, 1);
			    }
			    if(PI[playerid][data_MEMBER] == 3 || PI[playerid][data_MEMBER] == 8) return ShowPlayerDialog(playerid, dialog_GUN_POLICE, DIALOG_STYLE_LIST, "{f00e5d}Склад", "Убойный пистолет (50 патрон)\nАвтомат (250 патрон)\nДубинка\nАптечка\nБронежилет\nЗащитный щит\nЖезл", "Выбрать", "Отмена");
			    else ShowPlayerDialog(playerid, dialog_GUN_POLICE, DIALOG_STYLE_LIST, "{f00e5d}Склад", "Убойный пистолет (50 патрон)\nАвтомат (250 патрон)\nДубинка\nАптечка\nБронежилет\nЗащитный щит", "Выбрать", "Отмена");
			}
		}
		case 9317: {
			if(!response) return 1;
	        if(response) {
	        	switch(listitem) {
					case 0: CarPass(playerid);
					case 1: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Руководство по эксплуатации", "\
					{252525}Этот гайд поможем Вам изучить управление новым транспортом.\n\
					{252525}Меню личного транспорта - команда {f00e5d}/car\n\n\
					{3377cc}1. Загрузка:\n\
					{252525}Чтобы загрузить транспорт выйдите из автосалона на парковку, затем введите {f00e5d}/car{252525},\n\
					{252525}найдите в списке {f00e5d}'%s'{252525} и нажмите 'Загрузить'. Транспорт повявится на парковке.\n\n\
					{3377cc}2. Выгрузка:\n\
					{252525}Чтобы выгрузить транспорт введите {f00e5d}/car{252525} и выберите пункт 'Выгрузить'.\n\
					{252525}Транспорт будет автоматически выгружен в случае выхода из игры.\n\n\
					{3377cc}3. Ключ зажигания:\n\
					{252525}Вставив ключ зажигания {f00e5d}(команда /key){252525}, Вы сможете завести двигатель.\n\
					{252525}Обратите внимание, что если Ваш  транспорт будет открыт, его сможет угнать другой игрок!\n\n\
					{3377cc}4. Центральный замок:\n\
					{252525}Открытие и закрытие дверей осуществляется {f00e5d}командой /lock{252525}.\n\
					{252525}Для управления центральным замком необходимо находиться рядом с транспортом\n\n\
					{3377cc}5. Парковка:\n\
					{252525}Вы можете припарковать Ваш транспорт командой {f00e5d}/park{252525} практически везде.\n\
					{252525}После парковки транспорт будет загружаться на новой позиции (например, около дома).\n\n\
					{f00e5d}Удачи на дороне, соблюдайте Правила Дорожного Движения!", "Закрыть", "");
					case 2: callcmd::lock(playerid);
					case 3: SendClientMessage(playerid, 0xFFFF00, "В разработке. {f00e5d}Приятной игры на Arcana РП");
					case 4: SendClientMessage(playerid, 0xFFFF00, "В разработке. {f00e5d}Приятной игры на Arcana РП");
					case 5: ShowPlayerDialog(playerid, 1352, DIALOG_STYLE_LIST, "{f00e5d}Отбуксировать транспорт", "1. Отбуксировать к дому / квартире\n2. Отбуксировать к автосалону", "Далее", "Назад");
					case 6: SendClientMessage(playerid, 0xFFFF00, "В разработке. {f00e5d}Приятной игры на Arcana РП");
					case 7: callcmd::park(playerid);
					case 8: callcmd::sellcar(playerid);
	        		case 9: ShowPlayerDialog(playerid, 9318, DIALOG_STYLE_MSGBOX, "{f00e5d}Отметить транспорт", "Вы действительно хотите выгрузить свой личный транспорт?\n\nПри следующий загрузке, машина будет загружена на месте её парковки.", "Да", "Нет");
				}
	        }
	    }
	    case 1352: {
			if(!response) return 1;
	        if(response) {
				switch(listitem) {
				    case 0: {
						if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
						give_player_money(playerid, 750,"#91",7144);
				    }
				    case 1: give_player_money(playerid, 1500,"#92",7146), SetVehiclePos(PI[playerid][data_VEH], 2303.4094, -1822.8162, 22.2802);
				}
			}
	    }
	    case 9318: {
			if(!response) return 1;
	        if(response) {
				if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) {
					DestroyVehicle(PI[playerid][data_VEH]);
					PI[playerid][data_VEH] = INVALID_VEHICLE_ID;
					SendClientMessage(playerid, 0x00aa33AA, "Ваш личный транспорт выгружен");
				}
			}
	    }
	    case dialog_FIXCAR: {
	        if(!response) return 1;
	        if(response) {
                if(PlayerToPoint(20.0, playerid, PI[playerid][data_CAR_POSX],PI[playerid][data_CAR_POSY],PI[playerid][data_CAR_POSZ])) {
		            new c = listitem;
		            SetPVarInt(playerid, "c", listitem);
	             	if(PI[playerid][data_CAR][c] == 0) return SendClientMessage(playerid,CG,"Слот  транспорта пуст");
	             	ShowPlayerDialog(playerid, 9216, DIALOG_STYLE_MSGBOX, "{f00e5d}Загрузка транспорта", "Вы находитесь рядом с парковкой Вашего транспорта.\n\n{f00e5d}Хотите загрузить его?", "Далее", "Назад");
	           	}
				else ShowPlayerDialog(playerid, 9217, DIALOG_STYLE_MSGBOX, "{f00e5d}Отметить транспорт", "Вы находитесь слишком далеко от своего транспорта\n\n{f00e5d}Вы хотите его отметить на мини-карте?", "Далее", "Назад");
	        }
	    }
		case 9217:	{
	        if(!response) return callcmd::car(playerid);
	        if(response) {
	        	DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpoint(playerid, PI[playerid][data_CAR_POSX],  PI[playerid][data_CAR_POSY],  PI[playerid][data_CAR_POSZ]+1,5.0);
			}
		}
		case 9216:	{
	        if(!response) return callcmd::car(playerid);
	        if(response) {
	        	new c = GetPVarInt(playerid, "c");
             	if(PI[playerid][data_CAR][c] == 0) return SendClientMessage(playerid,CG,"Слот  транспорта пуст");
				if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][data_VEH]);
			   	if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
			   	    DestroyVehicle(PI[playerid][data_VEH]);
 	   				new Float:x, Float:y, Float:z, Float:a;
			   	    GetPlayerPos(playerid, x, y, z);
			   	    GetPlayerFacingAngle(playerid, a);
			   	    PI[playerid][data_VEH] = CreateVehicle(PI[playerid][data_CAR][c], PI[playerid][data_CAR_POSX],  PI[playerid][data_CAR_POSY],  PI[playerid][data_CAR_POSZ]+1, PI[playerid][data_CAR_ANGLE], PI[playerid][data_CAR_COLOR1][c], PI[playerid][data_CAR_COLOR2][c], 360000);
                    new car = PI[playerid][data_VEH];
					ClearCarData(car);
					CAR_DATA[car][data_FUEL] = PI[playerid][data_CARFUEL][c];
					SetPVarInt(playerid, "CarLoadSlot", c);
			    }
			    else if(PI[playerid][data_KV] != INVALID_KV_ID) {
			   	    DestroyVehicle(PI[playerid][data_VEH]);
			   	    new Float:x, Float:y, Float:z, Float:a;
			   	    GetPlayerPos(playerid, x, y, z);
			   	    GetPlayerFacingAngle(playerid, a);
			   	    PI[playerid][data_VEH] = CreateVehicle(PI[playerid][data_CAR][c], PI[playerid][data_CAR_POSX],  PI[playerid][data_CAR_POSY],  PI[playerid][data_CAR_POSZ]+1, PI[playerid][data_CAR_ANGLE], PI[playerid][data_CAR_COLOR1][c], PI[playerid][data_CAR_COLOR2][c], 360000);
					new car = PI[playerid][data_VEH];
			        ClearCarData(car);
					CAR_DATA[car][data_FUEL] = PI[playerid][data_CARFUEL][c];
					SetPVarInt(playerid, "CarLoadSlot", c);
			   	}
				SendClientMessage(playerid, CG, "Ваш транспорт загружен, /car");
		    }
			else SendClientMessage(playerid, CG, "Транспорт был припаркован слишком далеко");
		}
		case dialog_AB_3: {
		    if(!response) return 1;
		    if(response) {
                new b = PI[playerid][data_AB];
                new list = GetPVarInt(playerid, "listitem");
				DestroyVehicle(AB_DATA[b][data_VEH_JOB][list]);
				AB_DATA[b][data_VEH_JOB][list] = INVALID_VEHICLE_ID;
				AB_DATA[b][data_MODEL_JOB][list] = 0;
				AB_DATA[b][data_BANK] += 150000;
				SendClientMessage(playerid, 0x00CC99FF, "Вы продали один из автомобилей предприятия за 150000 рублей");
				SendClientMessage(playerid, 0x00CC99FF, "Деньги были добавлены на счет Вашего предприятия");
				SaveABData(b);
		    }
		}
		case dialog_BUY_CAR: {
		    if(!response) return 1;
		    if(response) {
				switch(listitem) {
				    case 0: {
						new str_3[365];
						format(str_3,sizeof(str_3),"Вы хотите купить {3377cc}'%s'{252525} за {3377cc}'%d'{252525} донат-поинтов?\nСтоимость: {3377cc}%d в руб\n{252525}Скорость машины - {3377cc}%d км/час\n\n{696969}Обратите внимание: отменить это действие будет невозможно!",
						VehicleNames[autosalon_cars[PI[playerid][data_CHANGECAR]][asModel]-400], autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate], autosalon_cars[PI[playerid][data_CHANGECAR]][asCena], autosalon_cars[PI[playerid][data_CHANGECAR]][asSpeed]);
				        ShowPlayerDialog(playerid, dialog_BUY_CAR_2, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка транспорта",str_3, "Купить", "Отмена");
				    }
				    case 1: {
						new str_3[365];
				        format(str_3,sizeof(str_3),"Вы хотите купить {3377cc}'%s'{252525} за {3377cc}'%d'{252525} руб?\nСтоимость: {3377cc}%d в arcana\n{252525}Скорость машины - {3377cc}%d км/час\n\n{696969}Обратите внимание: отменить это действие будет невозможно!",
						VehicleNames[autosalon_cars[PI[playerid][data_CHANGECAR]][asModel]-400], autosalon_cars[PI[playerid][data_CHANGECAR]][asCena], autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate], autosalon_cars[PI[playerid][data_CHANGECAR]][asSpeed]);
						ShowPlayerDialog(playerid, dialog_BUY_CAR_1, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка транспорта",str_3, "Купить", "Отмена");
					}
				}
			}
		}
		case dialog_BUY_CAR_3:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_BUY_CAR_3, DIALOG_STYLE_LIST, "{f00e5d}Цвет транспорта", "{252525}1. {000000}|||\n{252525}2. {263739}|||\n{252525}3. {8494ab}|||\n{252525}4. {f5f5f5}|||\n{252525}5. {395a83}|||\n{252525}6. {0e316d}|||\n{252525}7. {993e4d}|||\n{252525}8. {473532}|||\n{252525}9. {d78e10}|||\n{252525}10. {193826}|||", "Выбрать", "");
		    if(response)
			{
		    	switch(listitem) {
					case 0: SetPVarInt(playerid, "colorauto", 0);
					case 1: SetPVarInt(playerid, "colorauto", 4);
					case 2: SetPVarInt(playerid, "colorauto", 32);
					case 3: SetPVarInt(playerid, "colorauto", 1);
					case 4: SetPVarInt(playerid, "colorauto", 87);
					case 5: SetPVarInt(playerid, "colorauto", 79);
					case 6: SetPVarInt(playerid, "colorauto", 161);
					case 7: SetPVarInt(playerid, "colorauto", 40);
					case 8: SetPVarInt(playerid, "colorauto", 6);
					case 9: SetPVarInt(playerid, "colorauto", 44);
				}
				for(new c = 0; c < 3; c++)
				{
				    if(PI[playerid][data_CAR][c] == 0)
				    {
						PI[playerid][data_CAR][c] = autosalon_cars[PI[playerid][data_CHANGECAR]][asModel];
						PI[playerid][data_CAR_COLOR1][c] = PI[playerid][data_ONECOLOR_AS];
						PI[playerid][data_CAR_COLOR2][c] = PI[playerid][data_TWOCOLOR_AS];
						DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
						PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
						HideAutoSalonMenu(playerid);
						if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][data_VEH]);
						PI[playerid][data_VEH] = CreateVehicle(PI[playerid][data_CAR][c], 2305.5500, -1774.2261, 22.3662, 92.8394, GetPVarInt(playerid, "colorauto"), GetPVarInt(playerid, "colorauto"), 36000);
						ClearCarData(PI[playerid][data_VEH]);
                        PI[playerid][data_CARFUEL][c] = 50;
						PI[playerid][data_CAR_COLOR1][GetPVarInt(playerid, "car")] = GetPVarInt(playerid, "colorauto");
						PI[playerid][data_CAR_COLOR2][GetPVarInt(playerid, "car")] = GetPVarInt(playerid, "colorauto");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPosAC(playerid, 418.539215, 340.131256, 11.812386);
						PutPlayerInVehicleAC(playerid, PI[playerid][data_VEH], 0);
						SetCameraBehindPlayer(playerid);
						SetCarPark(playerid);
						//
						new sum = autosalon_cars[PI[playerid][data_CHANGECAR]][asCena];
						new bizmoney = sum+sum*15/100;
						new b = GetPVarInt(playerid,"business");
						BUSINESS_DATA[b][data_BANK] += bizmoney;
					    UpdateBusinessData(b);
						//
						new str_1[144];
						format(str_1,sizeof(str_1),"Вы успешно купили {fe9a7e}'%s'{00aa33} за {fe9a7e}%d руб", VehicleNames[autosalon_cars[PI[playerid][data_CHANGECAR]][asModel]-400],autosalon_cars[PI[playerid][data_CHANGECAR]][asCena]);
						SendClientMessage(playerid, 0x00aa33AA, str_1);
						SendClientMessage(playerid, 0x00aa33AA, "Повторно прочитать руководство по эксплуатации можно в меню трансорта {fe9a7e}(/car)");
						new logtext[64];
					    format(logtext,sizeof(logtext),"купил автомобиль ID:%d за %d рублей",PI[playerid][data_CAR][c],autosalon_cars[PI[playerid][data_CHANGECAR]][asCena]);
					    AddLog("log_player",PI[playerid][data_NAME], logtext);
						CarInfo(playerid);
					    return true;
					}
			    }
		    }
		}
		case dialog_BUY_CAR_2: {
		    if(!response) return 1;
		    if(response) {
		    	for(new c = 0; c < 2; c++) {
				    if(PI[playerid][data_CAR][c] == 0) {
				        SetPVarInt(playerid, "car", c);
				        if(PI[playerid][data_DONATE] < autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate]) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка оплаты", "У Вас нет нужного количества донат-поинтов для покупки данного автомобиля!", "Закрыть", "");
						ShowPlayerDialog(playerid, dialog_BUY_CAR_4, DIALOG_STYLE_LIST, "{f00e5d}Цвет транспорта", "{252525}1. {000000}|||\n{252525}2. {263739}|||\n{252525}3. {8494ab}|||\n{252525}4. {f5f5f5}|||\n{252525}5. {395a83}|||\n{252525}6. {0e316d}|||\n{252525}7. {993e4d}|||\n{252525}8. {473532}|||\n{252525}9. {d78e10}|||\n{252525}10. {193826}|||", "Выбрать", "");
						PI[playerid][data_DONATE] -= autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate];
				        new str_q[98];
			            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
		    			mysql_function_query(dbHandle, str_q, false, "", "");
					    return 1;
					}
				}
		    }
		}
		case dialog_BUY_CAR_4:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_BUY_CAR_4, DIALOG_STYLE_LIST, "{f00e5d}Цвет транспорта", "{252525}1. {000000}|||\n{252525}2. {263739}|||\n{252525}3. {8494ab}|||\n{252525}4. {f5f5f5}|||\n{252525}5. {395a83}|||\n{252525}6. {0e316d}|||\n{252525}7. {993e4d}|||\n{252525}8. {473532}|||\n{252525}9. {d78e10}|||\n{252525}10. {193826}|||", "Выбрать", "");
		    if(response)
			{
		    	switch(listitem) {
					case 0: SetPVarInt(playerid, "colorauto", 0);
					case 1: SetPVarInt(playerid, "colorauto", 4);
					case 2: SetPVarInt(playerid, "colorauto", 32);
					case 3: SetPVarInt(playerid, "colorauto", 1);
					case 4: SetPVarInt(playerid, "colorauto", 87);
					case 5: SetPVarInt(playerid, "colorauto", 79);
					case 6: SetPVarInt(playerid, "colorauto", 161);
					case 7: SetPVarInt(playerid, "colorauto", 40);
					case 8: SetPVarInt(playerid, "colorauto", 6);
					case 9: SetPVarInt(playerid, "colorauto", 44);
				}
				for(new c = 0; c < 3; c++)
				{
				    if(PI[playerid][data_CAR][c] == 0)
				    {
						PI[playerid][data_CAR][c] = autosalon_cars[PI[playerid][data_CHANGECAR]][asModel];
						PI[playerid][data_CAR_COLOR1][c] = PI[playerid][data_ONECOLOR_AS];
						PI[playerid][data_CAR_COLOR2][c] = PI[playerid][data_TWOCOLOR_AS];
						DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
						PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
						HideAutoSalonMenu(playerid);
						if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) DestroyVehicle(PI[playerid][data_VEH]);
						PI[playerid][data_VEH] = CreateVehicle(PI[playerid][data_CAR][c], 2305.5500, -1774.2261, 22.3662, 92.8394, GetPVarInt(playerid, "colorauto"), GetPVarInt(playerid, "colorauto"), 36000);
						ClearCarData(PI[playerid][data_VEH]);
                        PI[playerid][data_CARFUEL][c] = 50;
						PI[playerid][data_CAR_COLOR1][GetPVarInt(playerid, "car")] = GetPVarInt(playerid, "colorauto");
						PI[playerid][data_CAR_COLOR2][GetPVarInt(playerid, "car")] = GetPVarInt(playerid, "colorauto");
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPosAC(playerid, 418.539215, 340.131256, 11.812386);
						PutPlayerInVehicleAC(playerid, PI[playerid][data_VEH], 0);
						SetCameraBehindPlayer(playerid);
						SetCarPark(playerid);
						//
						new sum = autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate]*3000;
						new bizmoney = sum+sum*15/100;
						new b = GetPVarInt(playerid,"business");
						BUSINESS_DATA[b][data_BANK] += bizmoney;
					    UpdateBusinessData(b);
						//
						new str_1[144];
						format(str_1,sizeof(str_1),"Вы успешно купили {fe9a7e}'%s'{00aa33} за {fe9a7e}%d донат-поинтов", VehicleNames[autosalon_cars[PI[playerid][data_CHANGECAR]][asModel]-400],autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate]);
						SendClientMessage(playerid, 0x00aa33AA, str_1);
						SendClientMessage(playerid, 0x00aa33AA, "Повторно прочитать руководство по эксплуатации можно в меню трансорта {fe9a7e}(/car)");
						new logtext[64];
					    format(logtext,sizeof(logtext),"купил автомобиль ID:%d за %d рублей",PI[playerid][data_CAR][c],autosalon_cars[PI[playerid][data_CHANGECAR]][asCena]);
					    AddLog("log_player",PI[playerid][data_NAME], logtext);
						CarInfo(playerid);
					    return true;
					}
			    }
		    }
		}
		case dialog_BUY_CAR_1: {
		    if(!response) return 1;
		    if(response) {
		        if(get_player_money(playerid) < autosalon_cars[PI[playerid][data_CHANGECAR]][asCena]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				for(new c = 0; c < 2; c++) {
				    if(PI[playerid][data_CAR][c] == 0) {
				        SetPVarInt(playerid, "car", c);
				        if(PI[playerid][data_MONEY] < autosalon_cars[PI[playerid][data_CHANGECAR]][asCena]) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка оплаты", "У Вас нет нужного количества денег для покупки данного автомобиля!", "Закрыть", "");
						PI[playerid][data_MONEY] -= autosalon_cars[PI[playerid][data_CHANGECAR]][asCena];
						return ShowPlayerDialog(playerid, dialog_BUY_CAR_3, DIALOG_STYLE_LIST, "{f00e5d}Цвет транспорта", "{252525}1. {000000}|||\n{252525}2. {263739}|||\n{252525}3. {8494ab}|||\n{252525}4. {f5f5f5}|||\n{252525}5. {395a83}|||\n{252525}6. {0e316d}|||\n{252525}7. {993e4d}|||\n{252525}8. {473532}|||\n{252525}9. {d78e10}|||\n{252525}10. {193826}|||", "Выбрать", "");
					}
			    }

		    }
		}
		case dialog_AB_4:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_AB];
		      	AB_DATA[b][data_OWNED] = 0;
		      	PI[playerid][data_AB] = INVALID_AB_ID;
			 	strmid(AB_DATA[b][data_OWNER], "None", 0, strlen(AB_DATA[b][data_OWNER]), 24);
				give_player_money(playerid,AB_DATA[b][data_PRICE]/2,"#10",7404);
				new str_1[144];
				format(str_1,sizeof(str_1),"Вы продали автобазу государству за %d рублей", AB_DATA[b][data_PRICE]/2);
			 	SendClientMessage(playerid, 0xFFCC00AA, str_1);
				UpdateABData(b);
				SaveABData(b);
			  	SavePlayerData(playerid);
			  	new logtext[64];
				format(logtext,sizeof(logtext),"продал автобазу ID:%d", AB_DATA[b][data_ID]);
				AddLog("log_player",PI[playerid][data_NAME], logtext);

		    }
		}
		case dialog_AB_5:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_AB];
				if(strval(inputtext) <= 0 || strval(inputtext) > 100) return SendClientMessage(playerid, CG, "Нельзя меньше 1 и больше 100 процентов");
				AB_DATA[b][data_PROCENT] = strval(inputtext);
				new str_1[144];
				format(str_1,sizeof(str_1),"Новая зарплата рабочих: %d процент(ов)",AB_DATA[b][data_PROCENT]);
				SendClientMessage(playerid,0x99FF66FF,str_1);
				UpdateABText(b);
				SaveABData(b);
		    }
		}
		case dialog_JB:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
					{
					    new b = PI[playerid][data_JB];
					    new resurs[10];
						new str_1[512];
						new str_3[512];
					    switch(JB_DATA[b][data_ID])
					    {
					        case 1: resurs = "Древесина";
					        case 2: resurs = "Руда";
					        case 3: resurs = "Овощи";
					        case 4: resurs = "Фрукты";
					    }
					    format(str_1,sizeof(str_1),"{252525}Предприятие: ООО '%s'\n",JB_DATA[b][data_NAME]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Владелец: %s\n",JB_DATA[b][data_OWNER]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Стоимость: {66FF66}%d рублей\n\n",JB_DATA[b][data_PRICE]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Вид ресурсов: {FFCC33}%s\n",resurs);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Зарплата рабочих: {66FF66}%d рублей\n",JB_DATA[b][data_JOB_MONEY]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Зарплата водителей: {66FF66}%d рублей\n\n",JB_DATA[b][data_BUS_MONEY]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Ресурсов на складе: {0099FF}%d\n",JB_DATA[b][data_SKLAD]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Добыто ресурсов сегодня: {0099FF}%d\n\n",JB_DATA[b][data_RESURS]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Прибыль предприятия за сегодня: {66FF66}%d рублей\n",JB_DATA[b][data_PRIBYL]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}Затраты предприятия за сегодня: {66FF66}%d рублей\n",JB_DATA[b][data_ZATRATY]);
						strcat(str_3,str_1);
						format(str_1,sizeof(str_1),"{252525}На счету предприятия: {66FF66}%d рублей\n",JB_DATA[b][data_BANK]);
						strcat(str_3,str_1);
					    ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Статистика предприятия",str_3, "Закрыть", "");
					}
					case 1:
					{
					    new b = PI[playerid][data_JB];
						new str_3[185];
						for(new d = 0; d < 5; d++) {
						    if(JB_DATA[b][data_MODEL_JOB][d] == 0) strcat(str_3,"{33FF99}Место свободно\n");
						    else strcat(str_3,"{FF6666}Место занято\n");
						}
					    ShowPlayerDialog(playerid, dialog_JB_1, DIALOG_STYLE_LIST,"{f00e5d}Управление автопарком",str_3, "Выбрать", "Отмена");
					}
					case 2:
					{
					    new b = PI[playerid][data_JB];
						new str_3[185];
						format(str_3,sizeof(str_3),"Зарплата: %d рублей\nВведите в окошко новую зарплату",JB_DATA[b][data_JOB_MONEY]);
					    ShowPlayerDialog(playerid, dialog_JB_4, DIALOG_STYLE_INPUT,"{f00e5d}Зарплата рабочих",str_3, "Изменить", "Отмена");
					}
					case 3:
					{
					    new b = PI[playerid][data_JB];
						new str_3[185];
						format(str_3,sizeof(str_3),"Зарплата: %d рублей\nВведите в окошко новую зарплату",JB_DATA[b][data_BUS_MONEY]);
					    ShowPlayerDialog(playerid, dialog_JB_5, DIALOG_STYLE_INPUT,"{f00e5d}Зарплата водителей",str_3, "Изменить", "Отмена");
					}
					case 4:
					{
						new b = PI[playerid][data_JB];
						new str_3[256];
						switch(PI[playerid][data_JB]) {
						    case 0: {
								format(str_3,sizeof(str_3),"{252525}Вагонка ({66FF66}%d рублей{252525})\nДоска ({66FF66}%d рублей{252525})\nБрус ({66FF66}%d рублей{252525})",JB_DATA[b][data_SELL_PRICE][0],JB_DATA[b][data_SELL_PRICE][1],JB_DATA[b][data_SELL_PRICE][2]);
							    ShowPlayerDialog(playerid, dialog_JB_6, DIALOG_STYLE_LIST,"{f00e5d}Стоимость ресурсов",str_3, "Изменить", "Отмена");
						    }
						    case 1: {
								format(str_3,sizeof(str_3),"Руда ({66FF66}%d рублей{252525})",JB_DATA[b][data_SELL_PRICE][0]);
							    ShowPlayerDialog(playerid, dialog_JB_6, DIALOG_STYLE_LIST,"{f00e5d}Стоимость ресурсов",str_3, "Изменить", "Отмена");
						    }
						    case 2: {
								format(str_3,sizeof(str_3),"{252525}Яблоки ({66FF66}%d рублей{252525})\nСливы ({66FF66}%d рублей{252525})\nПерсики ({66FF66}%d рублей{252525})\nАпельсины ({66FF66}%d рублей{252525})",JB_DATA[b][data_SELL_PRICE][0],JB_DATA[b][data_SELL_PRICE][1],JB_DATA[b][data_SELL_PRICE][2],JB_DATA[b][data_SELL_PRICE][3]);
							    ShowPlayerDialog(playerid, dialog_JB_6, DIALOG_STYLE_LIST,"{f00e5d}Стоимость ресурсов",str_3, "Изменить", "Отмена");
						    }
						    case 3: {
								format(str_3,sizeof(str_3),"{252525}Картофель ({66FF66}%d рублей{252525})\nПомидоры ({66FF66}%d рублей{252525})\nОгурцы ({66FF66}%d рублей{252525})\nКапуста ({66FF66}%d рублей{252525})\nМорковь ({66FF66}%d рублей{252525})",JB_DATA[b][data_SELL_PRICE][0],JB_DATA[b][data_SELL_PRICE][1],JB_DATA[b][data_SELL_PRICE][2],JB_DATA[b][data_SELL_PRICE][3],JB_DATA[b][data_SELL_PRICE][4]);
							    ShowPlayerDialog(playerid, dialog_JB_6, DIALOG_STYLE_LIST,"{f00e5d}Стоимость ресурсов",str_3, "Изменить", "Отмена");
						    }
						}
					}
					case 5:
					{
						new str_3[185];
					    new b = PI[playerid][data_JB];
						format(str_3,sizeof(str_3),"Баланс: %d рублей\nВведите сумму, которую желаете снять со счета", JB_DATA[b][data_BANK]);
					    ShowPlayerDialog(playerid, dialog_JB_9, DIALOG_STYLE_INPUT,"{f00e5d}Снять деньги со счета",str_3, "Снять", "Отмена");
					}
					case 6: ShowPlayerDialog(playerid, dialog_JB_10, DIALOG_STYLE_INPUT,"{f00e5d}Положить деньги на счет","Введите сумму, которую желаете положить счет", "Положить", "Отмена");
					case 7:
					{
						new str_3[185];
					    new b = PI[playerid][data_JB];
						format(str_3,sizeof(str_3),"Вы желаете продать свое предприятие за %d рублей?",JB_DATA[b][data_PRICE]/2);
					    ShowPlayerDialog(playerid, dialog_JB_7, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа предприятия",str_3, "Продать", "Отмена");
					}
		        }
		    }
		}
		case dialog_JB_9:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_JB];
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		        if(JB_DATA[b][data_BANK] < strval(inputtext)) return SendClientMessage(playerid, CG, "Недостаточно средств на счету предприятия");
                JB_DATA[b][data_BANK] -= strval(inputtext);
                give_player_money(playerid, strval(inputtext), "#84",7555);
			}
		}
		case dialog_JB_10:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_JB];
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		        if(get_player_money(playerid) < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно средств на руках");
                JB_DATA[b][data_BANK] += strval(inputtext);
                give_player_money(playerid, -strval(inputtext), "#85",7567);
			}
		}
		case dialog_BUYGUN:
		{
		    if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Убойный пистолет\n{252525}Цена за 1 патрон: {66CC99}50 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",24);
			        case 1: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Пистолет\n{252525}Цена за 1 патрон: {66CC99}25 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",22);
			        case 2: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Дробовик\n{252525}Цена за 1 патрон: {66CC99}50 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",25);
			        case 3: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Автомат\n{252525}Цена за 1 патрон: {66CC99}30 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",29);
			        case 4: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Штурмовая винтовка\n{252525}Цена за 1 патрон: {66CC99}75 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",30);
			        case 5: ShowPlayerDialog(playerid, dialog_BUYGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Покупка оружия","{252525}Название оружия: {f00e5d}Снайперская винтовка\n{252525}Цена за 1 патрон: {66CC99}250 рублей\n\n{252525}Введите кол-во патронов, которое желаете купить","Купить", "Отмена"),SetPVarInt(playerid,"makegun",34);
                    case 6:
					{
					    if(get_player_money(playerid) < 5000) return SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						GiveWeapon(playerid, 4, 1);
						give_player_money(playerid, -5000,"#11",7587);
						new b = GetPVarInt(playerid,"business");
						BUSINESS_DATA[b][data_BANK] += 5000;
					}
				}
			}
		}
		case dialog_BUYGUN_1:
		{
			if(!response) return 1;
			if(response)
			{
			    if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			    if(strval(inputtext) > 500) return SendClientMessage(playerid, CG,"Нельзя купить больше 500 патронов за один раз");
                new b = GetPVarInt(playerid,"business");
				new patr = strval(inputtext);
				new kofi;
				new ggun = GetPVarInt(playerid, "makegun");
				switch(ggun)
			    {
			        case 24:kofi = 50;
			        case 22:kofi = 25;
			        case 25:kofi = 50;
			        case 29:kofi = 30;
			        case 30:kofi = 75;
			        case 34:kofi = 250;
			    }
			    if(patr*kofi > get_player_money(playerid)) return SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
			    if(patr > BUSINESS_DATA[b][data_PROD] && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid, CG, "На складе недостаточно боеприпасов");
                BUSINESS_DATA[b][data_PROD] -= patr;
                BUSINESS_DATA[b][data_BANK] += patr*kofi;
				give_player_money(playerid, -patr*kofi,"#12",7618);
				GiveWeapon(playerid, ggun, patr);
				UpdateBusinessData(b);
			}
		}
		case dialog_ADD_BUSINESS:
        {
            if(!response) return 1;
            if(response)
            {
				SetPVarInt(playerid, "ADDBIZZ", 1);
                switch(listitem)
                {
                    case 0:
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_exitX",578.5307);
						SetPVarFloat(playerid,"add_b_exitY",86.9487);
						SetPVarFloat(playerid,"add_b_exitZ",382.6700);
						SetPVarFloat(playerid,"add_b_buyX",582.0419);
						SetPVarFloat(playerid,"add_b_buyY",80.4531);
						SetPVarFloat(playerid,"add_b_buyZ",382.6700);
						SetPVarInt(playerid,"add_b_int",1);
						SetPVarInt(playerid,"add_b_map",38);
						SetPVarInt(playerid,"add_b_vw",TotalBusiness+1);
						SetPVarInt(playerid,"add_b_type",2);
						strmid(BUSINESS_DATA[TotalBusiness][data_NAME], "Магазин", 0, 12, 12);
						ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
					}
                    case 1:
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_exitX",x);
						SetPVarFloat(playerid,"add_b_exitY",y);
						SetPVarFloat(playerid,"add_b_exitZ",z);
						SetPVarFloat(playerid,"add_b_buyX",x);
						SetPVarFloat(playerid,"add_b_buyY",y);
						SetPVarFloat(playerid,"add_b_buyZ",z);
						SetPVarInt(playerid,"add_b_int",0);
						SetPVarInt(playerid,"add_b_map",47);
						SetPVarInt(playerid,"add_b_vw",0);
						SetPVarInt(playerid,"add_b_type",1);
						strmid(BUSINESS_DATA[TotalBusiness][data_NAME], "АЗС", 0, 12, 12);
						ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                    }
                    case 2:
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_exitX",204.6660);
						SetPVarFloat(playerid,"add_b_exitY",872.0818);
						SetPVarFloat(playerid,"add_b_exitZ",1019.1500);
						SetPVarFloat(playerid,"add_b_buyX",206.2150);
						SetPVarFloat(playerid,"add_b_buyY",868.5520);
						SetPVarFloat(playerid,"add_b_buyZ",1019.1200);
						SetPVarInt(playerid,"add_b_int",1);
						SetPVarInt(playerid,"add_b_map",45);
						SetPVarInt(playerid,"add_b_vw",TotalBusiness+1);
						SetPVarInt(playerid,"add_b_type",3);
						strmid(BUSINESS_DATA[TotalBusiness][data_NAME], "Магазин одежды", 0, 16, 16);
						ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                    }
                    case 3:
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_exitX",377.2126);
						SetPVarFloat(playerid,"add_b_exitY",-193.0843);
						SetPVarFloat(playerid,"add_b_exitZ",1000.6423);
						SetPVarFloat(playerid,"add_b_buyX",379.1210);
						SetPVarFloat(playerid,"add_b_buyY",-187.0087);
						SetPVarFloat(playerid,"add_b_buyZ",1000.6350);
						SetPVarInt(playerid,"add_b_int",17);
						SetPVarInt(playerid,"add_b_map",29);
						SetPVarInt(playerid,"add_b_vw",TotalBusiness+1);
						SetPVarInt(playerid,"add_b_type",5);
						strmid(BUSINESS_DATA[TotalBusiness][data_NAME], "Закусочная", 0, 12, 12);
						ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                    }
					case 4:
                    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid,x,y,z);
						SetPVarFloat(playerid,"add_b_enterX",x);
						SetPVarFloat(playerid,"add_b_enterY",y);
						SetPVarFloat(playerid,"add_b_enterZ",z);
						SetPVarFloat(playerid,"add_b_exitX",0.0);
						SetPVarFloat(playerid,"add_b_exitY",0.0);
						SetPVarFloat(playerid,"add_b_exitZ",0.0);
						SetPVarFloat(playerid,"add_b_buyX",0.0);
						SetPVarFloat(playerid,"add_b_buyY",0.0);
						SetPVarFloat(playerid,"add_b_buyZ",0.0);
						SetPVarInt(playerid,"add_b_int",17);
						SetPVarInt(playerid,"add_b_map",29);
						SetPVarInt(playerid,"add_b_vw",TotalBusiness+1);
						SetPVarInt(playerid,"add_b_type",6);
						strmid(BUSINESS_DATA[TotalBusiness][data_NAME], "Автосалон", 0, 12, 12);
						ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                    }
				}
			}
        }
        case dialog_ADD_BUSINESS_1:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(strval(inputtext) < 10000 || strval(inputtext) > 10000000) return ShowPlayerDialog(playerid, dialog_ADD_BUSINESS_1, DIALOG_STYLE_INPUT, "{f00e5d}Цена бизнеса", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                SetPVarInt(playerid,"add_b_price",strval(inputtext));
                if(GetPVarInt(playerid, "ADDBIZZ") == 1) SendClientMessage(playerid, -1, "Идите на место выхода игрока. После чего напишите: /tpbizz");
			}
		}
		case dialog_JB_7:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_JB];
		      	JB_DATA[b][data_OWNED] = 0;
		      	PI[playerid][data_JB] = INVALID_JB_ID;
			 	strmid(JB_DATA[b][data_OWNER], "None", 0, strlen(JB_DATA[b][data_OWNER]), 24);
				give_player_money(playerid,JB_DATA[b][data_PRICE]/2,"#13",7756);
				new str_1[144];
				format(str_1,sizeof(str_1),"Вы продали предприятие государству за %d рублей", JB_DATA[b][data_PRICE]/2);
			 	SendClientMessage(playerid, 0xFFCC00AA, str_1);
				UpdateJBData(b);
				SaveJBData(b);
			  	SavePlayerData(playerid);
			  	new logtext[64];
				format(logtext,sizeof(logtext),"продал предприятие ID:%d", JB_DATA[b][data_ID]);
				AddLog("log_player",PI[playerid][data_NAME], logtext);

		    }
		}
		case dialog_JB_4:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_JB];
				if(strval(inputtext) <= 0 || strval(inputtext) > 10000) return SendClientMessage(playerid, CG, "Нельзя меньше 1 и больше 10000 рублей");
				JB_DATA[b][data_JOB_MONEY] = strval(inputtext);
				new str_1[144];
				format(str_1,sizeof(str_1),"Новая зарплата рабочих: %d рублей",JB_DATA[b][data_JOB_MONEY]);
				SendClientMessage(playerid,0x99FF66FF,str_1);
				UpdateJBText(b);
				SaveJBData(b);

		    }
		}
		case dialog_JB_5: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_JB];
		        if(strval(inputtext) <= 0 || strval(inputtext) > 10000) return SendClientMessage(playerid, CG, "Нельзя меньше 1 и больше 10000 рублей");
				JB_DATA[b][data_BUS_MONEY] = strval(inputtext);
				new str_1[144];
				format(str_1,sizeof(str_1),"Новая зарплата водителей: %d рублей",JB_DATA[b][data_BUS_MONEY]);
				SendClientMessage(playerid,0x99FF66FF,str_1);
				UpdateJBText(b);
				SaveJBData(b);
		    }
		}
		case dialog_911_1: {
			if(!response) return 1;
			if(response) {
				if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,CG,"Вызов скорой помощи доступен только на улице");
				for(new i = 0; i < MAX_PLAYERS; i++) {
				    if(!IsPlayerConnected(i)) continue;
				    if(PI[i][data_MEMBER] == 3) {
				    	new msg[145],msg2[145];
					    format(msg, sizeof(msg),"%s[%d] вызвал полицию, расстояние: %.1f, Используйте /accept чтобы принять вызов",PI[playerid][data_NAME],playerid, GetDistanceBetweenPlayers(playerid, i));
					    format(msg2, sizeof(msg2),"Сообщение игрока: {FFFF99}%s",inputtext);
						SendClientMessage(i, 0x69b867FF, msg);
						SendClientMessage(i, 0x69b867FF, msg2);
				    }
				}
			    SendClientMessage(playerid, 0x00a86bFF, "Вы успешно вызвали сотрудников полиции, оставайтесь на месте.");
				PI[playerid][data_911_1] = 1;
			}
		}
		case dialog_911_2: {
			if(!response) return 1;
			if(response) {
			    if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,CG,"Вызов полиции доступен только на улице");
				for(new i = 0; i < MAX_PLAYERS; i++) {
				    if(!IsPlayerConnected(i)) continue;
				    if(PI[i][data_MEMBER] == 4) {
				    	new msg[145],msg2[145];
					    format(msg, sizeof(msg),"%s[%d] вызвал скорую помощь, расстояние: %.1f, Используйте /accept чтобы принять вызов",PI[playerid][data_NAME],playerid, GetDistanceBetweenPlayers(playerid, i));
					    format(msg2, sizeof(msg2),"Сообщение игрока: {FFFF99}%s",inputtext);
						SendClientMessage(i,0x69b867FF, msg);
						SendClientMessage(i,0x69b867FF, msg2);
				    }
				}
			    SendClientMessage(playerid, 0x00a86bFF, "Вы успешно вызвали сотрудников скорой помощи, оставайтесь на месте.");
                PI[playerid][data_911_2] = 1;
			}
		}
		case dialog_JB_6: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_JB];
		        SetPVarInt(playerid,"listitem",listitem);
				switch(b) {
				    case 0: {
						switch(listitem) {
						    case 0: {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: вагонка\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][0]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 1: {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: доска\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][1]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 2: {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: брус\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][2]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						}
				    }
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: руда\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][0]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						}
				    }
				    case 2:
				    {
				        switch(listitem)
						{
						    case 0:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: яблоки\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][0]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 1:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: сливы\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][1]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 2:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: персики\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][2]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 3:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: апельсины\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][3]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						}
				    }
				    case 3:
				    {
				        switch(listitem)
						{
						    case 0:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: картофель\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][0]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 1:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: помидоры\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][1]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 2:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: огурцы\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][2]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 3:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: капуста\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][3]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						    case 4:
						    {
								new str_1[144];
						        format(str_1,sizeof(str_1),"Вид ресурса: морковь\nЦена: %d рублей\n\nВведите новую цену в окошко",JB_DATA[b][data_SELL_PRICE][4]);
						        ShowPlayerDialog(playerid, dialog_JB_8, DIALOG_STYLE_INPUT,"{f00e5d}Стоимость ресурсов",str_1, "Изменить", "Отмена");
						    }
						}
				    }
				}
		    }
		}

		case dialog_JB_8:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new b = PI[playerid][data_JB];
				new list = GetPVarInt(playerid,"listitem");
				if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое число");
				if(strval(inputtext) > 100) return SendClientMessage(playerid, CG, "Нельзя поставить цену больше 100 рублей");
				JB_DATA[b][data_SELL_PRICE][list] = strval(inputtext);
				new str[64],string[64];
				switch(b) {
				    case 0: {
						switch(list) {
						    case 0: {
								str = "вагонки";
								buy_vagonka = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 1: {
								str = "доски";
								buy_doska = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 2:
							{
								str = "бруса";
								buy_brus = JB_DATA[b][data_SELL_PRICE][list];
							}
						}
				    }
				    case 1: {
				        switch(list) {
						    case 0: {
								str = "руды";
								buy_ruda = JB_DATA[b][data_SELL_PRICE][list];
							}
						}
				    }
				    case 2: {
				        switch(list) {
						    case 0: {
								str = "яблок";
								buy_yabloki = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 1: {
								str = "слив";
								buy_sliva = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 2: {
								str = "персиков";
								buy_persiky = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 3: {
								str = "апельсинов";
								buy_orange = JB_DATA[b][data_SELL_PRICE][list];
							}
						}
				    }
				    case 3: {
				        switch(list) {
						    case 0: {
								str = "картофеля";
								buy_kartofel = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 1: {
								str = "помидоров";
								buy_pomidor = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 2: {
								str = "огурцов";
								buy_ogurec = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 3: {
								str = "капусты";
								buy_kapusta = JB_DATA[b][data_SELL_PRICE][list];
							}
						    case 4: {
								str = "моркови";
								buy_morkov = JB_DATA[b][data_SELL_PRICE][list];
							}
						}
				    }
				}
				format(string, sizeof(string),"Новая цена %s %d рублей за 1 кг",str,strval(inputtext));
				SendClientMessage(playerid,0x006633AA,string);
			}

		}
		case dialog_ADD_HOUSE: {
         	if(!response) return 1;
    		if(response) {
                SetPVarInt(playerid,"addhouse",1);
				SendClientMessage(playerid,-1, "Сядьте в машину и введите /tpc для сохранения позиции автомобиля");
			}
		}
		case dialog_ADD_HOUSE_1:
  		{
  		    if(!response) return SetPVarInt(playerid, "addhouse",0);
  		    if(response)
  		    {
  		        switch(listitem)
  		        {
					case 0:
					{
					    SetPVarFloat(playerid,"aExitX",1113.1830);
                        SetPVarFloat(playerid,"aExitY",1526.1506);
                        SetPVarFloat(playerid,"aExitZ",905.8036);
                        SetPVarInt(playerid,"aInt",1);
					}
					case 1:
					{
					    SetPVarFloat(playerid,"aExitX",1113.1830);
                        SetPVarFloat(playerid,"aExitY",1526.1506);
                        SetPVarFloat(playerid,"aExitZ",905.8036);
                        SetPVarInt(playerid,"aInt",2);
					}
				}
				ShowPlayerDialog(playerid, dialog_ADD_HOUSE_2, DIALOG_STYLE_INPUT, "{f00e5d}Цена дома", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
			}
		}

		case dialog_ADD_HOUSE_2:
		{
		    if(!response) return SetPVarInt(playerid, "addhouse",0);
		    if(response)
		    {
		        if(strval(inputtext) < 10000 || strval(inputtext) > 10000000) return ShowPlayerDialog(playerid, dialog_ADD_HOUSE_3, DIALOG_STYLE_INPUT, "{f00e5d}Цена дома", "От 10 000 рублей до 10 000 000 рублей", "Добавить", "Отмена");
                SetPVarInt(playerid,"aPrice",strval(inputtext));
                ShowPlayerDialog(playerid, dialog_ADD_HOUSE_3, DIALOG_STYLE_INPUT, "{f00e5d}Класс", "Введите класс дома 0,1,2,3,4", "Добавить", "Отмена");
			}
		}
		case dialog_ADD_HOUSE_3:
		{
		    if(!response) return 1;
		    if(response)
		    {
			    SetPVarInt(playerid,"aClass",strval(inputtext));
			    AddHouse(playerid);
		    }
		}


		case dialog_ASH_TEST:
		{
		    if(!response) return 1;
			if(response)
			{
			    if(get_player_money(playerid) < 5000) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-5000,"#14",8088);
			    PI[playerid][data_ASH_CAR] = INVALID_VEHICLE_ID;
				PI[playerid][data_CHEK] = 0;
				PI[playerid][data_ASH_TEST] = 1;
				SendClientMessage(playerid,0xFFCC33FF, "Вы начали тест. Отправляйтесь на парковку автошколы и возьмите траспортное средство");
			}
		}
		case dialog_JB_1: {
		    if(!response) return 1;
		    if(response) {
		        new b = PI[playerid][data_JB];
				SetPVarInt(playerid, "listitem",listitem);
                if(JB_DATA[b][data_MODEL_JOB][listitem] == 0) ShowPlayerDialog(playerid, dialog_JB_2, DIALOG_STYLE_MSGBOX,"{f00e5d}Покупка автомобиля","Вы желаете приобрести новый автомобиль для предприятия?\nДанная услуга будет Вам стоить: 100000 рублей", "Купить", "Отмена");
				else ShowPlayerDialog(playerid, dialog_JB_3, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа автомобиля","Вы желаете продать один из автомобилей предприятия?\nВам будет выплачено: 75000 рублей", "Продать", "Отмена");
		    }
		}
        case dialog_BANK:
        {
            if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowBankMoney(playerid);
			        case 1: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{f00e5d}Снятие наличных", "Комиссия составит {3377cc}4%\n{252525}Введите требуемую сумму", "Выполнить", "Назад");
			        case 2: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{f00e5d}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			        case 3:
					{
						if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, CG, "Использовать банковскую систему можно только со 2 уровня");
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Перевод на другой счёт", "Укажите ID получателя и сумма перевода\nчерез запятую. Комиссия при переводе составит {3377cc}3%\n{f00e5d}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
			        case 4: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите сумму которую желаете положить на счет телефона", "Выполнить", "Назад");
			        case 5: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
							new h = PI[playerid][data_HOUSE];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_3[256];
							format(str_3,sizeof(str_3),"{252525}Номер дома: %d\n{252525}Статус оплаты: %d / 30 дней\n{f00e5d}Квартплата - 1499 руб / день\n\n{252525}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
						 	ShowPlayerDialog(playerid, 7950, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_3, "Выполнить", "Назад");
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) {
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_3[256];
							format(str_3,sizeof(str_3),"{252525}Номер квартиры: %d\n{252525}Статус оплаты: %d / 30 дн\n{f00e5d}Квартплата - 1299 руб / день\n\n{252525}Введите количество дней для оплаты",KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
						 	ShowPlayerDialog(playerid, 7951, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_3, "Выполнить", "Назад");
				        }
					}
					case 6: {
					    if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID) return SendClientMessage(playerid, CG, "У Вас нет бизнеса или АЗС");
						new b = PI[playerid][data_BUSINESS];
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						new str_3[256];
						format(str_3,sizeof(str_3),"{252525}Номер бизнеса: %d\n{252525}Статус оплаты: %d / 30 дней\n{f00e5d}Налог - 3999 рублей\n\n{252525}Введите количество дней для оплаты", BUSINESS_DATA[b][data_ID], BUSINESS_DATA[b][data_DAY]);
						ShowPlayerDialog(playerid, 7952, DIALOG_STYLE_INPUT, "{f00e5d}Оплата бизнеса", str_3, "Выполнить", "Назад");
					}
				}
			}
        }
        case dialog_UTILCAR: {
		    if(!response) return 1;
		    if(response) {
				if(PI[playerid][data_CAR][listitem] == 0) return SendClientMessage(playerid, CG, "Данный слот пуст");
		        for(new i = 0; i < sizeof(autosalon_cars); i++) {
			        if(autosalon_cars[i][asModel] == PI[playerid][data_CAR][listitem]) {
						SetPVarInt(playerid,"sell_car",i);
						SetPVarInt(playerid, "sell_slot", listitem);
						new str_3[256];
						format(str_3,sizeof(str_3),"{252525}Вы действительно хотите утилизировать свой автомобиль (модель:%d) за {F00E5D}%d рублей{252525}?",PI[playerid][data_CAR][listitem], autosalon_cars[i][asCena]/2);
						ShowPlayerDialog(playerid,dialog_UTILCAR_1,DIALOG_STYLE_MSGBOX,"{f00e5d}Утилицая личного транспорта", str_3, "Продать","Отмена");
			            return 1;
			        }
		        }
	        }
		}
		case dialog_UTILCAR_1: {
		    if(!response) return 1;
		    if(response) {
		        new i = GetPVarInt(playerid,"sell_car");
				new c = GetPVarInt(playerid,"sell_slot");
			    if(autosalon_cars[i][asModel] == PI[playerid][data_CAR][c]) {
					new logtext[64];
				    format(logtext,sizeof(logtext),"утилизировал свой автомобиль (модель:%d) за %d рублей",PI[playerid][data_CAR][c],autosalon_cars[i][asCena]/2);
				    AddLog("log_player",PI[playerid][data_NAME], logtext);
					new str_1[144];
					format(str_1,sizeof(str_1),"Вы утилизировали свой автомобиль за %d рублей",autosalon_cars[i][asCena]/2);
					SendClientMessage(playerid,0x66CC66FF,str_1);
		            give_player_money(playerid,autosalon_cars[i][asCena]/2,"#56",8184);
		            PI[playerid][data_CAR][c] = 0;
		            if(PI[playerid][data_VEH] !=  INVALID_VEHICLE_ID && autosalon_cars[i][asModel] == GetVehicleModel(PI[playerid][data_VEH])) {
			            DestroyVehicle(PI[playerid][data_VEH]);
						PI[playerid][data_VEH] = INVALID_VEHICLE_ID;
					}
					return 1;
		        }
		    }
		}
        case dialog_SELLCAR: {
		    if(!response) return 1;
		    if(response) {
				if(PI[playerid][data_CAR][listitem] == 0) return SendClientMessage(playerid, CG, "Данный слот пуст");
		        for(new i = 0; i < sizeof(autosalon_cars); i++) {
			        if(autosalon_cars[i][asModel] == PI[playerid][data_CAR][listitem]) {
						SetPVarInt(playerid,"sell_car",i);
						SetPVarInt(playerid, "sell_slot", listitem);
						new str_3[365];
						format(str_3,sizeof(str_3),"\
						Вы действительно хотите продать свой автомобиль {276dc1}'%s'{252525} государству?\n\n\
						Государственная стоимость: {276dc1}%d руб{252525}\n\
						Сумма к зачислению на банковский счёт: {276dc1}%d руб{252525}",
						VehicleNames[PI[playerid][data_CAR][listitem]-400], autosalon_cars[i][asCena], autosalon_cars[i][asCena]/2);
						ShowPlayerDialog(playerid,dialog_SELLCAR_1,DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа транспорта государству", str_3, "Продать","Закрыть");
			            return 1;
			        }
		        }
	        }
		}
		case dialog_SELLCAR_1: {
		    if(!response) return 1;
		    if(response) {
		        new i = GetPVarInt(playerid,"sell_car");
				new c = GetPVarInt(playerid,"sell_slot");
			    if(autosalon_cars[i][asModel] == PI[playerid][data_CAR][c]) {
					new str[98],logtext[64];
				    format(logtext,sizeof(logtext),"продал свой автомобиль (модель:%d) за %d рублей",PI[playerid][data_CAR][c],autosalon_cars[i][asCena]/2);
				    AddLog("log_player",PI[playerid][data_NAME], logtext);
					format(str,sizeof(str),"Вы продали свой автомобиль за %d рублей",autosalon_cars[i][asCena]/2);
					SendClientMessage(playerid,CY,str);
					PI[playerid][data_BANK] += autosalon_cars[i][asCena]/2;
					MysqlUpdatePlayerStr(playerid, "bank", PI[playerid][data_BANK]);
		            PI[playerid][data_CAR][c] = 0;
		            if(PI[playerid][data_VEH] !=  INVALID_VEHICLE_ID && autosalon_cars[i][asModel] == GetVehicleModel(PI[playerid][data_VEH])) {
			            DestroyVehicle(PI[playerid][data_VEH]);
						PI[playerid][data_VEH] = INVALID_VEHICLE_ID;
					}
					return 1;
		        }
		    }
		}
        case dialog_BANK_2: {
            if(!response) return 1;
			if(response) {
			    if(strval(inputtext) <= 0) return ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{f00e5d}Снятие наличных", "{252525}Комиссия составит {3377cc}4%\n{252525}Введите требуемую сумму", "Выполнить", "Назад");
			    if(strval(inputtext)+strval(inputtext)*4/100 > PI[playerid][data_BANK]) return SendClientMessagef(playerid,CG,"C учётом комисси требуется {FF6347}%d руб", strval(inputtext)+strval(inputtext)*4/100);
			    SetPVarInt(playerid, "data_BANK", PI[playerid][data_BANK]);
				PI[playerid][data_BANK] -= strval(inputtext)+strval(inputtext)*4/100;
				give_player_money(playerid, strval(inputtext),"#15",8243);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new money[25];
				format(money, sizeof money, "+%dP", strval(inputtext));
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Снятие денег со счёта  в банке"), CEFSTR("4ea650"), CEFSTR(money));
				new str_3[365];
				format(str_3,sizeof(str_3),"{252525}Старый баланс: {FF6347}%d\n{252525}Новый баланс: {3366cc}%d\n\n{252525}Комиссия: {FF6347}%d руб\n{252525}Снято: {3366cc}%d руб", GetPVarInt(playerid, "data_BANK"), PI[playerid][data_BANK], strval(inputtext)*4/100, strval(inputtext));
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Операция завершена", str_3, "Закрыть", "");
			}
        }
        case dialog_BANK_3: {
            if(!response) return 1;
			if(response) {
			    if(strval(inputtext) <= 0) return ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{f00e5d}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			    if(strval(inputtext) > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				SetPVarInt(playerid, "data_BANK", PI[playerid][data_BANK]);
				PI[playerid][data_BANK] += strval(inputtext);
				give_player_money(playerid,-strval(inputtext),"#16",8257);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new money[25];
				format(money, sizeof money, "-%dP", strval(inputtext));
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Пополение счёта в банке"), CEFSTR("ed3245"), CEFSTR(money));
				new str_3[365];
				format(str_3,sizeof(str_3),"{252525}Старый баланс: {FF6347}%d\n{252525}Новый баланс: {3366cc}%d\n{252525}Пополнено: {3366cc}%d руб", GetPVarInt(playerid, "data_BANK"), PI[playerid][data_BANK], strval(inputtext)*4/100, strval(inputtext));
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Операция завершена", str_3, "Закрыть", "");
			}
        }
        case 9001: {
            if(!response) return 1;
			if(response) {
			    if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У вас нет телефона");
			    if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			    if(strval(inputtext) > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
			    SetPVarInt(playerid, "data_NUMBER_M", PI[playerid][data_NUMBER_M]);
				give_player_money(playerid,-strval(inputtext),"#17",8271);
				PI[playerid][data_NUMBER_M] += strval(inputtext);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new money[25];
				format(money, sizeof money, "-%dP", strval(inputtext));
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Пополение счета в телефоне"), CEFSTR("ed3245"), CEFSTR(money));
				new str_3[365];
				format(str_3,sizeof(str_3),"{252525}Старый баланс телефона: {FF6347}%d\n{252525}Новый баланс телефона: {3366cc}%d\n{252525}Пополнено: {3366cc}%d руб", GetPVarInt(playerid, "data_NUMBER_M"), PI[playerid][data_BANK], strval(inputtext)*4/100, strval(inputtext));
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Операция завершена", str_3, "Закрыть", "");
			}
        }
        case 7950: {
            if(!response) return 1;
			if(response) {
				if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID) return SendClientMessage(playerid,CG,"У вас нет дома");
				if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
				new h_class;
				new h = PI[playerid][data_HOUSE];
                h_class = strval(inputtext)*1499;
				if(h_class > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				if(HOUSE_DATA[h][data_DAY]+strval(inputtext) > 30) return SendClientMessage(playerid, CG, "Нельзя оплатить дом на более 30 суток");
				give_player_money(playerid,-h_class,"#18",8289);
				HOUSE_DATA[h][data_DAY] += strval(inputtext);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new str_1[144];
				format(str_1,sizeof(str_1),"{138642}Вы оплатили дом на {f1a88b}%d/30 дней{138642} за {f1a88b}%d руб",HOUSE_DATA[h][data_DAY], h_class);
				SendClientMessage(playerid,0x138642FF,str_1);
			}
        }
        case 7952: {
            if(!response) return 1;
			if(response) {
				if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID) return SendClientMessage(playerid,CG,"У вас нет бизнеса");
				if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
				new h_class = strval(inputtext)*3999;
				new b = PI[playerid][data_BUSINESS];
				if(BUSINESS_DATA[b][data_DAY]+strval(inputtext) > 30) return SendClientMessage(playerid, CG, "Нельзя оплатить бизнес на более 30 суток");
				if(h_class > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-h_class,"#19",8306);
				BUSINESS_DATA[b][data_DAY] += strval(inputtext);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new str_1[144];
				format(str_1,sizeof(str_1),"{138642}Вы оплатили бизнес на {f1a88b}%d/30дней{138642} за {f1a88b}%d руб",BUSINESS_DATA[b][data_DAY], h_class);
				SendClientMessage(playerid,0x138642FF,str_1);
			}
        }
        case 7951: {
            if(!response) return 1;
			if(response) {
				if(PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У вас нет квартиры");
				if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
				new h_class;
				new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
                h_class = strval(inputtext)*1299;
				if(h_class > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				if(KV_DATA[kv][data_DAY][k]+strval(inputtext) > 30) return SendClientMessage(playerid, CG, "Нельзя оплатить квартиру на более 30 суток");
				give_player_money(playerid,-h_class,"#20",8324);
				KV_DATA[kv][data_DAY][k] += strval(inputtext);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new str_1[144];
				format(str_1,sizeof(str_1),"{138642}Вы оплатили квартиру на {f1a88b}%d/30 дней{138642} за {f1a88b}%d руб",KV_DATA[kv][data_DAY][k], h_class);
				SendClientMessage(playerid,0x138642FF,str_1);
			}
        }
		case 6002: {
            if(!response) return 1;
			if(response) {
				new sen[35];
				new ol[35];
				new textm[2][6];
				split(inputtext, textm, ',');
				new id = strval(textm[0]);
				new cash = strval(textm[1]);
				if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, CG, "Использовать банковскую систему можно только со 2 уровня");
				if(!IsPlayerConnected(id)) {
					SendClientMessage(playerid, CG, "Счёт игрока не найден");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Мобильный банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > PI[playerid][data_BANK] || cash < 1) {
					SendClientMessage(playerid, CG, "У Вас недостаточно средств");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Мобильный банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(id == playerid) {
					SendClientMessage(playerid, CG, "Вы не можете перевести деньги на свой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Мобильный банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > 500000) {
					SendClientMessage(playerid, CG, "Вы не можете перевести более 500000 рублей на другой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Мобильный банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
    			if(GetPVarInt(playerid,"Counting_bank") > gettime()) return SendClientMessage(playerid, CG, "Перевод в банке доступен раз в 10 минут");
				PI[playerid][data_BANK] -= cash;
				PI[id][data_BANK] += cash;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerName(playerid, sen, sizeof(sen));
				GetPlayerName(id, ol, sizeof(ol));
				SendClientMessagef(playerid, 0x62d44dFF, "[Мобильный Банк] Вы перевели {FFFF99}%d рублей {62d44d}на счёт %s[%d], баланс счёта: {FFFF99}%d рублей", cash, PI[id][data_NAME], id, PI[playerid][data_BANK]);
				SendClientMessagef(id, 0x62d44dFF, "[Мобильный Банк] %s[%d] перевёл на Ваш счёт {FFFF99}%d рублей{62d44d}, баланс счёта: {FFFF99}%d рублей", PI[playerid][data_NAME], playerid, cash, PI[id][data_BANK]);
				SetPVarInt(playerid,"Counting_bank",gettime() + 600);
				return 1;
			}
        }
        case dialog_BANK_9: {
            if(!response) return 1;
			if(response) {
				new sen[35];
				new ol[35];
				new textm[2][6];
				split(inputtext, textm, ',');
				new id = strval(textm[0]);
				new cash = strval(textm[1]);
				if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, CG, "Использовать банковскую систему можно только со 2 уровня");
				if(!IsPlayerConnected(id)) {
					SendClientMessage(playerid, CG, "Счёт игрока не найден");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > PI[playerid][data_BANK] || cash < 1) {
					SendClientMessage(playerid, CG, "У Вас недостаточно средств");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(id == playerid) {
					SendClientMessage(playerid, CG, "Вы не можете перевести деньги на свой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
				if(cash > 500000) {
					SendClientMessage(playerid, CG, "Вы не можете перевести более 500000 рублей на другой счёт");
					return ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите ID игрока на счёт которого Вы хотите перевести деньги\nи сумму которую желаете перевести. Отделите ID игрока и сумму для перевода запятой.\n\n{f00e5d}Пример: 12, 50000", "Перевести", "Назад");
				}
    			if(GetPVarInt(playerid,"Counting_bank") > gettime()) return SendClientMessage(playerid, CG, "Перевод в банке доступен раз в 10 минут");
				PI[playerid][data_BANK] -= cash;
				PI[id][data_BANK] += cash;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GetPlayerName(playerid, sen, sizeof(sen));
				GetPlayerName(id, ol, sizeof(ol));
				SendClientMessagef(playerid, 0x62d44dFF, "[Банк] Вы перевели {FFFF99}%d рублей {62d44d}на счёт %s[%d], баланс счёта: {FFFF99}%d рублей", cash, PI[id][data_NAME], id, PI[playerid][data_BANK]);
				SendClientMessagef(id, 0x62d44dFF, "[Банк] %s[%d] перевёл на Ваш счёт {FFFF99}%d рублей{62d44d}, баланс счёта: {FFFF99}%d рублей", PI[playerid][data_NAME], playerid, cash, PI[id][data_BANK]);
				return SetPVarInt(playerid,"Counting_bank",gettime() + 600);
			}
        }
		case dialog_BUYPROD: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
				    case 0:ShowPlayerDialog(playerid, dialog_BUYPROD_1, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара","Название товара: {f00e5d}Продукты\n{252525}Цена за 1 шт: {66CC99}2 рублей\n\n{252525}Введите кол-во товаров, которое желаете загрузить","Загрузить", "Отмена"),SetPVarInt(playerid,"buytovar",2);
				    case 1:ShowPlayerDialog(playerid, dialog_BUYPROD_1, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара","Название товара: {f00e5d}Топливо\n{252525}Цена за 1 шт: {66CC99}2 рублей\n\n{252525}Введите кол-во товаров, которое желаете загрузить","Загрузить", "Отмена"),SetPVarInt(playerid,"buytovar",1);
				    case 2:ShowPlayerDialog(playerid, dialog_BUYPROD_1, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара","Название товара: {f00e5d}Брендовая одежда\n{252525}Цена за 1 шт: {66CC99}1 рублей\n\n{252525}Введите кол-во товаров, которое желаете загрузить","Загрузить", "Отмена"),SetPVarInt(playerid,"buytovar",3);
				    case 3:ShowPlayerDialog(playerid, dialog_BUYPROD_1, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара","Название товара: {f00e5d}Оружие и патроны\n{252525}Цена за 1 шт: {66CC99}4 рублей\n\n{252525}Введите кол-во товаров, которое желаете загрузить","Загрузить", "Отмена"),SetPVarInt(playerid,"buytovar",4);
                    case 4:ShowPlayerDialog(playerid, dialog_BUYPROD_1, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара","Название товара: {f00e5d}Еда и напитки\n{252525}Цена за 1 шт: {66CC99}2 рублей\n\n{252525}Введите кол-во товаров, которое желаете загрузить","Загрузить", "Отмена"),SetPVarInt(playerid,"buytovar",5);
				}
		    }
		}
		case dialog_BUYPROD_1:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        new car = GetPlayerVehicleID(playerid);
				switch(GetPVarInt(playerid, "buytovar"))
				{
				    case 1:
				    {
				        new cena = cena_azs;
				        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			            new met = strval(inputtext)+CAR_DATA[car][data_KOLVO];
                        new money = cena*strval(inputtext);
						if(met > 1000) return SendClientMessage(playerid, CG, "Ваш фургон не выдержит такую нагрузку (max 1000 шт.)");
			            if(get_player_money(playerid) < money) SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						give_player_money(playerid, -money,"#21",8434);
						CAR_DATA[car][data_KOLVO] += strval(inputtext);
						SendClientMessagef(playerid, 0x66CC99FF, "Вы загрузили %d л. Всего: %d л. (Топливо)",strval(inputtext),CAR_DATA[car][data_KOLVO]);
				        CAR_DATA[car][data_GRUZ] = GetPVarInt(playerid, "buytovar");
				    }
				    case 2:
				    {
				        new cena = cena_24;
				        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			            new met = strval(inputtext)+CAR_DATA[car][data_KOLVO];
                        new money = cena*strval(inputtext);
						if(met > 1000) return SendClientMessage(playerid, CG, "Ваш фургон не выдержит такую нагрузку (max 1000 шт.)");
			            if(get_player_money(playerid) < money) SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						give_player_money(playerid, -money,"#22",8447);
						CAR_DATA[car][data_KOLVO] += strval(inputtext);
						SendClientMessagef(playerid, 0x66CC99FF,"Вы загрузили %d шт. Всего: %d шт. (Продукты)",strval(inputtext),CAR_DATA[car][data_KOLVO]);
				        CAR_DATA[car][data_GRUZ] = GetPVarInt(playerid, "buytovar");
				    }

				    case 3:
				    {
				        new cena = cena_clothes;
				        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			            new met = strval(inputtext)+CAR_DATA[car][data_KOLVO];
                        new money = cena*strval(inputtext);
						if(met > 1000) return SendClientMessage(playerid, CG, "Ваш фургон не выдержит такую нагрузку (max 1000 шт.)");
			            if(get_player_money(playerid) < money) SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						give_player_money(playerid, -money,"#23",8460);
						CAR_DATA[car][data_KOLVO] += strval(inputtext);
						SendClientMessagef(playerid, 0x66CC99FF, "Вы загрузили %d шт. Всего: %d шт.  (Брендовая одежда)",strval(inputtext),CAR_DATA[car][data_KOLVO]);
				        CAR_DATA[car][data_GRUZ] = GetPVarInt(playerid, "buytovar");
				    }
					case 4:
				    {
				        new cena = cena_gun;
				        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			            new met = strval(inputtext)+CAR_DATA[car][data_KOLVO];
                        new money = cena*strval(inputtext);
						if(met > 1000) return SendClientMessage(playerid, CG, "Ваш фургон не выдержит такую нагрузку (max 1000 шт.)");
			            if(get_player_money(playerid) < money) SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						give_player_money(playerid, -money,"#24",8473);
						CAR_DATA[car][data_KOLVO] += strval(inputtext);
						SendClientMessagef(playerid, 0x66CC99FF, "Вы загрузили %d шт. Всего: %d шт. (Оружие и патроны)",strval(inputtext),CAR_DATA[car][data_KOLVO]);
				        CAR_DATA[car][data_GRUZ] = GetPVarInt(playerid, "buytovar");
				    }
				    case 5:
				    {
				        new cena = cena_eat;
				        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
			            new met = strval(inputtext)+CAR_DATA[car][data_KOLVO];
                        new money = cena*strval(inputtext);
						if(met > 1000) return SendClientMessage(playerid, CG, "Ваш фургон не выдержит такую нагрузку (max 1000 шт.)");
			            if(get_player_money(playerid) < money) SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
						give_player_money(playerid, -money,"#25",8486);
						CAR_DATA[car][data_KOLVO] += strval(inputtext);
						SendClientMessagef(playerid, 0x66CC99FF, "Вы загрузили %d шт. Всего: %d шт. (Еда и напитки)",strval(inputtext),CAR_DATA[car][data_KOLVO]);
				        CAR_DATA[car][data_GRUZ] = GetPVarInt(playerid, "buytovar");
				    }
				}
		    }
		}
		case dialog_JB_2:
		{
		    if(!response) return 1;
		    if(response)
		    {
				new b = PI[playerid][data_JB];
				new list = GetPVarInt(playerid, "listitem");
				if(JB_DATA[b][data_BANK] < 100000) return SendClientMessage(playerid, CG, "На счету предприятия недостаточно денег");
				JB_DATA[b][data_BANK] -= 100000;
				SendClientMessage(playerid, 0x00CC99FF, "Вы купили новый автомобиль для предприятия за 100000 рублей");
				SendClientMessage(playerid, 0x00CC99FF, "Деньги были сняты со счета Вашего предприятия");
				JB_DATA[b][data_MODEL_JOB][list] = 418;
				new text[128];
				format(text,sizeof(text),"{FFCC33}Южный - ООО '%s'\n{33CC33}Проезд бесплатный",JB_DATA[b][data_NAME]);
				JB_DATA[b][data_VEH_JOB][list] = CreateVehicle(JB_DATA[b][data_MODEL_JOB][list], JB_DATA[b][data_CAR_POSX][list], JB_DATA[b][data_CAR_POSY][list], JB_DATA[b][data_CAR_POSZ][list], JB_DATA[b][data_CAR_POSA][list], -1, -1, 600);
        		JB_DATA[b][data_VEH_TEXT][list] = CreateDynamic3DTextLabel(text,-1,0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,JB_DATA[b][data_VEH_JOB][list]);
                ClearCarData(JB_DATA[b][data_VEH_JOB][list]);
                CAR_DATA[JB_DATA[b][data_VEH_JOB][list]][data_FUEL] = 50;
		    }
		}
		case dialog_RENTCATER:
		{
		    if(!response) return 1;
		    if(response)
			{
			    if(get_player_money(playerid) < 25000) return SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
				give_player_money(playerid, -25000, "#83",8520);
				if(PI[playerid][data_RENTCAR] != INVALID_VEHICLE_ID)
				{
					new back_car = PI[playerid][data_RENTCAR];
				    CAR_DATA[back_car][data_RENT] = INVALID_PLAYER_ID;
				    SetVehicleToRespawn(back_car);
				}
				new next_car = CreateVehicle(454, 2301.623291, -1147.833374, -0.019974, 90.093200, -1, -1, 3600);
				PI[playerid][data_RENTJOB] = next_car;
				CAR_DATA[next_car][data_RENT] = playerid;
				SendClientMessage(playerid, COLOR_AC, "Вы арендовали прогулочный катер. Всем участникам прогулки доступен бесплатный бар (/bar)");
				PutPlayerInVehicleAC(playerid, next_car, 0);
			}
		}
		case dialog_RENTJOB:
		{
		    if(!response) return RemovePlayerFromVehicleAC(playerid);
		    if(response)
		    {
				if(PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID)
				{
					new back_car = PI[playerid][data_RENTJOB];
				    CAR_DATA[back_car][data_RENT] = INVALID_PLAYER_ID;
				    SetVehicleToRespawn(back_car);
				}
				new next_car = GetPlayerVehicleID(playerid);
				PI[playerid][data_RENTJOB] = next_car;
				CAR_DATA[next_car][data_RENT] = playerid;
				if(GetPVarInt(playerid, "job_bus") != 0)
				{
					SetPlayerCheckpoint(playerid, 2518.826171, -2145.580322, 21.816497, 5.0);
					SendClientMessage(playerid,0x66CC00FF,"Отправляйтесь в Южный за новыми рабочими (на карте отмечена красная метка)");
				}
				else if(GetPVarInt(playerid, "job_db") != 0) SendClientMessage(playerid,0x66CC00FF,"Для помощи в работе используйте команду: /dhelp");
				else if(PI[playerid][data_START_JOB] == 8) SendClientMessage(playerid,0x66CC00FF,"/buyprod - загрузить товар, /unload - разгрузить товар, /prodmenu - меню развозчика продуктов");
			}
		}
		case dialog_vchstlovaya:
		{
			if(!response) return 1;
			if(response)
		    {
				switch(listitem)
		        {
		        	case 0:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 70) return SendClientMessage(playerid,CG,"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы покушали"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
		        	case 1:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 70) return SendClientMessage(playerid,CG,"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы покушали"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
		        	case 2:
			        {
			    	    new Float:health;
						GetPlayerHealth(playerid, health);
						if(health > 70) return SendClientMessage(playerid,CG,"Вы не нуждаетесь в питании");
						cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Вы покушали"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
						SetPlayerHealthAC(playerid, health+30);
		        	}
				}
		 	}
		}
		case dialog_kazna:
		{
		    if(!response) return 1;
			if(response)
   			{
				new str_1[144];
				format(str_1,sizeof(str_1),"[!!!] %s[%d] взял из общей казны 5000 рублей",PI[playerid][data_NAME], playerid);
				SendAdminMessage(COLOR_ADMINCHAT,str_1);
				PI[playerid][data_MONEY] += 5000;
                give_player_money(playerid, 5000,"#71",8600);
		    }
		}
		case dialog_ribolovarenda:
		{
		    if(!response) return 1;
			if(response)
   			{
   				if(GetPVarInt(playerid, "Arenda_Lodki") != 0) return SendClientMessage(playerid, CG, "Вы уже арендуете лодку");
   			    if(PI[playerid][data_MONEY] < 20000) return SendClientMessage(playerid, CG, "У Вас недостаточно денег");
				SendClientMessage(playerid, CY, "Вы арендовали лодку у рыболова за 20000 рублей.");
				SendClientMessage(playerid, CY, "Желаем Вам удачного плавания");
				SetPVarInt(playerid, "Arenda_Lodki", 1);
				ArendLodkaPlayer[playerid] = CreateVehicle(452, 2865.4814,-2164.7017,-1.0798,272.4514, 2, 2, 3600);
				PutPlayerInVehicleAC(playerid, ArendLodkaPlayer[playerid], 0);
                give_player_money(playerid, -20000,"#71",8615);
   			}
		}
		case dialog_MYASOSELL:
		{
		    if(!response) return 1;
			if(response)
   			{
   				give_player_money(playerid, PI[playerid][data_Myaso]*6500, "#71",8623);
				SendClientMessagef(playerid, 0xffcd00FF, "Вы продали {3377cc}%d кг{ffcd00} мяса за {3377cc}%d руб{ffcd00}", PI[playerid][data_Myaso], PI[playerid][data_Myaso]*6500);
  				PI[playerid][data_Myaso] = 0;
   				UpdatePlayerDataInt(playerid, "Myaso",PI[playerid][data_Myaso],8626);
   			}
		}
		case dialog_METALLBUY: {
		    if(!response) return 1;
			if(response) {
	    	    new inputtextmetall;
	    	    inputtextmetall = strval(inputtext);
     			if(inputtextmetall <= 0) return SendClientMessage(playerid, CG,"Минимальное колличество - 1 единица");
				if(get_player_money(playerid) < inputtextmetall*30) return SendClientMessage(playerid, CG, "У Вас не хватает денег");
     			if(inputtextmetall+PI[playerid][data_MET] > 40) {
					new str_1[144];
					format(str_1,sizeof(str_1),"Максимальное количество металла: 40 единиц, металла у Вас: %d", PI[playerid][data_MET]);
				 	return SendClientMessage(playerid, CG, str_1);
				}
				new money = inputtextmetall*30;
				if(PI[playerid][data_MONEY] < money) return SendClientMessage(playerid, CG, "На счету бизнеса недостаточно денег");
				PI[playerid][data_MET] += inputtextmetall;
				give_player_money(playerid, -money, "#71",8644);
				new str[70],pay[20];
				format(str,sizeof(str),"Покупка %d кг металла на складе", inputtextmetall);
				format(pay,sizeof(pay),"-%dР",money);
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str), CEFSTR("fb4949"), CEFSTR(pay));
   			}
		}
		case dialog_CARDBUY:
		{
		    if(!response) return 1;
		    if(response)
		    {
				if(get_player_money(playerid) < 750) return SendClientMessage(playerid, CG, "У Вас не хватает денег");
				SendClientMessage(playerid, 0x33dd66FF, "Вы оформили медицинскую справку за 750 руб");
				PI[playerid][data_MEDCARD] = 1;
				give_player_money(playerid, -750, "#71",8655);
				if(PI[playerid][data_MEDNUM] == 0) PI[playerid][data_MEDNUM] = RandomEX(1111111, 6666666);
		    }
		}
		case dialog_DRUGBUY:
		{
		    if(!response) return 1;
			if(response)
   			{
	    	    new inputtextmetall;
	    	    inputtextmetall = strval(inputtext);
     			if(inputtextmetall <= 0) return SendClientMessage(playerid, CG,"Минимальное колличество - 1 единица");
				if(get_player_money(playerid) < inputtextmetall*50) return SendClientMessage(playerid, CG, "У Вас не хватает денег");
     			if(inputtextmetall+PI[playerid][data_DRUGS] > 2500) {
					new str_1[144];
					format(str_1,sizeof(str_1),"Макасимальное колличество единиц: 1000 единиц, наркотиков у Вас: %d", PI[playerid][data_DRUGS]);
				 	return SendClientMessage(playerid, CG, str_1);
				}
				new money = inputtextmetall*50;
				if(PI[playerid][data_MONEY] < money) return SendClientMessage(playerid, CG, "У Васс недостаточно денег");
				PI[playerid][data_DRUGS] += inputtextmetall;
				give_player_money(playerid, -money, "#71",8676);
				new str[70],pay[20];
				format(str,sizeof(str),"Покупка %d ед веществ на складе", inputtextmetall);
				format(pay,sizeof(pay),"-%dР",money);
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str), CEFSTR("fb4949"), CEFSTR(pay));
   			}
		}
		case dialog_METALLGIVE:
		{
		    if(!response) return 1;
			if(response)
   			{
	    	    new inputtextmetall;
	    	    inputtextmetall = strval(inputtext);
     			if(inputtextmetall <= 0) return SendClientMessage(playerid, CG,"Минимальное колличество - 1 единица");
     			if(inputtextmetall+PI[playerid][data_MET] > 40) {
					new str_1[144];
					format(str_1,sizeof(str_1),"Макасимальное колличество металла: 40 единиц, металла у Вас: %d", PI[playerid][data_MET]);
				 	return SendClientMessage(playerid, CG, str_1);
				}
				PI[playerid][data_MET] += inputtextmetall;
			 	SendClientMessagef(playerid, -1, "Вы взяли единиц %d металла со склада. Всего металла у Вас: %d", inputtextmetall, PI[playerid][data_MET]);
   			}
		}
		case dialog_GIVEGUNVCH:
		{
			switch(listitem)
   			{
   			    case 0: {
   			        GiveWeapon(playerid, 6, 1);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял Лопату со склада (-1 кг металла, -1 шт патронов)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 1: {
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял Бронижелет со склада (-10 кг металла)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
					SetPlayerArmourAC(playerid, 100);
   			    }
   			    case 2: {
   			        GiveWeapon(playerid, 24, 35);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял Desert Eagle со склада (-6 кг металла, -35 шт патронов)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 3: {
   			        GiveWeapon(playerid, 29, 90);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял AKC-74Y со склада (-8 кг металла, -90 шт патронов)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 4: {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "'АК-47' доступен с 2 ранга");
   			        GiveWeapon(playerid, 30, 90);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял AK-47 со склада (-9 кг металла, -90 шт патронов)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 5: {
   			        if(PI[playerid][data_RANK] < 3) return SendClientMessage(playerid, CG, "'Country Rifle' доступна с 3 ранга");
   			        GiveWeapon(playerid, 33, 10);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял Country Rifle со склада (-10 кг металла, -10 шт патронов)",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			}
		}
		case dialog_GIVEGUNMVD:
		{
			switch(listitem)
   			{
   			    case 0: {
					new str_3[144];
					format(str_3,sizeof(str_3), "Введите количество аптечек, которое Вы хотите взять:\n{f00e5d}Подсказка: у Вас есть %d / 3 шт аптечек.\n\n{3366cc}Вы можете взять не более 6 шт аптечек в час", PI[playerid][data_HEALPACK]);
					ShowPlayerDialog(playerid, 5981, DIALOG_STYLE_INPUT, "{f00e5d}Взять аптечки", str_3, "Взять", "Закрыть");
   			    }
   			    case 1: {
					new str_3[144];
					format(str_3,sizeof(str_3),"Оружие\tНужный ранг\tПатроны\n{252525}Полицейская дубинка\t\t1+\t\t1\nПолицейский жезл\t\t1+\t\t1\nБронежилет\t2+\t\t-\nБалончик с краской\t\t2+\t\t500\nDesert Eagle\t\t2+\t\t70\nТТ с глушителем\t\t7+\t\t70\nАКС-74У\t\t3+\t\t180\nАК-47\t\t5+\t\t180\nСнайперская винтовка\t5+\t\t20");
					ShowPlayerDialog(playerid, 5980, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Оружейный склад", str_3, "Взять", "Закрыть");
   			    }
   			}
		}
		case 5981: {
			if(PI[playerid][data_HEALPACK] == 3) return SendClientMessage(playerid,CG,"Вы не можете взять более 3-х аптечек");
			if(PI[playerid][data_HEALPACKSKLAD] == 3) return SendClientMessage(playerid,CG,"Вы можете взять более 3-х аптечек за час");
			if(strval(inputtext) > 3) return SendClientMessage(playerid,CG,"Нельзя взять более 3-х аптечек");
			if(strval(inputtext)+PI[playerid][data_HEALPACKSKLAD] > 3) return SendClientMessage(playerid,CG,"Вы не можете взять такое количество аптечек");
			PI[playerid][data_HEALPACK] += strval(inputtext);
			PI[playerid][data_HEALPACKSKLAD] += strval(inputtext);
			UpdatePlayerDataInt(playerid, "HEALPACKSKLAD", PI[playerid][data_HEALPACKSKLAD],8763);
			new str_1[144];
			format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d аптечек со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid, strval(inputtext));
			SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
		}
		case 5980: {
			switch(listitem) {
   			    case 0: {
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял полицейскую дубинку со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
   			        GiveWeapon(playerid, 3, 1);
   			        SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 1: {
				   	GiveWeapon(playerid, 12, 1);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял полицейский жезл со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
				}
   			    case 2: {
   			    	if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Бронежилет доступен со 2 ранга");
				   	SetPlayerArmourAC(playerid, 100);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял бронежелет со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 3: {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Балончик с краской доступен со 2 ранга");
   			        GiveWeapon(playerid, 41, 500);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял балончик с краской со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 4: {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Desert Eagle доступен со 2 ранга");
   			        GiveWeapon(playerid, 24, 70);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял Desert Eagle со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 5: {
                    if(PI[playerid][data_RANK] < 7) return SendClientMessage(playerid, CG, "ТТ с глушителем доступен с 7 ранга");
   			        GiveWeapon(playerid, 23, 70);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял ТТ с глушителем со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 6: {
                    if(PI[playerid][data_RANK] < 3) return SendClientMessage(playerid, CG, "АКС-74У доступен с 3 ранга");
   			        GiveWeapon(playerid, 29, 180);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял АКС-74У со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 7: {
                    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "АК-47 с 5 ранга");
   			        GiveWeapon(playerid, 30, 180);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял АК-47 со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			    case 8: {
                    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Снайперская винтовка доступна с 5 ранга");
   			        GiveWeapon(playerid, 34, 20);
					new str_1[144];
					format(str_1,sizeof(str_1),"[R] %s %s[%d] взял снайперскую винтовку со склада",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid);
					SendFractionMessage(PI[playerid][data_MEMBER],0x99ccccFF,str_1);
   			    }
   			}
		}
		case 4980:
		{
			switch(listitem)
   			{

   			    case 0:
   			    {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Бронежилет доступен со 2 ранга");
   			        SetPlayerArmourAC(playerid, 100);
   			    }
   			    case 1:
   			    {
   			        GiveWeapon(playerid, 3, 1);
   			    }
   			    case 2:
   			    {
   			        GiveWeapon(playerid, 41, 300);
   			    }
   			    case 3:
   			    {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Desert Eagle доступен со 2 ранга");
   			        GiveWeapon(playerid, 24, 65);
   			    }
   			    case 4:
   			    {
                    if(PI[playerid][data_RANK] < 3) return SendClientMessage(playerid, CG, "АКС-74У доступен с 3 ранга");
   			        GiveWeapon(playerid, 29, 90);
   			    }
   			    case 5:
   			    {
                    if(PI[playerid][data_RANK] < 4) return SendClientMessage(playerid, CG, "АК-47 доступен с 4 ранга");
   			        GiveWeapon(playerid, 30, 90);
   			    }
   			    case 6:
   			    {
                    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Снайперская винтовка доступна с 5 ранга");
   			        GiveWeapon(playerid, 34, 20);
   			    }
   			}
		}
		case dialog_GIVEGUNPRAVO:
		{
			switch(listitem)
   			{
   			    case 0:
   			    {
                    if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "Desert Eagle доступен с 3 ранга");
   			        GiveWeapon(playerid, 24, 45);
   			    }
   			    case 1:
   			    {
   			        if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "ТТ доступен с 3 ранга");
   			        GiveWeapon(playerid, 23, 45);
   			    }
   			    case 2:
   			    {
   			        if(PI[playerid][data_RANK] < 2) return SendClientMessage(playerid, CG, "АКС-74У");
   			        GiveWeapon(playerid, 29, 90);
   			    }
   			}
		}
		case dialog_schoolinfo: {
		    if(!response) return 1;
			if(response) return 1;
		}
		case dialog_schoolclose: if(response || !response) return PI[playerid][data_schooltestlevel] = 0;
		case dialog_schooltest: {
  			if(!response) return 1;
            if(response) return ShowPlayerDialog(playerid, dialog_schooltest1, DIALOG_STYLE_LIST, "{f00e5d}Максимальная скорость в населенных пунктах", "1. 90 км час\n2. 60 км час\n3. 30 км час", "Выбрать", "");
		}
		case dialog_schooltest1: {
  			if(response || !response) {
				switch(listitem) {
		        	case 0: return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{f00e5d}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
	       			case 1: {
	   					PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{f00e5d}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
		       		}
		        	case 2: return ShowPlayerDialog(playerid, dialog_schooltest2, DIALOG_STYLE_LIST, "{f00e5d}Когда разрешен обгон?", "1. Если обгоняемое ТС не мешает обзору и его скорость не больше 100 км час\n2. Если ТС не едем слишком медленно\n3. Если ТС не мешает проезду", "Выбрать", "");
				}
			}
		}
		case dialog_schooltest2: {
		    if(response || !response) {
	   			switch(listitem) {
	        		case 0: {
	        			PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{f00e5d}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
	        		}
	        		case 1: return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{f00e5d}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
	        		case 2: return ShowPlayerDialog(playerid, dialog_schooltest3, DIALOG_STYLE_LIST, "{f00e5d}Действия при остановке Вас инспектором", "1. Уеду забыв, что это было\n2. Спрошу его удостоверение и дам свои права\n3. Спрячусь и сделаю вид, что я не был за рулем", "Выбрать", "");
				}
	    	}
		}
		case dialog_schooltest3: {
		    if(response || !response) {
	   			switch(listitem) {
	        		case 0: return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{f00e5d}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
				    case 1: {
	    				PI[playerid][data_schooltestlevel] += 1;
						return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{f00e5d}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
	    			}
	   	 			case 2: return ShowPlayerDialog(playerid, dialog_schooltest4, DIALOG_STYLE_LIST, "{f00e5d}Разрешено ли водителю ехать будучи не трезвым", "1. Да\n2. Нет\n3.Нет правильного ответа", "Выбрать", "");
				}
			}
		}
		case dialog_schooltest4: {
			if(response || !response) {
	   			switch(listitem) {
	        		case 0: {
						if(PI[playerid][data_schooltestlevel] > 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы сдали на водительские права"));
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							PI[playerid][data_LICB] = 1;
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
						if(PI[playerid][data_schooltestlevel] < 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы не сдали на водительские права"));
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали на права.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
					}
					case 1: {
						PI[playerid][data_schooltestlevel] += 1;
						if(PI[playerid][data_schooltestlevel] > 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы сдали на водительские права"));
							PI[playerid][data_LICB] = 1;
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
						if(PI[playerid][data_schooltestlevel] < 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы не сдали на водительские права"));
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали  на права.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
					}
	      			case 2: {
						if(PI[playerid][data_schooltestlevel] > 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы сдали на водительские права"));
							if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
							PI[playerid][data_LICB] = 1;
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы успешно закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nВы  успешно сдали на права,поздравляем.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
						if(PI[playerid][data_schooltestlevel] < 2) {
							cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы не сдали на водительские права"));
							new str_3[365];
							format(str_3,sizeof(str_3),"Вы закончили проходить тест сдачи на водительские права, ваш результат: %d/4\nУвы, но вы не сдали  на права.", PI[playerid][data_schooltestlevel]);
							return ShowPlayerDialog(playerid, dialog_schoolclose, DIALOG_STYLE_MSGBOX, "{f00e5d}Автошкола", str_3, "Закрыть", "");
						}
	      			}
				}
	    	}
		}
		case dialog_avtobusjob:
		{
		    if(!response) return 1;
		    if(response)
		    {
		    	SetPVarInt(playerid, "AvtoBus_start", 1);
		        SendClientMessage(playerid,0xffcd00FF,"Вы начали работу водителем автобуса, не выходите из ТС до окончания поездки.");
		        SendClientMessage(playerid,0xffcd00FF,"Направляйтесь на красную метку отмеченую на миникарте.");
				SendClientMessage(playerid,0xffcd00FF,"Для принудительного завершения работы выйдите из автобуса");
				SendClientMessage(playerid,0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
 				avtobus_car_job[playerid] = CreateVehicle(482, 1770.7213, 2262.4343, 15.5700, 179.9740, 8, 8, -1);
			    CAR_DATA[avtobus_car_job[playerid]][data_FUEL] = 150;
			    CAR_DATA[avtobus_car_job[playerid]][data_CREATE] = 1;
			    PutPlayerInVehicleAC(playerid, avtobus_car_job[playerid], 0);
				SetPlayerRaceCheckpoint(playerid, 0, 1839.5603,2041.6285,15.6350, 1839.5603,2041.6285,15.6350, 4);

		    }
		}
		case dialog_dalnoboy:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(GetPVarInt(playerid,"Counting_Dalnoboy") > gettime()) return SendClientMessage(playerid, CG, "Начинать работу дальнобойщика можно раз в 2 минуты");
		    	SetPVarInt(playerid, "dalnaboy_start", 1);
				PI[playerid][data_START_JOB] = 9;
		        SendClientMessage(playerid,0xffcd00FF,"Отвезите продукты на предприятие. Оно отмечено на карте красной меткой");
				SendClientMessage(playerid,0xffcd00FF,"Чтобы завершить работу, покиньте транспорт, после чего работа завершиться автоматически");
				SendClientMessage(playerid,0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
				dalnoboy_car[playerid] = CreateVehicle(514,2054.9629,-2601.9521,11.1146,0,8,8,-1);
			    CAR_DATA[dalnoboy_car[playerid]][data_FUEL] = 150;
			    CAR_DATA[dalnoboy_car[playerid]][data_CREATE] = 1;
      			dalnoboy_trayler[playerid] = CreateVehicle(435,2057.9629,-2603.9521,11.1146,0,1,1,-1);
      			switch(random(5))
      			{
      			    case 0: SetPlayerRaceCheckpoint(playerid, 1, -2351.3767,258.0399,23.6756, -2351.3767,258.0399,23.6756, 10);
      			    case 1: SetPlayerRaceCheckpoint(playerid, 1, 2978.3062,-720.5325,12.7500, 2978.3062,-720.5325,12.7500, 10);
      			    case 2: SetPlayerRaceCheckpoint(playerid, 1, 2325.0569,-264.0050,1.6073, 2325.0569,-264.0050,1.6073, 10);
      			    case 3: SetPlayerRaceCheckpoint(playerid, 1, 1976.2108,1652.2156,15.9200, 1976.2108,1652.2156,15.9200, 10);
      			    case 4: SetPlayerRaceCheckpoint(playerid, 1, -442.7106,-1575.0638,40.9470, -442.7106,-1575.0638,40.9470, 10);
      			}
			    PutPlayerInVehicleAC(playerid, dalnoboy_car[playerid], 0);
			    AttachTrailerToVehicle(dalnoboy_trayler[playerid], dalnoboy_car[playerid]);
			    dalnaboy_check_pricep[playerid] = SetTimerEx("CheckDalnaboyPricep", 1000, true, "i", playerid);
			    DisableRemoteVehicleCollisions(playerid, 1);
			    SavePlayerData(playerid);
			    SetPVarInt(playerid,"Counting_Dalnoboy", gettime() + 120);
		    }
		}
		case dialog_JB_3:
		{
		    if(!response) return 1;
		    if(response)
		    {
                new b = PI[playerid][data_JB];
                new list = GetPVarInt(playerid, "listitem");
				DestroyDynamic3DTextLabel(JB_DATA[b][data_VEH_TEXT][list]);
				DestroyVehicle(JB_DATA[b][data_VEH_JOB][list]);
				JB_DATA[b][data_VEH_JOB][list] = INVALID_VEHICLE_ID;
				JB_DATA[b][data_MODEL_JOB][list] = 0;
				JB_DATA[b][data_BANK] += 75000;
				SendClientMessage(playerid, 0x00CC99FF, "Вы продали один из автомобилей предприятия за 75000 рублей");
				SendClientMessage(playerid, 0x00CC99FF, "Деньги были добавлены на счет Вашего предприятия");
		    }
		}
		case dialog_ENTER_HOUSE: {
            if(!response) return 1;
            if(response) {
                new h = GetPVarInt(playerid, "house");
                if(!PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ])) return 1;
                if(HOUSE_DATA[h][data_LOCK] == 0 || !strcmp(PI[playerid][data_NAME],HOUSE_DATA[h][data_OWNER],true)) {
	                SetPlayerPosAC(playerid,1113.0996,1528.0840,905.8000);
	                SetPlayerFacingAngle(playerid, 357.8026);
	                SetPlayerInterior(playerid, HOUSE_DATA[h][data_INT]+1);
	                SetPlayerVirtualWorld(playerid, HOUSE_DATA[h][data_ID]);
	                Freeze(playerid);
	            }
	            else cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Этот дом закрыт"));
            }
        }
        case dialog_EXIT_HOUSE: {
            if(!response) return 1;
            if(response) {
                new h = GetPVarInt(playerid, "house");
                if(!PlayerToPoint(1.5, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ])) return 1;
				SetPlayerPosAC(playerid,HOUSE_DATA[h][data_CARX],HOUSE_DATA[h][data_CARY],HOUSE_DATA[h][data_CARZ]);
 				SetPlayerFacingAngle(playerid,HOUSE_DATA[h][data_CARANGLE]);
 				SetCameraBehindPlayer(playerid);
	            SetPlayerInterior(playerid,0);
	            SetPlayerVirtualWorld(playerid,0);
            }
        }
		case dialog_AB1_STARTJOB: {
		    if(!response) return 1;
            if(response) {
                if(PI[playerid][data_LVL] < 5 && PI[playerid][data_ADMLVL] < 1) return SendClientMessage(playerid, CG, "Для начала работы требуется 5 уровень");
                SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Отправляйтесь на стоянку за тягачем");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
                PI[playerid][data_START_JOB] = 6;
                SetPlayerSkinAC(playerid, 254);
                SetPVarInt(playerid, "job_db", 1);
            }
		}
		case dialog_AB1_STOPJOB:
		{
		    if(!response) return 1;
            if(response)
            {
                PI[playerid][data_START_JOB] = 0;
                if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				SetPVarInt(playerid, "job_db", 0);
				new back_car = PI[playerid][data_RENTJOB];
				CAR_DATA[back_car][data_RENT] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(back_car);
				PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
            }
		}
		case dialog_AB2_STARTJOB:
		{
		    if(!response) return 1;
            if(response)
            {
                if(PI[playerid][data_LVL] < 5 && PI[playerid][data_ADMLVL] < 1) return SendClientMessage(playerid, CG, "Для начала работы требуется 5 уровень");
                SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Отправляйтесь на стоянку за тягачем");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
                PI[playerid][data_START_JOB] = 7;
                SetPlayerSkinAC(playerid, 254);
                SetPVarInt(playerid, "job_db", 2);
            }
		}
		case dialog_AB2_STOPJOB:
		{
		    if(!response) return 1;
            if(response)
            {
                PI[playerid][data_START_JOB] = 0;
                if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				SetPVarInt(playerid, "job_db", 0);
				new back_car = PI[playerid][data_RENTJOB];
				CAR_DATA[back_car][data_RENT] = INVALID_PLAYER_ID;
				SetVehicleToRespawn(back_car);
				PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
            }
		}
		case dialog_SKLAD: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
		                if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_1, DIALOG_STYLE_INPUT, "{f00e5d}Взять металл","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 1: {
		                if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_3, DIALOG_STYLE_INPUT, "{f00e5d}Взять патроны","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 2: {
		                if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
		                ShowPlayerDialog(playerid, dialog_SKLAD_5, DIALOG_STYLE_INPUT, "{f00e5d}Взять вещества","Введите количество единиц,\nкоторое Вы хотите взять со склада", "Взять", "Отмена");
		            }
		            case 3: ShowPlayerDialog(playerid, dialog_SKLAD_2, DIALOG_STYLE_INPUT, "{f00e5d}Положить металл","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		            case 4: ShowPlayerDialog(playerid, dialog_SKLAD_4, DIALOG_STYLE_INPUT, "{f00e5d}Положить патроны","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		            case 5: ShowPlayerDialog(playerid, dialog_SKLAD_6, DIALOG_STYLE_INPUT, "{f00e5d}Положить вещества","Введите количество единиц,\nкоторое Вы хотите положить на склада", "Положить", "Отмена");
		        }
		    }
		}
		case dialog_SKLAD_1:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
				if(PI[playerid][data_MEMBER] == 5 && rostov_wh[3] != 0 || PI[playerid][data_MEMBER] == 6 && maykop_wh[3] != 0 || PI[playerid][data_MEMBER] == 7 && odessa_wh[3]) return SendClientMessage(playerid, CG, "Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 80 металла");
						if(rostov_wh[0] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						rostov_wh[0] -= strval(inputtext)+PI[playerid][data_MET];
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d металла со склада",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 80 металла");
						if(maykop_wh[0] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						maykop_wh[0] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d металла со склада",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
						if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_MET] > 40) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 40 кг металла");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_MET] > 80) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 80 кг металла");
						if(strval(inputtext) > 80) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 80 металла");
					    if(odessa_wh[0] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно металла");
						PI[playerid][data_MET] += strval(inputtext);
						odessa_wh[0] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d металла со склада", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_2:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
					    if(strval(inputtext)< 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
						if(strval(inputtext)+rostov_wh[0] > 6000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
						rostov_wh[0] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d металла на склад",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
						if(strval(inputtext)+maykop_wh[0] > 6000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
						maykop_wh[0] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d металла на склад",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_MET] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
						if(strval(inputtext)+odessa_wh[0] > 6000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_MET] -= strval(inputtext);
						odessa_wh[0] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d металла на склад", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_3:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
   			    if(PI[playerid][data_MEMBER] == 5 && rostov_wh[3] != 0 || PI[playerid][data_MEMBER] == 6 && maykop_wh[3] != 0 || PI[playerid][data_MEMBER] == 7 && odessa_wh[3]) return SendClientMessage(playerid, CG, "Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(rostov_wh[1] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						rostov_wh[1] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d патронов со склада",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();

					}
					case 6:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(maykop_wh[1] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						maykop_wh[1] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d патронов со склада",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
						if(PI[playerid][data_VIP] == 0) if(strval(inputtext)+PI[playerid][data_PATR] > 400) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 400 патронов");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_PATR] > 800) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 800 патронов");
						if(strval(inputtext) > 500) return SendClientMessage(playerid, CG,"Нельзя взять за 1 раз больше 500 патронов");
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(odessa_wh[1] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе недостаточно патронов");
						PI[playerid][data_PATR] += strval(inputtext);
						odessa_wh[1] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d патронов со склада", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_4:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно патронов");
						if(strval(inputtext)+rostov_wh[1] > 50000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
						rostov_wh[1] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d патронов на склад",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно патронов");
						if(strval(inputtext)+maykop_wh[1] > 50000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
						maykop_wh[1] += strval(inputtext);
						new str_5[256];
						format(str_5,sizeof(str_5),"[R] %s %s[%d] положил %d патронов на склад",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_5);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_1[256];
						format(str_1,sizeof(str_1),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_1);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_PATR] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно патронов");
						if(strval(inputtext)+odessa_wh[1] > 50000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_PATR] -= strval(inputtext);
						odessa_wh[1] += strval(inputtext);
						new str_5[256];
						format(str_5,sizeof(str_5),"[R] %s %s[%d] положил %d патронов на склад", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_5);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_1[256];
						format(str_1,sizeof(str_1),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_1);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_5:
		{
		    if(!response) return 1;
			if(response)
   			{
   			    if(PI[playerid][data_RANK] < 5) return SendClientMessage(playerid, CG, "Склад организации доступен с 5 ранга");
   			    if(PI[playerid][data_MEMBER] == 5 && rostov_wh[3] != 0 || PI[playerid][data_MEMBER] == 6 && maykop_wh[3] != 0 || PI[playerid][data_MEMBER] == 7 && odessa_wh[3]) return SendClientMessage(playerid, CG, "Склад закрыт лидером или заместителем ОПГ");
				switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(rostov_wh[2] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_DRUGS]  > 2000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						rostov_wh[2] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d наркотиков со склада",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();

					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(maykop_wh[2] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] >= 0) if(strval(inputtext)+PI[playerid][data_DRUGS] > 2000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						maykop_wh[2] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d наркотиков со склада",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(odessa_wh[2] < strval(inputtext)) return SendClientMessage(playerid, CG, "На складе организации недостаточно наркотиков");
						if(PI[playerid][data_VIP] < 1) if(strval(inputtext)+PI[playerid][data_DRUGS] > 1000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 1000 наркотиков");
						if(PI[playerid][data_VIP] > 0) if(strval(inputtext)+PI[playerid][data_DRUGS] > 2000) return SendClientMessage(playerid, CG,"В инвентаре можно иметь максимум 2000 наркотиков");
						PI[playerid][data_DRUGS] += strval(inputtext);
						odessa_wh[2] -= strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] взял %d наркотиков со склада", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SKLAD_6:
		{
		    if(!response) return 1;
			if(response)
   			{
			    switch(PI[playerid][data_MEMBER])
				{
					case 5:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно наркотиков");
						if(strval(inputtext)+rostov_wh[2] > 12000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
						rostov_wh[2] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d наркотиков на склад",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
                        format(str_5,sizeof(str_5),"Склад\n{cc6666}Скинхеды\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
                        UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str_5);
                        SaveWarehouse();
					}
					case 6:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно наркотиков");
						if(strval(inputtext)+maykop_wh[2] > 12000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
						maykop_wh[2] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d наркотиков на склад",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Гопота\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
					    UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str_5);
					    SaveWarehouse();
					}
					case 7:
					{
					    if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
					    if(PI[playerid][data_DRUGS] < strval(inputtext)) return SendClientMessage(playerid, CG, "У Вас недостаточно наркотиков");
						if(strval(inputtext)+odessa_wh[2] > 12000) return SendClientMessage(playerid, CG,"На складе организации недостаточно места");
                        PI[playerid][data_DRUGS] -= strval(inputtext);
						odessa_wh[2] += strval(inputtext);
						new str_1[256];
						format(str_1,sizeof(str_1),"[R] %s %s[%d] положил %d наркотиков на склад", rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,strval(inputtext));
						SendFractionMessage(PI[playerid][data_MEMBER],0x67ab00FF,str_1);
						new gz;
						for(new i = 0; i < totalgz; i++) if(gz_info[i][gzopg] == PI[playerid][data_MEMBER]) gz++;
						new str_5[256];
						format(str_5,sizeof(str_5),"Склад\n{cc6666}Кавказцы\n{FFFFFF}Территорий: {ffcc33}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n{FFFFFF}Патроны: {ffcc33}%d / 30000 шт.\n{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz+1,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str_5);
						SaveWarehouse();
					}
				}
   			}
		}
		case dialog_SHAHTA_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
		        if(GetPVarInt(playerid, "job_bus") == 0) {
			        new money = GetPVarInt(playerid,"all_tovar")*85;
					SendClientMessage(playerid, -1, "Вы завершили рабочий день (Шахтёр)");
					SendClientMessagef(playerid, -1, "Добыто руды: {ffa800}%d кг",GetPVarInt(playerid,"all_tovar"));
					SendClientMessagef(playerid, -1, "Всего заработано: {ffa800}%d руб",money);
					give_player_money(playerid, money,"#26",9571);
                    SetPlayerSpecialAction(playerid, 0);
                    DeletePVar(playerid,"ac_timer");
     				DeletePVar(playerid, "tovar");
					DeletePVar(playerid, "all_tovar");
					PI[playerid][data_START_JOB] = 0;
					if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
					else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
					if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
					if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
					if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
				 	DisablePlayerCheckpoint(playerid);
					new pay1[20];
					format(pay1,sizeof(pay1),"+%dР",money);
					cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Зарплата (Шахтёр)"), CEFSTR("418055"), CEFSTR(pay1));
				}
		    }
		}
		case dialog_YABLO_STARTJOB:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        PI[playerid][data_START_JOB] = 4;
		        PreloadAnimLib(playerid,"CAMERA");
		        PreloadAnimLib(playerid,"CARRY");
		        SetPVarInt(playerid, "all_tovar", 0);
		        SetPVarInt(playerid, "tovar", 0);
		        if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
		        SetPlayerSkinAC(playerid, 3);
                new pos = random(7);
		        SetPVarInt(playerid, "yablo_pos", pos);
		        SetPlayerCheckpoint(playerid, yablo_pos[pos][0], yablo_pos[pos][1], yablo_pos[pos][2], 2.0);
		 	 	SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Отправляйтесь в воду, ныряйте и собирайте мусор ({3377cc}на карте отмечена красная метка{ffcd00})");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
			}
		}
		case dialog_BUYFUEL:
		{
			if(!response) return 1;
			if(response)
			{
				new str_3[256];
				switch(listitem)
				{
				    case 0:
				    {
				        new b = GetPVarInt(playerid, "business");
						format(str_3,sizeof(str_3),"Стоимость бензина: %d рублей за 1 литр\nВведите количество бензина которое хотите приобрести",BUSINESS_DATA[b][data_CENA]);
						ShowPlayerDialog(playerid, dialog_BUYFUEL_1, DIALOG_STYLE_INPUT, "{f00e5d}Бензин",str_3, "Купить", "Отмена");
				    }
				    case 1:
				    {
				        new b = GetPVarInt(playerid, "business");
						format(str_3,sizeof(str_3),"Вы желаете купить канисту с бензином? Стоимость: %d рублей",BUSINESS_DATA[b][data_CENA]*20);
						ShowPlayerDialog(playerid, dialog_BUYFUEL_2, DIALOG_STYLE_MSGBOX, "{f00e5d}Канистра",str_3, "Купить", "Отмена");
				    }
				    case 2:
				    {
				        new b = GetPVarInt(playerid, "business");
						format(str_3,sizeof(str_3),"Вы желаете купить комплект запчастей? Стоимость: %d рублей",BUSINESS_DATA[b][data_CENA]*30);
					   	ShowPlayerDialog(playerid, dialog_BUYFUEL_3, DIALOG_STYLE_MSGBOX, "{f00e5d}Запчасти",str_3, "Купить", "Отмена");
				    }
				}
			}
		}
		case dialog_BUYFUEL_1:
		{
			if(!response) return 1;
			if(response)
			{
	  			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
				    new b = GetPVarInt(playerid,"business");
		   			new cena = BUSINESS_DATA[b][data_CENA]*strval(inputtext);
				    new car = GetPlayerVehicleID(playerid);
		   			if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Введите от 1 до 50 литров.");
					if(strval(inputtext)+CAR_DATA[car][data_FUEL] > 50) return SendClientMessage(playerid, CG, "В топливном баке можно перевозить не более 50 литров бензина");
                    if(strval(inputtext) > BUSINESS_DATA[b][data_PROD]  && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"У данной АЗС недостаточно бензина");
					if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
                    BUSINESS_DATA[b][data_PROD] -= strval(inputtext);
					BUSINESS_DATA[b][data_BANK] += cena;
					give_player_money(playerid,-cena,"#28",9650);
					CAR_DATA[car][data_FUEL] += strval(inputtext);
					UpdateBusinessData(b);
				}
			}
		}
		case dialog_BUYFUEL_2:
		{
			if(!response) return 1;
			if(response)
			{
	  			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
		   			new b = GetPVarInt(playerid,"business");
		   			new cena = BUSINESS_DATA[b][data_CENA]*20;
					if(PI[playerid][data_KANISTRA] == 1) return SendClientMessage(playerid,CG,"У вас уже есть канистра");
		   			if(10 > BUSINESS_DATA[b][data_PROD] && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"Недостаточно топлива на складе");
					if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
					BUSINESS_DATA[b][data_PROD] -= 10;
					BUSINESS_DATA[b][data_BANK] += cena;
					give_player_money(playerid,-cena,"#29",9670);
					UpdateBusinessData(b);
					PI[playerid][data_KANISTRA] = 1;
					SendClientMessage(playerid, 0x99CC33FF, "Вы купили канистру с бензином (/fuel)");
				}
			}
		}
		case dialog_BUYFUEL_3: {
		    if(!response) return 1;
			if(response) {
	  			if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				  	new b = GetPVarInt(playerid,"business");
				  	new cena = BUSINESS_DATA[b][data_CENA]*30;
				  	if(PI[playerid][data_ZAPCHASTI] == 1) return SendClientMessage(playerid,CG,"У вас уже есть ящик с инструментами");
					if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
					BUSINESS_DATA[b][data_BANK] += cena;
					give_player_money(playerid,-cena,"#30",9686);
	            	UpdateBusinessData(b);
	            	PI[playerid][data_ZAPCHASTI] = 1;
	            	SendClientMessage(playerid, 0x99CC33FF, "Вы купили ящик с инструментами (/fix)");
				}
			}
		}
		case dialog_GPS:
        {
            if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", "Что бы отключить навигатор зайдите в раздел Карта (ESC) и нажмите ПКМ\n\nИспользовать диалог или команду /gps с номером категории или места.", "Закрыть", "Назад");
					case 1: ShowPlayerDialog(playerid, dialog_GPS_6, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Важные места", "Место\tРасполажение\n\
					1. Автовокзал №1\t\tпгт. Батырево\n\
					2. Центарльный Банк\t\tпгт. Батырево\n\
					3. Автосалон (импортный)\t\tпгт. Южный\n\
					4. Автошкола\t\tпгт. Батырево\n\
					5. Мэрия\t\tпгт. Батырево\n\
					6. Металлобаза\tпгт. Батырево\n\
					7. Военкомат\t\tпгт. Батырево", "Отметить", "Назад");
					case 2: ShowPlayerDialog(playerid, dialog_GPS_1, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Временные работы", "\
					Место\tРасполажение\n\
					1. Ферма {e1e187}[1+ уровень]\t\t{252525}с. Раговичи\n\
					2. Дайвинг {e1e187}[1+ уровень]\t\t{252525}с. Раговичи\n\
					3. Шахта {e1e187}[1+ уровень]\t\t{252525}г. Лыткарино\n\
					4. Мясокомбинат {e1e187}[1+ уровень]\t\t{252525}г. Лыткарино", "Отметить", "Назад");
					case 3: ShowPlayerDialog(playerid, dialog_GPS_9, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Основные работы", "\
					Место\tРасполажение\n\
					1. Дальнобойщик {e1e187}[3+ уровень]\t\t{252525}г. Южный", "Отметить", "Назад");
					case 4:ShowPlayerDialog(playerid, 8989, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Государственные организации", "\
					Место\tРасполажение\n\
					1. Правительство\t\t пгт. Батырево\n\
					2. Войсковая часть\t\t пгт. Батырево\n\
					3. МО МВД\t\t\t пгт. Южный\n\
					4. БЦРБ (больница)\t\t пгт. Батырево", "Отметить", "Назад");
					case 5:ShowPlayerDialog(playerid, dialog_GPS_7, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Нелегальные организации", "\
					Место\tРасполажение\n\
					1. Скинхеды\t\t\t пгт. Батырево\n\
					2. Гопота\t\t\t г. Южный\n\
					3. Кавказцы\t\t\t пгт. Бусаево\n\
					{f00e5d}4. Склад вещест\t\t пгт. Батырево", "Отметить", "Назад");
					case 6: ShowPlayerDialog(playerid, dialog_GPS_8, DIALOG_STYLE_LIST, "{f00e5d}Развлечения", "\
					1. Аренда лодок\n\
					2. Казино", "Отметить", "Назад");
					case 7: ShowPlayerDialog(playerid, dialog_GPS_3, DIALOG_STYLE_INPUT, "{f00e5d}Поиск дома", "Введите номер дома, который хотите найти", "Продолжить", "Назад");
					case 8: ShowPlayerDialog(playerid, dialog_GPS_4, DIALOG_STYLE_INPUT, "{f00e5d}Поиск подъезда", "Введите номер подъезда, который хотите найти", "Продолжить", "Назад");
         			case 9: ShowPlayerDialog(playerid, dialog_GPS_5, DIALOG_STYLE_INPUT, "{f00e5d}Поиск бизнеса", "Введите номер бизнеса, который хотите найти", "Продолжить", "Назад");
					case 10: {
	                    new Float:pX, Float:pY, Float:pZ;
						new Float:Item, Float:minS;
						new Posi;
						GetPlayerPos(playerid, pX, pY, pZ);
						for(new i = 0; i < sizeof(Bankomats); i++) minS = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
						Posi = 56;
						for(new i = 0; i < sizeof(Bankomats); i++)
						{
							Item = PointToPoint(pX, pY, pZ, Bankomats[i][0], Bankomats[i][1], Bankomats[i][2]);
							if(Item < minS)
							{
							    minS = Item;
							    Posi = i;
							}
						}
						SendClientMessage(playerid, 0x006400FF, "Местоположение ближайшего банкомата успешно отмечено в вашем GPS.");
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid, Bankomats[Posi][0], Bankomats[Posi][1], Bankomats[Posi][2],5.0);
						return 1;
					}
				}
			}
		}
		case dialog_GPS_8:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2808.5137);
						SetPVarFloat(playerid, "gps_pos_y", -2148.5676);
						SetPVarFloat(playerid, "gps_pos_z", 19.0471);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2808.5137,-2148.5676,19.0471,5.0);
				        SendClientMessage(playerid, 0x006400FF, "Рыболов был отмечен на карте");
		            }
		            case 1:
		            {
		            	SetPVarFloat(playerid, "gps_pos_x", 1887.9885);
						SetPVarFloat(playerid, "gps_pos_y", 1895.7618);
						SetPVarFloat(playerid, "gps_pos_z", 13.2227);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2313.8247,-1924.8029,22.4338,5.0);
				        SendClientMessage(playerid, 0x006400FF, "Подпольное казино было отмечено на карте");
		            }
				}
			}
		}
		case 7242: {
			if !response *then {
				clearDialogTimer(playerid);
				return SendClientMessage(playerid, -1, "Ожидайте!");
			}
			if pDialogCurrectTime[playerid] + 2 > gettime() *then
				return 1;
	    	new id = PI[GetPVarInt(playerid, "proposition")][data_MEMBER];
			new idpl = GetPVarInt(playerid, "proposition");
	    	DeletePVar(playerid, "proposition");
			PI[playerid][data_MEMBER] = id;
			PI[playerid][data_RANK] = 1;
			PI[playerid][data_SKINM] = PI[playerid][data_SKIN];
			SetPlayerColorEx(playerid);
			PI[playerid][data_JOB] = 0;
			if(PI[playerid][data_SEX] == 1)
			{
				switch(PI[playerid][data_MEMBER])
				{
					case 1:PI[playerid][data_SKINM] = 57;
					case 2:PI[playerid][data_SKINM] = 179;
					case 3:PI[playerid][data_SKINM] = 280;
					case 4:PI[playerid][data_SKINM] = 71;
					case 5:PI[playerid][data_SKINM] = 8;
					case 6:PI[playerid][data_SKINM] = 115;
					case 7:PI[playerid][data_SKINM] = 123;
					case 8:PI[playerid][data_SKINM] = 15;
				}
			}
			if(PI[playerid][data_SEX] == 2)
			{
				switch(PI[playerid][data_MEMBER])
				{
					case 1:PI[playerid][data_SKINM] = 216;
					case 2:PI[playerid][data_SKINM] = 191;
					case 3:PI[playerid][data_SKINM] = 141;
					case 4:PI[playerid][data_SKINM] = 194;
					case 5:PI[playerid][data_SKINM] = 13;
					case 6:PI[playerid][data_SKINM] = 13;
					case 7:PI[playerid][data_SKINM] = 13;
					case 8:PI[playerid][data_SKINM] = 12;
				}
			}
			SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
			SetPlayerTeam(playerid, PI[playerid][data_MEMBER]);
			if(PI[playerid][data_MEMBER] == 5) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
		 	if(PI[playerid][data_MEMBER] == 6) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
		 	if(PI[playerid][data_MEMBER] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
            SendClientMessagef(playerid, -1, "Поздравляем! Вы вступили в организацию {ffb614}'%s'", Fraction_Name[PI[playerid][data_MEMBER]]);
            SendClientMessage(playerid, -1, "Используйте {ffb614}/setspawn{FFFFFF} для изменения спавна и {ffb614}/menu > Список команд для помощи");
            SendClientMessagef(idpl, 0x36e96cFF, "%s[%d] вступил в организацию по Вашему предложению. Игрок включён в стандартную группу", PI[playerid][data_NAME], playerid);
            new str_q[98];
			mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `standart` = 1", PI[playerid][data_MEMBER]);
			mysql_function_query(dbHandle, str_q, true, "SetGSTAND", "d", playerid);
			SavePlayerData(playerid);
			if(gangwar > 0) {
				if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
					static name_org[15], nameorg[15];
					switch(Command[0]) {
						case 5: name_org = "Скинхеды";
						case 6: name_org = "Гопота";
						case 7: name_org = "Кавказцы";
					}
					switch(Command[1]) {
						case 5: nameorg = "Скинхеды";
						case 6: nameorg = "Гопота";
						case 7: nameorg = "Кавказцы";
					}
					cef_emit_event(playerid, "show-capture");
					cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
					cef_emit_event(playerid, "capture-text", CEFSTR("подготовка"));
					cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
					cef_emit_event(playerid, "show_kill_list");
					GangZoneFlashForPlayer(playerid, WarZone, 0xFF000055);
				}
			}
		}
		case 8989:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1825.0465);
						SetPVarFloat(playerid, "gps_pos_y", 2096.2244);
						SetPVarFloat(playerid, "gps_pos_z", 15.8515);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1825.0465,2096.2244,15.8515,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		            case 1:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1896.4519);
						SetPVarFloat(playerid, "gps_pos_y", 1721.5980);
						SetPVarFloat(playerid, "gps_pos_z", 15.8050);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1896.4519,1721.5980,15.8050,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		            case 2:
					{
					    SetPVarFloat(playerid, "gps_pos_x", -303.5038);
						SetPVarFloat(playerid, "gps_pos_y", -1554.9454);
						SetPVarFloat(playerid, "gps_pos_z", 41.1196);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,-303.5038,-1554.9454,41.1196,5.0);
				        cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
		            case 3:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1904.9553);
						SetPVarFloat(playerid, "gps_pos_y", 2191.3960);
						SetPVarFloat(playerid, "gps_pos_z", 12.2200);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1904.9553,2191.3960,15.9317,5.0);
				        cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		        }
		    }
		}
		case dialog_GPS_7:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2622.3582);
						SetPVarFloat(playerid, "gps_pos_y", 1794.9524);
						SetPVarFloat(playerid, "gps_pos_z", 2.2392);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2622.3582,1794.9524,2.2392,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		            case 1:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 2216.6448);
						SetPVarFloat(playerid, "gps_pos_y", -2572.8618);
						SetPVarFloat(playerid, "gps_pos_z", 21.9633);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2216.6448,-2572.8618,21.9633,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		            case 2:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", -543.7330);
						SetPVarFloat(playerid, "gps_pos_y", -1386.7384);
						SetPVarFloat(playerid, "gps_pos_z", 41.2275);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,-543.7330,-1386.7384,41.2275,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		            case 3:
		            {
		                SetPVarFloat(playerid, "gps_pos_x", 1894.9059);
						SetPVarFloat(playerid, "gps_pos_y", 1186.5181);
						SetPVarFloat(playerid, "gps_pos_z", 30.3239);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1894.9059,1186.5181,30.3239,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
		            }
		        }
		    }
		}
		case dialog_GPS_6:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1811.0527);
						SetPVarFloat(playerid, "gps_pos_y", 2510.2866);
						SetPVarFloat(playerid, "gps_pos_z", 15.6717);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1811.0527,2510.2866,15.6717,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
					case 1:
					{
			            SetPVarFloat(playerid, "gps_pos_x", 1821.0479);
						SetPVarFloat(playerid, "gps_pos_y", 2028.2125);
						SetPVarFloat(playerid, "gps_pos_z", 15.8697);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1821.0479,2028.2125,15.8697,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
					case 2:
					{
					    SetPVarFloat(playerid, "gps_pos_x", 2325.5154);
						SetPVarFloat(playerid, "gps_pos_y", -1803.9813);
						SetPVarFloat(playerid, "gps_pos_z", 22.4540);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2325.5154,-1803.9813,22.4540,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
					case 3:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1854.3938);
						SetPVarFloat(playerid, "gps_pos_y", 1453.0250);
						SetPVarFloat(playerid, "gps_pos_z", 10.0355);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1854.3938,1453.0250,10.0355,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
					case 4:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1824.3256);
						SetPVarFloat(playerid, "gps_pos_y", 2095.8198);
						SetPVarFloat(playerid, "gps_pos_z", 15.8522);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1824.3256,2095.8198,15.8522,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
					case 5:
					{
						SetPVarFloat(playerid, "gps_pos_x", 2047.0425);
						SetPVarFloat(playerid, "gps_pos_y", 1396.1771);
						SetPVarFloat(playerid, "gps_pos_z", 26.4762);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2047.0425,1396.1771,26.4762,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
					case 6:
					{
						SetPVarFloat(playerid, "gps_pos_x", 1913.6172);
						SetPVarFloat(playerid, "gps_pos_y", 2300.4441);
						SetPVarFloat(playerid, "gps_pos_z", 15.5697);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1913.6172,2300.4441,15.5697,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
					}
				}
			}
		}
		case dialog_GPS_3:
        {
            if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    new id = strval(inputtext)-1;
			    for(new h = 0; h < TotalHouses; h++)
			    {
			        if(h == id)
			        {
			            SetPVarFloat(playerid, "gps_pos_x", HOUSE_DATA[h][data_ENTERX]);
						SetPVarFloat(playerid, "gps_pos_y", HOUSE_DATA[h][data_ENTERY]);
						SetPVarFloat(playerid, "gps_pos_z", HOUSE_DATA[h][data_ENTERZ]);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
						return 1;
			        }
			    }
			    SendClientMessage(playerid, CG,"Дом не найден");
			}
		}
		case dialog_GPS_4:
        {
            if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    new id = strval(inputtext)-1;
			    for(new h = 0; h < TotalKV; h++)
			    {
			        if(h == id)
			        {
			            SetPVarFloat(playerid, "gps_pos_x", KV_DATA[h][data_ENTER_X]);
						SetPVarFloat(playerid, "gps_pos_y", KV_DATA[h][data_ENTER_Y]);
						SetPVarFloat(playerid, "gps_pos_z", KV_DATA[h][data_ENTER_Z]);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,KV_DATA[h][data_ENTER_X], KV_DATA[h][data_ENTER_Y], KV_DATA[h][data_ENTER_Z],5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
						return 1;
			        }
			    }
			    SendClientMessage(playerid, CG,"Подъезд не найден");
			}
		}
		case dialog_GPS_5:
        {
            if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    new id = strval(inputtext)-1;
			    for(new b = 0; b < TotalBusiness; b++)
			    {
			        if(b == id)
			        {
			            SetPVarFloat(playerid, "gps_pos_x", BUSINESS_DATA[b][data_ENTERX]);
						SetPVarFloat(playerid, "gps_pos_y", BUSINESS_DATA[b][data_ENTERY]);
						SetPVarFloat(playerid, "gps_pos_z", BUSINESS_DATA[b][data_ENTERZ]);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
						return 1;
			        }
			    }
			    SendClientMessage(playerid, CG,"Бизнес не найден");
			}
		}
		case dialog_GPS_9:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1966.2675);
						SetPVarFloat(playerid, "gps_pos_y", -2603.7898);
						SetPVarFloat(playerid, "gps_pos_z", 10.8149);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1966.2675,-2603.7898,10.8149,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
				}
			}
		}
		case dialog_GPS_1:
		{
		    if(!response) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 2129.8027);
						SetPVarFloat(playerid, "gps_pos_y", 1791.4589);
						SetPVarFloat(playerid, "gps_pos_z", 12.0000);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2129.8027,1791.4589,12.0000,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
			        case 1:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 1989.3259);
						SetPVarFloat(playerid, "gps_pos_y", 992.9821);
						SetPVarFloat(playerid, "gps_pos_z", 15.3557);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,1989.3259,992.9821,15.3557,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
			        case 2:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", -2659.1125);
						SetPVarFloat(playerid, "gps_pos_y", 257.7947);
						SetPVarFloat(playerid, "gps_pos_z", 10.9310);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,-2659.1125,257.7947,10.9310,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
			        case 3:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", -2242.8171);
						SetPVarFloat(playerid, "gps_pos_y", 265.1432);
						SetPVarFloat(playerid, "gps_pos_z", 24.5337);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,-2242.8171,265.1432,24.5337,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }
			        case 4:
			        {
			            SetPVarFloat(playerid, "gps_pos_x", 2398.7961);
						SetPVarFloat(playerid, "gps_pos_y", -972.8578);
						SetPVarFloat(playerid, "gps_pos_z", 2.1973);
				        DisablePlayerCheckpoint(playerid);
				        SetPlayerCheckpoint(playerid,2398.7961,-972.8578,2.1973,5.0);
						cef_emit_event(playerid, "show-notify", CEFINT(17), CEFSTR("Пункт назначения отмечен у Вас на мини-карте"), CEFSTR("4ea650"));
			        }

				}
			}
		}
		case dialog_YABLO_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
      			new money = GetPVarInt(playerid,"all_tovar");
				SendClientMessage(playerid, -1, "Вы завершили рабочий день (Дайвер)");
				SendClientMessagef(playerid, -1, "Доставлено ящиков: {ffa800}%d кг",GetPVarInt(playerid,"all_tovar"));
				SendClientMessagef(playerid, -1, "Всего заработано: {ffa800}%d руб",money*450);
				PI[playerid][data_START_JOB] = 0;
				if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
				if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
				if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
				DisablePlayerCheckpoint(playerid);
				give_player_money(playerid, money*450,"#31",10207);
			}
		}
		case dialog_24_MENU: {
		    new b = GetPVarInt(playerid,"business");
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: SendClientMessage(playerid, 0x00AA33AA, "Вы купили пачку чипсов (всего: {FF9977}1 шт{00AA33}). Чтобы покушать используйте {FF9977}/eat");
			        case 1: SendClientMessage(playerid, 0x00AA33AA, "Вы купили упаковку пиццы (всего: {FF9977}1 шт{00AA33}). Чтобы покушать используйте {FF9977}/eat");
			        case 2: {
					    new cena = 500;
					    if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
							BUSINESS_DATA[b][data_BANK] += cena;
							BUSINESS_DATA[b][data_PROD] -= 1;
						}
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#39",10224);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						GiveWeapon(playerid, 14, 1);
					    UpdateBusinessData(b);
						cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка цветов"), CEFSTR("fb4949"), CEFSTR("-500P"));
						SendClientMessage(playerid, 0x00AA33AA, "Вы купили букет цветов. Чтобы подарить используйте {FF9977}/flowers");
						ShowShopMenu(playerid);
					}
					case 3:
					{
					    new cena = 200;
					    if(PI[playerid][data_HEALPACK] == 3) return SendClientMessage(playerid,CG,"Вы можете купить не более 3х аптечек");
					    if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
							BUSINESS_DATA[b][data_BANK] += cena;
							BUSINESS_DATA[b][data_PROD] -= 1;
						}
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#39",10241);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						PI[playerid][data_HEALPACK]++;
						UpdatePlayerDataInt(playerid, "healthchest", PI[playerid][data_HEALPACK],10245);
					    UpdateBusinessData(b);
						cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка мед. аптечки (/healme)"), CEFSTR("fb4949"), CEFSTR("-300P"));
						new str_1[155];
						format(str_1,sizeof(str_1),"Вы купили мед. аптечку{fe9a7e} (%d из 3){00aa33} за {fe9a7e}300 рублей", PI[playerid][data_HEALPACK]);
						SendClientMessage(playerid, 0x00aa33AA, str_1);
						SendClientMessage(playerid, 0x00aa33AA, "Чтобы подлечиться используйте {fe9a7e}/healme{00aa33}, передать другому игроку {fe9a7e}/givechest");
						ShowShopMenu(playerid);
					}
					case 4:
					{
					    new cena = 500;
					    if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
							BUSINESS_DATA[b][data_BANK] += cena;
							BUSINESS_DATA[b][data_PROD] -= 1;
						}
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#39",10261);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						GiveWeapon(playerid, 43, 20);
					    UpdateBusinessData(b);
						cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка фотоапарата"), CEFSTR("fb4949"), CEFSTR("-500P"));
						SendClientMessage(playerid, 0x00aa33AA, "Вы купили фотоапарат.");
						ShowShopMenu(playerid);
					}
					case 5:
					{
					    new cena = 400;
					    if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
							BUSINESS_DATA[b][data_BANK] += cena;
							BUSINESS_DATA[b][data_PROD] -= 1;
						}
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#39",10277);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						GiveWeapon(playerid, 41, 1000);
					    UpdateBusinessData(b);
						cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка балончика с краской"), CEFSTR("fb4949"), CEFSTR("-400P"));
						SendClientMessage(playerid, 0x00aa33AA, "Вы купили балончик с краской.");
						ShowShopMenu(playerid);
					}
					case 6:
					{
					    new cena = 300;
					    if(PI[playerid][data_MASK] >= 1) return SendClientMessage(playerid,CG,"Вы не можете преобрести более 1-й маски");
					    if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1)
						{
							BUSINESS_DATA[b][data_BANK] += cena;
							BUSINESS_DATA[b][data_PROD] -= 1;
						}
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#39",10295);
						PI[playerid][data_MASK]++;
					    UpdateBusinessData(b);
						cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка маски"), CEFSTR("fb4949"), CEFSTR("-300P"));
						SendClientMessage(playerid, 0x00aa33AA, "Вы купили маску за {ff9977}300 руб{00aa33}. Чтобы надеть её используйте /mask");
						ShowShopMenu(playerid);
					}
					case 7: ShowPlayerDialog(playerid, 6989, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка телефона", "Вы действительно хотите купить {3377cc}bPhone XX{252525} за {3377cc}5500 руб{252525}?\nНовый телефон заменит текущий (при его наличии).\n{696969}Отменить это действие будет невозможно", "Купить", "Назад");
					case 8: ShowPlayerDialog(playerid, 6990, DIALOG_STYLE_INPUT, "{f00e5d}Покупка номера телефона", "Введите желаем {3377cc}6-значный{252525} номер телефона\nНовая SIM-карта заменит текущую (при eё наличии).\n{696969}Отменить это действие будет невозможно", "Купить", "Назад");
			    }
			}
		}
		case 6990:
		{
			new b = GetPVarInt(playerid,"business");
		    if(!response) return ShowShopMenu(playerid);
		    if(response)
		    {
				if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, 6990, DIALOG_STYLE_INPUT, "{f00e5d}Покупка номера телефона", "Введите желаем {3377cc}6-значный{252525} номер телефона\nНовая SIM-карта заменит текущую (при eё наличии).\n{696969}Отменить это действие будет невозможно", "Купить", "Назад");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 6) return SendClientMessage(playerid, CG,"Длина номера 6 символа"), ShowPlayerDialog(playerid, 6990, DIALOG_STYLE_INPUT, "{f00e5d}Покупка номера телефона", "Введите желаем {3377cc}6-значный{252525} номер телефона\nНовая SIM-карта заменит текущую (при eё наличии).\n{696969}Отменить это действие будет невозможно", "Купить", "Назад");
			    new cena = 300;
	            if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"Сначала купите телефон");
                if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
					BUSINESS_DATA[b][data_BANK] += cena;
					BUSINESS_DATA[b][data_PROD] -= 1;
				}
				if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				SetPVarInt(playerid, "simcard", strval(inputtext));
				new str_q[70];
				mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `number` = '%d'",inputtext);
				mysql_function_query(dbHandle, str_q, true, "CheckSimCard", "i", playerid);
			}
		}
		case 6989:
		{
		    new b = GetPVarInt(playerid,"business");
		    if(!response) return ShowShopMenu(playerid);
		    if(response)
		    {
				if(BUSINESS_DATA[b][data_PROD] >= 0  && BUSINESS_DATA[b][data_OWNED] == 1) {
					BUSINESS_DATA[b][data_BANK] += 5500 ;
					BUSINESS_DATA[b][data_PROD] -= 1;
				}
				if(get_player_money(playerid) < 5500) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-5500,"#39",10338);
				BUSINESS_DATA[b][data_BANK] += 5500;
				BUSINESS_DATA[b][data_PROD] -= 1;
				PI[playerid][data_PHONE] = 1;
				UpdateBusinessData(b);
				cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка мобильного телефона"), CEFSTR("fb4949"), CEFSTR("-5500P"));
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка мобильного телефона", "Поздравляем!\nВы купили телефон {3377cc}bPhone XX{252525}\nНе забудьте приобрести SIM-карту", "Закрыть", "Назад");
				SendClientMessage(playerid, 0x00aa33AA, "Чтобы открыть меню телефона используйте {ff9977}клавишу P{00aa33}");
			}
		}
		case dialog_EAT_MENU: {
		    new b = GetPVarInt(playerid,"business");
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
			            new cena = 100;
	                    if(BUSINESS_DATA[b][data_PROD] <= 0  && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"В бизнесе недостаточно продуктов");
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#40",10356);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						if(PI[playerid][data_DRINK] <= 90) PI[playerid][data_DRINK] += 10;
						else PI[playerid][data_DRINK] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s выпил спранк",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил спранк", 0xFF99CCFF, 20.0, 4000);
					}
		         	case 1: {
			            new cena = 150;
	                    if(BUSINESS_DATA[b][data_PROD] <= 0  && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"В бизнесе недостаточно продуктов");
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#41",10372);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						if(PI[playerid][data_DRINK] <= 80) PI[playerid][data_DRINK] += 20;
						else PI[playerid][data_DRINK] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s выпил кофе",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "выпил кофе", 0xFF99CCFF, 20.0, 4000);

			        }
			       	case 2: {
			            new cena = 250;
	                    if(BUSINESS_DATA[b][data_PROD] <= 0  && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"В бизнесе недостаточно продуктов");
						if(get_player_money(playerid) < cena) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						give_player_money(playerid,-cena,"#42",10389);
						BUSINESS_DATA[b][data_BANK] += cena;
						BUSINESS_DATA[b][data_PROD] -= 1;
						new Float:hp;
						GetPlayerHealth(playerid, hp);
						SetPlayerHealthAC(playerid, hp+30);
						if(PI[playerid][data_SATIETY] <= 70) PI[playerid][data_SATIETY] += 30;
						else PI[playerid][data_SATIETY] = 100;
                        UpdateBusinessData(b);
						new str_1[50];
						format(str_1,sizeof(str_1),"%s съела бургер",PI[playerid][data_NAME]);
						PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
					    ProxDetector(10.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	                    SetPlayerChatBubble(playerid, "съела бургер", 0xFF99CCFF, 20.0, 4000);
			        }
			    }
			    ShowEatMenu(playerid);
			}
		}
		case dialog_OGOROD_STARTJOB: {
		    if(!response) return 1;
		    if(response) {
	        	PI[playerid][data_START_JOB] = 5;
	        	PreloadAnimLib(playerid,"BOMBER");
	        	PreloadAnimLib(playerid,"CARRY");
	        	SetPVarInt(playerid, "all_tovar", 0);
	        	SetPVarInt(playerid, "tovar", 0);
    			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid, 1);
    			SetPlayerSkinAC(playerid, 158);
				new pos = random(4);
				SetPVarInt(playerid, "ogorod_pos", pos);
				SetPlayerCheckpoint(playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2], 2.0);
				SendClientMessage(playerid, 0xffcd00FF, "Вы начали рабочий день. Отправляйтесь в огород собирать овощи ({3377cc}на карте отмечена красная метка{ffcd00})");
				SendClientMessage(playerid, 0xffcd00FF,"Так-же Вам была выдана рация на момент работы, используйте:{3377cc} /j");
			}
		}
		case dialog_OGOROD_STOPJOB: {
		    if(!response) return 1;
		    if(response) {
		        if(GetPVarInt(playerid, "job_bus") == 0) {
			        new money = GetPVarInt(playerid,"all_tovar")*150, message[256];
					if(PI[playerid][data_VIP] == 1 || X2DAY == true) {
						    format(message,sizeof(message),"Вы завершили рабочий день. Доставлено ящиков: {3377cc}%d шт{ffcd00}. Ваша зарплата: {3377cc}%d {ffcd00}рублей {3377cc}(x3)",GetPVarInt(playerid,"all_tovar"),money*3);
							SendClientMessage(playerid, 0xffcd00FF, message);
							give_player_money(playerid, money*3,"#43",10433);
					}
					else {
						    format(message,sizeof(message),"Вы завершили рабочий день. Доставлено ящиков: {3377cc}%d шт{ffcd00}. Ваша зарплата: {3377cc}%d {ffcd00}рублей",GetPVarInt(playerid,"all_tovar"),money);
							SendClientMessage(playerid, 0xffcd00FF, message);
							give_player_money(playerid, money,"#43",10438);
					}
					DeletePVar(playerid,"ac_timer");
                    DeletePVar(playerid, "job_bus");
     				DeletePVar(playerid, "all_tovar");
					PI[playerid][data_START_JOB] = 0;
					if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
					else SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				 	DisablePlayerCheckpoint(playerid);
				}
		    }

		}
		case dialog_MAINMENU: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
			        case 0: ShowStats(playerid);
			        case 1: ShowSettings(playerid);
                    case 2: ShowDialogRule_1(playerid);
                    case 3: ShowDialogResurs(playerid);
					case 4: ReportDialog(playerid);
			        case 5: ChangeNameMenu(playerid);
                    case 6: {
						    if(PI[playerid][data_LOGGED] == false) return 1;
							new str_q[98];
							mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e'",PI[playerid][data_NAME]);
							mysql_function_query(dbHandle, str_q, true, "CheckBlackListPlayer", "i", playerid);
							return 1;
					}
					case 7: {
					    new str_q[98];
				        mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'",PI[playerid][data_NAME]);
				        mysql_function_query(dbHandle, str_q, true, "LoadDonate", "i", playerid);
					}
					case 8: return 1;
			    }
			}
		}
		case dialog_HOUSE:
  		{
			if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            new h = PI[playerid][data_HOUSE],str[110];
						format(str,sizeof(str),"Номер дома: {F00E5D}%d\n{252525}Гос. цена: {F00E5D}%d\n\n{CCCC33}Оплачен на %d дня/дней",h+1,HOUSE_DATA[h][data_PRICE],HOUSE_DATA[h][data_DAY]);
                        ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Информация о доме",str, "Закрыть", "");
			        }
			        case 1:
			        {
			            new h = PI[playerid][data_HOUSE];
	 				    if(PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_EXITX], HOUSE_DATA[h][data_EXITY], HOUSE_DATA[h][data_EXITZ]) || PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ]))
						switch(HOUSE_DATA[h][data_LOCK])
   						{
	        				case 0: HOUSE_DATA[h][data_LOCK] = 1, cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Вы закрыли свой дом"), CEFSTR("c13537"));
       						case 1: HOUSE_DATA[h][data_LOCK] = 0, cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Вы открыли свой дом"), CEFSTR("487f5f"));
				        }
				        else SendClientMessage(playerid,CG,"Необходимо находиться возле выхода/входа");
			        }
			        case 2:
			        {
						new h = PI[playerid][data_HOUSE],dtext[128];
						format(dtext,sizeof(dtext),"Вы желаете продать свой дом за {f00e5d}%d рублей{252525}?", HOUSE_DATA[h][data_PRICE]/2);
			            ShowPlayerDialog(playerid, dialog_SELL_HOUSE, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа дома",dtext, "Продать", "Отмена");
			        }
			    }
			}
  		}
  		case dialog_SELL_HOUSE:
		{
			if(!response) return 1;
			if(response)
   			{
   			    new str[145];
		    	new h = PI[playerid][data_HOUSE];
		      	HOUSE_DATA[h][data_OWNED] = 0;
		      	HOUSE_DATA[h][data_DAY] = 0;
		      	PI[playerid][data_HOUSE] = INVALID_HOUSE_ID;
			 	strmid(HOUSE_DATA[h][data_OWNER], "None", 0, strlen(HOUSE_DATA[h][data_OWNER]), 24);
				give_player_money(playerid,HOUSE_DATA[h][data_PRICE]/2,"#44",10521);
				format(str,sizeof(str),"Вы продали дом государству за %d рублей", HOUSE_DATA[h][data_PRICE]/2);
			 	SendClientMessage(playerid, 0xFFCC00AA, str);
				UpdateHouseData(h);
				SaveHouseData(h);
			  	SavePlayerData(playerid);
			  	new logtext[64];
				format(logtext,sizeof(logtext),"продал дом ID:%d", HOUSE_DATA[h][data_ID]);
				AddLog("log_player",PI[playerid][data_NAME], logtext);
   			}
		}
		case dialog_KV: {
			if(!response) return 1;
			if(response) {
			    new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
			    switch(listitem) {
			        case 0: {
						new class_kv[10],status[18],color[8];
						switch(KV_DATA[kv][data_CLASS][k]) {
							case 0: class_kv = "Хрущёвка";
							case 1: class_kv = "Простая";
							case 2: class_kv = "Элитный";
						}
						switch(KV_DATA[kv][data_LOCK][k]) {
							case 0: status = "Квартира откыта";
							case 1: status = "Квартира закрыта";
						}
						switch(KV_DATA[kv][data_LOCK][k]) {
							case 0: color = "45c068";
							case 1: color = "ee2121";
						}
						new owner[24];
						switch(k) {
							case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
							case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
							case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
							case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
							case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
							case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
						}
			            new str[450];
						format(str,sizeof(str),"\
						{252525}Название:\t\t{3377cc}%s\n\
						{252525}Номер квартиры:\t%d\n\
						{252525}Номер подъезда:\t%d\n\
						{252525}Владелец:\t\t%s\n\
						{252525}Стоимость:\t\t%d руб\n\
						{252525}Статус оплаты:\t\t%d дн\n\
						{252525}Статус:\t\t\t{%s}%s",class_kv,k+1,kv+1,owner,KV_DATA[kv][data_PRICE][k],KV_DATA[kv][data_DAY][k],color,status);
                        ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Информация о квартире",str, "Закрыть", "");
			        }
			        case 1: {
	 				    if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k]) || PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]))
						switch(KV_DATA[kv][data_LOCK][k]) {
	        				case 0: KV_DATA[kv][data_LOCK][k] = 1, cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Вы закрыли свою квартиру"), CEFSTR("c13537"));
       						case 1: KV_DATA[kv][data_LOCK][k] = 0, cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Вы открыли свою квартиру"), CEFSTR("487f5f"));
				        }
				        else SendClientMessage(playerid,CG,"Необходимо находиться возле выхода/входа");
			        }
			        case 2: {
						new str_3[185];
						format(str_3,sizeof(str_3),"Вы желаете продать свою квартиру за {f00e5d}%d рублей{252525}?", KV_DATA[kv][data_PRICE][k]/2);
			            ShowPlayerDialog(playerid, dialog_SELL_KV, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа квартиры",str_3, "Продать", "Отмена");
			        }
			    }
			}
  		}
  		case dialog_SELL_KV: {
			if(!response) return 1;
			if(response) {
   			    new str[145];
		    	new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
		      	KV_DATA[kv][data_OWNED][k] = 0;
		      	KV_DATA[kv][data_DAY][k] = 0;
		      	PI[playerid][data_KV] = INVALID_KV_ID;
		      	PI[playerid][data_PADIK] = INVALID_KV_ID;
		      	switch(k) {
					case 0: strmid(KV_DATA[kv][data_OWNER_1], "None", 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
					case 1: strmid(KV_DATA[kv][data_OWNER_2], "None", 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
					case 2: strmid(KV_DATA[kv][data_OWNER_3], "None", 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
					case 3: strmid(KV_DATA[kv][data_OWNER_4], "None", 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
					case 4: strmid(KV_DATA[kv][data_OWNER_5], "None", 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
					case 5: strmid(KV_DATA[kv][data_OWNER_6], "None", 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
				}
				give_player_money(playerid,KV_DATA[kv][data_PRICE][k]/2,"#45",10607);
				format(str,sizeof(str),"Вы продали свою квартиру государству за %d рублей", KV_DATA[kv][data_PRICE][k]/2);
			 	SendClientMessage(playerid, 0xFFCC00AA, str);
				UpdateKVData(kv,k);
				SaveKVData(kv);
			  	SavePlayerData(playerid);
			  	new logtext[64];
				format(logtext,sizeof(logtext),"продал квартиру №%d, подъезд ID:%d", k, KV_DATA[kv][data_ID]);
				AddLog("log_player",PI[playerid][data_NAME], logtext);
   			}
		}
		case dialog_DONATE_VIP: {
			if(!response) return 1;
			if(response) {
			    if(PI[playerid][data_VIP] == 1) return SendClientMessage(playerid, CG, "У Вас уже есть Arcana плюс");
			    if(PI[playerid][data_DONATE] < 200) return SendClientMessage(playerid, CG, "У Вас недостаточно донат-поинтов на счету");
                PI[playerid][data_VIP] = 30;
                PI[playerid][data_DONATE] -= 200;
		       	new str_q[98];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
    			mysql_function_query(dbHandle, str_q, false, "", "");
				SendClientMessage(playerid, 0xffcd00FF, "Подписка Arcana Плюс успешно активирована. Используйте {3366cc}/plus{ffcd00} чтобы узнать о возможностях");
			}
		}
		case dialog_DONATE: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
						new str_3[185];
						format(str_3,sizeof(str_3),"Текущий баланс {2b6ab8}%d донат-поинтов", PI[playerid][data_DONATE]);
						ShowPlayerDialog(playerid, dialog_DONATE, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", str_3, "Закрыть", "Назад");
					}
					case 1: ShowPlayerDialog(playerid,dialog_OK,DIALOG_STYLE_MSGBOX, "{EE3366}История", "История операций пуста", "", "Назад");
					case 2: {
						new str_3[256];
						format(str_3,sizeof(str_3),"Баланс донат-поинтов: {3377cc}%d\n{252525}Ставка перевода: 1 дп. = 2000 руб\n\nВведите количество донат-поинтов, которое Вы\nхотите конвертировать в игровые рубли:", PI[playerid][data_DONATE]);
					 	ShowPlayerDialog(playerid, dialog_CONVERT, DIALOG_STYLE_INPUT, "{f00e5d}Конвертация донат-поинтов (ввод суммы)", str_3, "Далее", "Закрыть");
					}
					case 3: ShowPlayerDialog(playerid, dialog_DONATE_1, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка всех навыков стрельбы", "После покупки у Вас появятся все навыки стрельбы с оружия.\nЦена - {f00e5d}30 донат-поинтов", "Купить", "Закрыть");
					case 4: ShowPlayerDialog(playerid, dialog_DONATE_2, DIALOG_STYLE_MSGBOX, "{f00e5d}Снятие всех предупреждений", "После покупки у Вас пропадут все предупреждения\nЦена - {f00e5d}25 донат-поинтов", "Купить", "Закрыть");
		            case 5: ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{f00e5d}Изменение никнейма", "Вы собераетесь изменить игровой никнейм своего персонажа\n\n{f00e5d}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
                    case 6: callcmd::plus(playerid);
                    case 7: {
                        if(PI[playerid][data_DONATE] < 129) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки военного билета нужно 129 донат-поинтов.", "Закрыть", "");
                        PI[playerid][data_MILITARY] = 1;
                        UpdatePlayerDataInt(playerid, "military", PI[playerid][data_MILITARY],10658);
						new str_q[110];
			            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
		    			mysql_function_query(dbHandle, str_q, false, "", "");
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 129 донат-поинтов.");
                    }
                    case 8: {
                        if(PI[playerid][data_DONATE] < 129) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Для покупки 10 единиц законопослушности нужно 19 донат-поинтов.", "Закрыть", "");
                        PI[playerid][data_ZAKON] +=10;
						UpdatePlayerDataInt(playerid, "zakon", PI[playerid][data_ZAKON],10667);
						new str_q[110];
			            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
		    			mysql_function_query(dbHandle, str_q, false, "", "");
						SendClientMessage(playerid, 0x33ccffFF, "Успешная покупка, списано 19 донат-поинтов.");
                    }
		            case 9: ShowPlayerDialog(playerid, dialog_DONATE_4, DIALOG_STYLE_INPUT, "{f00e5d}Покупка 4х значного номера", "Введите желаем номер в окне ниже.", "Купить", "Отмена");
					case 10: {
						new settings[700];
						format(settings, sizeof settings, "\
						{252525}1. Рога\t\t\t\t{f00e5d}%s (цена: 35 дп)\n\
						{252525}2. Костюм гробовщик\t\t{f00e5d}%s (цена: 35 дп)\n\
						{252525}3. Голова Микки-Мауса\t{f00e5d}%s (цена: 35 дп)\n\
						{252525}4. Голова Дед-Пула\t\t\t{f00e5d}%s (цена: 25 дп)\n\
						{252525}5. Огнемёт\t\t\t{f00e5d}%s (цена: 25 дп)\n\
						{252525}6. Красный чемодан\t\t{f00e5d}%s (цена: 10 дп)\n\
						{252525}7. Ёлка на плечо\t\t{f00e5d}%s (цена: 25 дп)\n\
						{252525}8. Ангельское кольцо \t\t{f00e5d}%s (цена: 40 дп)\n\
						{252525}9. Дигл на спину\t\t{f00e5d}%s (цена: 25 дп)\n\
						{252525}10. Шляпа фермера\t\t{f00e5d}%s (цена: 15 дп)",
						(PI[playerid][data_AKS1]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS2]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS3]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS4]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS5]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS6]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS7]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS8]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS9]) ? ("(куплен)") : ("(не куплен)"),
						(PI[playerid][data_AKS10]) ? ("(куплен)") : ("(не куплен)"));
						ShowPlayerDialog(playerid,dialog_DONATE_6, DIALOG_STYLE_LIST, "{f00e5d}Покупка акессуаров",settings, "Купить", "Отмена");
					}
				}
			}
		}
		case dialog_BUSINESSPRODBUY: {
  			if(!response) return 1;
			if(response) {
					new b = PI[playerid][data_BUSINESS];
			    	if(BUSINESS_DATA[b][data_OWNER] == PI[playerid][data_NAME]) {
		    	    new inputtextprodukt;
		    	    inputtextprodukt = strval(inputtext);
					if(BUSINESS_DATA[b][data_OWNED] == 0) return SendClientMessage(playerid, CG,"Бизнес закрыт");
	     			if(BUSINESS_DATA[b][data_PROD] == 100) return SendClientMessage(playerid, CG,"Склад бизнеса полон");
	     			if(inputtextprodukt <= 0) return SendClientMessage(playerid, CG,"Склад бизнеса полон");
					new money = inputtextprodukt*300;
					new sklad = inputtextprodukt+BUSINESS_DATA[b][data_PROD];
					if(BUSINESS_DATA[b][data_BANK] < money) return SendClientMessage(playerid, CG, "На счету бизнеса недостаточно денег");
					if(sklad > 1000) return SendClientMessage(playerid, CG, "На складе бизнеса недостаточно места");
					BUSINESS_DATA[b][data_BANK] -= money;
					BUSINESS_DATA[b][data_PROD] += inputtextprodukt;
				 	SendClientMessagef(playerid, -1, "Вы купили %d шт. продуктов. Всего продуктов: %d", inputtextprodukt, BUSINESS_DATA[b][data_PROD]);
					UpdateBusinessData(b);
					SaveBusinessData(b);
					return 1;
				}
			}
		}
		case dialog_BUSINESSCONTROL: {
            if(!response) return 1;
			if(response) {
				switch(listitem) {
					case 0: {
					    new b = PI[playerid][data_BUSINESS];
						Business_Info(playerid,b);
					}
					case 1: {
						new b = PI[playerid][data_BUSINESS];
						new str_3[1048];
						format(str_3,sizeof(str_3),"\
						{252525}Для получения прибыли бизнесу нужны продукты. Каждый час в бизнесе\n\
						{252525}расходуется 1 партия продуктов и одновременно зачисляется прибыль.\n\
						{252525}Если в этот момент отсутствовали продукты - прибыли не будет.\n\
						{252525}Изначально Вы можете купить 6 партий продуктов (этого хватит на 6 часов)\n\
						{252525}Увеличить вместимость склада можно в Центре недвижимости {f00e5d}(/gps).\n\n\
						{f00e5d}Обратите внимание: если склад будет пустовать более 5-7 дней,\n\
						{f00e5d}бизнес будет продан государству, а Вам - возвращена часть его стоимости.\n\n\
						{252525}Продуктов на складе:\t {3366cc}%d парт.\n\
						{252525}Вместимость склада:\t {3366cc}100 парт.\n\
						{252525}Доступно для закупки:\t {3366cc}%d парт.\n\
						{252525}Посетителей за день:\t {3366cc}%d человек\n\
						{252525}Стоимость 1 партии:\t {2dc45b}300 руб\n\
						{252525}Введите количество партий продуктов для закупки:", BUSINESS_DATA[b][data_PROD], 100-BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_CLIENT]);
			            ShowPlayerDialog(playerid, dialog_BUSINESSPRODBUY, DIALOG_STYLE_INPUT,"{f00e5d}Преобрести продукты",str_3, "Продать", "Отмена");
					}
					case 2: {
					    new b = PI[playerid][data_BUSINESS];
						new str_3[185];
						format(str_3,sizeof(str_3),"Вы желаете продать свой бизнес за {f00e5d}%d рублей{252525}?", BUSINESS_DATA[b][data_PRICE]/2);
			            ShowPlayerDialog(playerid, dialog_SELL_BUSINESS, DIALOG_STYLE_MSGBOX,"{f00e5d}Продажа бизнеса",str_3, "Продать", "Отмена");
					}
					case 3: Business_Re_Money(playerid);
					case 4: Business_Give_Money(playerid);
				}
			}
        }
		case dialog_SELL_BUSINESS: {
			if(!response) return 1;
			if(response) {
   			    new str[50];
		    	new b = PI[playerid][data_BUSINESS];
		      	BUSINESS_DATA[b][data_OWNED] = 0;
		      	BUSINESS_DATA[b][data_DAY] = 0;
		      	PI[playerid][data_BUSINESS] = INVALID_BUSINESS_ID;
			 	strmid(BUSINESS_DATA[b][data_OWNER], "None", 0, strlen(BUSINESS_DATA[b][data_OWNER]), 24);
				give_player_money(playerid,BUSINESS_DATA[b][data_PRICE]/2,"#46",10988);
				format(str,sizeof(str),"Вы продали бизнес государству за %d рублей", BUSINESS_DATA[b][data_PRICE]/2);
			 	SendClientMessage(playerid, 0xc89522AA, str);
				UpdateBusinessData(b);
				SaveBusinessData(b);
			  	SavePlayerData(playerid);
			  	new logtext[64];
				format(logtext,sizeof(logtext),"продал бизнес ID:%d", BUSINESS_DATA[b][data_ID]);
				AddLog("log_player",PI[playerid][data_NAME], logtext);
   			}
		}
        case dialog_BUSINESS_INFO: {
            if(!response) return 1;
			if(response) return 1;
		}
		case dialog_BUSINESS_CHANGE_NAME: {
            if(!response) return Business_Panel(playerid);
			if(response) {
			    new b = PI[playerid][data_BUSINESS];
			    if(strlen(inputtext) == 0) return Business_Change_Name(playerid);
				if(strlen(inputtext) < 3 || strlen(inputtext) > 30) return SendClientMessage(playerid, CG,"От 3 до 30 символов"),Business_Change_Name(playerid);
                strmid(BUSINESS_DATA[b][data_NAME], inputtext, 0, strlen(inputtext), 30);
                SendClientMessagef(playerid,0xc89522FF, "Новое название бизнеса: %s",BUSINESS_DATA[b][data_NAME]);
                UpdateBusinessData(b);
                SaveBusinessData(b);
			}
        }
        case dialog_BUSINESS_GIVE_MONEY:
        {
            if(!response) return Business_Panel(playerid);
			if(response)
			{
			    new str[55];
			    new b = PI[playerid][data_BUSINESS];
			    if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
				if(strval(inputtext) > BUSINESS_DATA[b][data_BANK]) return SendClientMessage(playerid, CG,"Недостаточно средств на балансе бизнеса"),Business_Give_Money(playerid);
                BUSINESS_DATA[b][data_BANK] -= strval(inputtext);
				give_player_money(playerid,strval(inputtext),"#47",11025);
				format(str,sizeof(str),"Вы сняли: %d рублей. Баланс бизнеса: %d рублей",strval(inputtext),BUSINESS_DATA[b][data_BANK]);
				SendClientMessage(playerid,0xc89522FF,str);
				SavePlayerData(playerid);
				SaveBusinessData(b);
			}
        }
        case dialog_BUSINESS_RE_MONEY:
        {
            if(!response) return Business_Panel(playerid);
			if(response)
			{
			    new str[64];
			    new b = PI[playerid][data_BUSINESS];
			    if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
				if(get_player_money(playerid) < strval(inputtext)) return SendClientMessage(playerid, CG,"У Вас недостаточно денег на руках"),Business_Re_Money(playerid);
				if(BUSINESS_DATA[b][data_OWNED] == 1) BUSINESS_DATA[b][data_BANK] += strval(inputtext);
				give_player_money(playerid,-strval(inputtext),"#48",11042);
				format(str,sizeof(str),"Вы положили: %d рублей. Баланс бизнеса: %d рублей",strval(inputtext),BUSINESS_DATA[b][data_BANK]);
				SendClientMessage(playerid,CY,str);
				SavePlayerData(playerid);
				SaveBusinessData(b);
			}
        }

        case dialog_TP:
        {
            if(!response) return 1;
            if(response)
            {
                switch(listitem)
                {
                    case 0: SetPlayerPosAC(playerid, 2381.2559,-1901.3752,21.9330);
                    case 1: SetPlayerPosAC(playerid, 1916.8721,2246.8320,15.7139);
					case 2: SetPlayerPosAC(playerid, 2387.4668,-615.2571,12.3700);
					case 3: SetPlayerPosAC(playerid, -582.7040,-139.3514,1.2200);
					case 4: SetPlayerPosAC(playerid, 998.2722,-384.9974,4.0025);
					case 5: SetPlayerPosAC(playerid, 215.1709,-918.4337,40.6382);
					case 6: SetPlayerPosAC(playerid, 1758.3649,2255.2327,15.8572);
					case 7: SetPlayerPosAC(playerid, 1184.8860,2498.1978,12.4800);
					case 8: SetPlayerPosAC(playerid, 2376.0488,-996.1595,2.0300);
					case 9: SetPlayerPosAC(playerid, 2309.8789,-1131.2976,2.5600);
					case 10: SetPlayerPosAC(playerid, 2484.7485,-746.3240,12.0969);
					case 11: SetPlayerPosAC(playerid, 616.4615,797.7547,12.0298);
					case 12: SetPlayerPosAC(playerid, 443.5924,360.1169,12.1800);
					case 13: SetPlayerPosAC(playerid, 2325.5154,-1803.9813,22.4540);
					case 14: SetPlayerPosAC(playerid, 1223.7863,-370.6064,4.0765);
					case 15: SetPlayerPosAC(playerid, 24.3647,288.6667,12.0567);
					case 16: SetPlayerPosAC(playerid, 207.5432,1478.4958,12.0346);
					case 17: SetPlayerPosAC(playerid, -284.2634,582.7474,12.1289);
					case 18: SetPlayerPosAC(playerid, 2160.5093,-1766.6997,18.9069);
					case 19: SetPlayerPosAC(playerid, 464.8619,-1241.0986,40.6765);
					case 20: SetPlayerPosAC(playerid, 1767.4198,1334.9589,9.7556);
					case 21: SetPlayerPosAC(playerid, -398.1591,925.6467,12.1500);
					case 22: SetPlayerPosAC(playerid, -1503.4741,1608.9265,36.5690);
                }
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
            }
        }
		case dialog_CHANGE_NAME: {
			if(!response) return open_mainmenu(playerid);
			if(response) {
				switch(listitem) {
					case 0: RandomName(playerid);
					case 1: ShowPlayerDialog(playerid, dialog_DONATE_3, DIALOG_STYLE_INPUT, "{f00e5d}Изменение никнейма", "Вы собераетесь изменить игровой никнейм своего персонажа\n\n{f00e5d}Обратите внимание, что если Вы измените никнейм во время\nпроверки на Вас жалобы, Вы будете заблокированы на 7 дней.", "Изменить", "Назад");
				}
			}
		}
		case dialog_SETNAME: {
			if(!response) return ChangeNameMenu(playerid);
			if(response) {
				new name[24];
				GetPVarString(playerid,"randomame", name, sizeof(name));
				FixSVarString(name);
				strmid(CHANGE_NAME[playerid], name, 0, strlen(name), MAX_PLAYER_NAME);
				SetPVarInt(playerid, "change_name_status", 1);
				new str_q[98];
				mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", CHANGE_NAME[playerid]);
				mysql_function_query(dbHandle, str_q, true, "CheckName", "ds", playerid, CHANGE_NAME[playerid]);
			}
		}
		case dialog_LOAD_LESOPILKA:
		{
		    if(!response) return 1;
			if(response)
			{
				new str_3[256];
				switch(listitem) {
					case 0: format(str_3,sizeof(str_3),"Тип товара: вагонка\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_vagonka,JB_DATA[0][data_SKLAD]),SetPVarInt(playerid, "load_tovar", VAGONKA_ID);
					case 1: format(str_3,sizeof(str_3),"Тип товара: доска\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_doska, JB_DATA[0][data_SKLAD]), SetPVarInt(playerid, "load_tovar", DOSKA_ID);
					case 2: format(str_3,sizeof(str_3),"Тип товара: брус\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_brus,JB_DATA[0][data_SKLAD]), SetPVarInt(playerid, "load_tovar", BRUS_ID);
				}
			    ShowPlayerDialog(playerid, dialog_LOAD, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара", str_3, "Загрузить", "Отмена");
			}
		}
		case dialog_LOAD_RUDNIK:
		{
		    if(!response) return 1;
			if(response)
			{
				new str_3[185];
				switch(listitem) {
					case 0: format(str_3,sizeof(str_3),"Тип товара: руда\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_ruda,JB_DATA[1][data_SKLAD]),SetPVarInt(playerid, "load_tovar",RUDA_ID);
			    }
				ShowPlayerDialog(playerid, dialog_LOAD, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара", str_3, "Загрузить", "Отмена");
			}
		}

		case dialog_LOAD_FRUCT:
		{
		    if(!response) return 1;
			if(response)
			{
				new str_3[212];
				switch(listitem)
				{
					case 0: format(str_3,sizeof(str_3),"Тип товара: яблоки\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_yabloki,JB_DATA[2][data_SKLAD]),SetPVarInt(playerid, "load_tovar",YABLOKO_ID);
					case 1: format(str_3,sizeof(str_3),"Тип товара: сливы\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_sliva,JB_DATA[2][data_SKLAD]),SetPVarInt(playerid, "load_tovar",SLIVA_ID);
					case 2: format(str_3,sizeof(str_3),"Тип товара: персики\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_persiky,JB_DATA[2][data_SKLAD]),SetPVarInt(playerid, "load_tovar",PERSIK_ID);
					case 3: format(str_3,sizeof(str_3),"Тип товара: апельсины\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_orange,JB_DATA[2][data_SKLAD]),SetPVarInt(playerid, "load_tovar",ORANGE_ID);
				}
			    ShowPlayerDialog(playerid, dialog_LOAD, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара", str_3, "Загрузить", "Отмена");
			}
		}
		case dialog_LOAD_OGOROD:
		{
		    if(!response) return 1;
			if(response)
			{
				new str_3[212];
				switch(listitem)
				{
					case 0: format(str_3,sizeof(str_3),"Тип товара: картофель\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_kartofel,JB_DATA[3][data_SKLAD]),SetPVarInt(playerid, "load_tovar",KARTOFEL_ID);
					case 1: format(str_3,sizeof(str_3),"Тип товара: помидоры\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_pomidor,JB_DATA[3][data_SKLAD]),SetPVarInt(playerid, "load_tovar",POMIDOR_ID);
					case 2: format(str_3,sizeof(str_3),"Тип товара: огурцы\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_ogurec,JB_DATA[3][data_SKLAD]),SetPVarInt(playerid, "load_tovar",OGUREC_ID);
					case 3: format(str_3,sizeof(str_3),"Тип товара: капуста\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_kapusta,JB_DATA[3][data_SKLAD]),SetPVarInt(playerid, "load_tovar",KAPUSTA_ID);
					case 4: format(str_3,sizeof(str_3),"Тип товара: морковь\nЦена за 1 кг: %d рублей\nКол-во на складе: %d кг\n\nВведите количество кг, которое хотите загрузить", buy_morkov,JB_DATA[3][data_SKLAD]),SetPVarInt(playerid, "load_tovar",MORKOV_ID);
				}
			    ShowPlayerDialog(playerid, dialog_LOAD, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара", str_3, "Загрузить", "Отмена");
			}
		}
		case dialog_LOAD_FUEL:
		{
		    if(!response) return 1;
			if(response)
			{
				new str_3[212];
				switch(listitem) {
					case 0: format(str_3,sizeof(str_3),"Тип товара: топливо\nЦена за 1 л: %d рублей\nКол-во на складе: %d л\n\nВведите количество литров, которое хотите загрузить", buy_fuel,sklad_fuel),SetPVarInt(playerid, "load_tovar",FUEL_ID);
				}
			    ShowPlayerDialog(playerid, dialog_LOAD, DIALOG_STYLE_INPUT, "{f00e5d}Загрузка товара", str_3, "Загрузить", "Отмена");
			}
		}
		case dialog_LOAD:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(PI[playerid][data_TRAILER] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, CG, "На Вас уже числиться прицеп. Чтобы избавиться от него используйте: /untrailer");
		        if(strval(inputtext) <= 0) return SendClientMessage(playerid, CG, "Недопустимое число");
				if(PI[playerid][data_DSKILL]*200 < strval(inputtext))
				{
				    new str[145];
				    format(str,sizeof(str),"Вы можете загрузить максимум %d кг!",PI[playerid][data_DSKILL]*200);
				    SendClientMessage(playerid, CG, str);
					return 1;
				}
				switch(GetPVarInt(playerid,"load_tovar"))
		        {
		            case VAGONKA_ID:
		            {
		                new money = strval(inputtext)*buy_vagonka;
		                if(strval(inputtext) > JB_DATA[0][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#49",11200);
                        JB_DATA[0][data_SKLAD] -= strval(inputtext);
                        JB_DATA[0][data_BANK] += money;
                        PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[0][data_TRAILER_POS][0], JB_DATA[0][data_TRAILER_POS][1], JB_DATA[0][data_TRAILER_POS][2], JB_DATA[0][data_TRAILER_POS][3], -1, -1, 3600);
						SetPVarInt(playerid, "d_money_buy",money);
						CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = VAGONKA_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case DOSKA_ID:
		            {
		                new money = strval(inputtext)*buy_doska;
		                if(strval(inputtext) > JB_DATA[0][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#50",11214);
		                JB_DATA[0][data_SKLAD] -= strval(inputtext);
		                JB_DATA[0][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[0][data_TRAILER_POS][0], JB_DATA[0][data_TRAILER_POS][1], JB_DATA[0][data_TRAILER_POS][2], JB_DATA[0][data_TRAILER_POS][3], -1, -1, 3600);
						SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = DOSKA_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case BRUS_ID:
		            {
		                new money = strval(inputtext)*buy_brus;
		                if(strval(inputtext) > JB_DATA[0][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#51",11228);
		                JB_DATA[0][data_SKLAD] -= strval(inputtext);
		                JB_DATA[0][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[0][data_TRAILER_POS][0], JB_DATA[0][data_TRAILER_POS][1], JB_DATA[0][data_TRAILER_POS][2], JB_DATA[0][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = BRUS_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case RUDA_ID:
		            {
		                new money = strval(inputtext)*buy_ruda;
		                if(strval(inputtext) > JB_DATA[1][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#52",11242);
		                JB_DATA[1][data_SKLAD] -= strval(inputtext);
		                JB_DATA[1][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[1][data_TRAILER_POS][0], JB_DATA[1][data_TRAILER_POS][1], JB_DATA[1][data_TRAILER_POS][2], JB_DATA[1][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = RUDA_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case MORKOV_ID:
		            {
		                new money = strval(inputtext)*buy_morkov;
		                if(strval(inputtext) > JB_DATA[3][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#53",11256);
		                JB_DATA[3][data_SKLAD] -= strval(inputtext);
		                JB_DATA[3][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[3][data_TRAILER_POS][0], JB_DATA[3][data_TRAILER_POS][1], JB_DATA[3][data_TRAILER_POS][2], JB_DATA[3][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = MORKOV_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case KAPUSTA_ID:
		            {
		                new money = strval(inputtext)*buy_kapusta;
		                if(strval(inputtext) > JB_DATA[3][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#54",11270);
		                JB_DATA[3][data_SKLAD] -= strval(inputtext);
		                JB_DATA[3][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[3][data_TRAILER_POS][0], JB_DATA[3][data_TRAILER_POS][1], JB_DATA[3][data_TRAILER_POS][2], JB_DATA[3][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = KAPUSTA_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case OGUREC_ID:
		            {
		                new money = strval(inputtext)*buy_ogurec;
		                if(strval(inputtext) > JB_DATA[3][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#55",11284);
		                JB_DATA[3][data_SKLAD] -= strval(inputtext);
		                JB_DATA[3][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[3][data_TRAILER_POS][0], JB_DATA[3][data_TRAILER_POS][1], JB_DATA[3][data_TRAILER_POS][2], JB_DATA[3][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = OGUREC_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case POMIDOR_ID:
		            {
		                new money = strval(inputtext)*buy_pomidor;
		                if(strval(inputtext) > JB_DATA[3][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#56",11298);
		                JB_DATA[3][data_SKLAD] -= strval(inputtext);
		                JB_DATA[3][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[3][data_TRAILER_POS][0], JB_DATA[3][data_TRAILER_POS][1], JB_DATA[3][data_TRAILER_POS][2], JB_DATA[3][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = POMIDOR_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case KARTOFEL_ID:
		            {
		                new money = strval(inputtext)*buy_kartofel;
		                if(strval(inputtext) > JB_DATA[3][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#57",11312);
		                JB_DATA[3][data_SKLAD] -= strval(inputtext);
		                JB_DATA[3][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[3][data_TRAILER_POS][0], JB_DATA[3][data_TRAILER_POS][1], JB_DATA[3][data_TRAILER_POS][2], JB_DATA[3][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = KARTOFEL_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case ORANGE_ID:
		            {
		                new money = strval(inputtext)*buy_orange;
		                if(strval(inputtext) > JB_DATA[2][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#58",11326);
		                JB_DATA[2][data_SKLAD] -= strval(inputtext);
		                JB_DATA[2][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[2][data_TRAILER_POS][0], JB_DATA[2][data_TRAILER_POS][1], JB_DATA[2][data_TRAILER_POS][2], JB_DATA[2][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = ORANGE_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case PERSIK_ID:
		            {
		                new money = strval(inputtext)*buy_persiky;
		                if(strval(inputtext) > JB_DATA[2][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#59",11340);
		                JB_DATA[2][data_SKLAD] -= strval(inputtext);
		                JB_DATA[2][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[2][data_TRAILER_POS][0], JB_DATA[2][data_TRAILER_POS][1], JB_DATA[2][data_TRAILER_POS][2], JB_DATA[2][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = PERSIK_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case SLIVA_ID:
		            {
		                new money = strval(inputtext)*buy_sliva;
		                if(strval(inputtext) > JB_DATA[2][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#60",11354);
		                JB_DATA[2][data_SKLAD] -= strval(inputtext);
		                JB_DATA[2][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[2][data_TRAILER_POS][0], JB_DATA[2][data_TRAILER_POS][1], JB_DATA[2][data_TRAILER_POS][2], JB_DATA[2][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = SLIVA_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case YABLOKO_ID:
		            {
		                new money = strval(inputtext)*buy_yabloki;
		                if(strval(inputtext) > JB_DATA[2][data_SKLAD]) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#61",11368);
		                JB_DATA[2][data_SKLAD] -= strval(inputtext);
		                JB_DATA[2][data_BANK] += money;
		                PI[playerid][data_TRAILER] = CreateVehicle(435, JB_DATA[2][data_TRAILER_POS][0], JB_DATA[2][data_TRAILER_POS][1], JB_DATA[2][data_TRAILER_POS][2], JB_DATA[2][data_TRAILER_POS][3], -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = YABLOKO_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		            case FUEL_ID:
		            {
		                new money = strval(inputtext)*buy_fuel;
		                if(strval(inputtext) > sklad_fuel) return SendClientMessage(playerid,CG,"На складе недостаточно ресурсов");
		                if(money > get_player_money(playerid)) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
		                give_player_money(playerid, -money,"#62",11382);
		                sklad_fuel -= strval(inputtext);
		                PI[playerid][data_TRAILER] = CreateVehicle(584, 936.101257, 652.728637, 12.362488, 268.666259, -1, -1, 3600);
                        SetPVarInt(playerid, "d_money_buy",money);
                        CAR_DATA[PI[playerid][data_TRAILER]][data_KOLVO] = strval(inputtext);
						CAR_DATA[PI[playerid][data_TRAILER]][data_GRUZ] = FUEL_ID;
						SendClientMessage(playerid, 0x9966FFFF, "Прицеп загружен. Он находиться на территории предприятия");
					}
		        }
		    }
		}
		case dialog_MAKEGUN:
		{
		    if(!response) return 1;
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            if(PI[playerid][data_MET] < 1) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",5);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Бейсбольная бита", "Введите желаемое количество", "Создать", "Отмена");
			        }
			        case 1:
			        {
			            if(PI[playerid][data_MET] < 5) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",22);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}ТТ", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 2:
			        {
			            if(PI[playerid][data_MET] < 3) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",23);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}ТТ с глушителем", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 3:
			        {
			            if(PI[playerid][data_MET] < 6) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",24);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Desert Eagle", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 4:
			        {
			            if(PI[playerid][data_MET] < 8) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",25);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Дробовик", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 5:
			        {
			            if(PI[playerid][data_MET] < 7) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",26);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Обрез", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 6:
			        {
			            if(PI[playerid][data_MET] < 9) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",27);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Автоматический дробовик", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 7:
			        {
			            if(PI[playerid][data_MET] < 7) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",28);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}MP40", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 8:
			        {
			            if(PI[playerid][data_MET] < 8) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",29);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}AKC-74Y", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 9:
			        {
			            if(PI[playerid][data_MET] < 9) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",30);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}AK-47", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 10:
			        {
			            if(PI[playerid][data_MET] < 9) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",31);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}AK-104", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 11:
			        {
			            if(PI[playerid][data_MET] < 7) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",32);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Tec-9", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			        case 12:
			        {
			            if(PI[playerid][data_MET] < 10) return SendClientMessage(playerid, CG, "У Вас недостаточно металла");
			            SetPVarInt(playerid, "makegun",33);
			            ShowPlayerDialog(playerid, dialog_MAKEGUN_1, DIALOG_STYLE_INPUT, "{f00e5d}Country Rifle", "Введите желаемое количество патронов", "Создать", "Отмена");
			        }
			    }
			}
		}
		case dialog_MAKEGUN_1: {
		    if(!response) return 1;
		    if(response) {
				if(strval(inputtext) > PI[playerid][data_PATR]) return SendClientMessage(playerid, CG, "У Вас недостаточно патронов");
				if(strval(inputtext) < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
				new gun = GetPlayerWeapon(playerid);
				if(gun == GetPVarInt(playerid,"makegun")) {
					GiveWeapon(playerid, GetPVarInt(playerid,"makegun"), strval(inputtext));
					PI[playerid][data_PATR] -= strval(inputtext);
					new string[55];
				    format(string, sizeof(string), "%s добавил %d пт к %s",PI[playerid][data_NAME], strval(inputtext), weapon_names[GetPVarInt(playerid,"makegun")]);
					ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(playerid, string, 0xFF99CCFF, 20.0, 4000);
				}
				else {
					GiveWeapon(playerid, GetPVarInt(playerid,"makegun"), strval(inputtext));
					PI[playerid][data_PATR] -= strval(inputtext);
					new string[120];
				    format(string, sizeof(string), "%s собрал %s и добавил к нему %d пт",PI[playerid][data_NAME], weapon_names[GetPVarInt(playerid,"makegun")], strval(inputtext));
					ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(playerid, string, 0xFF99CCFF, 20.0, 4000);
					SavePlayerData(playerid);
					switch(GetPVarInt(playerid,"makegun")) {
						case 5: PI[playerid][data_MET] -= 1;
						case 22: PI[playerid][data_MET] -= 5;
						case 23: PI[playerid][data_MET] -= 3;
						case 24: PI[playerid][data_MET] -= 6;
					    case 25: PI[playerid][data_MET] -= 8;
					    case 26: PI[playerid][data_MET] -= 7;
					    case 27: PI[playerid][data_MET] -= 9;
					    case 28: PI[playerid][data_MET] -= 7;
					    case 29: PI[playerid][data_MET] -= 8;
				     	case 30: PI[playerid][data_MET] -= 9;
				   		case 31: PI[playerid][data_MET] -= 9;
					    case 32: PI[playerid][data_MET] -= 7;
					    case 33: PI[playerid][data_MET] -= 10;
					}

				}
			}
		}
		case dialog_SETTING_PER_1: {
            if(!response) return ShowSettings(playerid);
			if(response) {
			    switch(listitem) {
			        case 0: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			            SendClientMessage(playerid,0x00aa33AA,"Вы изменили стиль боя на 'Улучшеный'");
						SavePlayerData(playerid);
			        }
			        case 1: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			            SendClientMessage(playerid,0x00aa33AA,"Вы изменили стиль боя на 'Бокс'");
						SavePlayerData(playerid);
			        }
			        case 2: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			            SendClientMessage(playerid,0x00aa33AA,"Вы изменили стиль боя на 'Кик-боксинг'");
						SavePlayerData(playerid);
			        }
			        case 3: {
			            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			            SendClientMessage(playerid,0x00aa33AA,"Вы изменили стиль боя на 'Кунг-фу'");
						SavePlayerData(playerid);
			        }
			    }
			}
        }
        case dialog_SETTING_PER_2:
        {
            if(!response) return ShowSettings(playerid);
			if(response)
			{
                switch(listitem)
				{
		            case 0: SetPlayerWalkingStyle (playerid, WALK_NORMAL);
	             	case 1: SetPlayerWalkingStyle (playerid, WALK_PED);
		            case 2: SetPlayerWalkingStyle (playerid, WALK_GANGSTA);
		            case 3: SetPlayerWalkingStyle (playerid, WALK_GANGSTA2);
		            case 4: SetPlayerWalkingStyle (playerid, WALK_OLD);
		            case 5: SetPlayerWalkingStyle (playerid, WALK_FAT_OLD);
		            case 6: SetPlayerWalkingStyle (playerid, WALK_FAT);
		            case 7: SetPlayerWalkingStyle (playerid, WALK_LADY);
		            case 8: SetPlayerWalkingStyle (playerid, WALK_LADY2);
		            case 9: SetPlayerWalkingStyle (playerid, WALK_WHORE);
		            case 10: SetPlayerWalkingStyle (playerid, WALK_WHORE2);
		            case 11: SetPlayerWalkingStyle (playerid, WALK_DRUNK);
		            case 12: SetPlayerWalkingStyle (playerid, WALK_BLIND);
		            case 13: SetPlayerWalkingStyle (playerid, WALK_DEFAULT);
	            }
	            SendClientMessage(playerid, 0x00aa33AA, "Вы изменили свой стиль походки. Использование: W + ALT");
			}
        }
		case dialog_SETTING_PER:
        {
            if(!response) return open_mainmenu(playerid);
			if(response)
			{
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{f00e5d}Пример: 123qwe", "Далее", "Назад");
			        case 1: ShowPlayerDialog(playerid, dialog_SETTING_PER_1, DIALOG_STYLE_LIST, "{f00e5d}Стили боя", "1. Улучшеный\n2. Бокс\n3. Кик-боксинг\n4. Кунг-фу", "Выбрать", "Назад");
			        case 2: ShowPlayerDialog(playerid,dialog_SETTING_PER_2, DIALOG_STYLE_LIST, "{f00e5d}Стили походки","1. Обычная\n2. Гражданская\n3. Бандитская (1)\n4.Бандитская (2)\n5. Пожилого мужчины\n6. Пожилой женщины\n7. Женская (1)\n8. Женская (2)\n9. Женская (3)\n10. Проститутки (1)\n11. Проститутки (2)\n12. Пьяного\n13. Слабовидящего\n14. Стандартная", "Выбрать", "Назад");
					//case 4: callcmd::snow(playerid), ShowSettings(playerid);
				}
			}
        }
		case dialog_SETTING_2:
		{
		    if(!response) return ShowSettings(playerid);
            if(response)
			{
			    if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{f00e5d}Пример: 12345qwe", "Далее", "Назад");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 30) return SendClientMessage(playerid, 0x33CC33AA,"Длина пароля должна быть от 6 до 30 символов"),ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{f00e5d}Пример: 12345qwe", "Далее", "Назад");
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ',', '`', '=': return SendClientMessage(playerid, -1, "{ffffff}Разрешено использовать {f00e5d}только{FFFFFF} латинские буквы и цифры"),ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{f00e5d}Пример: 12345qwe", "Далее", "Назад");
				}
				strmid(PI[playerid][data_PASSWORD], inputtext, 0, strlen(inputtext), 30);
				new str_q[115];
				mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `password` = MD5('%e') WHERE `name` = '%e'",PI[playerid][data_PASSWORD],PI[playerid][data_NAME]);
    			mysql_function_query(dbHandle, str_q, false, "", "");
				new str_text[90];
				format(str_text,sizeof(str_text),"Ваш новый пароль: %s. Обязательно сделайте скриншот F8", inputtext);
				SendClientMessage(playerid,0x33ccffFF,str_text);

            }
		}
		case dialog_SETTING_1:
        {
            if(!response) return ShowSettings(playerid);
			if(response)
			{
			    if(strlen(inputtext) == 0) return ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{f00e5d}Пример: 123qwe", "Далее", "Назад");
				if(strlen(inputtext) < 6 || strlen(inputtext) > 30) return SendClientMessage(playerid, 0x33CC33AA,"Длина пароля должна быть от 6 до 30 символов"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{f00e5d}Пример: 123qwe", "Далее", "Назад");
        		for(new i = strlen(inputtext); i != 0; --i)
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я': return SendClientMessage(playerid, -1, "{ffffff}Разрешено использовать {f00e5d}только{FFFFFF} латинские буквы и цифры"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{f00e5d}Пример: 123qwe", "Далее", "Назад");
				}
				new str_q[150];
    			strmid(PI[playerid][data_PASSWORD], inputtext, 0, strlen(inputtext), 30);
				mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e' AND `password` = MD5('%e')",PI[playerid][data_NAME],PI[playerid][data_PASSWORD]);
				mysql_function_query(dbHandle, str_q, true, "ChangePassword", "d", playerid);
				SavePlayerData(playerid);
			}
		}
		case 1250:
  		{
  		    if(!response) return open_mainmenu(playerid);
   			if(response)
   			{
   			    if(PI[playerid][data_MUTE] != 0) return SendClientMessage(playerid, CG, "У Вас мут");
  				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return SendClientMessage(playerid,CG,"Не менее 1 и не более 100 символов"),ReportDialog(playerid);
				new str_1[155];
				format(str_1,sizeof(str_1),"Вопрос от %s[%d]:{FFFFFF} %s",PI[playerid][data_NAME],playerid,inputtext);
   				SendAdminMessage(0xFFFF99FF, str_1);
				SendClientMessage(playerid,0xFFFF99FF, str_1);
				new vk_send[250];
				format(vk_send,sizeof(vk_send),"[Репорт] %s[%d]: %s",PI[playerid][data_NAME], playerid, inputtext);
			    SendVKTest(playerid, vk_send, 2);
			}
    	}
		case 1251:
  		{
  		    if(!response) return open_mainmenu(playerid);
   			if(response)
   			{
   			    if(PI[playerid][data_MUTE] != 0) return SendClientMessage(playerid, CG, "У Вас мут");
  				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return SendClientMessage(playerid,CG,"Не менее 1 и не более 100 символов"),ReportDialog(playerid);
				new str_1[155];
				format(str_1,sizeof(str_1),"Жалоба от %s[%d]:{FFFFFF} %s",PI[playerid][data_NAME],playerid,inputtext);
	   			SendAdminMessage(0xFF8877FF, str_1);
				SendClientMessage(playerid,0xFF8877FF, str_1);
				SendClientMessage(playerid, 0xFF8877FF, "Вы можете заблокировать голосовой чат игрока {f00e5d}F11 {FF8877})");
				new vk_send[250];
				format(vk_send,sizeof(vk_send),"[Репорт] %s[%d]: %s",PI[playerid][data_NAME], playerid, inputtext);
			    SendVKTest(playerid, vk_send, 2);
			}
    	}
		case dialog_REPORT: {
            if(!response) return open_mainmenu(playerid);
			if(response) {
			    switch(listitem) {
			        case 0: {
						ShowPlayerDialog(playerid, 1250, DIALOG_STYLE_INPUT, "{db2751}Вопрос или жалоба", "\
						Введите сообщение для игровых мастеров. Пишите кратко и по делу.\n\
						Перед тем, как задать вопрос, проверьте, нет ли ответа в меню помощи - {dc143c}/help\n\
						{f00e5d}Обратите внимание: за оффтоп Вы можете получить блокировку чата", "Далее", "Отмена");
			        }
			        case 1: {
						ShowPlayerDialog(playerid, 1251, DIALOG_STYLE_INPUT, "{db2751}Вопрос или жалоба", "\
						Введите сообщение для игровых мастеров. Пишите кратко и по делу.\n\
						Перед тем, как задать вопрос, проверьте, нет ли ответа в меню помощи - {dc143c}/help\n\
						{f00e5d}Обратите внимание: за оффтоп Вы можете получить блокировку чата", "Далее", "Отмена");
			        }
			    }
			}
        }
		case 7610: {
			if(!response) return 1;
			if(response) {
				PI[playerid][data_SETMOROZ] = StopWar_cfg[listitem][frac_id];
				ShowPlayerDialog(playerid,7611, DIALOG_STYLE_LIST, "{f00e5d}Заморозка территорий", "1. 60 минут\n2. 120 минут\n3. 3 часа\n4. 4 часа\n5. 5 часов\n6. 6 часов\n7. 7 часов\n8. 8 часов\n9. 9 часов\n10. 10 часов\n11. 24 часа\n12. 48 часов\n{f00e5d}Снять заморозку", "Выбор", "Закрыть");
			}
		}
		case 7611: {
			if(!response) return 1;
			if(response) {
				new status = 0;
				switch(listitem) {
					case 0: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 60;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 60;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 60;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 1 час", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 1: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 120;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 120;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 120;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 2 часа", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 2: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 180;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 180;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 180;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 3 часа", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 3: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 240;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 240;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 240;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 4 часа", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 4: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 300;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 300;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 300;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 5 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 5: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 360;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 360;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 360;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 6 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 6: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 420;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 420;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 420;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 7 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 7: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 480;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 480;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 480;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 8 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 8: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 540;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 540;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 540;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 9 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 9: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 600;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 600;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 600;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 10 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 10: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 1445;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 1445;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 1445;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 24 часа", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 11: {
						status = 2;
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 2890;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 2890;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 2890;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы выдали заморозку стрел для организации {FFFF00}('%s') {00aa33}на 48 часов", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					}
					case 12: {
						if(PI[playerid][data_SETMOROZ] == 5) if(m_skinhead == 0) return SendClientMessage(playerid, CG, "У данной организации нет мороза!");
						if(PI[playerid][data_SETMOROZ] == 6) if(m_gopota == 0) return SendClientMessage(playerid, CG, "У данной организации нет мороза!");
						if(PI[playerid][data_SETMOROZ] == 7) if(m_kavkaz == 0) return SendClientMessage(playerid, CG, "У данной организации нет мороза!");
						if(PI[playerid][data_SETMOROZ] == 5) m_skinhead = 0;
						if(PI[playerid][data_SETMOROZ] == 6) m_gopota = 0;
						if(PI[playerid][data_SETMOROZ] == 7) m_kavkaz = 0;
						SendClientMessagef(playerid, 0x00aa33AA, "Вы сняли заморозку стрел для организации {FFFF00}('%s')", Fraction_Name[PI[playerid][data_SETMOROZ]]);
						status = 1;
					}
				}
				if(status == 1) {
					new vk_send[180];
					format(vk_send,sizeof(vk_send),"Игровой мастер снял мороз территорий для организации ('%s')", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					SendServerStock(vk_send, 5);
					PI[playerid][data_SETMOROZ] = -1;
					SaveWarehouse();
				}
				else if(status == 2){
					new vk_send[180];
					format(vk_send,sizeof(vk_send),"Игровой мастер выдал мороз территорий для организации ('%s')", Fraction_Name[PI[playerid][data_SETMOROZ]]);
					SendVKMessage(playerid, vk_send, 5, 0);
					SendServerStock(vk_send, 5);
					PI[playerid][data_SETMOROZ] = -1;
					SaveWarehouse();
				}
			}
		}
    	case dialog_TEMPMEMBER: {
            if(!response) return 1;
            if(response) {
				new p = GetPVarInt(playerid,"gLeader");
               	PI[p][data_MEMBER] = setleader_config[listitem][member];
               	ShowPlayerDialog(playerid, dialog_TEMPMEMBERANK, DIALOG_STYLE_LIST, "{f00e5d}Выберете ранг", "1\n2\n3\n4\n5\n6\n7\n8\n9", "Выбрать", "Отмена");
			}
		}
		case dialog_TEMPMEMBERANK: {
			if(!response) return 1;
			if(response) {
			    new p = GetPVarInt(playerid,"gLeader");
		        PI[p][data_LEADER] = 0;
		        PI[p][data_RANK] = listitem+1;
    			new str_1[256];
    			SetPlayerColorEx(p);
				if(PI[playerid][data_SEX] == 1) {
					switch(PI[p][data_MEMBER]) {
						case 1:PI[p][data_SKINM] = 156;
						case 2:PI[p][data_SKINM] = 179;
						case 3:PI[p][data_SKINM] = 280;
						case 4:PI[p][data_SKINM] = 276;
						case 5:PI[p][data_SKINM] = 8;
						case 6:PI[p][data_SKINM] = 115;
						case 7:PI[p][data_SKINM] = 123;
						case 8:PI[p][data_SKINM] = 15;
					}
				}
				if(PI[playerid][data_SEX] == 2) {
					switch(PI[p][data_MEMBER]) {
						case 1:PI[p][data_SKINM] = 216;
						case 2:PI[p][data_SKINM] = 191;
						case 3:PI[p][data_SKINM] = 141;
						case 4:PI[p][data_SKINM] = 194;
						case 5:PI[p][data_SKINM] = 13;
						case 6:PI[p][data_SKINM] = 13;
						case 7:PI[p][data_SKINM] = 13;
						case 8:PI[p][data_SKINM] = 12;
					}
				}
				UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],11962);
				SetPlayerSkinAC(p,PI[p][data_SKINM]);
				if(PI[p][data_MEMBER] == 5) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
			 	if(PI[p][data_MEMBER] == 6) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
			 	if(PI[p][data_MEMBER] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
				if(gangwar > 0) {
					if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
						static name_org[15], nameorg[15];
						switch(Command[0]) {
							case 5: name_org = "Скинхеды";
							case 6: name_org = "Гопота";
							case 7: name_org = "Кавказцы";
						}
						switch(Command[1]) {
							case 5: nameorg = "Скинхеды";
							case 6: nameorg = "Гопота";
							case 7: nameorg = "Кавказцы";
						}
						cef_emit_event(playerid, "show-capture");
						cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
						cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
						cef_emit_event(playerid, "show_kill_list");
						GangZoneFlashForPlayer(playerid, WarZone, 0xFF000055);
					}
				}
				SetPlayerTeam(p, PI[p][data_MEMBER]);
				SavePlayerData(p);
				new str_3[212];
				format(str_3,sizeof(str_3),"Вы приняли %s[%d] в оргазинацию %s на %d ранг",PI[p][data_NAME], p, Fraction_Name[PI[p][data_MEMBER]], PI[p][data_RANK]);
				SendClientMessage(playerid,CY,str_3);
				format(str_1,sizeof(str_1),"Игровой мастер #%d принял Вас в организацию %s на %d ранг", PI[playerid][ADMINSNUMBER], Fraction_Name[PI[p][data_MEMBER]], PI[p][data_RANK]);
				SendClientMessage(p,CY,str_1);
				new text[144];
				format(text,sizeof(text),"[%s #%d] %s[%d] принял %s[%d] в организацию %s на %d ранг", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[p][data_NAME], p, Fraction_Name[PI[p][data_MEMBER]], PI[p][data_RANK]);
				SendAdminMessage(0xa3ffffFF, text);
				new str_q[110];
				mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `standart` = 1", PI[p][data_MEMBER]);
				mysql_function_query(dbHandle, str_q, true, "SetGSTAND", "d", p);
			}
		}
		case 5898: {
			if(!response) return 1;
			if(response) {
				switch(listitem) {
					case 0: {
						GetPlayerPos(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
						gomp_status = true;
						new str_1[155];
						format(str_1,sizeof(str_1),"[%s #%d] %s[%d] изменил точку телепорта на мероприятие", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
						SendAdminMessage(0x8fbedb00,str_1);
						callcmd::editmp(playerid);
					}
					case 1:  CEF__Dialog(playerid, 5899, DIALOG_STYLE_INPUT, "{f00e5d}Выдача одежды", "Напишите: [тип: 1, 2, 3] [ID-скина]\n{f00e5d}Пример: 3,23", "Выдать", "Закрыть");
					case 2:  CEF__Dialog(playerid, 5900, DIALOG_STYLE_INPUT, "{f00e5d}Выдача оружия", "Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{f00e5d}Пример: 3,24,500", "Выдать", "Закрыть");
					case 3:  CEF__Dialog(playerid, 5901, DIALOG_STYLE_INPUT, "{f00e5d}Выдача бронижелета", "Напишите: количество брони (от 1 до 100)\n{f00e5d}Пример: 100", "Выдать", "Закрыть");
					case 4:  CEF__Dialog(playerid, 5902, DIALOG_STYLE_INPUT, "{f00e5d}Выдача здоровья", "Напишите: количество здоровья (от 1 до 176)\n{f00e5d}Пример: 176", "Выдать", "Закрыть");
					case 5: {
						new str_1[120];
						if(mptk == true) {
							for(new i = 0; i < MAX_PLAYERS; i++) {
								if(PI[i][data_MP] == 1) {
									PI[i][data_MPTK] = 0;
								}
							}
							format(str_1,sizeof(str_1),"[%s #%d] %s[%d] выключил ТК на МП", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
							SendAdminMessage(0x8fbedb00,str_1);
						}
						else {
							for(new i = 0; i < MAX_PLAYERS; i++) {
								if(PI[i][data_MP] == 1) {
									PI[i][data_MPTK] = 1;
								}
							}
							format(str_1,sizeof(str_1),"[%s #%d] %s[%d] включил ТК на МП", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
							SendAdminMessage(0x8fbedb00,str_1);
						}
						callcmd::editmp(playerid);
					}
					case 6: {
						gomp_status = false;
						new str_1[155];
						format(str_1,sizeof(str_1),"[%s #%d] %s[%d] остановил точку телепорта на мероприятие", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
						SendAdminMessage(0x8fbedb00,str_1);
						for(new i = 0; i < MAX_PLAYERS; i++) {
							SendClientMessagef(i, 0xff2457FF, "Игровой мастер #%d завершил мероприятие", PI[playerid][ADMINSNUMBER]);
							if(PI[i][data_MP] == 1) {
								PI[i][data_MP] = 0;
								PI[i][data_MPTK] = 0;
								SetPlayerPos(playerid, PI[i][data_MPX], PI[i][data_MPY], PI[i][data_MPZ]+2);
								SetPlayerInterior(i,0);
								SetPlayerVirtualWorld(i,0);
							}
						}
						callcmd::editmp(playerid);
					}
					case 7: {
						gomp_status = false;
						new str_1[155];
						format(str_1,sizeof(str_1),"[%s #%d] %s[%d] остановил точку телепорта на мероприятие без респавна", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
						SendAdminMessage(0x8fbedb00,str_1);
						callcmd::editmp(playerid);
					}
					case 8: callcmd::editmp(playerid);
				}
			}
		}
		case 3434: {
			if(!response) return 1;
			if(response) {
				switch(listitem) {
					case 0: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", "Хаха! Это я-то тебе помогать должен? Скорее наоборот. Впрочем, неважно.\nДля этих целей есть кое-что (команда /help). Полагаю, это тебе поможет. Апчхи!", "Закрыть", "");
					case 1: ShowPlayerDialog(playerid, 3435, DIALOG_STYLE_MSGBOX, "{f00e5d}Аренда", "Да-да, это я сдаю в аренду свои велосепеды, не спрашивай откуда они у меня\n{f00e5d}Стоимость аренды: 450 руб", "Далее", "Закрыть");
				}
			}
		}

		case 3436: {
			if(!response) return 1;
			if(response) {
				switch(listitem) {
					case 0: ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", "Хаха! Это я-то тебе помогать должен? Скорее наоборот. Впрочем, неважно.\nДля этих целей есть кое-что (команда /help). Полагаю, это тебе поможет. Апчхи!", "Закрыть", "");
					case 1: ShowPlayerDialog(playerid, 3437, DIALOG_STYLE_MSGBOX, "{f00e5d}Аренда", "Да-да, это я сдаю в аренду свои скутеры, не спрашивай откуда они у меня\n{f00e5d}Стоимость аренды: 1500 руб", "Далее", "Закрыть");
				}
			}
		}
		case 3437: {
			if(!response) return 1;
			if(response)   {
				if(GetPVarInt(playerid, "Arenda_Velica") != 0) return SendClientMessage(playerid, CG, "Вы уже арендовали скутер");
 				if(get_player_money(playerid) < 1500) return SendClientMessage(playerid, CG, "У Вас недостаточно денег для аренды");
				SendClientMessage(playerid, 0x00aa33AA, "Вы арендовали скутер у местного дурочка 'Максима' за 1500 рублей");
				SetPVarInt(playerid, "Arenda_Velica", 1);
				new color = RandomEX(0, 30);
				VelicArendaPlayer[playerid] = CreateVehicle(462, 1799.6031,2520.9924,15.6717,307.7932, color, color, 3600);
				PutPlayerInVehicleAC(playerid, VelicArendaPlayer[playerid], 0);
                give_player_money(playerid, -1500,"#71",12067);
   			}
		}
		case 3435: {
			if(!response) return 1;
			if(response)   {
				if(GetPVarInt(playerid, "Arenda_Velica") != 0) return SendClientMessage(playerid, CG, "Вы уже арендовали велосепед");
 				if(get_player_money(playerid) < 450) return SendClientMessage(playerid, CG, "У Вас недостаточно денег для аренды");
				SendClientMessage(playerid, 0x00aa33AA, "Вы арендовали велосипед у местного дурочка 'Никиты Носова' за 450 рублей");
				SetPVarInt(playerid, "Arenda_Velica", 1);
				new color = RandomEX(0, 30);
				VelicArendaPlayer[playerid] = CreateVehicle(510, 1799.6031,2520.9924,15.6717,307.7932, color, color, 3600);
				PutPlayerInVehicleAC(playerid, VelicArendaPlayer[playerid], 0);
                give_player_money(playerid, -450,"#71",12067);
   			}
		}
		case 5899: {
			if(!response) return 1;
			if(response) {
				new type,id,str[35];
				sscanf(inputtext, "p<,>dd", type, id);
				if(type == 0) return  CEF__Dialog(playerid, 5899, DIALOG_STYLE_INPUT, "{f00e5d}Выдача одежды", "Напишите: [тип: 1, 2, 3] [ID-скина]\n{f00e5d}Пример: 3,23", "Выдать", "Закрыть");
				if(id == 0) return  CEF__Dialog(playerid, 5899, DIALOG_STYLE_INPUT, "{f00e5d}Выдача одежды", "Напишите: [тип: 1, 2, 3] [ID-скина]\n{f00e5d}Пример: 3,23", "Выдать", "Закрыть");
                format(str,sizeof str,"%d %d", type, id);
				callcmd::mpskin(playerid,str);
				callcmd::editmp(playerid);
			}
		}
		case 5900: {
			if(!response) return 1;
			if(response) {
				new type,id,pt,str[35];
				sscanf(inputtext, "p<,>ddd", type, id, pt);
				if(type == 0) return   CEF__Dialog(playerid, 5900, DIALOG_STYLE_INPUT, "{f00e5d}Выдача оружия", "Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{f00e5d}nПример: 3,24,500", "Выдать", "Закрыть");
				if(pt == 0) return  CEF__Dialog(playerid, 5900, DIALOG_STYLE_INPUT, "{f00e5d}Выдача оружия", "Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{f00e5d}Пример: 3,24,500", "Выдать", "Закрыть");
				if(id == 0) return  CEF__Dialog(playerid, 5900, DIALOG_STYLE_INPUT, "{f00e5d}Выдача оружия", "Напишите: [тип: 1, 2, 3] [ID-оружия] [ПТ]\n{f00e5d}Пример: 3,24,500", "Выдать", "Закрыть");
                format(str,sizeof str,"%d %d %d", type, id, pt);
				callcmd::mpgun(playerid,str);
				callcmd::editmp(playerid);
			}
		}
		case 5901: {
			if(!response) return 1;
			if(response) {
				if(strlen(inputtext) == 0) return  CEF__Dialog(playerid, 5901, DIALOG_STYLE_INPUT, "{f00e5d}Выдача бронижелета", "Напишите: количество брони (от 1 до 100)\n{f00e5d}Пример: 100", "Выдать", "Закрыть");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 100) return  CEF__Dialog(playerid, 5901, DIALOG_STYLE_INPUT, "{f00e5d}Выдача бронижелета", "Напишите: количество брони (от 1 до 100)\n{f00e5d}Пример: 100", "Выдать", "Закрыть");
				callcmd::mparm(playerid,inputtext);
				callcmd::editmp(playerid);
			}
		}
		case 5902: {
			if(!response) return 1;
			if(response) {
				if(strlen(inputtext) == 0) return  CEF__Dialog(playerid, 5902, DIALOG_STYLE_INPUT, "{f00e5d}Выдача здоровья", "Напишите: количество здоровья (от 1 до 176)\n{f00e5d}Пример: 176", "Выдать", "Закрыть");
				if(strlen(inputtext) < 1 || strlen(inputtext) > 176) return  CEF__Dialog(playerid, 5902, DIALOG_STYLE_INPUT, "{f00e5d}Выдача здоровья", "Напишите: количество здоровья (от 1 до 176)\n{f00e5d}Пример: 176", "Выдать", "Закрыть");
				callcmd::mphp(playerid,inputtext);
				callcmd::editmp(playerid);
			}
		}
		case 1231: {
			if(!response) return 1;
			if(response) {
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				PI[playerid][data_MPX] = x;
				PI[playerid][data_MPY] = y;
				PI[playerid][data_MPZ] = z;
				PI[playerid][data_MP] = 1;
				SetPlayerPosAC(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			    DeletePVar(playerid, "ac_fly");
			}
		}
		case 1232: {
			if(!response) return 1;
			if(response) {
				PI[playerid][data_MP] = 0;
				SetPlayerPos(playerid, PI[playerid][data_MPX], PI[playerid][data_MPY], PI[playerid][data_MPZ]+2);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			    DeletePVar(playerid, "ac_fly");
			}
		}
    	case dialog_SETLEADER:
        {
            if(!response) return 1;
            if(response)
            {
                new p = GetPVarInt(playerid, "gLeader"), str[144];
                PI[p][data_LEADER] = setleader_config[listitem][member];
				PI[p][data_MEMBER] = setleader_config[listitem][member];
				PI[p][data_RANK] = setleader_config[listitem][rang];
				PI[playerid][data_SKINM] = PI[playerid][data_SKIN];
				format(str,sizeof(str),"Поздравляем! Игровой Мастер назначил Вас лидером организации '%s'",setleader_config[listitem][f_name]);
				SendClientMessage(p, CY, str);
				SendClientMessage(p, CY, "Перейдите на {ff2457}vk.cc/"LIDCF"{FFFF00}, что бы вступить в беседу лидеров.");
				SetPlayerColorEx(p);
				new leader[32];
				switch(PI[p][data_MEMBER]) {
					case 1: leader = "leader_pravo";
					case 2: leader = "leader_vch";
					case 3: leader = "leader_mvd";
					case 4: leader = "leader_bcrd";
					case 5: leader = "leader_skinhead";
					case 6: leader = "leader_gopota";
					case 7: leader = "leader_kavkaz";
				}
				new warn[32];
				switch(PI[p][data_MEMBER]) {
					case 1: warn = "warn_pravo";
					case 2: warn = "warn_vch";
					case 3: warn = "warn_mvd";
					case 4: warn = "warn_bcrd";
					case 5: warn = "warn_skinhead";
					case 6: warn = "warn_gopota";
					case 7: warn = "warn_kavkaz";
  			  }
				new vk_send[250];
				format(vk_send, sizeof(vk_send), "Игровой мастер %s назначил %s на пост лидера ('%s')",PI[playerid][data_NAME], PI[p][data_NAME], setleader_config[listitem][f_name]);
				SendVKTest(playerid, vk_send, 3);
				if(PI[playerid][data_SEX] == 1) {
					switch(PI[p][data_MEMBER]) {
						case 1: {
							PI[p][data_SKINM] = 147;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 147", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
				        }
						case 2: {
							PI[p][data_SKINM] = 222;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 222", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 3: {
							PI[p][data_SKINM] = 288;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 288", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 4: {
							PI[p][data_SKINM] = 70;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 70", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 5: {
							PI[p][data_SKINM] = 117;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 117", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 6: {
							PI[p][data_SKINM] = 236;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 236", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 7: {
							PI[p][data_SKINM] = 118;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 118", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
						case 8: {
							PI[p][data_SKINM] = 15;
							new str_query[170];
							mysql_format(dbHandle,str_query, sizeof(str_query), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `skin_m` = 15", PI[p][data_MEMBER]);
							mysql_function_query(dbHandle, str_query, true, "SetGSTAND", "d", p);
						}
					}
				}
				if(PI[playerid][data_SEX] == 2) {
					switch(PI[p][data_MEMBER]) {
						case 1:PI[p][data_SKINM] = 216;
						case 2:PI[p][data_SKINM] = 191;
						case 3:PI[p][data_SKINM] = 141;
						case 4:PI[p][data_SKINM] = 194;
						case 5:PI[p][data_SKINM] = 13;
						case 6:PI[p][data_SKINM] = 13;
						case 7:PI[p][data_SKINM] = 13;
						case 8:PI[p][data_SKINM] = 12;
					}
				}
				UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],12241);
				SetPlayerSkinAC(p,PI[p][data_SKINM]);
				if(PI[p][data_MEMBER] == 5) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
			 	if(PI[p][data_MEMBER] == 6) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
			 	if(PI[p][data_MEMBER] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(p, g, GetGZFrac(g));
				if(gangwar > 0) {
					if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
						static name_org[15], nameorg[15];
						switch(Command[0]) {
							case 5: name_org = "Скинхеды";
							case 6: name_org = "Гопота";
							case 7: name_org = "Кавказцы";
						}
						switch(Command[1]) {
							case 5: nameorg = "Скинхеды";
							case 6: nameorg = "Гопота";
							case 7: nameorg = "Кавказцы";
						}
						cef_emit_event(playerid, "show-capture");
						cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
						cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
						cef_emit_event(playerid, "show_kill_list");
						GangZoneFlashForPlayer(playerid, WarZone, 0xFF000055);
					}
				}
				SetPlayerTeam(p, PI[p][data_MEMBER]);
				SavePlayerData(p);
				pDialogCurrectTime[p] = gettime() + 5;
				pDialogTimer[p] = SetTimerEx("DialogTimerLeader", 500, true, "i", p);
				new str_ADM[144];
				format(str_ADM,sizeof(str_ADM),"[%s #%d] %s[%d] назначил %s[%d] на должность лидера организации '%s'", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[p][data_NAME], p, Fraction_Name[PI[p][data_MEMBER]]);
				SendAdminMessage(0xa3ffffFF, str_ADM);
			}
		}
		case dialog_ADMCOMMAND:
		{
		    if(!response) return 1;
			if(response)
   			{
				switch(listitem)
				{
				    case 0: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "editmp - управлять мероприятием\nsetmp - запустить телепорт\nstopgm - покинуть должность на время\nreturngm - вернуться на должность\nans [ID игрока] - ответить игроку\na [текст] - чат администрации\nslap [ID игрока] - подкинуть игрока\nadmins - список администрации\nspawn [ID игрока] - заспавнить игрока\nsp [ID игрока] - начать слежку за игроком / выйти со слежки\njail [ID игрока] [время] [причина] - посадить в тюрьму\nunjail [ID игрока] - освободить игрока из тюрьмы\nas - настройки GS\nfly - режим полёта\nflip [ID игрока] - перевернуть и починить полё ТС игрока", "Назад", "Выход");
				    case 1: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "up - поднять себя вверх\ndown - опустить себя вниз\nleft - телепортировать себя в лево\nright - телепортировать себя в право\nnick - кикнуть игрока за NonRP nick\nkick [ID игрока] [причина] - кикнуть игрока\ngethere [ID игрока] - телепортировать игрока к себе\ngoto [ID игрока] - телепортироваться к игроку\ncc - очистить чат\nweap [ID игрока] - информация о оружии\ngm [ID игрока] - проверка на GodMode\nmute [ID игрока] - выдать блокировку чата\nunmute [ID игрока] - снять блокировку чата\nunvmute [ID игрока] - снять блокировку голосового чата\noffunjail [ID игрока] - выпустить игрока из тюрьмы(оффлайн)\noffunmute [ID игрока] - разблокировать чат игроку(оффлайн)\noffunvmute [ID игрока] - разблокировать гч игроку(оффлайн)\n", "Назад", "Выход");
				    case 2: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "skin - изменить скин\nveh [ID игрока] [цвет] [цвет] - создать автомобиль\ndveh - удалить созданный автомобиль\nsetmember [ID игрока] - назначить в организацию\nmsg [текст] - написать в общий чат\nwarn [ID игрока] [время] [причина] - выдать предупреждение игроку\nunwarn [ID игрока] - снять предупреждение с игрока\nspawncar - заспавнить транспорт\nget [имя] - посмотреть информацию об аккаунте\nresgun [ID игрока] - забрать все оружие у игрока\noffmute имя] - выдать блокировку чата(оффлайн)\noffvmute[имя] - выдать блокировку гч(оффлайн)\noffjail[имя] - посадить игрока в деморган(оффлайн)\noffawrn[имя] - выдать предупреждение игроку(оффлайн)\noffunwarn[имя] - снять предупреждение игроку(оффлайн)\noffban[имя] - забанить игрока(оффлайн)\naclear [ID игрока] - обнулить розыск\nsethp [ID игрока] [кол-во] - изменить уровень здоровья\n", "Назад", "Выход");
					case 3: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "givegod - выдать goodmode игроку\nsetfuel - изменить кол-во топлива в машине\n\
					nban - заблокировать игрока\nunban - разблокировать игрока\nallleaders - полный список лидеров\ngun - выдать оружие игроку\n\
					mpgun - выдать оружие на мероприятии\nmpskin - выдать скин на мероприятии\nmphp - изменить здоровье на мероприятии\n\
					setleader [ID игрока] - выдать лидерку игроку\nmparm - выдать броню на мероприятии\noffleader [ник] - снять с лидерки оффлайнn\nss [ID игрока] [ID скина] - выдать вечный скин игроку", "Назад", "Выход");
					case 4: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "change [ID игрока] - подтвердить смену ника\nbanip [ID игрока] [кол-во дней] [причина] - заблокировать IP", "Назад", "Выход");
				    case 5: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "На данном уровне игрового мастера нет новый команд, но добавлена защита от оффлайн наказаний.", "Назад", "Выход");
					case 6: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "offgm [ник игрока] - снять с поста игрового мастера\nip [ID игрока] - проверить IP\nbanip [IP игрока] - заблокировать IP\nidpc [IP игрока] - ID-ПК игрока\nunbanip [IP игрока] - разблокировать IP\nrespawnhunting - заспавнить всех оленей для охоты\nmakegm [ID игрока] - поставить на пост игрового мастера\nchangenumber [ID игрока] - установить номер игрового матсера", "Назад", "Выход");
					case 7: ShowPlayerDialog(playerid, dialog_ABACK, DIALOG_STYLE_LIST, "{911e42}Меню помощи", "payday - выдать всем PayDay\nsban - заблокировать игрока по GPCI-ID\ngpci_id - список забаненых по GPCI\ngivemoney - выдать денег игроку\ngivemoneyall - выдать деньги всему серверу\ntesttun - тестовый тюнинг на авто\ncheckdonate - список донатеров\nsaveplayers - сохранить весь сервер", "Назад", "Выход");
				}
			}
		}
		case dialog_TUNGING: {
		    if(!response) return 1;
		    if(response) {
		    	new carid = GetPlayerVehicleID(playerid);
  				switch(listitem) {
					case 0: AddVehicleComponent(carid, 1073);
					case 1: AddVehicleComponent(carid, 1074);
					case 2: AddVehicleComponent(carid, 1075);
					case 3: AddVehicleComponent(carid, 1076);
				}
		    }
		}
		case dialog_SETGZ: {
		    if(!response) return 1;
		    if(response) {
				new gz = GetPlayerGangZone(playerid);
				switch(listitem) {
				    case 0: {
					    gz_info[gz][gzopg] = 5;
         				SaveGZ(5, gz);
				        foreach(new i:Player) {
				            if(PI[i][data_MEMBER] == 5 || PI[i][data_MEMBER] == 6 || PI[i][data_MEMBER] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						new vk_send[250];
						format(vk_send, sizeof(vk_send), "Игровой мастер %s перекрасил территорию (%d) в ОПГ 'Скинхеды'",PI[playerid][data_NAME], gz);
						SendVKTest(playerid, vk_send, 3);
						return SendClientMessage(playerid, 0xCCCCCCFF, "Вы присвоили территорию ОПГ 'Скинхеды'");
					}
					case 1: {
					    gz_info[gz][gzopg] = 6;
					    SaveGZ(6, gz);
				        foreach(new i:Player) {
				            if(PI[i][data_MEMBER] == 5 || PI[i][data_MEMBER] == 6 || PI[i][data_MEMBER] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						new vk_send[250];
						format(vk_send, sizeof(vk_send), "Игровой мастер %s перекрасил территорию (%d) в ОПГ 'Гопота'",PI[playerid][data_NAME], gz);
						SendVKTest(playerid, vk_send, 3);
						return SendClientMessage(playerid, 0xCCCCCCFF, "Вы присвоили территорию ОПГ 'Гопота'");
					}
					case 2: {
					    gz_info[gz][gzopg] = 7;
					    SaveGZ(7, gz);
				        foreach(new i:Player) {
				            if(PI[i][data_MEMBER] == 5 || PI[i][data_MEMBER] == 6 || PI[i][data_MEMBER] == 7) {
					    		GangZoneHideForPlayer(i, gz);
					    		GangZoneShowForPlayer(i, gz, GetGZFrac(gz));
							}
						}
						new vk_send[250];
						format(vk_send, sizeof(vk_send), "Игровой мастер %s перекрасил территорию (%d) в ОПГ 'Кавказцы'",PI[playerid][data_NAME], gz);
						SendVKTest(playerid, vk_send, 3);
						return SendClientMessage(playerid, 0xCCCCCCFF, "Вы присвоили территорию ОПГ 'Кавказцы'");
					}
				}
		    }
		}
		case dialog_SETRANK:
		{
			if(!response) return 1;
			if(response)
			{
			    new p = GetPVarInt(playerid,"gPLAYER");
		        PI[p][data_LEADER] = 0;
		        PI[p][data_RANK] = listitem+1;
				new str_1[115];
				new str_3[115];
				format(str_1,sizeof(str_1),"Вы изменили ранг игроку %s",PI[p][data_NAME]);
				SendClientMessage(playerid,0x3399FFFF,str_1);
				format(str_3,sizeof(str_3),"Лидер %s изменил Ваш ранг",PI[playerid][data_NAME]);
				SendClientMessage(p,0x3399FFFF,str_3);
			}
		}
		case dialog_SETSKINDEV: {
			if(!response) return 1;
			if(response) {
			    new p = GetPVarInt(playerid,"gPLAYER");
				switch(PI[p][data_MEMBER]) {
				    case 1: {
				        switch(listitem) {
						    case 0:PI[p][data_SKINM] = 216;
						}
				    }
				    case 2: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 191;
						}
					}
					case 3: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 141;
						}
					}
					case 4: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 194;
						}
					}
					case 5: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 13;
						}
					}
					case 6: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 13;
						}
					}
					case 7: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 13;
						}
					}
					case 8: {
					    switch(listitem) {
						    case 0:PI[p][data_SKINM] = 12;
						}
					}
				}
				SetPlayerSkinAC(p,PI[p][data_SKINM]);
				new str[80];
				format(str,sizeof(str),"Вы изменили внешний вид игроку %s",PI[p][data_NAME]);
				SendClientMessage(playerid,0x6699ccFF,str);
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				new text[144];
				format(text,sizeof(text),"%s %s[%d] изменил Вашу внешность в орагнизацию",name,PI[playerid][data_NAME],playerid);
				SendClientMessage(p,0x6699ccFF,text);

			}
		}
		case dialog_SETSKIN:
		{
			if(!response) return 1;
			if(response)
			{
			    new p = GetPVarInt(playerid,"gPLAYER");
				switch(PI[p][data_MEMBER])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 156;
						    case 1:PI[p][data_SKINM] = 154;
						    case 2:PI[p][data_SKINM] = 208;
						    case 3:PI[p][data_SKINM] = 187;
						    case 4:PI[p][data_SKINM] = 147;
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 179;
						    case 1:PI[p][data_SKINM] = 262;
						    case 2:PI[p][data_SKINM] = 253;
						    case 3:PI[p][data_SKINM] = 287;
						    case 4:PI[p][data_SKINM] = 167;
						    case 5:PI[p][data_SKINM] = 277;
						    case 6:PI[p][data_SKINM] = 278;
						    case 7:PI[p][data_SKINM] = 279;
						    case 8:PI[p][data_SKINM] = 188;
						    case 9:PI[p][data_SKINM] = 222;
						    case 10:PI[p][data_SKINM] = 255;
						    case 11:PI[p][data_SKINM] = 84;
						}
					}
					case 3:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 280;
						    case 1:PI[p][data_SKINM] = 281;
						    case 2:PI[p][data_SKINM] = 282;
						    case 3:PI[p][data_SKINM] = 285;
						    case 4:PI[p][data_SKINM] = 286;
						    case 5:PI[p][data_SKINM] = 288;
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 276;
						    case 1:PI[p][data_SKINM] = 71;
						    case 2:PI[p][data_SKINM] = 275;
						    case 3:PI[p][data_SKINM] = 70;
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 8;
						    case 1:PI[p][data_SKINM] = 17;
						    case 2:PI[p][data_SKINM] = 28;
						    case 3:PI[p][data_SKINM] = 126;
						    case 4: if(PI[p][data_RANK] != 10) return SendClientMessage(playerid, CG, "Данный вид одежды доступен только лидеру организации"); else PI[p][data_SKINM] = 117;
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 115;
						    case 1:PI[p][data_SKINM] = 116;
						    case 2:PI[p][data_SKINM] = 114;
						    case 3:PI[p][data_SKINM] = 111;
						    case 4: if(PI[p][data_RANK] != 10) return SendClientMessage(playerid, CG, "Данный вид одежды доступен только лидеру организации"); else PI[p][data_SKINM] = 236;
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 123;
						    case 1:PI[p][data_SKINM] = 122;
						    case 2:PI[p][data_SKINM] = 109;
						    case 3:PI[p][data_SKINM] = 108;
						    case 4: if(PI[p][data_RANK] != 10) return SendClientMessage(playerid, CG, "Данный вид одежды доступен только лидеру организации"); else PI[p][data_SKINM] = 118;
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:PI[p][data_SKINM] = 15;
						    case 1:PI[p][data_SKINM] = 17;
						    case 2: if(PI[p][data_RANK] != 10) return SendClientMessage(playerid, CG, "Данный вид одежды доступен только лидеру организации"); else PI[p][data_SKINM] = 23;
						}
					}
				}
				SetPlayerSkinAC(p,PI[p][data_SKINM]);
				new str[80];
				format(str,sizeof(str),"Вы изменили внешний вид игроку %s",PI[p][data_NAME]);
				SendClientMessage(playerid,0x6699ccFF,str);
				static name[24];
				SetString(name, NameRang(p));
				name = NameRang(p);
				new text[144];
				format(text,sizeof(text),"%s %s[%d] изменил Вашу внешность в орагнизацию", name,PI[playerid][data_NAME],playerid);
				SendClientMessage(p,0x6699ccFF,text);

			}
		}
		case 7213: {
		    if(!response) return 1;
			if(response) {
				switch(listitem) {
      				case 0: {
						if(PI[playerid][data_HIDEME] == 0) {
			        	    PI[playerid][data_HIDEME] = 1;
			        	    SetTimerEx("adminsettings", 50, 0, "d", playerid);
							SetPVarInt(playerid,"agm", 1);
							SetPlayerHealthAC(playerid, 100);
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Скрытие активировано, так же включен ГМ");
							UpdatePlayerDataInt(playerid, "HIDEME", PI[playerid][data_HIDEME],12553);
	  	            		for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i,playerid, false);
						}
						else {
			        	    PI[playerid][data_HIDEME] = 0;
							SetPVarInt(playerid,"agm", 0);
							SetPlayerHealthAC(playerid, 100.0);
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Скрытие деактивировано, ГМ отключен");
			        	    SetTimerEx("adminsettings", 50, 0, "d", playerid);
			        	    UpdatePlayerDataInt(playerid, "HIDEME", PI[playerid][data_HIDEME],12562);
	  	            		for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i,playerid, true);
						}
      				}
      				case 1: CEF__Dialog(playerid, 9827, DIALOG_STYLE_INPUT, "{f00e5d}Смена никнейма", "Введите никнейм для смены в поле ниже", "Изменить", "Отмена");
      				case 2: {
      				  	if(PI[playerid][data_LOGGED] == false) return 1;
		                new string1[144];
		                new rand = random(sizeof(nname));
		                SetPlayerName(playerid, nname[rand]);
		                format(string1, sizeof(string1), "[%s #%d] %s[%d] установил временный никнейм (%s)", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, nname[rand]);
		                SendAdminMessage(COLOR_ADMINCHAT, string1);

		                new string_auto[144];
		                format(string_auto,sizeof(string_auto),"Временный никнейм, %s", (inputtext));
      				}
      				case 3: SetPlayerSkinAC(playerid,60);
      				case 4: {
     					if(PI[playerid][data_ADMLVL] < 2) return  true;
	        			CEF__Dialog(playerid, 998,DIALOG_STYLE_LIST, "{ff2457}Изменение погоды", "1.Солнечная погода\n2.Яркое солнце\n3.Гроза\n4.Пасмурно и туман\n5.Хмурая и дождливая\n6.Песчаная буря \n7.Туманный и зеленоватый\n8.В красках бледного Апельсина\n9.Хмурая\n10.Туманно и серо \n11.Темный неясный коричневый \n12.Розовое небо", "Выбрать", "Отмена");
			        	return 1;
					}
					case 5: {
						if(PI[playerid][data_ADMLVL] < 4) return 1;
						if(gomp_status == false) {
							GetPlayerPos(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
					        gomp_status = true;
							mptk = false;
							new str_1[155];
							format(str_1,sizeof(str_1),"[%s #%d] %s[%d] запустил MP", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
							SendAdminMessage(0x8fbedb00,str_1);
							for(new i = 0; i < MAX_PLAYERS; i++) SendClientMessagef(i, 0xff2457FF, "Игровой мастер #%d запустил /mp", PI[playerid][ADMINSNUMBER]);
						}
						else {
						    gomp_status = false;
							mptk = false;
							new str_1[155];
							format(str_1,sizeof(str_1),"[%s #%d] %s[%d] остановил GO MP", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
							SendAdminMessage(0x8fbedb00,str_1);
							for(new i = 0; i < MAX_PLAYERS; i++) SendClientMessagef(i, 0xff2457FF, "Игровой мастер #%d остановил /mp", PI[playerid][ADMINSNUMBER]);
						}
					}
					case 6: {
						if(PI[playerid][data_ADMLVL] < 1) return 1;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK), SendClientMessage(playerid, 0xff2457FF, "[Настройки]: {ffffff}Вам выдан JetPack");
						return 1;
					}
					case 7: {
						if(PI[playerid][data_ASCHEAT] == 0) {
			        	    PI[playerid][data_ASCHEAT] = 1;
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Оповещения анти-чита включены");
						}
						else {
			        	    PI[playerid][data_ASCHEAT] = 0;
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Оповещения анти-чита включены");
						}
      				}
      				case 8: {
						if(PI[playerid][data_CADMIN] == 1) {
			        	    PI[playerid][data_CADMIN] = 0;
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Админский чат отключен");
							UpdatePlayerDataInt(playerid, "ASACHAT", PI[playerid][data_CADMIN],12621);
						}
						else {
			        	    PI[playerid][data_CADMIN] = 1;
							SendClientMessage(playerid, CY, "[INFO]: {FFFFFF}Админский чат включен");
			        	    UpdatePlayerDataInt(playerid, "ASACHAT", PI[playerid][data_CADMIN],12626);
						}
      				}
				}
			}
		}
		case 998: {
            if(response) {
                switch(listitem) {
                    case 0: SetWeather(10);
                    case 1: SetWeather(11);
                    case 2: SetWeather(8);
                    case 3: SetWeather(9);
                    case 4: SetWeather(14);
                    case 5: SetWeather(19);
                    case 6: SetWeather(20);
                    case 7: SetWeather(23);
                    case 8: SetWeather(27);
                    case 9: SetWeather(30);
                    case 10: SetWeather(33);
                    case 11: SetWeather(-1337);
                }
            }
        }
		case 7600:
		{
		    if(!response) return 1;
		    if(response)
			{
			    switch(listitem)
			    {
      				case 0:
      				{
      					if(PI[playerid][data_MEMBER] == 4) return SCM(playerid, CY, "Нельзя перевестись в свою же организацию. Приятной игры на {f00e5d}Arcana РП");
						ShowPlayerDialog(playerid, 7601, DIALOG_STYLE_MSGBOX, "{f00e5d}Перевод в организацию - 'БЦРБ'", "{FFFFFF}Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 1:
      				{
      					if(PI[playerid][data_MEMBER] == 3) return SCM(playerid, CY, "Нельзя перевестись в свою же организацию. Приятной игры на {f00e5d}Arcana РП");
      					ShowPlayerDialog(playerid, 7602, DIALOG_STYLE_MSGBOX, "{f00e5d}Перевод в организацию - 'МО МВД'", "{FFFFFF}Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 2:
      				{
      				    if(PI[playerid][data_MEMBER] == 1) return SCM(playerid, CY, "Нельзя перевестись в свою же организацию. Приятной игры на {f00e5d}Arcana РП");
      					ShowPlayerDialog(playerid, 7603, DIALOG_STYLE_MSGBOX, "{f00e5d}Перевод в организацию - 'Правительство'", "{FFFFFF}Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
      				case 3:
      				{
						if(PI[playerid][data_MEMBER] == 2) return SCM(playerid, CY, "Нельзя перевестись в свою же организацию. Приятной игры на {f00e5d}Arcana РП");
      					ShowPlayerDialog(playerid, 7604, DIALOG_STYLE_MSGBOX, "{f00e5d}Перевод в организацию - 'Воинская Часть'", "{FFFFFF}Перевод нельзя будет отменить.", "Продолжить", "Отмена");
      				}
			    }
			}
		}
		case 7604:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 2;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][data_MEMBER]-2;
				SCM(playerid, CY, "Вы подали заявку на перевод в организацию 'Воинская Часть', ожидайте одобрение от Лидера.");
				SavePlayerData(playerid);
			}
		}
		case 7603:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 1;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][data_MEMBER]-2;
				SCM(playerid, CY, "Вы подали заявку на перевод в организацию 'Правительство', ожидайте одобрение от Лидера.");
				SavePlayerData(playerid);
			}
		}
		case 7602:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 3;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][data_MEMBER]-2;
				SCM(playerid, CY, "Вы подали заявку на перевод в организацию 'МО МВД', ожидайте одобрение от Лидера.");
				SavePlayerData(playerid);
			}
		}
		case 7601:
		{
		    if(!response) return 1;
			if(response)
			{
				PI[playerid][data_TRANSFER] = 1;
				PI[playerid][data_TRANSFER_FRAC] = 4;
				PI[playerid][data_TRANSFER_RANG] = PI[playerid][data_MEMBER]-2;
				SCM(playerid, CY, "Вы подали заявку на перевод в организацию 'БЦРБ', ожидайте одобрение от Лидера.");
				SavePlayerData(playerid);
			}
		}
		case 7700:
		{
		    if(!response) return 1;
			if(response)
			{
		        new time, id, str[35];
				sscanf(inputtext, "p<,>dd[35]", id, time, str);
                format(str,144,"%d %d", id, time, str);
			    callcmd::pay(playerid,str);
			}
		}
		case 7890:
		{
			if(!response) return 1;
			if(response)
			{
				new pTempID = strval(inputtext);
				PI[pTempID][data_RANK] = PI[pTempID][data_TRANSFER_RANG];
				PI[pTempID][data_MEMBER] = PI[pTempID][data_TRANSFER_FRAC];
				PI[pTempID][data_TRANSFER] = 0;
				PI[pTempID][data_TRANSFER_FRAC] = 0;
				PI[pTempID][data_TRANSFER_RANG] = 0;
				ClearGroup(pTempID);
				SendClientMessagef(playerid, -1, "{FFFF00}Вы одобрили перевод для игрока - %s", PI[pTempID][data_NAME] );
				SendClientMessage(pTempID, CY, "Вам одобрили перевод в организацию. Сейчас Вам установят одежду.");
				callcmd::setskin(playerid,inputtext);
			}
		}
		case d_blacklist: {
			if(!response) return open_lmenu(playerid);
   	        switch(listitem) {
				case 0: ShowPlayerDialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, "{f00e5d}Добавить в чёрный список", "Введите имя игрока и причину через запятую\n{f00e5d}Например: Fedor_Badrov, НВЗ\n\n{696969}Игрок будет внесён в ЧС на 15 дней", "Добавить", "Отмена");
				case 1: ShowPlayerDialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, "{f00e5d}Чёрный список", "Введите имя игрока, которого хотите удалить из чёрного списка\n{f00e5d}Например: Fedor_Badrov", "Принять", "Назад");
			}
		}
		case d_blclear:
		{
		    if(PI[playerid][data_ADMLVL] < 4) return SendClientMessage(playerid, CG, "Для полной очистки чёрного списка организации, обратитесь к Игровым мастерам [4+]");
			if(!response)return ShowPlayerDialog (playerid, d_blacklist, DIALOG_STYLE_LIST, "{f00e5d}Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
	    	new str_q[99];
	    	mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `fractions_blacklist` WHERE `bl_fraction` = '%d'", PI[playerid][data_MEMBER]);
	    	mysql_function_query(dbHandle, str_q, false, "", "");
			SendClientMessage(playerid, CY, "Чёрный список успешно очищен.");
			ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "{f00e5d}Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
		}
		case d_blinvite:
		{
			new name[25], reason[33];
			sscanf(inputtext, "p<,>s[24]s[32]", name, reason);
		    new str_q[190];
		    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_fraction = '%d' AND bl_name = '%s' LIMIT 1",PI[playerid][data_MEMBER], name);
			mysql_function_query(dbHandle, str_q, true, "bl_invite_check", "ds", playerid, name);
		    SetPVarString(playerid, "reason_bl", reason);
		}
		case d_bluninvite:
		{
			if(!response) return ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "{f00e5d}Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
			if(!strlen(inputtext)) return ShowPlayerDialog (playerid, d_bluninvite, DIALOG_STYLE_INPUT, "{f00e5d}Чёрный список", "Неверный формат никнейма!\n\nВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;
			if(is_text_invalid(inputtext)) return ShowPlayerDialog (playerid, d_bluninvite, DIALOG_STYLE_INPUT, "{f00e5d}Чёрный список", "Неверный формат никнейма!\n\nВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;
			if(strlen(inputtext) < 6 || strlen (inputtext) > 24 ) return ShowPlayerDialog (playerid, d_bluninvite, DIALOG_STYLE_INPUT, "{f00e5d}Чёрный список", "Неверный формат никнейма!\n\nВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад" ) ;
			new str_q[125];
			mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `fractions_blacklist` WHERE `bl_name` = '%e' AND `bl_fraction`='%d' LIMIT 1",inputtext,PI[playerid][data_MEMBER]);
			mysql_function_query(dbHandle, str_q, true, "check_bl_list", "ds", playerid, inputtext);
		}
		case 7874:
		{
		  	if(!response) return 1;
			new name[45];
			new str_q[125];
			GetPVarString(playerid,"name_bl", name, 45);
			mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `fractions_blacklist` WHERE `bl_name` = '%e' AND `bl_fraction`='%d' LIMIT 1",name,PI[playerid][data_MEMBER]);
			mysql_function_query(dbHandle, str_q, true, "check_bl_list", "ds", playerid, name);
		}
		case 7887:
		{
			if(!response) return 1;
			if(response){
	   	        switch(listitem) {
					case 0: ShowPlayerDialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, "{f00e5d}Добавить в чёрный список", "Введите имя игрока и причину через запятую\n{f00e5d}Например: Fedor_Badrov, НВЗ\n\n{696969}Игрок будет внесён в ЧС на 15 дней", "Добавить", "Отмена");
					case 1: ShowPlayerDialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, "{f00e5d}Чёрный список", "Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад");
					default: {
						new str_q[135];
						mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `fractions_blacklist` WHERE `bl_name` = '%e' AND `bl_fraction` = '%d' LIMIT 1",inputtext,PI[playerid][data_MEMBER]);
						mysql_function_query(dbHandle, str_q, true, "BlackListCheck", "ds", playerid, inputtext);
					}
				}
			}
		}
        case 4386:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0: SetPlayerPos(playerid, 2137.1538,-1957.3772,188.2111),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 1: SetPlayerPos(playerid, -1907.4678,2673.3645,48.0314),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 2: SetPlayerPos(playerid, 2675.9456,2058.8616,7.2166),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 3: SetPlayerPos(playerid, -2858.3804,2466.3127,1.0001),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 4: SetPlayerPos(playerid, 1818.2439,1826.7585,45.8185),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 5: SetPlayerPos(playerid, 1489.4070,-1235.4545,12.1304),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 6: SetPlayerPos(playerid, 1966.9235,-456.6868,5333.5371),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 7: SetPlayerPos(playerid, -559.7241,-1378.3895,41.1615),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 8: SetPlayerPos(playerid, 1563.9116,1798.4406,15.3236),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 9: SetPlayerPos(playerid, 2217.6855,-2577.4634,21.9700),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 10: SetPlayerPos(playerid, 2621.8223,1783.6987,2.3727),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 11: SetPlayerPos(playerid, -273.3128,-1554.3646,41.1344),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 12: SetPlayerPos(playerid, 1826.6326,2094.9585,15.8499),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 13: SetPlayerPos(playerid, 1904.1022,2190.3865,15.9317),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 14: SetPlayerPos(playerid, 2306.3889,-1917.8660,21.9600),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                    case 15: SetPlayerPos(playerid, 2321.1365,-1800.9907,22.4540),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
					case 16: SetPlayerPos(playerid, 1418.8617,-1238.2865,16.6708),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
					case 17: SetPlayerPos(playerid, 1963.7432,-2603.9771,10.8149),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
					case 18: SetPlayerPos(playerid, -2660.5181,246.5390,10.9320),SetPlayerVirtualWorld(playerid,0), SetPlayerInterior(playerid,0);
                }
            }
        }
		case dialog_ANIM:
  		{
			if(!response) return true;
			if(response)
			{
			    SetPVarInt(playerid, "AnimOn", 1);
			    cef_emit_event(playerid, "show-button", CEFSTR("LSHIFT"), CEFSTR("ОТКЛЮЧИТЬ АНИМАЦИЮ"));
			    ClearAnimations(playerid);
				switch(listitem)
				{
					case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_HANDSUP);
					case 1: ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 1, 0, 0, 0, 0 ,1);
					case 2: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.0,1,0,0,0,0,1);//мыть руки
					case 3: ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.1,1,0,0,0,0,1);//сесть на землю
					case 4: ApplyAnimation(playerid,"BEACH","SitnWait_loop_W",4.1,1,0,0,0,0,1);//сесть на землю
					case 5: ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop",4.1,1,0,0,0,0,1); //лежать
					case 6: ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.1,1,0,0,0,0,1); //читать рэп
					case 7: ApplyAnimation( playerid, "BEACH", "ParkSit_W_Loop", 4.1, 1, 0, 0, 0, 0 ,1);
					case 8: ApplyAnimation( playerid, "BOMBER", "BOM_Plant", 4.1, 0, 0, 0, 0, 0 ,1);// Установить бомбу
					case 9: ApplyAnimation( playerid, "BSKTBALL", "BBALL_def_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Поза вратаря
					case 10: ApplyAnimation( playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Сложить руки
					case 11: ApplyAnimation( playerid, "GRAVEYARD", "mrnF_loop", 4.1, 1, 0, 0, 0, 0 ,1); // Плакать
					case 12: ApplyAnimation( playerid, "RYDER", "RYD_Die_PT1", 4.1, 1, 0, 0, 0, 0 ,1);
					case 13: ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1,1,0,0,0,0,1); // Голосовать
					case 14: ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
					case 15: ApplyAnimation(playerid,"RIOT","RIOT_ANGRY", 4.1, 0, 0, 0, 0, 0 ,1);
					case 16: ApplyAnimation(playerid,"MISC","PLYRLEAN_LOOP", 4.1, 1, 0, 0, 0, 0 ,1);
					case 17: ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop", 4.1, 1, 0, 0, 0, 0 ,1);// Смотреть на небо
					case 18: ApplyAnimation(playerid,"ON_LOOKERS","wave_loop", 4.1, 1, 0, 0, 0, 0 ,1);//
					case 19: ApplyAnimation(playerid,"ON_LOOKERS","shout_02", 4.1, 1, 0, 0, 0, 0 ,1);// Болельщик
					case 20: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop", 4.1, 1, 0, 0, 0, 0 ,1);// медитация
					case 21: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.0,0,0,0,0,0,1); // facepalm
					case 22: ApplyAnimation(playerid,"ped","cower",4.1,1,0,0,0,0,1); //лежать
					case 23: SetPlayerSpecialAction(playerid, 68); // ссать
				}
				SetPVarInt(playerid,"UseAnim",1);

			}
		}
        case 7210: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
			        case 0: {
					    new status[64];
						switch(PI[playerid][data_PHONESTATUS]) {
							case 0: format(status,sizeof(status),"{ee2121}Телефон выключен");
							case 1: format(status,sizeof(status),"{31d562}Телефон включен");
						}
						new str_3[365];
						format(str_3,sizeof(str_3),"\
						{252525}Название: \t\t{3274c6}bPhone XX\n\
						{252525}Номер телефона: \t{f00e5d}%d\n\
						{252525}Поддержка звонков: \tДа\n\
						{252525}Мобильный банк: \tДа\n\
						{252525}Баланс: \t\t%d\n\
						{252525}Статус: \t\t\t%s", PI[playerid][data_NUMBER], PI[playerid][data_NUMBER_M], status);
					 	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о телефоне", str_3, "Закрыть", "");
					}
					case 1:
					{
						if(PI[playerid][data_PHONESTATUS] == 1) {
							PI[playerid][data_PHONESTATUS] = 0;
							callcmd::phone(playerid);
						}
						else {
                        	PI[playerid][data_PHONESTATUS] = 1;
                        	callcmd::phone(playerid);
						}
					}
			    }
			}
		}
        case 7220: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
			        case 0: {
					    new status[64];
						switch(PI[playerid][data_PHONESTATUS]) {
							case 0: format(status,sizeof(status),"{ee2121}Телефон выключен");
							case 1: format(status,sizeof(status),"{31d562}Телефон включен");
						}
						new str_3[365];
						format(str_3,sizeof(str_3),"\
						{252525}Название: \t\t{3274c6}bPhone XX\n\
						{252525}Номер телефона: \t{f00e5d}%d\n\
						{252525}Поддержка звонков: \tДа\n\
						{252525}Мобильный банк: \tДа\n\
						{252525}Баланс: \t\t%d\n\
						{252525}Статус: \t\t\t%s", PI[playerid][data_NUMBER], PI[playerid][data_NUMBER_M], status);
					 	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о телефоне", str_3, "Закрыть", "");
					}
					case 1:{
						ShowPlayerDialog(playerid, 7221, DIALOG_STYLE_INPUT, "{f00e5d}Сделать вызов", "\
						{252525}Список государственных слубж и сервисов:\n\n\
						{252525}Полиция:{3070c1}\t\t\t102\n\
						{252525}Скорая помощь:{3070c1}\t\t103\n\
						{252525}Доставка еды на дом:{3070c1}\t\t555\n\
						{252525}Автомеханик:{3070c1}\t\t\t777\n\
						{252525}Бесплатное такси:{3070c1}\t\t999\n\n\
						{252525}Введите номер телефона в окошко ниже:", "Вызов", "Отмена");
      				}
      				case 2: {
						ShowPlayerDialog(playerid, 7222, DIALOG_STYLE_INPUT, "{f00e5d}Отправить сообщение", "{252525}Введите номер телефона и текст через запятую", "Отправить", "Отмена");
      				}
      				case 3: {
						ShowPlayerDialog(playerid, 6001, DIALOG_STYLE_LIST, "{f00e5d}Мобильный банк", "\
						1. Узнать баланс счёта\n\
						2. Перевести деньги на другой счёт\n\
						3. Оплата штрафов\n\
						4. Оплата имущества\n\
						5. Медицинские услуги", "Далее", "Назад");
      				}
      				case 4: {
      				    new str_q[90];
				    	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE name_add = '%e'",PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "PhoneBook", "i", playerid);
					}
				  	case 5: SendClientMessage(playerid, CY, "Разработка. Приятной игры на {f00e5d}Arcana РП");
					case 6:
					{
						if(PI[playerid][data_PHONESTATUS] == 1) {
							PI[playerid][data_PHONESTATUS] = 0;
							callcmd::phone(playerid);
						}
						else {
                        	PI[playerid][data_PHONESTATUS] = 1;
                        	callcmd::phone(playerid);
						}
					}
			    }
			}
		}
		case 3210: {
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
						PI[GetPVarInt(playerid, "idg")][data_GID] = -1;
						UpdatePlayerDataInt(GetPVarInt(playerid, "idg"), "GID", PI[GetPVarInt(playerid, "idg")][data_GID],13048);
						static name[24];
						SetString(name, NameRang(playerid));
						name = NameRang(playerid);
						static name2[24];
						SetString(name2, NameRang(playerid));
						name2 = NameRang(playerid);
						new str[145];
						format(str,sizeof(str),"[R] %s %s[%d] удалил %s %s[%d] с группы ('%s')",name,PI[playerid][data_NAME],playerid,name2,PI[GetPVarInt(playerid, "idg")][data_NAME], GetPVarInt(playerid, "idg"), PI[GetPVarInt(playerid, "idg")][data_GRNAME]);
						foreach(new q:Player) if(PI[q][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(q, 0x69b867FF, str);
						DeletePVar(playerid, "idg");
				    }
				    default: {
				        new _text[24];
		                sscanf(inputtext, "s", _text);
						new str_q[110];
						mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], _text);
						mysql_function_query(dbHandle, str_q, true, "SetGroupPlayer", "d", playerid);
				    }
			    }

			}
		}
		case 3410: {
		    if(!response) return 1;
			if(response) {
			    SetPVarString(playerid, "namegr", inputtext);
				switch(PI[playerid][data_MEMBER]) {
					case 1: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. ID 156\n3. ID 154\n4. ID 208\n5. ID 155\n6. ID 147\n7. ID 187", "Выбрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. ID 179\n3. ID 262\n4. ID 253\n5. ID 283\n6. ID 167\n7. ID 277\n8. ID 278\n9. ID 188\n10. ID 222\n11. ID 255\n12 ID 84", "Выбрать", "Отмена");
					case 3: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. ID 280\n3. ID 281\n4. ID 282\n5. ID 285\n6. ID 286\n7. ID 288", "Выбрать", "Отмена");
					case 4: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. ID 276\n3. ID 71\n4. ID 275\n5. ID 70", "Выбрать", "Отмена");
					case 5: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 6: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
					case 8: ShowPlayerDialog(playerid, 3411, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин{252525}\n2. ID 15\n3. ID 17\n4. ID 23", "Выбрать", "Отмена");
				}
			}
		}
		case 3411: {
		    if(!response) return 1;
			if(response) {
				switch(PI[playerid][data_MEMBER])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 156);
						    case 2:SetPVarInt(playerid, "sking", 154);
						    case 3:SetPVarInt(playerid, "sking", 208);
						    case 4:SetPVarInt(playerid, "sking", 187);
						    case 5:SetPVarInt(playerid, "sking", 147);
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 179);
						    case 2:SetPVarInt(playerid, "sking", 262);
						    case 3:SetPVarInt(playerid, "sking", 253);
						    case 4:SetPVarInt(playerid, "sking", 287);
						    case 5:SetPVarInt(playerid, "sking", 167);
						    case 6:SetPVarInt(playerid, "sking", 277);
						    case 7:SetPVarInt(playerid, "sking", 278);
						    case 8:SetPVarInt(playerid, "sking", 279);
						    case 9:SetPVarInt(playerid, "sking", 188);
						    case 10:SetPVarInt(playerid, "sking", 222);
						    case 11:SetPVarInt(playerid, "sking", 255);
						    case 12:SetPVarInt(playerid, "sking", 84);
						}
					}
					case 3:
					{
					    switch(listitem)
						{
							case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 280);
						    case 2:SetPVarInt(playerid, "sking", 281);
						    case 3:SetPVarInt(playerid, "sking", 282);
						    case 4:SetPVarInt(playerid, "sking", 285);
						    case 5:SetPVarInt(playerid, "sking", 286);
						    case 6:SetPVarInt(playerid, "sking", 288);
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 276);
						    case 2:SetPVarInt(playerid, "sking", 71);
						    case 3:SetPVarInt(playerid, "sking", 275);
						    case 4:SetPVarInt(playerid, "sking", 70);
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 8);
						    case 2:SetPVarInt(playerid, "sking", 17);
						    case 3:SetPVarInt(playerid, "sking", 28);
						    case 4:SetPVarInt(playerid, "sking", 126);
						    case 5:SetPVarInt(playerid, "sking", 117);
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 115);
						    case 2:SetPVarInt(playerid, "sking", 116);
						    case 3:SetPVarInt(playerid, "sking", 114);
						    case 4:SetPVarInt(playerid, "sking", 111);
						    case 5:SetPVarInt(playerid, "sking", 236);
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 123);
						    case 2:SetPVarInt(playerid, "sking", 122);
						    case 3:SetPVarInt(playerid, "sking", 109);
						    case 4:SetPVarInt(playerid, "sking", 108);
						    case 5:SetPVarInt(playerid, "sking", 118);
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "sking", 0);
						    case 1:SetPVarInt(playerid, "sking", 15);
						    case 2:SetPVarInt(playerid, "sking", 18);
						    case 3:SetPVarInt(playerid, "sking", 23);
						}
					}
				}
				switch(PI[playerid][data_MEMBER]) {
					case 1: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 216", "Выбрать", "Отмена");
					case 2: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 191", "Выбрать", "Отмена");
					case 3: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 141", "Выбрать", "Отмена");
					case 4: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 194", "Выбрать", "Отмена");
					case 5: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 6: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 7: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 13", "Выбрать", "Отмена");
					case 8: ShowPlayerDialog(playerid, 3412, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n2. ID 12", "Выбрать", "Отмена");
				}
			}
		}
		case 3412: {
		    if(!response) return 1;
			if(response) {
				switch(PI[playerid][data_MEMBER]) {
				    case 1: {
				        switch(listitem) {
				        	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 216);
						}
				    }
				    case 2: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 191);
						}
					}
					case 3: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 141);
						}
					}
					case 4: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 194);
						}
					}
					case 5: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 6: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 7: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 8: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 12);
						}
					}
				}
				new textg[24];
				GetPVarString(playerid,"namegr", textg, sizeof(textg));
				FixSVarString(textg);
				new str_q[250];
				mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `group`(`fraction`,`group_name`,`skin_m`,`skin_g`) VALUES ('%d','%s','%d','%d')", PI[playerid][data_MEMBER],textg,GetPVarInt(playerid, "sking"),GetPVarInt(playerid, "skinm"));
				mysql_function_query(dbHandle, str_q, false, "", "");
				SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно создали группу {FFFF00}('%s')",textg);
				DeletePVar(playerid, "skinm");
				DeletePVar(playerid, "sking");
			}
		}
		case 8100: {
		    if(!response) return 1;
			if(response) {
				new str_q[150];
				mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `promocode` WHERE `code` = '%e'", inputtext);
				mysql_function_query(dbHandle, str_q, true, "PromoCode", "d", playerid);
			}
		}
		case 3211: {
		    if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowPlayerDialog(playerid, 3410, DIALOG_STYLE_INPUT, "{f00e5d}Создание группы", "Название группы", "Продолжить", "Закрыть");
			        default: {
						new _text[24];
		                sscanf(inputtext, "s", _text);
		                SetPVarString(playerid, "gtext", _text);
		                EditGroups(playerid);
					}
				}
			}
		}
		case 3212: {
		    if(!response) return 1;
			if(response) {
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
                switch(listitem) {
				    case 0: {
						new str_q[190];
						mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
						mysql_function_query(dbHandle, str_q, true, "InfoGroup", "d", playerid);
					}
					case 1: {
					    new str_q[190];
						mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
						mysql_function_query(dbHandle, str_q, true, "idgroup", "d", playerid);
					}
					case 2: {
						new str_q[190];
						mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `standart` = '1'", PI[playerid][data_MEMBER], grouptext);
						mysql_function_query(dbHandle, str_q, true, "CheckStandart", "d", playerid);
					}
					case 3: {
					    switch(PI[playerid][data_MEMBER]) {
							case 1: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 156\n3. ID 154\n4. ID 208\n5. ID 155\n6. ID 147\n7. ID 187", "Выбрать", "Отмена");
							case 2: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 179\n3. ID 262\n4. ID 253\n5. ID 283\n6. ID 167\n7. ID 277\n8. ID 278\n9. ID 188\n10. ID 222\n11. ID 255\n12 ID 84", "Выбрать", "Отмена");
							case 3: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 280\n3. ID 281\n4. ID 282\n5. ID 285\n6. ID 286\n7. ID 288", "Выбрать", "Отмена");
							case 4: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 276\n3. ID 71\n4. ID 275\n5. ID 70", "Выбрать", "Отмена");
							case 5: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 6: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 7: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. [1-4 ранг]\n3. [5-7 ранг]\n4. [Стрелковый состав 1-7 ранг]\n5. [8-9 ранг]\n6. [10 ранг]", "Выбрать", "Отмена");
							case 8: ShowPlayerDialog(playerid, 3450, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 15\n3. ID 17\n4. ID 23", "Выбрать", "Отмена");
						}
					}
					case 4: {
						switch(PI[playerid][data_MEMBER]) {
							case 1: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 216", "Выбрать", "Отмена");
							case 2: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 191", "Выбрать", "Отмена");
							case 3: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 141", "Выбрать", "Отмена");
							case 4: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 194", "Выбрать", "Отмена");
							case 5: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 13", "Выбрать", "Отмена");
							case 6: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 13", "Выбрать", "Отмена");
							case 7: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 13", "Выбрать", "Отмена");
							case 8: ShowPlayerDialog(playerid, 3451, DIALOG_STYLE_LIST, "{f00e5d}Выберете форму одежды", "{f00e5d}1. Сбросить мужской скин\n{252525}2. ID 12", "Выбрать", "Отмена");
						}
					}
					case 5: ShowPlayerDialog(playerid, 3452, DIALOG_STYLE_INPUT, "{f00e5d}Изменить название группы", "Новое название группы", "Продолжить", "Закрыть");
					case 6: {
						new str_q[130];
						mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
						mysql_function_query(dbHandle, str_q, true, "CheckDelete", "d", playerid);
					}
					default: return 1;
				}
			}
		}
		case 3452: {
		    if(!response) return 1;
			if(response) {
			    new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
			    new str_q[150];
				mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `group` SET `group_name` = '%e' WHERE `group_name` = '%e' AND `fraction` = '%d'",inputtext,grouptext,PI[playerid][data_MEMBER]);
				mysql_function_query(dbHandle, str_q, false, "", "");
				SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно изменили название группы {FFFF00}('%s'){00aa33} на {FFFF00}('%s')",grouptext,inputtext);
				DeletePVar(playerid, "gtext");
			}
		}
		case 3451: {
		    if(!response) return 1;
			if(response) {
				switch(PI[playerid][data_MEMBER]) {
				    case 1: {
				        switch(listitem) {
				        	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 216);
						}
				    }
				    case 2: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 191);
						}
					}
					case 3: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 141);
						}
					}
					case 4: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 194);
						}
					}
					case 5: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 6: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 7: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 13);
						}
					}
					case 8: {
					    switch(listitem) {
					    	case 0:SetPVarInt(playerid, "skinm", 0);
						    case 1:SetPVarInt(playerid, "skinm", 12);
						}
					}
				}
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
				new str_q[150];
				mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
				mysql_function_query(dbHandle, str_q, true, "ChangeSkinG", "d", playerid);
				DeletePVar(playerid, "gtext");
			}
		}
		case 3450: {
		    if(!response) return 1;
			if(response) {
				switch(PI[playerid][data_MEMBER])
				{
				    case 1:
				    {
				        switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 156);
						    case 2:SetPVarInt(playerid, "SKIN", 154);
						    case 3:SetPVarInt(playerid, "SKIN", 208);
						    case 4:SetPVarInt(playerid, "SKIN", 187);
						    case 5:SetPVarInt(playerid, "SKIN", 147);
						}
				    }
				    case 2:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 179);
						    case 2:SetPVarInt(playerid, "SKIN", 262);
						    case 3:SetPVarInt(playerid, "SKIN", 253);
						    case 4:SetPVarInt(playerid, "SKIN", 287);
						    case 5:SetPVarInt(playerid, "SKIN", 167);
						    case 6:SetPVarInt(playerid, "SKIN", 277);
						    case 7:SetPVarInt(playerid, "SKIN", 278);
						    case 8:SetPVarInt(playerid, "SKIN", 279);
						    case 9:SetPVarInt(playerid, "SKIN", 188);
						    case 10:SetPVarInt(playerid, "SKIN", 222);
						    case 11:SetPVarInt(playerid, "SKIN", 255);
						    case 12:SetPVarInt(playerid, "SKIN", 84);
						}
					}
					case 3:
					{
					    switch(listitem)
						{
							case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 280);
						    case 2:SetPVarInt(playerid, "SKIN", 281);
						    case 3:SetPVarInt(playerid, "SKIN", 282);
						    case 4:SetPVarInt(playerid, "SKIN", 285);
						    case 5:SetPVarInt(playerid, "SKIN", 286);
						    case 6:SetPVarInt(playerid, "SKIN", 288);
						}
					}
					case 4:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 276);
						    case 2:SetPVarInt(playerid, "SKIN", 71);
						    case 3:SetPVarInt(playerid, "SKIN", 275);
						    case 4:SetPVarInt(playerid, "SKIN", 70);
						}
					}
					case 5:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 8);
						    case 2:SetPVarInt(playerid, "SKIN", 17);
						    case 3:SetPVarInt(playerid, "SKIN", 28);
						    case 4:SetPVarInt(playerid, "SKIN", 126);
						    case 5:SetPVarInt(playerid, "SKIN", 117);
						}
					}
					case 6:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 115);
						    case 2:SetPVarInt(playerid, "SKIN", 116);
						    case 3:SetPVarInt(playerid, "SKIN", 114);
						    case 4:SetPVarInt(playerid, "SKIN", 111);
						    case 5:SetPVarInt(playerid, "SKIN", 236);
						}
					}
					case 7:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 123);
						    case 2:SetPVarInt(playerid, "SKIN", 122);
						    case 3:SetPVarInt(playerid, "SKIN", 109);
						    case 4:SetPVarInt(playerid, "SKIN", 108);
						    case 5:SetPVarInt(playerid, "SKIN", 118);
						}
					}
					case 8:
					{
					    switch(listitem)
						{
						    case 0:SetPVarInt(playerid, "SKIN", 0);
						    case 1:SetPVarInt(playerid, "SKIN", 15);
						    case 2:SetPVarInt(playerid, "SKIN", 18);
						    case 3:SetPVarInt(playerid, "SKIN", 23);
						}
					}
				}
				new grouptext[24];
				GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
				FixSVarString(grouptext);
				new str_q[256];
				mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
				mysql_function_query(dbHandle, str_q, true, "ChangeSkinM", "d", playerid);
				DeletePVar(playerid, "gtext");
			}
		}
		case 7229: {
			if(!response) return callcmd::phone(playerid);
			if(response) {
                switch(listitem) {
				    case 0: {
						ShowPlayerDialog(playerid, 7321, DIALOG_STYLE_INPUT, "{f00e5d}Добавить контакт", "\
						{252525}Введите имя контакта (без пробела) и номер телефона через запятую.\n\
						{f00e5d}Например: Ivan_Ivanov, 1234567", "Добавить", "Отмена");
					}
                    default: {
                        new _text[24];
                		sscanf(inputtext, "s{d}", _text);
                        ShowPlayerDialog(playerid, 7300, DIALOG_STYLE_LIST, "{f00e5d}Меню контакта", "\
						{252525}1. Информация о контакте\n\
						2. Позвонить\n\
						3. Отправить SMS\n\
						4. Изменить имя\n\
						5. Изменить номер\n\
						{f00e5d}6. Удалить контакт", "Далее", "Назад");
						SetPVarString(playerid, "pb_namecont", _text);
					}
				}
			}
		}
		case 7300: {
			if(!response) return callcmd::phone(playerid);
			if(response) {
                switch(listitem) {
				    case 0: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_q[256];
				    	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
						mysql_function_query(dbHandle, str_q, true, "InfoPhoneBook", "i", playerid);
				    }
				    case 1: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_q[256];
				    	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
						mysql_function_query(dbHandle, str_q, true, "CallPhoneBook", "i", playerid);
				    }
				    case 2: ShowPlayerDialog(playerid, 7322, DIALOG_STYLE_INPUT, "{f00e5d}Отправить SMS", "Введите текст сообщения:", "Отправить", "Назад");
				    case 3: ShowPlayerDialog(playerid, 7323, DIALOG_STYLE_INPUT, "{f00e5d}Изменить имя", "Введите новое имя контакта (без пробела):", "Изменить", "Назад");
				    case 4: ShowPlayerDialog(playerid, 7324, DIALOG_STYLE_INPUT, "{f00e5d}Изменить номер", "Введите новый номер телефона для контакта:", "Изменить", "Назад");
				    case 5: {
				    	new text[24];
						GetPVarString(playerid,"pb_namecont", text, sizeof(text));
						FixSVarString(text);
						new str_3[365];
						format(str_3,sizeof(str_3),"Вы уверены что хотите удалить контакт {3377cc}'%s'{252525}?\n{696969}Обратите внимание: отменить это действие будет невозможно!", text);
					 	ShowPlayerDialog(playerid, 7325, DIALOG_STYLE_MSGBOX, "{f00e5d}Удалить контакт", str_3, "Да", "Нет");
                    }
					default: return 1;
				}
			}
		}
		case 7325:
		{
		    if(!response) return callcmd::phone(playerid);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[256];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
			mysql_function_query(dbHandle, str_q, true, "DeletePhoneBook", "i", playerid);
		}
		case 7324:
		{
		    if(!response) return callcmd::phone(playerid);
		    SetPVarInt(playerid, "number_pb", strval(inputtext));
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[130];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
			mysql_function_query(dbHandle, str_q, true, "ChangeNumberPhoneBook", "i", playerid);
		}
		case 7323:
		{
		    if(!response) return callcmd::phone(playerid);
			SetPVarString(playerid, "c_name", inputtext);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			new str_q[256];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
			mysql_function_query(dbHandle, str_q, true, "ChangeNamePhoneBook", "i", playerid);
		}
		case 7322:
		{
		    if(!response) return callcmd::phone(playerid);
			SetPVarString(playerid, "sms_pb", inputtext);
			new text[24];
			GetPVarString(playerid,"pb_namecont", text, sizeof(text));
			FixSVarString(text);
			new str_q[256];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE `name_add` = '%e' AND `name` = '%e'",PI[playerid][data_NAME], text);
			mysql_function_query(dbHandle, str_q, true, "SmsPhoneBook", "i", playerid);
		}
		case 7321:
		{
		    if(!response) return callcmd::phone(playerid);
			new number,name[24];
			if(sscanf(inputtext, "p<,>s[23]d", name, number)) return 1;
			new str_q[256];
		    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `phonebook` WHERE name = '%e' AND name_add = '%e'", name, PI[playerid][data_NAME]);
			mysql_function_query(dbHandle, str_q, true, "PhoneBookAddCheck", "d", playerid);
		    SetPVarString(playerid, "name_pb", name);
		    SetPVarInt(playerid, "number_pb", number);
		}
		case 7221:
		{
            if(strval(inputtext) == 777) return SendClientMessage(playerid,CG,"Разработка");
            if(strval(inputtext) == 999) return SendClientMessage(playerid,CG,"Разработка");
		    if(strval(inputtext) == 102) {
		        if(PI[playerid][data_911_1] > 0) return SendClientMessage(playerid, CG, "Вы уже вызывали сотрудников МО МВД");
				return ShowPlayerDialog(playerid, dialog_911_1, DIALOG_STYLE_INPUT, "{f00e5d}Вызов полиции", "Вы позвонили на гарячую линию вызова полции.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
		    }
		    if(strval(inputtext) == 103) {
		        if(PI[playerid][data_911_2] > 0) return SendClientMessage(playerid, CG, "Вы уже вызывали сотрудников БЦРБ");
				return ShowPlayerDialog(playerid, dialog_911_2, DIALOG_STYLE_INPUT, "{f00e5d}Вызов скорой помощи", "Вы позвонили на гарячую линию вызова скорой помощи.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
		    }
			{
				new number[24];
				if(sscanf(inputtext, "p<,>d[23]", number)) return callcmd::phone(playerid);
				new str[144];
				format(str, sizeof(str), "%d", number);
				callcmd::call(playerid,str);
			}
		}
		case 7222: {
			new name, text[64] ;
			if(sscanf(inputtext, "p<,>d[23]s[63]", name, text)) return callcmd::phone(playerid);
			new str[70];
			format(str, sizeof(str), "%d %s", name, text );
			callcmd::sms(playerid,str);
		}
		case 6001: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowBankMoney(playerid);
			        case 1: {
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						ShowPlayerDialog(playerid, 6002, DIALOG_STYLE_INPUT, "{f00e5d}Перевод на другой счёт", "\
						{252525}Укажите ID получателя и сумма перевода\n\
						через запятую. Комиссия при переводе составит {3377cc}3%\n\
						{f00e5d}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
					case 2: return 1;
					case 3: ShowPlayerDialog(playerid, 7997, DIALOG_STYLE_LIST, "{f00e5d}Оплата аредны", "1. Оплатить дом / квартиру\n2. Оплатить бизнес / АЗС", "Выбрать", "Отмена");
					case 4: return 1;
				}
			}
        }
        case 5213: {
            if(!response) return 1;
            switch(listitem) {
                case 0: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 60*15;
                    new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 15 минут. Причина: DM (п. 1.1)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 15 минут. Причина: DM (п. 1.1)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: DM (п. 1.1)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 60 минут. Причина: DM (п. 1.1)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 1: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 30*60;
    				new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 30 минут. Причина: NonRP Drive (п. 1.19)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 30 минут. Причина: NonRP Drive (п. 1.19)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 30 минут. Причина: NonRP Drive (п. 1.19)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
                    format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 30 минут. Причина: NonRP Drive (п. 1.19)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 2: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 60*10;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 10 минут. Причина: DriveBy (п 1.4)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 10 минут. Причина: DriveBy (п 1.4)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 10 минут. Причина: DriveBy (п 1.4)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 10 минут. Причина: DriveBy (п 1.4)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 3: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 60*30;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 30 минут. Причина: Багоюз (п 1.7)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер посадил Вас в тюрьму на 30 минут. Причина: Багоюз (п 1.7)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 30 минут. Причина: Багоюз (п 1.7)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 30 минут. Причина: Багоюз (п 1.7)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 4: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 60*15;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 15 минут. Причина: Помеха работе (п 1.9)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 15 минут. Причина: Помеха работе (п 1.9)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: Помеха работе (п 1.9)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 15 минут. Причина: Помеха работе (п 1.9)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 5: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 15*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 15 минут. Причина: Помеха РП процессу (п 1.22)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 15 минут. Причина: Помеха РП процессу (п 1.22)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: Помеха РП процессу (п 1.22)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 15 минут. Причина: Помеха РП процессу (п 1.22)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 6: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
					PI[GetPVarInt(playerid, "PrisonID")][data_VMUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_VMUTETIME] = 10;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали голосовой чат игрока %s на 10 минут. Причина: Музыка (п 2.9)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам голосовой чат на 10 минут. Причина: Музыка (п 2.9)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал голосовой чат игроку %s на 10 минут. Причина: Музыка (п 2.9)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SvMutePlayerEnable(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал голосовой чат игроку %s на 10 минут. Причина: Музыка (п 2.9)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 7: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 5*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 5 минут. Причина: TeamKill (п 1.7)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 5 минут. Причина: TeamKill (п 1.7)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 5 минут. Причина: TeamKill (п 1.7)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 5 минут. Причина: TeamKill (п 1.7)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 8: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 3) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
					PI[GetPVarInt(playerid, "PrisonID")][data_MEMBER] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_LEADER] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_RANK] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_ADMLVL] = 0;
				 	new str_q[256];
				    mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '5', 'Оскорбление игры (п 1.37)', '%e')",PI[GetPVarInt(playerid, "PrisonID")][data_NAME],PI[playerid][data_NAME],PI[GetPVarInt(playerid, "PrisonID")][data_LOGIN_IP]);
				    mysql_function_query(dbHandle, str_q, false, "", "");
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали игрока %s на 5 дн. Причина: Оскорбление игры (п 1.37)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessage(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Ваш персонаж заблокирован на 5 дн. Причина: Оскорбление игры (п 1.37)");
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал игрока %s на 5 дн.  Причина: Оскорбление игры (п 1.37)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					Kick(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал игрока %s на 5 дн.  Причина: Оскорбление игры (п 1.37)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 9: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
                	PI[GetPVarInt(playerid, "PrisonID")][data_MUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_MUTETIME] = 120;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали чат игрока %s на 120 минут. Причина: Оскорбление ИМ (п 1.25)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам чат на 120 минут. Причина: Оскорбление ИМ (п 1.25)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал чат игроку %s на 120 минут. Причина: Оскорбление ИМ (п 1.25)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s на 120 минут. Причина: Оскорбление ИМ (п 1.25)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 10: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 3) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
					PI[GetPVarInt(playerid, "PrisonID")][data_MEMBER] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_LEADER] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_RANK] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_ADMLVL] = 0;
				 	new str_q[256];
				    mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '1', 'Реклама (п 2.6)', '%e')",PI[GetPVarInt(playerid, "PrisonID")][data_NAME],PI[playerid][data_NAME],PI[GetPVarInt(playerid, "PrisonID")][data_LOGIN_IP]);
				    mysql_function_query(dbHandle, str_q, false, "", "");
				    new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали игрока %s на 1 дн. Причина: Реклама (п 2.6)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessage(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Ваш персонаж заблокирован на 1 дн. Причина: Реклама (п 2.6)");
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал игрока %s на 1 дн.  Причина: Реклама (п 2.6)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					Kick(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал игрока %s на 1 дн.  Причина: Реклама (п 2.6)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 11: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
                	PI[GetPVarInt(playerid, "PrisonID")][data_MUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_MUTETIME] = 15;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали чат игрока %s на 15 минут. Причина: Флуд (п 2.5)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам чат на 15 минут. Причина: Флуд (п 2.5)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал чат игроку %s на 15 минут. Причина: Флуд (п 2.5)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s на 15 минут. Причина: Флуд (п 2.5)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 12: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
                	PI[GetPVarInt(playerid, "PrisonID")][data_MUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_MUTETIME] = 15;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали чат игрока %s на 15 минут. Причина: Оффтоп (п 2.5)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам чат на 15 минут. Причина: Оффтоп (п 2.5)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал чат игроку %s на 15 минут. Причина: Оффтоп (п 2.5)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s на 15 минут. Причина: Оффтоп (п 2.5)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 13: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 25*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 25 минут. Причина: AFK в бою (п 1.5)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 25 минут. Причина: AFK в бою (п 1.5)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 25 минут. Причина: AFK в бою (п 1.5)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 25 минут. Причина: AFK в бою (п 1.5)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 14: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
                	PI[GetPVarInt(playerid, "PrisonID")][data_MUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_MUTETIME] = 10;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали чат игрока %s на 10 минут. Причина: MG (п 2.7)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам чат на 10 минут. Причина: MG (п 2.7)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.7)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.7)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 15: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
                	PI[GetPVarInt(playerid, "PrisonID")][data_MUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_MUTETIME] = 10;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали чат игрока %s на 10 минут. Причина: MG (п 2.10)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам чат на 10 минут. Причина: MG (п 2.10)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.10)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s на 10 минут. Причина: MG (п 2.10)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
				case 16: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 120*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 120 минут. Причина: Читы / Скрипты (п 1.6)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 120 минут. Причина: Читы / Скрипты (п 1.6)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 120 минут. Причина: Читы / Скрипты (п 1.6)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 120 минут. Причина: Читы / Скрипты (п 1.6)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 17: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 15*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 15 минут. Причина: PowerGaming (п 1.12)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 15 минут. Причина: PowerGaming (п 1.12)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 15 минут. Причина: PowerGaming (п 1.12)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 15 минут. Причина: PowerGaming (п 1.12)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 18: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					PI[GetPVarInt(playerid, "PrisonID")][data_HOSPITAL] = 0;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGAN] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_DEMORGANTIME] = 5*60;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на 5 минут. Причина: NonRP /me (п 1.25)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d посадил Вас в тюрьму на 5 минут. Причина: NonRP /me (п 1.25)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на 5 минут. Причина: NonRP /me (п 1.25)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SavePlayerData(GetPVarInt(playerid, "PrisonID"));
					SetPlayerToSpawn(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на 5 минут. Причина: NonRP /me (п 1.25)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 19: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы кикнули игрока %s. Причина: NonRP /sleep (п 1.39)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d кикнул Вас. Причина: NonRP /sleep (п 1.39)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] кикнул игрока %s. Причина: NonRP /sleep (п 1.39)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SendClientMessage(GetPVarInt(playerid, "PrisonID"),COLOR_BLACK, "Вы были отключены от сервера, для выхода из игры используйте /(q)uit");
					Kick(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s кикнул игрока %s. Причина: NonRP /sleep (п 1.39)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
                case 20: {
                    if(!IsPlayerConnected(GetPVarInt(playerid, "PrisonID"))) return  SendClientMessage(playerid,CG,"Игрок не в сети");
					if(PI[GetPVarInt(playerid, "PrisonID")][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
					if(PI[playerid][data_ADMLVL] < 2) return SendClientMessage(playerid,CG,"Для выдачи этого наказания у Вас должен быть более высокий уровень Игрового мастера.");
					PI[GetPVarInt(playerid, "PrisonID")][data_VMUTE] = 1;
					PI[GetPVarInt(playerid, "PrisonID")][data_VMUTETIME] = 20;
					new textstr[145], atext[145];
					format(textstr, sizeof(textstr), "Вы заблокировали голосовой чат игрока %s на 20 минут. Причина: Неадекватное поведение (п 2.12)", PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendClientMessage(playerid, COLOR_TOMATO, textstr);
					SendClientMessagef(GetPVarInt(playerid, "PrisonID"), COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам голосовой чат на 20 минут. Причина: Неадекватное поведение (п 2.12)", PI[playerid][ADMINSNUMBER]);
					format(atext,sizeof(atext),"[%s #%d] %s[%d] заблокировал голосовой чат игроку %s на 20 минут. Причина: Неадекватное поведение (п 2.12)", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					SvMutePlayerEnable(GetPVarInt(playerid, "PrisonID"));
					new vk_send[250];
					format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал голосовой чат игроку %s на 20 минут. Причина: Неадекватное поведение (п 2.12)",PI[playerid][data_NAME], PI[GetPVarInt(playerid, "PrisonID")][data_NAME]);
					SendVKTest(playerid, vk_send, 3);
                }
            }
            DeletePVar(playerid, "PrisonID");
        }
		case 8999: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
      				case 0: ShowPlayerDialog(playerid, 8998, DIALOG_STYLE_LIST, "{f00e5d}Банкомат", "1. Узнать баланс счёта\n2. Снять деньги со счета\n3. Пополнить счёт\n4. Перевести деньги на другой счёт\n5. Положить деньги на счет телефона", "Выбрать", "Отмена");
      				case 1: ShowPlayerDialog(playerid, 8997, DIALOG_STYLE_LIST, "{f00e5d}Оплата аредны", "1. Оплатить дом / квартиру\n2. Оплатить бизнес / АЗС", "Выбрать", "Отмена");
      				case 3: SendClientMessage(playerid, CY, "Разработка. Приятной игры на {f00e5d}Arcana РП");
			    }
			}
		}
        case 8997: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
							new h = PI[playerid][data_HOUSE];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							{252525}Номер дома: %d\n\
							{252525}Статус оплаты: %d / 30 дней\n\
							{f00e5d}Квартплата - 1499 руб / день\n\n\
							{252525}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
						 	ShowPlayerDialog(playerid, 7950, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) {
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							{252525}Номер квартиры: %d\n\
							{252525}Статус оплаты: %d / 30 дн\n\
							{f00e5d}Квартплата - 1299 руб / день\n\n\
							{252525}Введите количество дней для оплаты",KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
						 	ShowPlayerDialog(playerid, 7951, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
					}
					case 1: {
					    if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID) return SendClientMessage(playerid, CG, "У Вас нет бизнеса или АЗС");
						new b = PI[playerid][data_BUSINESS];
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						new str_1[256];
						format(str_1,sizeof(str_1),"\
						{252525}Номер бизнеса: %d\n\
						{252525}Статус оплаты: %d / 30 дней\n\
						{f00e5d}Налог - 3999 рублей\n\n\
						{252525}Введите количество дней для оплаты", BUSINESS_DATA[b][data_ID], BUSINESS_DATA[b][data_DAY]);
						ShowPlayerDialog(playerid, 7952, DIALOG_STYLE_INPUT, "{f00e5d}Оплата бизнеса", str_1, "Выполнить", "Назад");
					}
				}
			}
        }
        case 8998: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowBankMoney(playerid);
			        case 1: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{f00e5d}Снятие наличных", "Комиссия составит {3377cc}4%\n{252525}Введите требуемую сумму", "Снять", "Назад");
			        case 2: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{f00e5d}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			        case 3: {
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Перевод на другой счёт", "\
						Укажите ID получателя и сумма перевода\n\
						через запятую. Комиссия при переводе составит {3377cc}3%\n\
						{f00e5d}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
			        case 4: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите сумму которую желаете положить на счет телефона", "Пополнить", "Назад");
				}
			}
        }
		case 7999: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
      				case 0: ShowPlayerDialog(playerid, 7998, DIALOG_STYLE_LIST, "{f00e5d}Банк", "1. Узнать баланс счёта\n2. Снять деньги со счета\n3. Пополнить счёт\n4. Перевести деньги на другой счёт\n5. Положить деньги на счет телефона\n6. Снятие средств  со счёта  бизнеса / АЗС\n7. Пополнение счёта  бизнеса / АЗС", "Выбрать", "Отмена");
      				case 1: ShowPlayerDialog(playerid, 7997, DIALOG_STYLE_LIST, "{f00e5d}Оплата аредны", "1. Оплатить дом / квартиру\n2. Оплатить бизнес / АЗС", "Выбрать", "Отмена");
      				case 3: SendClientMessage(playerid, CY, "Разработка. Приятной игры на {f00e5d}Arcana РП");
			    }
			}
		}
        case 7997: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
						if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
							new h = PI[playerid][data_HOUSE];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							Номер дома: %d\n\
							{252525}Статус оплаты: %d / 30 дней\n\
							{f00e5d}Квартплата - 1499 руб / день\n\n\
							{252525}Введите количество дней для оплаты", HOUSE_DATA[h][data_ID], HOUSE_DATA[h][data_DAY]);
						 	ShowPlayerDialog(playerid, 7950, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
				        else if(PI[playerid][data_KV] != INVALID_KV_ID) {
							new kv = PI[playerid][data_PADIK],k = PI[playerid][data_KV];
							PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
							new str_1[256];
							format(str_1,sizeof(str_1),"\
							Номер квартиры: %d\n\
							{252525}Статус оплаты: %d / 30 дн\n\
							{f00e5d}Квартплата - 1299 руб / день\n\n\
							{252525}Введите количество дней для оплаты",KV_DATA[kv][data_ID],KV_DATA[kv][data_DAY][k]);
						 	ShowPlayerDialog(playerid, 7951, DIALOG_STYLE_INPUT, "{f00e5d}Оплата жилья", str_1, "Выполнить", "Назад");
				        }
					}
					case 1: {
					    if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID) return SendClientMessage(playerid, CG, "У Вас нет бизнеса или АЗС");
						new b = PI[playerid][data_BUSINESS];
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						new str_1[256];
						format(str_1,sizeof(str_1),"\
						Номер бизнеса: %d\n\
						{252525}Статус оплаты: %d / 30 дней\n\
						{f00e5d}Налог - 3999 рублей\n\n\
						{252525}Введите количество дней для оплаты", BUSINESS_DATA[b][data_ID], BUSINESS_DATA[b][data_DAY]);
						ShowPlayerDialog(playerid, 7952, DIALOG_STYLE_INPUT, "{f00e5d}Оплата бизнеса", str_1, "Выполнить", "Назад");
					}
				}
			}
        }
        case 7998: {
            if(!response) return 1;
			if(response) {
			    switch(listitem) {
			        case 0: ShowBankMoney(playerid);
			        case 1: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_2, DIALOG_STYLE_INPUT, "{f00e5d}Снятие наличных", "Комиссия составит {3377cc}4%\n{252525}Введите требуемую сумму", "Снять", "Назад");
			        case 2: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, dialog_BANK_3, DIALOG_STYLE_INPUT, "{f00e5d}Пополнение счёта", "Введите нужную сумму:", "Пополнить", "Назад");
			        case 3: {
						PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
						ShowPlayerDialog(playerid, dialog_BANK_9, DIALOG_STYLE_INPUT, "{f00e5d}Перевод на другой счёт", "\
						Укажите ID получателя и сумма перевода\n\
						через запятую. Комиссия при переводе составит {3377cc}3%\n\
						{f00e5d}Пример формы для перевода: 12, 500000", "Перевести", "Назад");
					}
			        case 4: PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0), ShowPlayerDialog(playerid, 9001, DIALOG_STYLE_INPUT, "{f00e5d}Банк", "Введите сумму которую желаете положить на счет телефона", "Пополнить", "Назад");
					case 5:Business_Give_Money(playerid);
					case 6:Business_Re_Money(playerid);
				}
			}
        }
		case 7900: {
		    if(!response) return 1;
		    if(response) {
		        for(new h = 0; h < TotalHouses; h++) {
		        	if(PlayerToPoint(3.0, playerid, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SendClientMessage(playerid,CG,"У Вас уже есть недвижимость");
			            if(HOUSE_DATA[h][data_OWNED] == 1) return SendClientMessage(playerid,CG,"Данный дом уже куплен");
						if(get_player_money(playerid) < HOUSE_DATA[h][data_PRICE]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						PI[playerid][data_HOUSE] = h;
			            HOUSE_DATA[h][data_OWNED] = 1;
			            HOUSE_DATA[h][data_DAY] = 3;
			            strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			            give_player_money(playerid,-HOUSE_DATA[h][data_PRICE],"#73",14242);
			            SendClientMessage(playerid,0xFFCC33FF, "Поздравляем Вас с покупкой дома! Он был оплачен на 3 дня");
			            SendClientMessage(playerid,0xFFCC33FF, "Для управления домом используйте: /home");
			            SendClientMessage(playerid, 0x9F81F7FF, "Используйте: /setspawn, чтобы изменить место появления");
			            new logtext[64];
						format(logtext,sizeof(logtext),"купил дом ID:%d", HOUSE_DATA[h][data_ID]);
						AddLog("log_player",PI[playerid][data_NAME], logtext);
			            UpdateHouseData(h);
			            SaveHouseData(h);
			           	SavePlayerData(playerid);
			           	return 1;
			        }
		    	}
			}
		}
		case 8791: {
			if(!response) return 1;
			if(response) {
				if(pDialogCurrectTime[playerid] - gettime() < 1) {
					new gun = GetPlayerWeapon(GetPVarInt(playerid, "proposition"));
					new gunslot = getWeaponIdSlot(gun);
					if(PI[GetPVarInt(playerid, "proposition")][data_GUN][gunslot] == 0 || gunslot == 0) return SendClientMessage(GetPVarInt(playerid, "proposition"),CG,"Чтобы продать оружие, нужно взять его в руки");
					if(PI[GetPVarInt(playerid, "proposition")][data_AMMO][gunslot] < GetPVarInt(playerid, "value_1")) return SendClientMessage(GetPVarInt(playerid, "proposition"),CG, "У Вас нет такого количества патронов");
					new ammonew = PI[GetPVarInt(playerid, "proposition")][data_AMMO][gunslot] - GetPVarInt(playerid, "value_1");
					SetWeapon(GetPVarInt(playerid, "proposition"), gun, ammonew);
					GiveWeapon(playerid, gun, GetPVarInt(playerid, "value_1"));
					new cena = GetPVarInt(GetPVarInt(playerid, "proposition"), "cena")/GetPVarInt(GetPVarInt(playerid, "proposition"), "pt");
					new str2[70],str1[70],pay[20],pay1[20];
					format(str2,sizeof(str2),"Продажа %s (%d пт) %s[%d]",weapon_names[gun], GetPVarInt(playerid, "value_1"), PI[playerid][data_NAME],playerid);
					format(str1,sizeof(str1),"Покупка %s (%d пт) у %s[%d]",weapon_names[gun], GetPVarInt(playerid, "value_1"), PI[GetPVarInt(playerid, "proposition")][data_NAME],GetPVarInt(playerid, "proposition"));
					format(pay,sizeof(pay),"-%dР",GetPVarInt(GetPVarInt(playerid, "proposition"), "cena"));
					format(pay1,sizeof(pay1),"+%dР",GetPVarInt(GetPVarInt(playerid, "proposition"), "cena"));
					cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str1), CEFSTR("fb4949"), CEFSTR(pay));
					cef_emit_event(GetPVarInt(playerid, "proposition"), "show-notify-no-img", CEFSTR(str2), CEFSTR("418055"), CEFSTR(pay1));
					SendClientMessagef(GetPVarInt(playerid, "proposition"), 0xFF99CCFF, "%s купил у Вас %s (%d пт) за %d руб (%d за 1 пт)",PI[playerid][data_NAME], weapon_names[gun], GetPVarInt(playerid, "value_1"),GetPVarInt(GetPVarInt(playerid, "proposition"), "cena"),cena);
					give_player_money(playerid,-GetPVarInt(playerid, "cena"),"sellgun #2",31194);
					give_player_money(GetPVarInt(playerid, "proposition"),GetPVarInt(playerid, "cena"),"sellgun #1",31195);

					SendClientMessagef(playerid, 0xFF99CCFF, "Вы купили у %s %s (%d пт) за %d руб (%d за 1 пт)",PI[GetPVarInt(playerid, "proposition")][data_NAME], weapon_names[gun], GetPVarInt(playerid, "value_1"),GetPVarInt(GetPVarInt(playerid, "proposition"), "cena"),cena);
				}
				else SendClientMessage(playerid, CG, "Дождитесь окончания отыгровки");
			}
		}
		case 8790: {
			if(!response) return 1;
			if(response) {
				if(pDialogCurrectTime[playerid] - gettime() < 1) {
					new gun = GetPlayerWeapon(GetPVarInt(playerid, "proposition"));
					new gunslot = getWeaponIdSlot(gun);
					if(PI[GetPVarInt(playerid, "proposition")][data_GUN][gunslot] == 0 || gunslot == 0) return SendClientMessage(GetPVarInt(playerid, "proposition"),CG,"Чтобы передать оружие, нужно взять его в руки");
					if(PI[GetPVarInt(playerid, "proposition")][data_AMMO][gunslot] < GetPVarInt(playerid, "value_1")) return SendClientMessage(GetPVarInt(playerid, "proposition"),CG, "У Вас нет такого количества патронов");
					new ammonew = PI[GetPVarInt(playerid, "proposition")][data_AMMO][gunslot] - GetPVarInt(playerid, "value_1");
					SetWeapon(GetPVarInt(playerid, "proposition"), gun, ammonew);
					GiveWeapon(playerid, gun, GetPVarInt(playerid, "value_1"));
					new string[60];
					format(string, sizeof(string), "%s передал(а) оружие %s",PI[GetPVarInt(playerid, "proposition")][data_NAME],PI[playerid][data_NAME]);
					ProxDetector(30.0, GetPVarInt(playerid, "proposition"), string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
					SetPlayerChatBubble(GetPVarInt(playerid, "proposition"), "передал(а) оружие", 0xFF99CCFF, 20.0, 4000);
					SendClientMessagef(GetPVarInt(playerid, "proposition"), 0xFF99CCFF, "%s взял у Вас %s (%d пт)",PI[playerid][data_NAME], weapon_names[gun], GetPVarInt(playerid, "value_1"));
				}
				else SendClientMessage(playerid, CG, "Дождитесь окончания отыгровки");
			}
		}
		case 9800: {
			if(!response) return 1;
			if(response) {
				new text[24];
				GetPVarString(playerid,"uninvitereason", text, sizeof(text));
				FixSVarString(text);
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				static name2[24];
				SetString(name2, NameRang(GetPVarInt(playerid, "uninviteid")));
				name2 = NameRang(GetPVarInt(playerid, "uninviteid"));
				new year, month, day;
				getdate(year, month, day);
				new str_q[370];
				mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`,`w_dal`,`w_reas`,`w_dalrank`) VALUES ('%d','%d','%s','Увольнение','%d','%d','%d','%d','%s','%s','%s')", PI[GetPVarInt(playerid, "uninviteid")][data_ID], PI[GetPVarInt(playerid, "uninviteid")][data_MEMBER], PI[GetPVarInt(playerid, "uninviteid")][data_NAME], PI[GetPVarInt(playerid, "uninviteid")][data_RANK], day, month, year, PI[playerid][data_RANK], text, name);
				mysql_function_query(dbHandle, str_q, false, "", "");
				new str[145];
				if(PI[playerid][data_MEMBER] == 2) {
					if(PI[GetPVarInt(playerid, "uninviteid")][data_RANK] >= 4) {
					    if(PI[GetPVarInt(playerid, "uninviteid")][data_MILITARY] == 0) {
						    SendClientMessage(GetPVarInt(playerid, "uninviteid"), -1, "Вы отслужили в армии и получили военный билет");
						    PI[GetPVarInt(playerid, "uninviteid")][data_MILITARY] = 1;
						}
					}
				}
				format(str,sizeof(str),"[R] %s %s уволил из организации %s %s. Причина: %s", name,PI[playerid][data_NAME],name2, PI[GetPVarInt(playerid, "uninviteid")][data_NAME],text);
				cef_emit_event(GetPVarInt(playerid, "uninviteid"), "hide_kill_list");
				cef_emit_event(GetPVarInt(playerid, "uninviteid"), "hide-capture");
				SendFractionMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, str);
				PI[GetPVarInt(playerid, "uninviteid")][data_MEMBER] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][data_RANK] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][TWARN] = 0;
				PI[GetPVarInt(playerid, "uninviteid")][data_LEADER] = 0;
				SetPlayerSkinAC(GetPVarInt(playerid, "uninviteid"),PI[GetPVarInt(playerid, "uninviteid")][data_SKIN]);
				SetPlayerColorEx(GetPVarInt(playerid, "uninviteid"));
				PI[GetPVarInt(playerid, "uninviteid")][data_MEDCARD] = 0;
				for(new g; g <= totalgz; g++) GangZoneHideForPlayer(GetPVarInt(playerid, "uninviteid"), g);
				GangZoneStopFlashForPlayer(GetPVarInt(playerid, "uninviteid"), WarZone);
				SetPlayerTeam(GetPVarInt(playerid, "uninviteid"), NO_TEAM);
				if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "uninviteid")) && GetPlayerState(GetPVarInt(playerid, "uninviteid")) == PLAYER_STATE_DRIVER) {
					new Float:x, Float:y, Float:z;
				 	GetPlayerPos(GetPVarInt(playerid, "uninviteid"),x,y,z);
				 	SetPlayerPosAC(GetPVarInt(playerid, "uninviteid"),x,y,z+2);
				}
				PI[GetPVarInt(playerid, "uninviteid")][data_TIMERANK] = 0;
				SavePlayerData(GetPVarInt(playerid, "uninviteid"));
				ClearGroup(GetPVarInt(playerid, "uninviteid"));
			}
		}
		case 9250: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
                    case 0: {
						new str_q[90];
                		mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "InvSkin", "d", playerid);
                    }
                    case 1: {
                    	new str_q[90];
                		mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "InvMoney", "d", playerid);
                    }
                    case 2: {
                    	new str_q[90];
                		mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "InvCar", "d", playerid);
                    }
                    case 3: {
                    	new str_q[90];
                		mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "InvRub", "d", playerid);
                    }
                    case 4: {
                    	new str_q[90];
                		mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `inventory` WHERE `name` = '%e'", PI[playerid][data_NAME]);
						mysql_function_query(dbHandle, str_q, true, "InvBoost", "d", playerid);
                    }
			    }
			}
		}
		case 7500: {
		    if(!response) return 1;
		    if(response) {
			    switch(listitem) {
      				case 0: {
					    if(PI[playerid][data_RANK] < 10) return SendClientMessage(playerid, CG, "Данная команда доступна лидерам организаций");
						if(!PI[playerid][data_LOGGED]) return 1;
						new str_q[110];
						mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][data_MEMBER]);
						mysql_function_query(dbHandle, str_q, true, "EditGroup", "d", playerid);
      				}
      				case 1: {
						if(PI[playerid][data_MEMBER] == 5) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
						if(PI[playerid][data_MEMBER] == 6) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
						if(PI[playerid][data_MEMBER] == 7) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
      					callcmd::transfers(playerid);
      				}
      				case 2: callcmd::allmembers(playerid);
      				case 3: ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "{f00e5d}Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
      				case 4: SendClientMessage(playerid, CY, "Разработка. Приятной игры на {f00e5d}Arcana РП");
      				case 5: ShowPlayerDialog(playerid, 7512, DIALOG_STYLE_INPUT, "{f00e5d}Принять в организацию", "Введите ID игрока:", "Принять", "Отмена");
      				case 6: ShowPlayerDialog(playerid, 7502, DIALOG_STYLE_INPUT, "{f00e5d}Уволить из организации", "Введите ID игрока и причину через запятую в поле ниже\nПример: 5,НВЗ", "Уволить", "Отмена");
      				case 7: ShowPlayerDialog(playerid, 7504, DIALOG_STYLE_INPUT, "{f00e5d}Уволить из организации оффлайн", "Введите имя игрока в поле ниже\n{d7d394}Например: Fedor_Badrov", "Уволить", "Отмена");
      				case 8: ShowPlayerDialog(playerid, 7505, DIALOG_STYLE_INPUT, "{f00e5d}Выдать выговор", "Введите ID игрока и причину через запятую в поле ниже\n{d7d394}Например: 32, Н.В.З.", "Выдать", "Отмена");
      				case 9: ShowPlayerDialog(playerid, 7506, DIALOG_STYLE_INPUT, "{f00e5d}Выдать выговор в оффлайн", "Введите имя игрока в поле ниже\n{d7d394}Например: Fedor_Badrov", "Выдать", "Отмена");
      				case 10: ShowPlayerDialog(playerid, 7507, DIALOG_STYLE_INPUT, "{f00e5d}Снять выговор", "Введите ID игрока и причину через запятую в поле ниже\nПример: 5,Ошибка", "Снять", "Отмена");
      				case 11: ShowPlayerDialog(playerid, 7508, DIALOG_STYLE_INPUT, "{f00e5d}Снять выговор в оффлайн", "Введите имя игрока в поле ниже\nПример: Ivan_Bober", "Снять", "Отмена");
      				case 12: ShowPlayerDialog(playerid, 7509, DIALOG_STYLE_INPUT, "{f00e5d}Изменить ранг", "Введите ID игрока и '+' или '-' (без кавычек) через запятую\nПример: 78, +", "Изменить", "Отмена");
      				case 13: ShowPlayerDialog(playerid, 7510, DIALOG_STYLE_INPUT, "{f00e5d}Изменить внешность", "Введите ID игрока:", "Изменить", "Отмена");
      				case 14: ShowPlayerDialog(playerid, 7511, DIALOG_STYLE_INPUT, "{f00e5d}Изменить группу", "Введите ID игрока:", "Изменить", "Отмена");
			  		case 15: ShowPlayerDialog(playerid, 7503, DIALOG_STYLE_MSGBOX, "{f00e5d}Расформировать организацию", "Вы подтверждаете расормирование организации?\nДействие нельзя будет отменить.", "Продолжить", "Отмена");

			    }
			}
		}
		case 7565:
		{
		    if(!response) return 1;
			if(response) {
				if(PI[playerid][data_AWARN] != 0) {
					if(PI[playerid][data_MPA] > 5) {
						if(PI[playerid][data_REPA] > 45) {
							PI[playerid][data_AWARN]--;
							UpdatePlayerDataInt(playerid, "admvig", PI[playerid][data_AWARN],14401);
							PI[playerid][data_REPA] = 0;
							UpdatePlayerDataInt(playerid, "rep_adm", PI[playerid][data_REPA],14403);
							PI[playerid][data_MPA] = 0;
							UpdatePlayerDataInt(playerid, "mp_adm", PI[playerid][data_MPA],14405);
							SendClientMessagef(playerid, CY, "Вы успешно отрыботали 1 выговор. Состояние выговоров на данный момент - {f00e5d}%d / 3", PI[playerid][data_AWARN]);
						}
					}
				}
				return 1;
			}
		}
		case 7566:
		{
		    if(!response) return 1;
			if(response) {
				if(PI[playerid][data_MPA] > 2*PI[playerid][data_ADMLVL]) {
					if(PI[playerid][data_REPA] > 25*PI[playerid][data_ADMLVL]) {
						SendClientMessagef(playerid, CY, "Вы успешно повысили свой уровень игрового мастера. {f00e5d}Задания обновлены!", PI[playerid][data_AWARN]);
						PI[playerid][data_ADMLVL]++;
						UpdatePlayerDataInt(playerid, "admlvl", PI[playerid][data_ADMLVL],14421);
						PI[playerid][data_REPA] = 0;
						UpdatePlayerDataInt(playerid, "rep_adm", PI[playerid][data_REPA],14423);
						PI[playerid][data_MPA] = 0;
						UpdatePlayerDataInt(playerid, "mp_adm", PI[playerid][data_MPA],14425);
					}
				}
				return 1;
			}
		}
		case 7567:
		{
		    if(!response) return 1;
			if(response) {
				if(PI[playerid][data_DONATE] < 300*XDON) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f05010}Ошибка", "Не удалось купить доступ.", "Закрыть", "");
				SendClientMessagef(playerid, CY, "Вы купили доступ. {f00e5d}Ожидайте!", PI[playerid][data_AWARN]);
				new vk_to[250];
				format(vk_to, sizeof(vk_to), "Игрок %s купил доступ к ВК-боту за %d руб (Сервер №1).",300*XDON);
				SendVKServer(playerid, vk_to, 1, 511754228);
				PI[playerid][data_DONATE] -= 300*XDON;
				UpdatePlayerDataInt(playerid, "donate", PI[playerid][data_DONATE],14441);
			}
		}
		case 7512:
		{
		    if(!response) return 1;
			if(response) {
				if(strval(inputtext) == playerid) return SendClientMessage(playerid,CG,"Нельзя использовать на самом себе");
				SetPVarInt(playerid, "Invite", strval(inputtext));
				new str_q[180];
			    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e' AND bl_fraction = '%d'", PI[strval(inputtext)][data_NAME], PI[playerid][data_MEMBER]);
				mysql_function_query(dbHandle, str_q, true, "CheckBlackList", "d", playerid);
			}
		}
		case 7511: {
		    if(!response) return 1;
			if(response) callcmd::setgroup(playerid,inputtext);
		}
		case 7510: {
		    if(!response) return 1;
			if(response) callcmd::setskin(playerid,inputtext);
		}
		case 7509: {
		    if(!response) return 1;
			if(response) {
				new id, reason[25] ;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::setrang(playerid,str);
			}
		}
		case 7508: {
		    if(!response) return 1;
			if(response) callcmd::unofftwarn(playerid,inputtext);
		}
		case 7507:
		{
		    if(!response) return 1;
			if(response)
			{
				new id, reason[25] ;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::untwarn(playerid,str);
				return 1;
			}
		}
		case 7506:
		{
		    if(!response) return 1;
			if(response) callcmd::offtwarn(playerid,inputtext);
		}
		case 7504:
		{
		    if(!response) return 1;
			if(response) callcmd::offuninvite(playerid,inputtext);
		}
		case 7502:
		{
		    if(!response) return 1;
			if(response)
			{
				new
					id,
					reason[25]
				;
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) {
					return callcmd::lmenu(playerid);
				}
				new str[144];
				format(str, sizeof(str),
					"%d %s",
					id,
					reason
				);
				callcmd::uninvite(playerid,str);
				return 1;
			}
		}
		case 7505: {
		    if(!response) return 1;
			if(response) {
				new id, reason[25];
				if(sscanf(inputtext, "p<,>ds[26]", id, reason)) return callcmd::lmenu(playerid);
				new str[144];
				format(str, sizeof(str), "%d %s", id, reason);
				callcmd::twarn(playerid,str);
				return 1;
			}
		}
		case 7503: {
		    if(!response) return 1;
			if(response) if(PI[playerid][data_ADMLVL] < 4) return 1;
		}
		case 7214:
		{
		    if(!response) return 1;
			if(response)
			{
				static name[24];
				SetString(name, NameRang(playerid));
				name = NameRang(playerid);
				new str[145];
				format(str,sizeof(str),"[R] %s %s покинул организацию по собственному желанию",name,PI[playerid][data_NAME]);
				SendFractionMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, str);
				new str1[145];
				format(str1,sizeof(str1),"Вы покинули организацию '%s' по собственному желанию", Fraction_Name[PI[playerid][data_MEMBER]]);
				SendClientMessage(playerid, COLOR_TOMATO, str1);
				cef_emit_event(playerid, "hide-capture");
				for(new g; g <= totalgz; g++) GangZoneHideForPlayer(playerid, g);
				GangZoneStopFlashForPlayer(playerid, WarZone);
				ClearGroup(playerid);
				new year, month, day ;
				getdate(year, month, day);
				new str_q[256];
				mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','Собственное желание','%d','%d','%d','%d')", PI[playerid][data_ID], PI[playerid][data_MEMBER], PI[playerid][data_NAME], PI[playerid][data_RANK], day, month, year);
				PI[playerid][data_MEMBER] = 0;
				PI[playerid][data_RANK] = 0;
				PI[playerid][data_LEADER] = 0;
				SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
				SetPlayerColorEx(playerid);
				if(PI[playerid][data_MEMBER] == 2 && PI[playerid][data_RANK] <= 3 && PI[playerid][data_MILITARY] == 0) {
					SendClientMessage(playerid, -1, "Вы отслужили в армии и получили военный билет");
					PI[playerid][data_MILITARY] = 1;
				}
				if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid,x,y,z);
					SetPlayerPosAC(playerid,x,y,z+2);
				}
				mysql_function_query(dbHandle, str_q, false, "", "");
    			SavePlayerData(playerid);
			}
		}
		case 7216: {
		    if(!response) return 1;
			if(response) {
			    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
			    antiflood[playerid]++;
			    if(PI[playerid][data_LOGGED] == false) return 1;
			    if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, COLOR_BLACK, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
				for(new k = 0; k < TotalKV; k++) {
			        new kv;
			        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SendClientMessage(playerid,CG,"У Вас уже есть недвижимость");
			            if(KV_DATA[kv][data_OWNED][k] == 1) return SendClientMessage(playerid,CG,"У данной квартиры уже есть владелец");
						if(get_player_money(playerid) < KV_DATA[kv][data_PRICE][k]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						PI[playerid][data_PADIK] = kv;
						PI[playerid][data_KV] = k;
			            KV_DATA[kv][data_OWNED][k] = 1;
			            KV_DATA[kv][data_DAY][k] = 3;
			            switch(k)
						{
							case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
						}
			            give_player_money(playerid,-KV_DATA[kv][data_PRICE][k],"#72",14614);
			            SendClientMessage(playerid,0xFFCC33FF, "Поздравляем Вас с покупкой квартиры! Она была оплачена на 3 дня");
			            SendClientMessage(playerid,0xFFCC33FF, "Для управления квартирой используйте: /home");
			            SendClientMessage(playerid, 0x9F81F7FF, "Используйте: /setspawn, чтобы изменить место появления");
			            new logtext[64];
						format(logtext,sizeof(logtext),"купил квартиру №%d, подъезд ID:%d", k+1, KV_DATA[kv][data_ID]);
						AddLog("log_player",PI[playerid][data_NAME], logtext);
			            UpdateKVData(kv,k);
			            SaveKVData(kv);
			           	SavePlayerData(playerid);
			           	return 1;
			        }
			    }
			    return 1;
			}
		}
		case 7217: {
		    if(!response) return 1;
			if(response) {
			    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
			    antiflood[playerid]++;
			    if(PI[playerid][data_LOGGED] == false) return 1;
			    if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, COLOR_BLACK, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
				for(new k = 0; k < TotalKV; k++) {
			        new kv;
			        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k])) {
			            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SendClientMessage(playerid,CG,"У Вас уже есть недвижимость");
			            if(KV_DATA[kv][data_OWNED][k] == 1) return SendClientMessage(playerid,CG,"У данной квартиры уже есть владелец");
						if(get_player_money(playerid) < KV_DATA[kv][data_PRICE][k]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
						PI[playerid][data_PADIK] = kv;
						PI[playerid][data_KV] = k;
			            KV_DATA[kv][data_OWNED][k] = 1;
			            KV_DATA[kv][data_DAY][k] = 3;
			            switch(k) {
							case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
							case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
						}
			            give_player_money(playerid,-KV_DATA[kv][data_PRICE][k],"#72",14655);
			            SendClientMessage(playerid,0xFFCC33FF, "Поздравляем Вас с покупкой квартиры! Она была оплачена на 3 дня");
			            SendClientMessage(playerid,0xFFCC33FF, "Для управления квартирой используйте: /home");
			            SendClientMessage(playerid, 0x9F81F7FF, "Используйте: /setspawn, чтобы изменить место появления");
			            new logtext[64];
						format(logtext,sizeof(logtext),"купил квартиру №%d, подъезд ID:%d", k+1, KV_DATA[kv][data_ID]);
						AddLog("log_player",PI[playerid][data_NAME], logtext);
			            UpdateKVData(kv,k);
			            SaveKVData(kv);
			           	SavePlayerData(playerid);
			           	return 1;
			        }
			    }
			    return 1;
			}
		}
    	case dialog_OK: {
		    if(!response) return 1;
		    if(response) return 1;
		}
		case dialog_ABACK: {
		    if(!response) return 1;
		    if(response) callcmd::ahelp(playerid);
		}
		case dialog_DISCONNECT: {
		    if(!response) return Kick(playerid);
		    if(response) return Kick(playerid);
		}
		case dialog_SETSPAWN: {
		    if(!response) return 1;
		    if(response) {
		        switch(listitem) {
		            case 0: {
					    if(PI[playerid][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Вы не состоите во организации");
                        PI[playerid][data_SPAWN] = 1;
					    SendClientMessage(playerid, CY, "Место спавна изменено");
					}
		            case 1: {
					    PI[playerid][data_SPAWN] = 0;
					    SendClientMessage(playerid, CY, "Место спавна изменено");
					}
		            case 2: {
					    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
                        PI[playerid][data_SPAWN] = 2;
					    SendClientMessage(playerid, CY, "Место спавна изменено");
					}
		        }
		    }
		}
	}
	return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source) return 1;
public OnPlayerSpawn(playerid) {
	cef_create_browser(playerid, CEF_INTERFACE_BROWSER_ID, "http://f0838161.xsph.ru/arcanacef/index.htm", false, false);
	if(GetPVarInt(playerid, "JoinGame") == 1) {
		SetPlayerToSpawn(playerid), print("spawngood");
	}
	else {
		SetPlayerSkinAC(playerid,60);
		TogglePlayerControllable(playerid, false);
		SetPlayerVirtualWorld(playerid, playerid+10);
		SetPlayerPos(playerid, 1835.58, 2073.23, 16.06+5);
		InterpolateCameraLookAt(playerid, 1835.58, 2073.23, 16.06+5, 1839.09, 2092.53, 16.08+5, 150000, CAMERA_MOVE);
	}
	if(bombacitve == 1) return RemoveBuildingForPlayer(playerid, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	if(gangwar > 0) {
		if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
			static name_org[15], nameorg[15];
			switch(Command[0]) {
				case 5: name_org = "Скинхеды";
				case 6: name_org = "Гопота";
				case 7: name_org = "Кавказцы";
			}
			switch(Command[1]) {
				case 5: nameorg = "Скинхеды";
				case 6: nameorg = "Гопота";
				case 7: nameorg = "Кавказцы";
			}
			cef_emit_event(playerid, "show-capture");
			cef_emit_event(playerid, "capture-text", CEFSTR("подготовка"));
			cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
			cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
			cef_emit_event(playerid, "show_kill_list");
		}
	}
 	PI[playerid][data_START_JOB] = 0;
    SetPVarInt(playerid,"tovar",0);
    SetPVarInt(playerid,"tovar_all",0);
    SetPVarInt(playerid,"job_bus",0);
    SetPVarInt(playerid,"job_db",0);
    DisablePlayerCheckpoint(playerid);
    DisablePlayerRaceCheckpoint(playerid);
    PI[playerid][data_PUTPATR] = 0;
    PI[playerid][data_PUTMET] = 0;
    shield[playerid] = false;
    if(PI[playerid][data_RENTJOB] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][data_RENTJOB]);
	if(PI[playerid][data_TRAILER] != INVALID_VEHICLE_ID) SetVehicleToRespawn(PI[playerid][data_TRAILER]);
    if(PI[playerid][data_CLOTHESMENU] == true)
	{
		TextDrawHideForPlayer(playerid, buy_clothes[0]);
		TextDrawHideForPlayer(playerid, buy_clothes[1]);
		TextDrawHideForPlayer(playerid, buy_clothes[2]);
		TextDrawHideForPlayer(playerid, buy_clothes[3]);
		TextDrawHideForPlayer(playerid, buy_clothes[4]);
		TextDrawHideForPlayer(playerid, buy_clothes[5]);
		PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
 		CancelSelectTextDraw(playerid);
 		PI[playerid][data_CLICKTD] = false;
		PI[playerid][data_CLOTHESMENU] = false;
	}
    if(PI[playerid][data_OPENAUTOSALON] == true)
	{
 		DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
  		PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
		HideAutoSalonMenu(playerid);
	}
	if(PI[playerid][data_OPENCASINO] == true)
	{
 		HideCasinoGame(playerid);
   		casino_stavka[playerid] = 0;
		casino_update[playerid] = 0;
		KillTimer(casino_timer[playerid]);
	}
    for(new i = 0; i < 13; i++)
	{
	    if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
	}


	if(GetPVarInt(playerid,"spawn_ac") == 0)
    {
    	SetPlayerVirtualWorld(playerid, playerid);
    	SetPlayerPos(playerid, -301.2037,-1543.4034,40.9895+5);
		InterpolateCameraPos(playerid, -301.2037,-1543.4034,40.9895+5, -304.3659,-1465.0601,40.8705+5, 150000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -415.5105,-1489.9453,41.0009, -415.5105,-1489.9453,41.0009, 150000, CAMERA_MOVE);

	    new name[MAX_PLAYER_NAME+1];
	    GetPlayerName(playerid, name, sizeof(name));
	    if (!IsRPNick(name))
	    {
			new dtext[500];
			format(dtext,sizeof(dtext),"{FFFFFF}Возникла критическая ошибка при входе, причины по которым может возникнуть эта ошибка:\n\n\
			1. NonRP NickName (некорректно составленный)\n\
			2. Внутриигровая ошибка (Некорректная версия клиента/Войс чата)\n\
			3. Ошибка в динамической памяти игры\n\
			4. Блокировка игрового аккаунта (ban motherboard)\n\n\
			Если ошибка возникает не в первый раз, проверьте, нет ли у Вас проблем выше\n\
			Если своей проблемы Вы не нашли обратитесь в нашу Тех. Поддержку.");
		 	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{FF8000}Критическая ошибка", dtext, "Закрыть", "");
	        Kick(playerid);
	        return true;
	    }

        new query[100+MAX_PLAYER_NAME];
		mysql_format(dbHandle,query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%e'", PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, query, true, "CheckAccount", "d", playerid);
		SelectTextDraw(playerid,0xddddddff);
  		//SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Меню помощи - /help, стандартное управление голосовым чатом: X (англ) - говорить");

  		TogglePlayerControllable(playerid, true);
		return true;
    }
 	SetPVarInt(playerid,"spawn_ac",0);
 	SetPlayerToSpawn(playerid);
	return true;
}
callback: KamenLoaded(playerid) {
    if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
    SetPlayerAttachedObject(playerid,2, 905, 5, 0.020944, 0.039285, -0.035010, 0.000000, 0.000000, 0.000000, 0.301603, 0.125763, 0.233199 );
    SetPlayerAttachedObject(playerid,3, 906, 6, -0.032336, 0.111448, 0.001745, 0.000000, 0.000000, 0.000000, 0.026124, 0.048238, 0.048593);
	ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
    PI[playerid][data_SHAHTA_TIMER_ID] = SetTimerEx("KamenLoaded2",5150,false,"i",playerid);
	return 1;
}
callback: KamenLoaded2(playerid) {
    SetPVarInt(playerid,"ac_timer",1);
    SendClientMessage(playerid,0xffcd00FF,"Вы добыли руду. Отнесите ее на склад ({3377cc}на радаре отмечена красная метка{ffcd00})");
    if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
    if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
    SetPlayerAttachedObject(playerid,2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
	SetPlayerAttachedObject(playerid,3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
    DeletePVar(playerid, "process");
	switch(random(6)) {
        case 0: SetPVarInt(playerid, "tovar", 25);
        case 1: SetPVarInt(playerid, "tovar", 30);
        case 2: SetPVarInt(playerid, "tovar", 35);
        case 3: SetPVarInt(playerid, "tovar", 40);
        case 4: SetPVarInt(playerid, "tovar", 45);
        case 5: SetPVarInt(playerid, "tovar", 50);
    }
	SetPlayerCheckpoint(playerid, -2665.7866,263.4012,10.9310, 2.0);
	return 1;
}
alias:donate("donat", "adon", "don");
cmd:donate(playerid) {
	SendClientMessagef(playerid, COLOR_TOMATO, "На данный момент включена система X%d пополнения",XDON);
	SendClientMessagef(playerid, COLOR_TOMATO, "Тоесть донатите 100 рублей, получаете 300 рублей, и так со всеми суммами",XDON);
	new str_q[144];
    mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'",PI[playerid][data_NAME]);
    mysql_function_query(dbHandle, str_q, true, "LoadDonate", "i", playerid);
}
callback: LoadDonate(playerid) {
    new rows, fields, temp[20];
    cache_get_data(rows, fields);
    if(rows) {
        cache_get_field_content(0, "donate", temp), PI[playerid][data_DONATE] = strval (temp);
        cache_get_field_content(0, "donate_p", temp), PI[playerid][data_DONATE_P] = strval (temp);
        cache_get_field_content(0, "donate_all", temp), PI[playerid][data_DONATE_ALL] = strval (temp);
		ShowPlayerDialog(playerid, dialog_DONATE, DIALOG_STYLE_LIST, "{f00e5d}Дополнительные услуги", "\
		{f00e5d}Информация\n\
		{f00e5d}Последние 10 операций\n\
		Конвертирование донат-поинтов в рубли \t{3377CC}(от 1 дп.)\n\
		Покупка всех навыков стрельбы \t\t{3377CC}(100 дп)\n\
		Снятие предупреждений \t\t\t{3377CC}(60 дп)\n\
		Изменение имени \t\t\t\t{3377CC}(100 дп)\n\
		Подписка {EE3366}Arcana плюс\t\t\t{3377CC}(200 дп/мес.)\n\
		Покупка военного билета\t\t\t{3377CC}(129 дп)\n\
		Покупка законопослушности (+10)\t\t{3377CC}(19 дп)\n\
		Покупка 4-x значного номера телефона\t{3377CC}(150 дп)", "Далее", "Закрыть");
    }
    return 1;
}
callback: LoadBusiness() {
    new rows, fields, temp[256],time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) {
    	for(new b = 0; b < rows; b++) {
	        cache_get_field_content(b, "id", temp), BUSINESS_DATA[b][data_ID] = strval (temp);
	        cache_get_field_content(b, "owner", BUSINESS_DATA[b][data_OWNER], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(b, "name", BUSINESS_DATA[b][data_NAME], dbHandle, 50);
	        cache_get_field_content(b, "owned", temp), BUSINESS_DATA[b][data_OWNED] = strval (temp);
	        cache_get_field_content(b, "price", temp), BUSINESS_DATA[b][data_PRICE] = strval (temp);
	        cache_get_field_content(b, "bank", temp), BUSINESS_DATA[b][data_BANK] = strval (temp);
	        cache_get_field_content(b, "prod", temp), BUSINESS_DATA[b][data_PROD] = strval (temp);
			cache_get_field_content(b, "clients", temp), BUSINESS_DATA[b][data_CLIENT] = strval (temp);
	        cache_get_field_content(b, "day", temp), BUSINESS_DATA[b][data_DAY] = strval (temp);
	        cache_get_field_content(b, "type", temp), BUSINESS_DATA[b][data_TYPE] = strval (temp);
	        cache_get_field_content(b, "cena", temp), BUSINESS_DATA[b][data_CENA] = strval (temp);
	        cache_get_field_content(b, "mafia", temp), BUSINESS_DATA[b][data_MAFIA] = strval (temp);
	        cache_get_field_content(b, "price_prod", temp), BUSINESS_DATA[b][data_PRICEPROD] = strval (temp);
	        cache_get_field_content(b, "int", temp), BUSINESS_DATA[b][data_INT] = strval (temp);
	        cache_get_field_content(b, "vw", temp), BUSINESS_DATA[b][data_VW] = strval (temp);
	        cache_get_field_content(b, "lock", temp), BUSINESS_DATA[b][data_LOCK] = strval (temp);
	        cache_get_field_content(b, "mapicon", temp), BUSINESS_DATA[b][data_MAPICON] = strval (temp);
	        cache_get_field_content(b, "enter_x", temp), BUSINESS_DATA[b][data_ENTERX] = floatstr (temp);
	        cache_get_field_content(b, "enter_y", temp), BUSINESS_DATA[b][data_ENTERY] = floatstr (temp);
	        cache_get_field_content(b, "enter_z", temp), BUSINESS_DATA[b][data_ENTERZ] = floatstr (temp);
	        cache_get_field_content(b, "exit_x", temp), BUSINESS_DATA[b][data_EXITX] = floatstr (temp);
	        cache_get_field_content(b, "exit_y", temp), BUSINESS_DATA[b][data_EXITY] = floatstr (temp);
	        cache_get_field_content(b, "exit_z", temp), BUSINESS_DATA[b][data_EXITZ] = floatstr (temp);
	        cache_get_field_content(b, "buy_x", temp), BUSINESS_DATA[b][data_BUYX] = floatstr (temp);
	        cache_get_field_content(b, "buy_y", temp), BUSINESS_DATA[b][data_BUYY] = floatstr (temp);
	        cache_get_field_content(b, "buy_z", temp), BUSINESS_DATA[b][data_BUYZ] = floatstr (temp);
	        cache_get_field_content(b, "exittp_x", temp), BUSINESS_DATA[b][data_TPEXITX] = floatstr (temp);
	        cache_get_field_content(b, "exittp_y", temp), BUSINESS_DATA[b][data_TPEXITY] = floatstr (temp);
	        cache_get_field_content(b, "exittp_z", temp), BUSINESS_DATA[b][data_TPEXITZ] = floatstr (temp);
	        cache_get_field_content(b, "exittp_angle", temp), BUSINESS_DATA[b][data_ANGLE] = floatstr (temp);
	        BUSINESS_DATA[b][data_DOLG] = 0;
         	TotalBusiness++;
			switch(BUSINESS_DATA[b][data_TYPE]) {
			    case 1:BUSINESS_DATA[b][data_PRICEPROD] = 4, BUSINESS_DATA[b][data_CENA] = 10;
				case 2:BUSINESS_DATA[b][data_PRICEPROD] = 6;
			    case 3:BUSINESS_DATA[b][data_PRICEPROD] = 3;
			    case 4:BUSINESS_DATA[b][data_PRICEPROD] = 7;
			    case 5:BUSINESS_DATA[b][data_PRICEPROD] = 3;
			}
			new str_1[256];
         	if(BUSINESS_DATA[b][data_TYPE] == 1) {
	     	    if(BUSINESS_DATA[b][data_OWNED] == 1) {
		 	        format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {FFD700}%s\n{FFFFFF}Владелец: {FFD700}%s",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_OWNER]);
		 	        BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1, BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],30.0);
                    BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
				}
				else {
					format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {bf485d}%s\n{FFFFFF}Стоимость бизнеса: {bf485d}%i рублей\n{FFFFFF}Используйте: {ffeab8}/buybusiness",BUSINESS_DATA[b][data_NAME], BUSINESS_DATA[b][data_PRICE]);
					BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1, BUSINESS_DATA[b][data_BUYX],BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],30.0);
       				BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
				}
			}
  			else {
         	    if(BUSINESS_DATA[b][data_OWNED] == 1) {
					format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {FFD700}%s\n{FFFFFF}Владелец: {FFD700}%s",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_OWNER]);
	     	        BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1,BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],15.0);
	     	        BUSINESS_DATA[b][data_PICKENTER] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],-1);
	     	        BUSINESS_DATA[b][data_PICKEXIT] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_EXITX], BUSINESS_DATA[b][data_EXITY], BUSINESS_DATA[b][data_EXITZ],BUSINESS_DATA[b][data_VW]);
					if(BUSINESS_DATA[b][data_MAPICON] != -1) BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
					else {}
                    if(BUSINESS_DATA[b][data_TYPE] == 2) {
						BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(10270,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
						Create3DTextLabel("{FFFFFF}Магазин 24/7\n{ff9933}Нажмите B", -1, BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], 3.0, BUSINESS_DATA[b][data_VW], 0);
					}
                    else if(BUSINESS_DATA[b][data_TYPE] == 3) {
						BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(1275,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
						Create3DTextLabel("{FFFFFF}Магазин одежды\n{ff9933}Нажмите B", -1, BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], 3.0, BUSINESS_DATA[b][data_VW], 0);
					}
					else BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(1239,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
				}
				else {
				    format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {bf485d}%s\n{FFFFFF}Стоимость бизнеса: {bf485d}%i рублей\n{FFFFFF}Используйте: {ffeab8}/buybusiness",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_PRICE]);
				    BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1,BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],15.0);
				    BUSINESS_DATA[b][data_PICKENTER] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],-1);
				    BUSINESS_DATA[b][data_PICKEXIT] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_EXITX], BUSINESS_DATA[b][data_EXITY], BUSINESS_DATA[b][data_EXITZ],BUSINESS_DATA[b][data_VW]);
                    if(BUSINESS_DATA[b][data_MAPICON] != -1) BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
					else {}
                    if(BUSINESS_DATA[b][data_TYPE] == 2) {
						BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(10270,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
						Create3DTextLabel("{FFFFFF}Магазин 24/7\n{ff9933}Нажмите B", -1, BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], 3.0, BUSINESS_DATA[b][data_VW], 0);
					}
                    else if(BUSINESS_DATA[b][data_TYPE] == 3) {
						BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(1275,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
						Create3DTextLabel("{FFFFFF}Магазин одежды\n{ff9933}Нажмите B", -1, BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], 3.0, BUSINESS_DATA[b][data_VW], 0);
					}
					else BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(1239,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
				}
         	}
        }
        printf("[INFO]  Load business. Load: %d b. Time: %d ms.",TotalBusiness,GetTickCount()-time);
  	}
    return 1;
}
callback: LoadHouses() {
    new rows, fields, temp[256], time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) {
    	for(new h = 0; h < rows; h++) {
	        cache_get_field_content(h, "id", temp), HOUSE_DATA[h][data_ID] = strval (temp);
	        cache_get_field_content(h, "owner", HOUSE_DATA[h][data_OWNER], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(h, "enterx", temp), HOUSE_DATA[h][data_ENTERX] = floatstr (temp);
	        cache_get_field_content(h, "entery", temp), HOUSE_DATA[h][data_ENTERY] = floatstr (temp);
	        cache_get_field_content(h, "enterz", temp), HOUSE_DATA[h][data_ENTERZ] = floatstr (temp);
	        cache_get_field_content(h, "exitx", temp), HOUSE_DATA[h][data_EXITX] = floatstr (temp);
	        cache_get_field_content(h, "exity", temp), HOUSE_DATA[h][data_EXITY] = floatstr (temp);
	        cache_get_field_content(h, "exitz", temp), HOUSE_DATA[h][data_EXITZ] = floatstr (temp);
	        cache_get_field_content(h, "carx", temp), HOUSE_DATA[h][data_CARX] = floatstr (temp);
	        cache_get_field_content(h, "cary", temp), HOUSE_DATA[h][data_CARY] = floatstr (temp);
	        cache_get_field_content(h, "carz", temp), HOUSE_DATA[h][data_CARZ] = floatstr (temp);
	        cache_get_field_content(h, "cara", temp), HOUSE_DATA[h][data_CARANGLE] = floatstr (temp);
	        cache_get_field_content(h, "class", temp), HOUSE_DATA[h][data_CLASS] = strval (temp);
	        cache_get_field_content(h, "owned", temp), HOUSE_DATA[h][data_OWNED] = strval (temp);
	        cache_get_field_content(h, "price", temp), HOUSE_DATA[h][data_PRICE] = strval (temp);
	        cache_get_field_content(h, "day", temp), HOUSE_DATA[h][data_DAY] = strval (temp);
	        cache_get_field_content(h, "lock", temp), HOUSE_DATA[h][data_LOCK] = strval (temp);
         	TotalHouses++;
         	if(HOUSE_DATA[h][data_OWNED] == 0) {
         	    HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
				HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 100.0);
         	}
         	else {
    	     	HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1272, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],0);
                HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 100.0);
        	}
        }
        printf("[INFO]  Load houses. Load: %d h. Time: %d ms.",TotalHouses, GetTickCount()-time);
	}
    return 1;
}
callback: LoadKV() {
    new rows, fields, temp[256],time = GetTickCount(),str[256],str1[64];
    cache_get_data(rows, fields);
    if(rows) {
    	for(new kv = 0; kv < rows; kv++) {
	        cache_get_field_content(kv, "id", temp), KV_DATA[kv][data_ID] = strval (temp);
         	cache_get_field_content(kv, "owner1", KV_DATA[kv][data_OWNER_1], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner2", KV_DATA[kv][data_OWNER_2], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner3", KV_DATA[kv][data_OWNER_3], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner4", KV_DATA[kv][data_OWNER_4], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner5", KV_DATA[kv][data_OWNER_5], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(kv, "owner6", KV_DATA[kv][data_OWNER_6], dbHandle, MAX_PLAYER_NAME);
            cache_get_field_content(kv, "owned1", temp), KV_DATA[kv][data_OWNED][0] = strval (temp);
	        cache_get_field_content(kv, "owned2", temp), KV_DATA[kv][data_OWNED][1] = strval (temp);
	        cache_get_field_content(kv, "owned3", temp), KV_DATA[kv][data_OWNED][2] = strval (temp);
	        cache_get_field_content(kv, "owned4", temp), KV_DATA[kv][data_OWNED][3] = strval (temp);
	        cache_get_field_content(kv, "owned5", temp), KV_DATA[kv][data_OWNED][4] = strval (temp);
	        cache_get_field_content(kv, "owned6", temp), KV_DATA[kv][data_OWNED][5] = strval (temp);
	        cache_get_field_content(kv, "price1", temp), KV_DATA[kv][data_PRICE][0] = strval (temp);
	        cache_get_field_content(kv, "price2", temp), KV_DATA[kv][data_PRICE][1] = strval (temp);
	        cache_get_field_content(kv, "price3", temp), KV_DATA[kv][data_PRICE][2] = strval (temp);
	        cache_get_field_content(kv, "price4", temp), KV_DATA[kv][data_PRICE][3] = strval (temp);
	        cache_get_field_content(kv, "price5", temp), KV_DATA[kv][data_PRICE][4] = strval (temp);
	        cache_get_field_content(kv, "price6", temp), KV_DATA[kv][data_PRICE][5] = strval (temp);
	        cache_get_field_content(kv, "lock1", temp), KV_DATA[kv][data_LOCK][0] = strval (temp);
	        cache_get_field_content(kv, "lock2", temp), KV_DATA[kv][data_LOCK][1] = strval (temp);
	        cache_get_field_content(kv, "lock3", temp), KV_DATA[kv][data_LOCK][2] = strval (temp);
	        cache_get_field_content(kv, "lock4", temp), KV_DATA[kv][data_LOCK][3] = strval (temp);
	        cache_get_field_content(kv, "lock5", temp), KV_DATA[kv][data_LOCK][4] = strval (temp);
	        cache_get_field_content(kv, "lock6", temp), KV_DATA[kv][data_LOCK][5] = strval (temp);
	        cache_get_field_content(kv, "day1", temp), KV_DATA[kv][data_DAY][0] = strval (temp);
	        cache_get_field_content(kv, "day2", temp), KV_DATA[kv][data_DAY][1] = strval (temp);
	        cache_get_field_content(kv, "day3", temp), KV_DATA[kv][data_DAY][2] = strval (temp);
	        cache_get_field_content(kv, "day4", temp), KV_DATA[kv][data_DAY][3] = strval (temp);
	        cache_get_field_content(kv, "day5", temp), KV_DATA[kv][data_DAY][4] = strval (temp);
	        cache_get_field_content(kv, "day6", temp), KV_DATA[kv][data_DAY][5] = strval (temp);
	        cache_get_field_content(kv, "class1", temp), KV_DATA[kv][data_CLASS][0] = strval (temp);
	        cache_get_field_content(kv, "class2", temp), KV_DATA[kv][data_CLASS][1] = strval (temp);
	        cache_get_field_content(kv, "class3", temp), KV_DATA[kv][data_CLASS][2] = strval (temp);
	        cache_get_field_content(kv, "class4", temp), KV_DATA[kv][data_CLASS][3] = strval (temp);
	        cache_get_field_content(kv, "class5", temp), KV_DATA[kv][data_CLASS][4] = strval (temp);
	        cache_get_field_content(kv, "class6", temp), KV_DATA[kv][data_CLASS][5] = strval (temp);
	        cache_get_field_content(kv, "enter_x", temp), KV_DATA[kv][data_ENTER_X] = floatstr (temp);
	        cache_get_field_content(kv, "enter_y", temp), KV_DATA[kv][data_ENTER_Y] = floatstr (temp);
	        cache_get_field_content(kv, "enter_z", temp), KV_DATA[kv][data_ENTER_Z] = floatstr (temp);
	        cache_get_field_content(kv, "exit_x", temp), KV_DATA[kv][data_EXIT_X] = floatstr (temp);
	        cache_get_field_content(kv, "exit_y", temp), KV_DATA[kv][data_EXIT_Y] = floatstr (temp);
	        cache_get_field_content(kv, "exit_z", temp), KV_DATA[kv][data_EXIT_Z] = floatstr (temp);
			// Вход в инт
            KV_DATA[kv][data_ENTER_POSX][0] = 32.7846;
            KV_DATA[kv][data_ENTER_POSY][0] = 1906.9014;
            KV_DATA[kv][data_ENTER_POSZ][0] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][1] = 37.1719;
            KV_DATA[kv][data_ENTER_POSY][1] = 1906.7296;
            KV_DATA[kv][data_ENTER_POSZ][1] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][2] = 44.9090;
            KV_DATA[kv][data_ENTER_POSY][2] = 1908.8892;
            KV_DATA[kv][data_ENTER_POSZ][2] = 1116.1168;
            KV_DATA[kv][data_ENTER_POSX][3] = 37.5377;
            KV_DATA[kv][data_ENTER_POSY][3] = 1927.5522;
            KV_DATA[kv][data_ENTER_POSZ][3] = 1120.9175;
            KV_DATA[kv][data_ENTER_POSX][4] = 31.3240;
            KV_DATA[kv][data_ENTER_POSY][4] = 1924.9763;
            KV_DATA[kv][data_ENTER_POSZ][4] = 1120.9175;
            KV_DATA[kv][data_ENTER_POSX][5] = 33.4195;
            KV_DATA[kv][data_ENTER_POSY][5] = 1927.6848;
            KV_DATA[kv][data_ENTER_POSZ][5] = 1120.9175;
            // Выход из инт
            KV_DATA[kv][data_EXIT_POSX][0] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][0] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][0] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][1] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][1] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][1] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][2] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][2] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][2] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][3] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][3] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][3] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][4] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][4] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][4] = 905.8036;
            KV_DATA[kv][data_EXIT_POSX][5] = 1113.1810;
            KV_DATA[kv][data_EXIT_POSY][5] = 1525.8893;
            KV_DATA[kv][data_EXIT_POSZ][5] = 905.8036;
	        cache_get_field_content(kv, "car_posx", temp), KV_DATA[kv][data_CAR_POSX] = floatstr (temp);
	        cache_get_field_content(kv, "car_posy", temp), KV_DATA[kv][data_CAR_POSY] = floatstr (temp);
	        cache_get_field_content(kv, "car_posz", temp), KV_DATA[kv][data_CAR_POSZ] = floatstr (temp);
	        cache_get_field_content(kv, "car_posa", temp), KV_DATA[kv][data_CAR_POSA] = floatstr (temp);
	        TotalKV++;
            KV_DATA[kv][data_PICK_ENTER] = CreateDynamicPickup(1272, 23, KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z],0);
			KV_DATA[kv][data_PICK_EXIT] = CreateDynamicPickup(1318, 23, 35.8316,1927.6235,1113.7346,KV_DATA[kv][data_ID]);
			format(str1,sizeof(str1), "{FFFFFF}Подъезд {EE3366}№%d\n{FFFFFF}Кол-во квартир: {EE3366}7",kv+1);
   			KV_DATA[kv][data_INF_ENTER] = CreateDynamic3DTextLabel(str1, -1, KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);
   			KV_DATA[kv][data_INF_EXIT] = CreateDynamic3DTextLabel("{FFFFFF}Для выхода нажмите 'L.ALT'", -1, KV_DATA[kv][data_EXIT_X], KV_DATA[kv][data_EXIT_Y], KV_DATA[kv][data_EXIT_Z], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			new owner[MAX_PLAYER_NAME], class_kv[9],kk;
			for(new k = 0; k < 6; k++) {
				switch(k) {
				    case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
				    case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
				    case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
				    case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
				    case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
				    case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
				}
				switch(KV_DATA[kv][data_CLASS][k]) {
				    case 0: class_kv = "Хрущёвка";
				    case 1: class_kv = "Простая";
				    case 2: class_kv = "Элитный";
				}
				KV_DATA[kv][data_PICKKV_ENTER][k] = CreateDynamicPickup(1277, 23, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], KV_DATA[kv][data_ID]);
				KV_DATA[kv][data_PICKKV_EXIT][k] = CreateDynamicPickup(1272, 23, KV_DATA[kv][data_EXIT_POSX][k], KV_DATA[kv][data_EXIT_POSY][k], KV_DATA[kv][data_EXIT_POSZ][k], KV_DATA[kv][data_ID]+k);
				if(KV_DATA[kv][data_OWNED][k] == 1) {
			        kk++;
			        format(str,sizeof(str), "\
					{ffffff}Номер квартиры: {ffffff}№%d\n\
					{ffffff}Название: {FFFFFF}%s\n\
					{ffffff}Владелец: {3377cc}%s\n\
					Стоимость: {3377cc}%d руб",k+1, class_kv, owner, KV_DATA[kv][data_PRICE][k]);
		 	        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			    }
			    else {
                    format(str,sizeof(str), "\
					{ffffff}Номер квартиры: {ffffff}№%d\n\
					{ffffff}Название: {ffffff}%s\n\
					{ffffff}Стоимость: {ffffff}%d рублей\n\
					{ffffff}Используйте: {3377cc}/buykv",k+1, class_kv, KV_DATA[kv][data_PRICE][k]);
		 	        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
			    }
			}
			if(kk == 6) KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 32, -1, 0, -1, -1, 100.0);
			else KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 31, -1, 0, -1, -1, 100.0);
        }
        printf("[INFO]  Load kvartiry. Load: %d b. Time: %d ms.",TotalKV,GetTickCount()-time);
  	}
    return 1;
}
callback: LoadGZ() {
    new rows, fields, temp[602];
    cache_get_data(rows, fields);
    if(!rows) return print("[MYSQL] Территории не найдены");
    if(rows) {
        for(new g = 0; g < rows; g++) {
            cache_get_field_content(g, "gzid", temp), gz_info[g][gzid] = strval (temp);
            cache_get_field_content(g, "gzminx", temp), gz_info[g][gzminx] = floatstr (temp);
            cache_get_field_content(g, "gzminy", temp), gz_info[g][gzminy] = floatstr (temp);
            cache_get_field_content(g, "gzmaxx", temp), gz_info[g][gzmaxx] = floatstr (temp);
            cache_get_field_content(g, "gzmaxy", temp), gz_info[g][gzmaxy] = floatstr (temp);
            cache_get_field_content(g, "gzopg", temp), gz_info[g][gzopg] = strval (temp);
			cache_get_field_content(g, "standart_team", temp), gz_info[g][standart_opg] = strval (temp);
            if(gz_info[g][gzid] != 101) GangZoneCreate(gz_info[g][gzminx], gz_info[g][gzminy], gz_info[g][gzmaxx], gz_info[g][gzmaxy]);
	        totalgz++;
        }
    }
    printf("%d территорий загружено", totalgz);
    return 1;
}
callback: LoadWarehouse() {
	new rows, fields, temp[10],time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "rostov_metal", temp), rostov_wh[0] = strval (temp);
		cache_get_field_content(0, "rostov_patr", temp), rostov_wh[1] = strval (temp);
		cache_get_field_content(0, "rostov_narko", temp), rostov_wh[2] = strval (temp);
		cache_get_field_content(0, "rostov_storage", temp), rostov_wh[3] = strval (temp);
		cache_get_field_content(0, "maykop_metal", temp), maykop_wh[0] = strval (temp);
		cache_get_field_content(0, "maykop_patr", temp), maykop_wh[1] = strval (temp);
		cache_get_field_content(0, "maykop_narko", temp), maykop_wh[2] = strval (temp);
		cache_get_field_content(0, "maykop_storage", temp), maykop_wh[3] = strval (temp);
		cache_get_field_content(0, "odessa_metal", temp), odessa_wh[0] = strval (temp);
		cache_get_field_content(0, "odessa_patr", temp), odessa_wh[1] = strval (temp);
		cache_get_field_content(0, "odessa_narko", temp), odessa_wh[2] = strval (temp);
		cache_get_field_content(0, "maykop_storage", temp), odessa_wh[3] = strval (temp);
		cache_get_field_content(0, "smi_money", temp), smi_money = strval (temp);
		cache_get_field_content(0, "army_metal", temp), army_wh[0] = strval (temp);
		cache_get_field_content(0, "army_patr", temp), army_wh[1] = strval (temp);
		cache_get_field_content(0, "moroz_kavkaz", temp), m_kavkaz = strval (temp);
		cache_get_field_content(0, "moroz_gopota", temp), m_gopota = strval (temp);
		cache_get_field_content(0, "moroz_skinhead", temp), m_skinhead = strval (temp);
		odessa_sklad = CreateDynamicPickup(1279, 23, -2126.1812,2406.4570,1501.8059, 1);
		maykop_sklad = CreateDynamicPickup(1279, 23, -2126.1812,2406.4570,1501.8059, 2);
		rostov_sklad = CreateDynamicPickup(1279, 23, -2126.1812,2406.4570,1501.8059, 3);
		new gz1,gz2,gz3;
		for(new i = 0; i < totalgz; i++) {
			if(gz_info[i][gzopg] == 5) gz1++;
			if(gz_info[i][gzopg] == 6) gz2++;
			if(gz_info[i][gzopg] == 7) gz3++;
		}
		switch(rostov_wh[3]) {
		    case 0: {
		        rostov_wh[3] = 1;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Скинхеды\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
  				rostov_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,3,3);
		    }
		    case 1: {
		        rostov_wh[3] = 0;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад\n{cc6666}Скинхеды\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz1,rostov_wh[0],rostov_wh[1],rostov_wh[2]);
				rostov_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,3,3);
		    }
		}
		switch(maykop_wh[3]) {
		    case 0: {
		        maykop_wh[3] = 1;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Гопота\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz2,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
				maykop_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,2);
		    }
		    case 1: {
		        maykop_wh[3] = 0;
				new str_1[256];
                format(str_1,sizeof(str_1),"Склад\n{cc6666}Гопота\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",gz2,maykop_wh[0],maykop_wh[1],maykop_wh[2]);
				maykop_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,2);
		    }
		}
		switch(odessa_wh[3]) {
		    case 0: {
		        odessa_wh[3] = 1;
				new str_1[256];
				format(str_1,sizeof(str_1),"Склад {ff6633}(закрыт)\n{cc6666}Кавказцы\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz3,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
				odessa_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
		    }
		    case 1: {
		        odessa_wh[3] = 0;
				new str_1[256];
				format(str_1,sizeof(str_1),"Склад\n{cc6666}Кавказцы\n\
				{FFFFFF}Территорий: {e6d455}%d шт\n{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
				{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
				{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",gz3,odessa_wh[0],odessa_wh[1],odessa_wh[2]);
				odessa_sklad_text = CreateDynamic3DTextLabel(str_1, -1, -2126.1812,2406.4570,1501.8059, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1);
		    }
		}
		new str_1[256];
		format(str_1,sizeof(str_1),"{f18c2b}Армейский склад\n{FFFFFF}Металл: %d кг.\n{fccf39}Патроны: %d шт.",army_wh[0],army_wh[1]);
		printf("[INFO]  Load warehouse. Time: %d ms.",GetTickCount()-time);
	}
	return 1;
}
callback: LoadPlayerData(playerid) {
	new rows, fields, temp[10],login_ip[32];
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "id", temp), PI[playerid][data_ID] = strval (temp);
		cache_get_field_content(0, "uid", temp), PI[playerid][data_UID] = strval (temp);
		cache_get_field_content(0, "sex", temp), PI[playerid][data_SEX] = strval (temp);
		cache_get_field_content(0, "skin", temp), PI[playerid][data_SKIN] = strval (temp);
		cache_get_field_content(0, "skinm", temp), PI[playerid][data_SKINM] = strval (temp);
		cache_get_field_content(0, "money", temp), PI[playerid][data_MONEY] = strval (temp);
		cache_get_field_content(0, "snow", temp), PI[playerid][data_SNOW] = strval (temp);
		cache_get_field_content(0, "showfps", temp), PI[playerid][data_SHOWFPS] = strval (temp);
		cache_get_field_content(0, "GPCIBAN", PI[playerid][data_GPCIBAN], dbHandle, 8);
		cache_get_field_content(0, "lvl", temp), PI[playerid][data_LVL] = strval (temp);
		cache_get_field_content(0, "bang", temp), PI[playerid][data_BANG] = strval (temp);
		cache_get_field_content(0, "bangun", temp), PI[playerid][data_BANGTIME] = strval (temp);
		cache_get_field_content(0, "GID", temp), PI[playerid][data_GID] = strval (temp);
		cache_get_field_content(0, "exp", temp), PI[playerid][data_EXP] = strval (temp);
		cache_get_field_content(0, "member", temp), PI[playerid][data_MEMBER] = strval (temp);
		cache_get_field_content(0, "leader", temp), PI[playerid][data_LEADER] = strval (temp);
		cache_get_field_content(0, "rank", temp), PI[playerid][data_RANK] = strval (temp);
		cache_get_field_content(0, "admlvl", temp), PI[playerid][data_ADMLVL] = strval (temp);
		cache_get_field_content(0, "vkbot", temp), PI[playerid][data_ADMBOT] = strval (temp);
		cache_get_field_content(0, "pgive", temp), PI[playerid][data_PRIZEGIVE] = strval (temp);
		cache_get_field_content(0, "ptime", temp), PI[playerid][data_PRIZETIME] = strval (temp);
		cache_get_field_content(0, "promocode", temp), PI[playerid][data_PROMOCODE] = strval (temp);
		cache_get_field_content(0, "Myaso", temp), PI[playerid][data_Myaso] = strval (temp);
		cache_get_field_content(0, "ADMINSNUMBER", temp), PI[playerid][ADMINSNUMBER] = strval (temp);
		cache_get_field_content(0, "contry", temp), PI[playerid][data_CONTRY] = strval (temp);
		cache_get_field_content(0, "register_ip", PI[playerid][data_REGISTER_IP], dbHandle, 32);
		cache_get_field_content(0, "login_ip", login_ip, dbHandle, 32);
  		cache_get_field_content(0, "email", PI[playerid][data_EMAIL], dbHandle, 50);
		cache_get_field_content(0, "regdate_day", temp), PI[playerid][data_REGDATE_DAY] = strval (temp);
		cache_get_field_content(0, "regdate_month", temp), PI[playerid][data_REGDATE_MONTH] = strval (temp);
		cache_get_field_content(0, "regdate_year", temp), PI[playerid][data_REGDATE_YEAR] = strval (temp);
		cache_get_field_content(0, "mute", temp), PI[playerid][data_MUTE] = strval (temp);
		cache_get_field_content(0, "mutetime", temp), PI[playerid][data_MUTETIME] = strval (temp);
		cache_get_field_content(0, "vmute", temp), PI[playerid][data_VMUTE] = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), PI[playerid][data_VMUTETIME] = strval (temp);
		cache_get_field_content(0, "warn", temp), PI[playerid][data_WARN] = strval (temp);
		cache_get_field_content(0, "warntime", temp), PI[playerid][data_WARNTIME] = strval (temp);
		cache_get_field_content(0, "salary", temp), PI[playerid][data_SALARY] = strval (temp);
		cache_get_field_content(0, "bank", temp), PI[playerid][data_BANK] = strval (temp);
		cache_get_field_content(0, "licb", temp), PI[playerid][data_LICB] = strval (temp);
		cache_get_field_content(0, "licg", temp), PI[playerid][data_LICG] = strval (temp);
		cache_get_field_content(0, "licnum", temp), PI[playerid][data_LICNUM] = strval (temp);
		cache_get_field_content(0, "business", temp), PI[playerid][data_BUSINESS] = strval (temp);
		cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
		cache_get_field_content(0, "vip", temp), PI[playerid][data_VIP] = strval (temp);
		cache_get_field_content(0, "time", temp), PI[playerid][data_TIME] = strval (temp);
		cache_get_field_content(0, "car_1", temp), PI[playerid][data_CAR][0] = strval (temp);
		cache_get_field_content(0, "carfuel_1", temp), PI[playerid][data_CARFUEL][0] = strval (temp);
		cache_get_field_content(0, "car_color1_1", temp), PI[playerid][data_CAR_COLOR1][0] = strval (temp);
		cache_get_field_content(0, "car_color2_1", temp), PI[playerid][data_CAR_COLOR2][0] = strval (temp);
		cache_get_field_content(0, "car_2", temp), PI[playerid][data_CAR][1] = strval (temp);
		cache_get_field_content(0, "carfuel_2", temp), PI[playerid][data_CARFUEL][1] = strval (temp);
		cache_get_field_content(0, "car_color1_2", temp), PI[playerid][data_CAR_COLOR1][1] = strval (temp);
		cache_get_field_content(0, "car_color2_2", temp), PI[playerid][data_CAR_COLOR2][1] = strval (temp);
		cache_get_field_content(0, "HIDEME", temp), PI[playerid][data_HIDEME] = strval (temp);
		cache_get_field_content(0, "ASACHAT", temp), PI[playerid][data_CADMIN] = strval (temp);
		cache_get_field_content(0, "KILLFIST", temp), PI[playerid][data_SPAWNKULLAK] = strval (temp);
		cache_get_field_content(0, "BOOST", temp), PI[playerid][data_BOOST] = strval (temp);
		cache_get_field_content(0, "CAPTUREKILL", temp), PI[playerid][data_CAPTUREKILL] = strval (temp);
		cache_get_field_content(0, "CAPTURECMD", temp), PI[playerid][data_CAPTURECMD] = strval (temp);
		cache_get_field_content(0, "rep_adm", temp), PI[playerid][data_REPA] = strval (temp);
		cache_get_field_content(0, "mp_adm", temp), PI[playerid][data_MPA] = strval (temp);
		cache_get_field_content(0, "admvig", temp), PI[playerid][data_AWARN] = strval (temp);
		cache_get_field_content(0, "patr", temp), PI[playerid][data_PATR] = strval (temp);
		cache_get_field_content(0, "drugs", temp), PI[playerid][data_DRUGS] = strval (temp);
		cache_get_field_content(0, "usedrugs", temp), PI[playerid][data_USEDRUGS] = strval (temp);
		cache_get_field_content(0, "met", temp), PI[playerid][data_MET] = strval (temp);
		cache_get_field_content(0, "wanted", temp), PI[playerid][data_WANTED] = strval (temp);
		cache_get_field_content(0, "zakon", temp), PI[playerid][data_ZAKON] = strval (temp);
		cache_get_field_content(0, "number", temp), PI[playerid][data_NUMBER] = strval (temp);
		cache_get_field_content(0, "number_m", temp), PI[playerid][data_NUMBER_M] = strval (temp);
		cache_get_field_content(0, "pstatus", temp), PI[playerid][data_PHONESTATUS] = strval (temp);
		cache_get_field_content(0, "reports", temp), PI[playerid][data_REPORTS] = strval (temp);
		cache_get_field_content(0, "jail", temp), PI[playerid][data_JAIL] = strval (temp);
		cache_get_field_content(0, "jailtime", temp), PI[playerid][data_JAILTIME] = strval (temp);
		cache_get_field_content(0, "demorgan", temp), PI[playerid][data_DEMORGAN] = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), PI[playerid][data_DEMORGANTIME] = strval (temp);
		cache_get_field_content(0, "donate", temp), PI[playerid][data_DONATE] = strval (temp);
		cache_get_field_content(0, "donate_p", temp), PI[playerid][data_DONATE_P] = strval (temp);
		cache_get_field_content(0, "returnadm", temp), PI[playerid][data_ADMRETURN] = strval (temp);
		cache_get_field_content(0, "accessory_1", temp), PI[playerid][data_AKS1] = strval (temp);
		cache_get_field_content(0, "accessory_2", temp), PI[playerid][data_AKS2] = strval (temp);
		cache_get_field_content(0, "accessory_3", temp), PI[playerid][data_AKS3] = strval (temp);
		cache_get_field_content(0, "accessory_4", temp), PI[playerid][data_AKS4] = strval (temp);
		cache_get_field_content(0, "accessory_5", temp), PI[playerid][data_AKS5] = strval (temp);
		cache_get_field_content(0, "accessory_6", temp), PI[playerid][data_AKS6] = strval (temp);
		cache_get_field_content(0, "accessory_7", temp), PI[playerid][data_AKS7] = strval (temp);
		cache_get_field_content(0, "accessory_8", temp), PI[playerid][data_AKS8] = strval (temp);
		cache_get_field_content(0, "accessory_9", temp), PI[playerid][data_AKS8] = strval (temp);
		cache_get_field_content(0, "accessory_10", temp), PI[playerid][data_AKS10] = strval (temp);
		cache_get_field_content(0, "takeaks", temp), PI[playerid][data_TAKEAKS] = strval (temp);
		cache_get_field_content(0, "accessory_use", temp), PI[playerid][data_AKS_USE] = strval (temp);
		cache_get_field_content(0, "donate_all", temp), PI[playerid][data_DONATE_ALL] = strval (temp);
		cache_get_field_content(0, "phone", temp), PI[playerid][data_PHONE] = strval (temp);
		cache_get_field_content(0, "phonebook", temp), PI[playerid][data_PHONEBOOK] = strval (temp);
		cache_get_field_content(0, "dir", temp), PI[playerid][data_DIR] = strval (temp);
		cache_get_field_content(0, "satiety", temp), PI[playerid][data_SATIETY] = strval (temp);
		cache_get_field_content(0, "hp", temp), PI[playerid][data_HP] = strval (temp);
		cache_get_field_content(0, "arm", temp), PI[playerid][data_ARM] = strval (temp);
		cache_get_field_content(0, "med", temp), PI[playerid][data_MED] = strval (temp);
		cache_get_field_content(0, "mednum", temp), PI[playerid][data_MEDNUM] = strval (temp);
		cache_get_field_content(0, "spawn", temp), PI[playerid][data_SPAWN] = strval (temp);
		cache_get_field_content(0, "hospital", temp), PI[playerid][data_HOSPITAL] = strval (temp);
		cache_get_field_content(0, "pistol_skill", temp), PI[playerid][data_PISTOL] = strval (temp);
		cache_get_field_content(0, "sdpistol_skill", temp), PI[playerid][data_SDPISTOL] = strval (temp);
		cache_get_field_content(0, "deagle_skill", temp), PI[playerid][data_DEAGLE] = strval (temp);
		cache_get_field_content(0, "shotgun_skill", temp), PI[playerid][data_SHOTGUN] = strval (temp);
		cache_get_field_content(0, "mp5_skill", temp), PI[playerid][data_MP5] = strval (temp);
		cache_get_field_content(0, "ak47_skill", temp), PI[playerid][data_AK47] = strval (temp);
		cache_get_field_content(0, "rifle_skill", temp), PI[playerid][data_SNIPERRIFLE] = strval (temp);
	    cache_get_field_content(0, "job", temp), PI[playerid][data_JOB] = strval (temp);
	    cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
	    cache_get_field_content(0, "business", temp), PI[playerid][data_BUSINESS] = strval (temp);
	    cache_get_field_content(0, "kv", temp), PI[playerid][data_KV] = strval (temp);
	    cache_get_field_content(0, "jb", temp), PI[playerid][data_JB] = strval (temp);
	    cache_get_field_content(0, "ab", temp), PI[playerid][data_AB] = strval (temp);
	    cache_get_field_content(0, "padik", temp), PI[playerid][data_PADIK] = strval (temp);
	    cache_get_field_content(0, "d_skill", temp), PI[playerid][data_DSKILL] = strval (temp);
	    cache_get_field_content(0, "d_exp", temp), PI[playerid][data_DEXP] = strval (temp);
	    cache_get_field_content(0, "gun0", temp), PI[playerid][data_GUN][0] = strval (temp);
		cache_get_field_content(0, "gun1", temp), PI[playerid][data_GUN][1] = strval (temp);
		cache_get_field_content(0, "gun2", temp), PI[playerid][data_GUN][2] = strval (temp);
		cache_get_field_content(0, "gun3", temp), PI[playerid][data_GUN][3] = strval (temp);
		cache_get_field_content(0, "gun4", temp), PI[playerid][data_GUN][4] = strval (temp);
		cache_get_field_content(0, "gun5", temp), PI[playerid][data_GUN][5] = strval (temp);
		cache_get_field_content(0, "gun6", temp), PI[playerid][data_GUN][6] = strval (temp);
		cache_get_field_content(0, "gun7", temp), PI[playerid][data_GUN][7] = strval (temp);
		cache_get_field_content(0, "gun8", temp), PI[playerid][data_GUN][8] = strval (temp);
		cache_get_field_content(0, "gun9", temp), PI[playerid][data_GUN][9] = strval (temp);
		cache_get_field_content(0, "gun10", temp), PI[playerid][data_GUN][10] = strval (temp);
		cache_get_field_content(0, "gun11", temp), PI[playerid][data_GUN][11] = strval (temp);
		cache_get_field_content(0, "gun12", temp), PI[playerid][data_GUN][12] = strval (temp);
		cache_get_field_content(0, "ammo0", temp), PI[playerid][data_AMMO][0] = strval (temp);
		cache_get_field_content(0, "ammo1", temp), PI[playerid][data_AMMO][1] = strval (temp);
		cache_get_field_content(0, "ammo2", temp), PI[playerid][data_AMMO][2] = strval (temp);
		cache_get_field_content(0, "ammo3", temp), PI[playerid][data_AMMO][3] = strval (temp);
		cache_get_field_content(0, "ammo4", temp), PI[playerid][data_AMMO][4] = strval (temp);
		cache_get_field_content(0, "ammo5", temp), PI[playerid][data_AMMO][5] = strval (temp);
		cache_get_field_content(0, "ammo6", temp), PI[playerid][data_AMMO][6] = strval (temp);
		cache_get_field_content(0, "ammo7", temp), PI[playerid][data_AMMO][7] = strval (temp);
		cache_get_field_content(0, "ammo8", temp), PI[playerid][data_AMMO][8] = strval (temp);
		cache_get_field_content(0, "ammo9", temp), PI[playerid][data_AMMO][9] = strval (temp);
		cache_get_field_content(0, "ammo10", temp), PI[playerid][data_AMMO][10] = strval (temp);
		cache_get_field_content(0, "ammo11", temp), PI[playerid][data_AMMO][11] = strval (temp);
		cache_get_field_content(0, "ammo12", temp), PI[playerid][data_AMMO][12] = strval (temp);
		cache_get_field_content(0, "healthchest", temp), PI[playerid][data_HEALPACK] = strval (temp);
		cache_get_field_content(0, "HEALPACKSKLAD", temp), PI[playerid][data_HEALPACKSKLAD] = strval (temp);
		cache_get_field_content(0, "mask", temp), PI[playerid][data_MASK] = strval (temp);
        cache_get_field_content(0, "startx", temp), PI[playerid][STARTX] = floatstr (temp);
        cache_get_field_content(0, "starty", temp), PI[playerid][STARTY] = floatstr (temp);
        cache_get_field_content(0, "startz", temp), PI[playerid][STARTZ] = floatstr (temp);
        cache_get_field_content(0, "virtw", temp), PI[playerid][VIRTW] = strval (temp);
		cache_get_field_content(0, "virti", temp), PI[playerid][VIRTI] = strval (temp);
		cache_get_field_content(0, "car_tpposx", temp), PI[playerid][data_CAR_POSX] = floatstr (temp);
		cache_get_field_content(0, "car_tpposy", temp), PI[playerid][data_CAR_POSY] = floatstr (temp);
		cache_get_field_content(0, "car_tpposz", temp), PI[playerid][data_CAR_POSZ] = floatstr (temp);
		cache_get_field_content(0, "car_tpangle", temp), PI[playerid][data_CAR_ANGLE] = floatstr (temp);
		cache_get_field_content(0, "vkid", temp), PI[playerid][data_VKID] = strval (temp);
		cache_get_field_content(0, "twarn", temp), PI[playerid][TWARN] = strval (temp);
		cache_get_field_content(0, "fixnabor", temp), PI[playerid][data_FIXCOMPL] = strval (temp);
        cache_get_field_content(0, "timerank", temp), PI[playerid][data_TIMERANK] = strval (temp);
        cache_get_field_content(0, "military", temp), PI[playerid][data_MILITARY] = strval (temp);
        cache_get_field_content(0, "medcard", temp), PI[playerid][data_MEDCARD] = strval (temp);
		LoadAccount(playerid);
	}
	else {
	    new wrongtext[42];
        if (GetPVarInt(playerid, "WrongPassword") > 2) return Kick(playerid);
        SetPVarInt(playerid, "WrongPassword", GetPVarInt ( playerid, "WrongPassword") + 1);
		format(wrongtext,sizeof(wrongtext),"Пароль неверный. Осталось попыток: %d из 3",GetPVarInt(playerid,"WrongPassword"));
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, wrongtext);
		Dialog_PLAYER_LOGIN(playerid);
	}
	new str_q[45];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `id` = '%d'", PI[playerid][data_GID]);
	mysql_function_query(dbHandle, str_q, true, "GPLAYER", "d", playerid);
	return 1;
}
callback: PlayerUpdate(playerid) {
    if(IsPlayerAdmin(playerid)) return Ban(playerid);
	if(PI[playerid][data_LOGGED] == false) return 1;
	PI[playerid][data_3SECOND]++;
	PI[playerid][data_MINUTE]++;
    new hour, minute, second;
	gettime(hour, minute, second);
  	if(PI[playerid][data_SETMARK] > 0) PI[playerid][data_SETMARK]--;
  	if(PI[playerid][data_JAILTIME] > 0) PI[playerid][data_JAILTIME]--;
	if(PI[playerid][data_DEMORGANTIME] > 0) PI[playerid][data_DEMORGANTIME]--;
  	if(GetPVarInt(playerid, "SpecBool") == 1 && GetPVarInt(playerid, "FlyMode") == 0) ShowAdmInfo(playerid, GetPVarInt(playerid, "specid"));
 	if(GetPVarInt(playerid,"ac_timer") > 0) SetPVarInt(playerid, "ac_timer",GetPVarInt(playerid,"ac_timer")-1);
	if(GetPlayerMoney(playerid) != PI[playerid][data_MONEY]) set_player_money(playerid,PI[playerid][data_MONEY]);
    if(antiflood[playerid] > 0) antiflood[playerid]--;
	if(PI[playerid][data_MINUTE] == 60) {
	    PI[playerid][data_MINUTE] = 0;
        if(PI[playerid][data_AFK] < 1) PI[playerid][data_TIME]++;
	    if(GetPVarInt(playerid, "pd_time") == 0) {}
		else SetPVarInt(playerid, "pd_time",GetPVarInt(playerid, "pd_time")-1);
	    if(GetPVarInt(playerid, "ac_fly") >= 3) DeletePVar(playerid, "ac_fly");
		for(new i = 0; i < 13; i++)
	    if(PI[playerid][data_WARN] != 0) {
	        if(PI[playerid][data_WARNTIME] >= 1) PI[playerid][data_WARNTIME]--;
	        else {
	            PI[playerid][data_WARNTIME] = 0;
	            PI[playerid][data_WARN] = 0;
	            SendClientMessage(playerid,COLOR_AC,"Все предупреждения были сняты, больше не нарушайте!");
	        }
	    }
	    if(PI[playerid][data_MUTE] == 1) {
			PI[playerid][data_MUTETIME] -= 1;
			if(PI[playerid][data_MUTETIME] == 0) {
				PI[playerid][data_MUTE] = 0;
				SendClientMessage(playerid,COLOR_AC,"Ваш чат был разблокирован, больше не нарушайте!");
			}
		}
		if(PI[playerid][data_DEATH] < 1) PI[playerid][data_DEATH] -= 1;
	    if(PI[playerid][data_VMUTE] == 1)
		{
			PI[playerid][data_VMUTETIME] -= 1;
			if(PI[playerid][data_VMUTETIME] == 0)
			{
				PI[playerid][data_VMUTE] = 0;
				SendClientMessage(playerid,COLOR_AC,"Голосовой чат был разблокирован, больше не нарушайте!");
				SvMutePlayerDisable(playerid);
			}
		}
	}
	if(pCurrectMessageBomb[playerid] > 0) {
		if(pTimerMessageBomb[playerid] < gettime()) {
			new str1[145];
			if(pCurrectMessageBomb[playerid] == 2) {
				format(str1,sizeof(str1),"Портфель в руках (%s)",PI[playerid][data_NAME]);
				ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
				pTimerMessageBomb[playerid] = gettime() + 1;
				pCurrectMessageBomb[playerid]++;
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 3) {
					format(str1,sizeof(str1),"%s открыл портфель",PI[playerid][data_NAME]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 4) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"Портфель открыт (%s)",PI[playerid][data_NAME]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 5) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"%s достал взрывчатку из портфеля",PI[playerid][data_NAME]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pTimerMessageBomb[playerid] = gettime() + 1;
					pCurrectMessageBomb[playerid]++;
				}
			}
			if(pTimerMessageBomb[playerid] < gettime()) {
				if(pCurrectMessageBomb[playerid] == 6) {
					pCurrectMessageBomb[playerid]++;
					format(str1,sizeof(str1),"Взрывчатка в руках (%s)",PI[playerid][data_NAME]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					pCurrectMessageBomb[playerid] = 0;
					if(!PlayerToPoint(200.0, playerid, 1756.5381, 1731.6260, 15.3168)) return SendClientMessage(playerid, COLOR_BLACK,"Нужно находиться возле территории ВЧ!");
					bombplayer[playerid] = 1;
					SetPVarFloat(playerid, "bomb_pos_x", 1700.1427);
					SetPVarFloat(playerid, "bomb_pos_y", 1838.3263);
					SetPVarFloat(playerid, "bomb_pos_z", 15.7956);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid,1700.1427,1838.3263,15.7956,2.0);
					SendClientMessage(playerid, CY, "Место для минирования обозначено на карте красным чекпоинтом.");
					SendClientMessage(playerid, CY, "Подойдите к данному месту, после чего заминируйте забор и проникните на базу");
				}
			}
		}
	}
	if(pCurrectMessage[playerid] > 0) {
		if(pTimerMessage[playerid] < gettime()) {
			new str1[145];
			pCurrectMessage[playerid]++;
			if(pCurrectMessage[playerid] == 2) {
				format(str1,sizeof(str1),"Пакет с формой в руке (%s)",PI[playerid][data_NAME]);
				ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
				pTimerMessage[playerid] = gettime() + 1;
			}
			else if(pTimerMessage[playerid] < gettime()) {
				if(pCurrectMessage[playerid] == 3) {
					format(str1,sizeof(str1),"%s передал пакет с формой человеку напротив",PI[playerid][data_NAME]);
					ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
					SendClientMessagef(playerid, 0x33ceffFF, "Вы предложили %s вступить в организацию (%s)",PI[GetPVarInt(playerid, "to_player")][data_NAME], Fraction_Name[PI[playerid][data_MEMBER]]);
					static name[24];
					SetString(name, NameRang(playerid));
					name = NameRang(playerid);
					SendClientMessagef(GetPVarInt(playerid, "to_player"), 0x33ceffFF, "%s %s предложил Вам вступить в организацию (%s)",name,PI[playerid][data_NAME], Fraction_Name[PI[playerid][data_MEMBER]]);
					pCurrectMessage[playerid] = 0;
					SendProposition(playerid, GetPVarInt(playerid, "to_player"), PROPOSITION_TYPE_INVITE);
				}
			}
		}
	}
 	if(PI[playerid][data_JAIL] != 0 && PI[playerid][data_JAILTIME] <= 0) {
		switch(PI[playerid][data_JAIL]) {
			case 1: {
				SetPlayerPosAC(playerid, -298.9116,-1547.7133,41.0897);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 61.5454);
				SetCameraBehindPlayer(playerid);
			}
		}
		PI[playerid][data_JAILTIME] = 0;
		PI[playerid][data_JAIL] = 0;
		SendClientMessage(playerid,-1,"Вы отсидели положенный срок");
	}
	if(minute == 0 && payday[playerid] == false) {
		payday[playerid] = true;
		PayDay(playerid);
	}
	if(minute > 1) payday[playerid] = false;
 	if(PI[playerid][data_DEMORGAN] != 0 && PI[playerid][data_DEMORGANTIME] <= 0) {
		PI[playerid][data_DEMORGANTIME] = 0;
		PI[playerid][data_DEMORGAN] = 0;
		SpawnPlayerAC(playerid);
		SendClientMessage(playerid,-1,"Вы вышли из деморгана");
	}
	if(PI[playerid][data_CALL] != -1) {
		if(!IsPlayerConnected(PI[playerid][data_CALL])) {
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			PI[playerid][data_CALL] = -1;
			SetPVarInt(playerid,"call_m",0);
			SendClientMessage(playerid,0xFF6633FF,"Ваш собеседник вышел с сервера");
		}
		if(GetPVarInt(playerid,"call_m") == 1) {
	   		PI[playerid][data_NUMBER_M]--;
			if(PI[playerid][data_NUMBER_M] <= 0) {
	    		new id = PI[playerid][data_CALL];
				if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				if(!IsPlayerInAnyVehicle(id)) SetPlayerSpecialAction(id, SPECIAL_ACTION_STOPUSECELLPHONE);
				PI[id][data_CALL] = -1;
				SetPVarInt(id,"call_m",0);
				PI[playerid][data_CALL] = -1;
				SetPVarInt(playerid,"call_m",0);
				SendClientMessage(playerid,0xFF6633FF,"У Вас закончились деньги на счете");
				SendClientMessage(id,0xFF6633FF,"У вашего собеседника закончились деньги на счете");
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PI[playerid][data_AFK] <= 1 && GetPVarInt(playerid, "spawn_ac") == 0) {
 		new Float: Health,Float: Armour;
	  	new Float:Distance = GetPlayerDistanceFromPoint(playerid, oldposX[playerid], oldposY[playerid], oldposZ[playerid]);
		SavePlayerData(playerid);
		GetPlayerHealth(playerid, Health);
		if(PI[playerid][data_HP] < Health) SetPlayerHealthAC(playerid, PI[playerid][data_HP]);
		else PI[playerid][data_HP] = Health;
		GetPlayerArmour(playerid, Armour);
		if(PI[playerid][data_ARM] < Armour) SetPlayerArmourAC(playerid, PI[playerid][data_ARM]);
		else PI[playerid][data_ARM] = Armour;
		new datagunid, dataammo;
		for(new slotgunid = 0; slotgunid < 13; slotgunid++) {
	 		GetPlayerWeaponData(playerid, slotgunid, datagunid, dataammo);
			if(dataammo > PI[playerid][data_AMMO][slotgunid]) {
			    ac_gun[playerid][slotgunid]++;
				if(ac_gun[playerid][slotgunid] == 3) printf("[ac_gun] playerid: %s, i: %d, datagunid: %d, dataammo: %d | ammo: %d",PI[playerid][data_NAME], slotgunid, datagunid, dataammo,PI[playerid][data_AMMO][slotgunid]);
			}
			else if(dataammo < PI[playerid][data_AMMO][slotgunid] && ac_gun[playerid][slotgunid] == 0) PI[playerid][data_AMMO][slotgunid] = dataammo;
		}
        new carid = GetPlayerSurfingVehicleID(playerid);
		if(Distance > 45 && carid == INVALID_VEHICLE_ID) {
  			SetPVarInt(playerid, "ac_fly",GetPVarInt(playerid, "ac_fly")+1);
			if(GetPVarInt(playerid, "ac_fly") == 3) printf("[ac_fly] playerid: %s, distance: %d",PI[playerid][data_NAME], Distance);
		}
		GetPlayerPos(playerid, oldposX[playerid], oldposY[playerid], oldposZ[playerid]);
	}
	if(!PlayerToPoint(2.0, playerid, GetPVarFloat(playerid, "job_x"), GetPVarFloat(playerid, "job_y"), GetPVarFloat(playerid, "job_z")) && GetPVarInt(playerid, "process") == 1) {
		if(PI[playerid][data_START_JOB] == 2) {
			cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Процесс работы был нарушен! Попробуйте ещё раз"));
			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			DisablePlayerCheckpoint(playerid);
			ClearAnim(playerid);
   			ResetWeaponSlot(playerid, 1);
			KillTimer(PI[playerid][data_DREV_TIMER_ID]);
			SetPVarInt(playerid, "process", 0);
			SetPVarInt(playerid, "tovar", 0);
			switch(random(4)) {
				case 0: SetPlayerCheckpoint(playerid, 2343.2356,-618.4960,12.0020, 2.0);
				case 1: SetPlayerCheckpoint(playerid, 2350.2246,-627.0235,12.0020, 2.0);
				case 2: SetPlayerCheckpoint(playerid, 2330.1829,-614.6138,12.0020, 2.0);
				case 3: SetPlayerCheckpoint(playerid, 2324.1658,-621.3287,12.0020, 2.0);
			}
		}
		if(PI[playerid][data_START_JOB] == 3) {
   			cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Вы уронили руду! Попробуйте ещё раз"));
   			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			if(IsPlayerAttachedObjectSlotUsed(playerid,2)) RemovePlayerAttachedObject(playerid,2);
			if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
			SetPlayerAttachedObject(playerid,1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
			DisablePlayerCheckpoint(playerid);
			ClearAnim(playerid);
   			ResetWeaponSlot(playerid, 1);
			KillTimer(PI[playerid][data_SHAHTA_TIMER_ID]);
			SetPVarInt(playerid, "process", 0);
			SetPVarInt(playerid, "tovar", 0);
			new pos = random(5);
			SetPVarInt(playerid, "karier_pos", pos);
			SetPlayerCheckpoint(playerid, karier_pos[pos][0], karier_pos[pos][1], karier_pos[pos][2], 2.0);
		}
		if(PI[playerid][data_START_JOB] == 5) {
   			cef_emit_event(playerid, "show-center-notify", CEFINT(2), CEFSTR("Процесс работы был нарушен! Попробуйте ещё раз"));
   			if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			DisablePlayerCheckpoint(playerid);
			ClearAnim(playerid);
			KillTimer(PI[playerid][data_YABLO_TIMER_ID]);
			SetPVarInt(playerid, "process", 0);
			SetPVarInt(playerid, "tovar", 0);
			new pos = random(13);
			SetPVarInt(playerid, "ogorod_pos", pos);
			SetPlayerCheckpoint(playerid, ogorod_pos[pos][0], ogorod_pos[pos][1], ogorod_pos[pos][2], 2.0);
		}
	}
	if(!PlayerToPoint(2.0, playerid, PosPU[0][playerid], PosPU[1][playerid], PosPU[2][playerid])) PI[playerid][data_PU] = 0;
	PI[playerid][data_AFK]++;
	if(PI[playerid][data_AFK] > 1 && PI[playerid][data_AFK] < 60) {
		new str[20];
		format(str, sizeof(str), "На паузе: %d сек", PI[playerid][data_AFK]);
		SetPlayerChatBubble(playerid, str, COLOR_TOMATO, 20.0, 1100);
	}
	else if(PI[playerid][data_AFK] >= 60) {
		new str[20];
		format(str, sizeof(str), "На паузе: %d мин", PI[playerid][data_AFK]/60);
		SetPlayerChatBubble(playerid, str, COLOR_TOMATO, 20.0, 1100);
	}
	if(PI[playerid][data_AFK] > 1800) {
		if(PI[playerid][data_ADMLVL] >= 1) return 1;
		SendClientMessage(playerid, CG, "Превышено максимальное время паузы (30 минут)");
		SavePlayerData(playerid);
		TogglePlayerSpectating(playerid, false);
		Kick(playerid);
		return 1;
	}
	if(PlayerToKvadrat(playerid, 2048.77,1787.74, 2168.30,1845.31) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
	PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Мэрия
	PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // респавн бомжей
	PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
	PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 1 || // автошкола
	PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) if(GetPVarInt(playerid, "gPlayerInterface") == 0) PlayerTextDrawShow(playerid, GZ_p[playerid]);
	else PlayerTextDrawHide(playerid, GZ_p[playerid]);
	if(!IsPlayerInAnyVehicle(playerid)) {
		SetPVarInt(playerid, "NewPlayerAmmo", GetPlayerAmmo(playerid));
		if(GetPVarInt(playerid, "NewPlayerAmmo") != GetPVarInt(playerid, "PlayerAmmo")) {
			OnPlayerAmmoChange(playerid, GetPVarInt(playerid, "NewPlayerAmmo"), GetPVarInt(playerid, "PlayerAmmo"));
			SetPVarInt(playerid, "PlayerAmmo", GetPVarInt(playerid, "NewPlayerAmmo"));
		}
	}
	if(PI[playerid][data_3SECOND] == 3) {
	    PI[playerid][data_3SECOND] = 0;
	    if(strfind(PI[playerid][data_CHAT_TEXT], "", true) == -1) strmid(PI[playerid][data_CHAT_TEXT], "", 0, 128, 128);
	    if(PI[playerid][data_HOSPITAL] == 1 && GetPlayerSpecialAction(playerid) != PLAYER_STATE_WASTED && GetPlayerSpecialAction(playerid) != PLAYER_STATE_SPAWNED) {
			if(PlayerToPoint(100.0, playerid, 1331.8745,2505.1877,1002.1400) || PlayerToPoint(100.0, playerid, 743.4705,1523.0537,2002.1899)) {
				new Float:hp;
				GetPlayerHealth(playerid,hp);
				SetPlayerHealthAC(playerid,hp+5);
				cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Курс лечения"), CEFSTR("487f5f"), CEFSTR("+5 HP"));
				if(PI[playerid][data_HP] >= 100.0) {
					PI[playerid][data_HOSPITAL] = 0;
					SendClientMessage(playerid,0xFFFFFFFF,"Курс лечения пройден, Вы можете покинуть палату");
					SendClientMessage(playerid,0xFFFFFFFF,"Если Вас не устраивает состояние здоровья, обратитесь к дежурному врачу");
					UpdatePlayerDataInt(playerid, "hospital", PI[playerid][data_HOSPITAL], 15807);
					SavePlayerData(playerid);
				}
			}
		}
	}
	return 1;
}
callback: CheckNameDonate(playerid, inputtext[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
        SendClientMessage(playerid, CG, "Данный ник уже занят на сервере");
    }
	else {
		if(PI[playerid][data_RANK] == 10) {
			new leader[32];
			switch(PI[playerid][data_MEMBER]) {
				case 1: leader = "leader_pravo";
				case 2: leader = "leader_vch";
				case 3: leader = "leader_mvd";
				case 4: leader = "leader_bcrd";
				case 5: leader = "leader_skinhead";
				case 6: leader = "leader_gopota";
				case 7: leader = "leader_kavkaz";
			}
		}
		new str_q5[256];
		mysql_format(dbHandle,str_q5, sizeof(str_q5), "INSERT INTO `nickname_history` ( `nh_owner`, `nh_oldname`, `nh_newname`, `nh_date`) VALUES ( '%d','%s' ,'%s', NOW())", PI[playerid][data_ID], PI[playerid][data_NAME], CHANGE_NAME[playerid]);
		mysql_function_query(dbHandle, str_q5, false, "", "");
		new str_q[256],str_q2[256],str_q3[256],str_q4[256];
		SetPVarInt(playerid,"change_name_status", 0);
		mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `name` = '%e' WHERE `name` = '%e'",CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q, false, "", "");
		mysql_format(dbHandle,str_q2, sizeof(str_q2), "UPDATE `punishment` SET `player` = '%s' WHERE `player` = '%s'", CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q2, false, "", "");
		mysql_format(dbHandle,str_q3, sizeof(str_q3), "UPDATE `fractions_blacklist` SET `bl_name2` = '%e' WHERE `bl_name` = '%e'",CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q3, false, "", "");
		strmid(PI[playerid][data_NAME], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);
		SetPlayerName(playerid, PI[playerid][data_NAME]);
		PI[playerid][data_DONATE] -= 50;
		SendClientMessage(playerid, 0x33ccffFF, "Вы успешно изменили никнейм за 50 донат-поинтов.");
  		mysql_format(dbHandle,str_q4, sizeof(str_q4), "UPDATE `accounts` SET `donate` = '%d' WHERE `name` = '%e'",PI[playerid][data_DONATE],PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q4, false, "", "");
		if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
			new h = PI[playerid][data_HOUSE];
			strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
            UpdateHouseData(h);
            SaveHouseData(h);
		}
		if(PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID) {
			new b = PI[playerid][data_BUSINESS];
			strmid(BUSINESS_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateBusinessData(b);
			SaveBusinessData(b);
		}
		if(PI[playerid][data_JB] != INVALID_JB_ID) {
			new b = PI[playerid][data_JB];
			strmid(JB_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateJBData(b);
			SaveJBData(b);
		}
		if(PI[playerid][data_AB] != INVALID_AB_ID) {
			new b = PI[playerid][data_AB];
			strmid(AB_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateJBData(b);
			SaveABData(b);
		}
		if(PI[playerid][data_KV] != INVALID_KV_ID) {
			new kv = PI[playerid][data_PADIK];
			new k = PI[playerid][data_KV];
			switch(k) {
				case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			}
			UpdateKVData(kv, k);
			SaveKVData(kv);
		}
		SavePlayerData(playerid);
    }
    return 1;
}
callback: CheckName(playerid, inputtext[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
        SendClientMessage(playerid, COLOR_BLACK, "Случайный никнейм уже занят другим игроком!");
    }
	else {
		if(PI[playerid][data_ADMLVL] == 0) {
			new str_q[144];
			mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `punishment` SET `player` = '%s' WHERE `player` = '%s'", CHANGE_NAME[playerid], PI[playerid][data_NAME]);
			mysql_function_query(dbHandle, str_q, false, "", "");
		}
		else {
			new str_text[144];
			format(str_text,sizeof(str_text),"[Игрок] %s[%d] сменил ник на %s (РАНДОМ СИСТЕМА)",PI[playerid][data_NAME],playerid, CHANGE_NAME[playerid]);
			SendAdminMessage(COLOR_ADMINCHAT, str_text);
		}
		if(PI[playerid][data_RANK] == 10) {
			new leader[32];
			switch(PI[playerid][data_MEMBER]) {
				case 1: leader = "leader_pravo";
				case 2: leader = "leader_vch";
				case 3: leader = "leader_mvd";
				case 4: leader = "leader_bcrd";
				case 5: leader = "leader_skinhead";
				case 6: leader = "leader_gopota";
				case 7: leader = "leader_kavkaz";
			}
		}
		new str_q[144],str_q2[144],str_q3[144],str_q4[144];
		mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `nickname_history` ( `nh_owner`, `nh_oldname`, `nh_newname`, `nh_date`) VALUES ( '%d','%s' ,'%s', NOW())", PI[playerid][data_ID], PI[playerid][data_NAME], CHANGE_NAME[playerid]);
		mysql_function_query(dbHandle, str_q, false, "", "");
		SetPVarInt(playerid,"change_name_status", 0);
		mysql_format(dbHandle,str_q2, sizeof(str_q2), "UPDATE `accounts` SET `name` = '%e' WHERE `name` = '%e'",CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q2, false, "", "");
		mysql_format(dbHandle,str_q3, sizeof(str_q3), "UPDATE `punishment` SET `player` = '%s' WHERE `player` = '%s'", CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q3, false, "", "");
		mysql_format(dbHandle,str_q4, sizeof(str_q4), "UPDATE `fractions_blacklist` SET `bl_name2` = '%e' WHERE `bl_name` = '%e'",CHANGE_NAME[playerid], PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q4, false, "", "");
		strmid(PI[playerid][data_NAME], CHANGE_NAME[playerid], 0, strlen(CHANGE_NAME[playerid]), MAX_PLAYER_NAME);
		SetPlayerName(playerid, PI[playerid][data_NAME]);
		if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
			new h = PI[playerid][data_HOUSE];
			strmid(HOUSE_DATA[h][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
            UpdateHouseData(h);
            SaveHouseData(h);
		}
		if(PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID) {
			new b = PI[playerid][data_BUSINESS];
			strmid(BUSINESS_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateBusinessData(b);
			SaveBusinessData(b);
		}
		if(PI[playerid][data_JB] != INVALID_JB_ID) {
			new b = PI[playerid][data_JB];
			strmid(JB_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateJBData(b);
			SaveJBData(b);
		}
		if(PI[playerid][data_AB] != INVALID_AB_ID) {
			new b = PI[playerid][data_AB];
			strmid(AB_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			UpdateJBData(b);
			SaveABData(b);
		}
		if(PI[playerid][data_KV] != INVALID_KV_ID) {
			new kv = PI[playerid][data_PADIK];
			new k = PI[playerid][data_KV];
			switch(k) {
				case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			}
			UpdateKVData(kv, k);
			SaveKVData(kv);
		}
		SavePlayerData(playerid);
    }
    return 1;
}
callback: OffLeader(playerid,name[]) {
    new rows, fields,memberr,rankk,temp[10];
    cache_get_data(rows, fields);
    if(rows) {
	    for(new i = 0; i < MAX_PLAYERS; i++) {
	        if(!IsPlayerConnected(i)) continue;
	        if(strcmp(PI[i][data_NAME], name, true, 24) == 0) {
	            SendClientMessage(i,COLOR_AC,"Вы были сняты с должности лидера");
				PI[i][data_LEADER] = 0;
				PI[i][data_MEMBER] = 0;
				SetPlayerSkinAC(i,PI[i][data_SKIN]);
				SetPlayerColorEx(i);
	        }
	    }
		for(new i = 0; i < rows; i++) {
			cache_get_field_content(i, "member", temp), memberr = strval(temp);
			cache_get_field_content(i, "rank", temp), rankk = strval(temp);
			if(rankk != 10) {
				new str_q[144];
 				mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `accounts` SET `leader` = '0', `member` = '0', `rank` = '0' WHERE `name` = '%e'", name);
				mysql_function_query(dbHandle, str_q, false, "", "");
				new str[145];
				format(str,sizeof(str),"[%s #%d] %s[%d] снял с лидерства оффлайн %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,name);
				SendAdminMessage(0x8fbedb00,str);
				new vk_send[250];
				format(vk_send, sizeof(vk_send), "Игровой мастер %s снял с лидерства оффлайн %s",PI[playerid][data_NAME], name);
				SendVKTest(playerid, vk_send, 3);
				new leader[32];
				switch(memberr) {
					case 1: leader = "leader_pravo";
					case 2: leader = "leader_vch";
					case 3: leader = "leader_mvd";
					case 4: leader = "leader_bcrd";
					case 5: leader = "leader_skinhead";
					case 6: leader = "leader_gopota";
					case 7: leader = "leader_kavkaz";
				}
			}
			SendClientMessage(playerid,CG,"Данный игрок не лидер");
		}
	}
	else SendClientMessage(playerid,CG,"Данный аккаунт не найден в базе данных");
	return 1;
}
callback: offgm(playerid,name[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
	    for(new i = 0; i < MAX_PLAYERS; i++) {
	        if(!IsPlayerConnected(i)) continue;
	        if(strcmp(PI[i][data_NAME], name, true, 24) == 0) {
	            SendClientMessage(i,COLOR_AC,"Вы были сняты с должности игрового мастера");
				PI[i][data_ADMLVL] = 0;
	        }
	    }
		new str_q[144];
	    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `accounts` SET `admlvl` = '0' WHERE `name` = '%e'", name);
	    mysql_function_query(dbHandle, str_q, false, "", "");
	    new str_1[256];
	    format(str_1,sizeof(str_1),"[%s #%d] %s[%d] снял с поста игрового мастера оффлайн %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid, name);
		SendAdminMessage(0x8fbedb00,str_1);
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s снял с поста игрового мастера оффлайн %s",PI[playerid][data_NAME], name);
		SendVKTest(playerid, vk_send, 3);
	}
	else SendClientMessage(playerid,CG,"Данный аккаунт не найден в базе данных");
	return 1;
}
callback: CheckReferal(playerid) {
    new rows, fields,temp[10],salary;
    cache_get_data(rows, fields);
    if(rows) {
        cache_get_field_content(0, "salary",temp), salary = strval (temp);
        salary += 150000;
		new str_q[144];
 		mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `salary` = '%d' WHERE `name` = '%e'",salary,PI[playerid][data_REFERAL]);
		mysql_function_query(dbHandle, str_q, false, "", "");
  	}
    return 1;
}
callback: GetAccount(playerid) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
        new name[24], time, id, lvl,house, business,number, mmember, rank, leader, exp, regd1, regd2, regd3, logd1, logd2, logd3, logip[16], regip[16], money,donate, bankmoney, adminlvl;
        cache_get_field_content(0, "name", name, dbHandle);
        cache_get_field_content(0, "id",temp), id = strval (temp);
        cache_get_field_content(0, "regdate_day", temp), regd1 = strval (temp);
		cache_get_field_content(0, "regdate_month", temp), regd2 = strval (temp);
		cache_get_field_content(0, "regdate_year", temp), regd3 = strval (temp);
		cache_get_field_content(0, "logdate_day", temp), logd1 = strval (temp);
		cache_get_field_content(0, "logdate_month", temp), logd2 = strval (temp);
		cache_get_field_content(0, "logdate_year", temp), logd3 = strval (temp);
		cache_get_field_content(0, "bank", temp), bankmoney = strval (temp);
		cache_get_field_content(0, "money", temp), money = strval (temp);
		cache_get_field_content(0, "lvl", temp), lvl = strval (temp);
		cache_get_field_content(0, "exp", temp), exp = strval (temp);
		cache_get_field_content(0, "donate", temp), donate = strval (temp);
		cache_get_field_content(0, "house", temp), house = strval (temp);
		cache_get_field_content(0, "business", temp), business = strval (temp);
		cache_get_field_content(0, "number", temp), number = strval (temp);
		cache_get_field_content(0, "member", temp), mmember = strval (temp);
		cache_get_field_content(0, "rank", temp), rank = strval (temp);
		cache_get_field_content(0, "leader", temp), leader = strval (temp);
		cache_get_field_content(0, "login_ip", logip, dbHandle);
		cache_get_field_content(0, "register_ip", regip, dbHandle);
		cache_get_field_content(0, "time", temp), time = strval (temp);
		cache_get_field_content(0, "admlvl", temp), adminlvl = strval (temp);
		if(adminlvl == 7 || adminlvl == 8) return SendClientMessage(playerid, CG, "Вы не можете просмотреть информацию об этом аккаунте");
		new str_3[512];
		format(str_3,sizeof(str_3),"Номер аккаунта: %d\nДонат: %d\nНаличные: %d руб.\nБанковский счет: %d руб.\nУровень: %d\nEXP: %d\nДом: %d +1 (-1 - нет)\nБизнес: %d +1 (-1 - нет)\nНомер телефона: %d (0 - нет)\nОрганизация: %d\nРанг: %d\nЛидер: %d\nREG-IP: %s\nLOG-IP: %s\nREG-DATA: %d/%d/%d\nLOG-DATA: %d/%d/%d\nПроведенное время в игре (сегодня): %d минут",id,donate,money,bankmoney,lvl,exp,house,business,number,mmember,rank,leader,regip,logip,regd1,regd2,regd3,logd1,logd2,logd3,time);
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, name, str_3, "Закрыть", "");
		new str_1[156];
		format(str_1,sizeof(str_1),"[%s #%d] %s[%d] просматривает информацию аккаунта %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid,name);
		SendAdminMessage(0x8fbedb00,str_1);
	}
    else SendClientMessage(playerid,CG,"Аккаунт не найден в базе данных");
    return 1;
}
callback: LoadAllLeaders(playerid) {
    new rows, fields, leader,name[MAX_PLAYER_NAME],temp[20],string[625], string1[625], bugfix,logd1,logd2,logd3;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "name", name, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(i, "leader", temp), leader = strval (temp);
		cache_get_field_content(i, "logdate_day", temp), logd1 = strval (temp);
		cache_get_field_content(i, "logdate_month", temp), logd2 = strval (temp);
		cache_get_field_content(i, "logdate_year", temp), logd3 = strval (temp);
		new ltext[64];
		switch(leader) {
			case 1: ltext = "Правительство";
			case 2: ltext = "Войсковая часть";
			case 3: ltext = "МО МВД";
   			case 4: ltext = "БЦРБ";
			case 5: ltext = "Скинхеды";
			case 6: ltext = "Гопота";
			case 7: ltext = "Кавказцы";
  		}
    	format(string,sizeof(string),"%s%s\t%s\t%d.%d.%d\n",string,ltext,name, logd1, logd2, logd3);
    	format(string1,sizeof(string1),"Организация\tИмя\tПоследний вход\n%s",string);
    	bugfix = 1;
	}
	if(bugfix == 1) return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Список лидеров", string1, "Закрыть", "");
  	return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Список лидеров", "В данный момент лидеров нет", "Закрыть", "");
}
callback: anim_OFF(playerid) {
    PI[playerid][data_ANIM] = false;
	return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
}
callback: UnfreezePlayer(playerid) {
    TogglePlayerControllable(playerid, true);
    return SetPVarInt(playerid,"freeze",0);
}
callback: ChangePassword(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) ShowPlayerDialog(playerid, dialog_SETTING_2, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже новый пароль от аккаунта\n{f00e5d}Пример: 12345qwe", "Далее", "Назад");
    else SendClientMessage(playerid,COLOR_AC,"Пароль который Вы ввели не принадлежит данному аккаунту, повторите попытку"),ShowPlayerDialog(playerid, dialog_SETTING_1, DIALOG_STYLE_INPUT,"{f00e5d}Изменение пароля","Введите в поле ниже свой нынешний пароль\n{f00e5d}Пример: 123qwe", "Далее", "Назад");
    return 1;
}
callback: UnbanAccount(playerid,name[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
	    new str_q[144];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `banlist` WHERE `name` = '%s'", name);
	    mysql_function_query(dbHandle, str_q, false, "", "");
     	new str_1[256];
	    format(str_1,sizeof(str_1),"[%s #%d] %s[%d] разбанил аккаунт %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,name);
		SendAdminMessage(0x8fbedb00,str_1);
		new vk_send[144];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s разбанил аккаунт %s",PI[playerid][data_NAME],name);
		SendVKTest(playerid, vk_send, 3);
	}
	else SendClientMessage(playerid,CG,"Данный аккаунт не найден в базе данных");
	return 1;
}
callback: SecondTimer() {
	global_minute++;
  	new hour_time,minuite_time, second_time, Year, Month, Day,month[10];
  	gettime(hour_time,minuite_time, second_time);
	getdate(Year, Month, Day);
	switch(Month) {
		case 1: month = "01";
		case 2: month = "02";
		case 3: month = "03";
		case 4: month = "04";
		case 5: month = "05";
		case 6: month = "06";
		case 7: month = "07";
		case 8: month = "08";
		case 9: month = "09";
		case 10: month = "10";
		case 11: month = "11";
		case 12: month = "12";
	}
    if(gangwar == 1)
	{
	    WarTimeSec--;
	    if(WarTimeSec == 0 && WarTimeMin != 0)
		{
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("подготовка"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
			new plus1 = 0,plus2 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(PI[i][data_MEMBER] == Command[0]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[0] == PI[i][data_MEMBER]) plus1 = 1;
				if(PI[i][data_MEMBER] == Command[1]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[1] == PI[i][data_MEMBER]) plus2 = 1;
			}
			if(plus1 != 0) {
				if(plus2 != 0) {
					WarTimeMin = 1;
					WarTimeSec = 59;
					gangwar = 2;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					SendClientMessage(i, COLOR_TOMATO, "На территории остались участники вражеской ОПГ, стрела продлена на 2 минуты");
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
				}
			}
			if(gangwar != 2) {
				if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							gz_info[WarZone][gzopg] = Command[0];
							new col;
							switch(Command[0]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
				else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							GangZoneHideForPlayer(i, WarZone);
							new col;
							switch(Command[1]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
			}
		}
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("подготовка"));
			}
		}
	}
	if(gangwar == 2) { //продление 1
		WarTimeSec--;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("продление 1"));
			}
		}
	    if(WarTimeSec == 0 && WarTimeMin != 0) {
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 1"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
			new plus1 = 0,plus2 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(PI[i][data_MEMBER] == Command[0]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[0] == PI[i][data_MEMBER]) plus1 = 1;
				if(PI[i][data_MEMBER] == Command[1]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[1] == PI[i][data_MEMBER]) plus2 = 1;
			}
			if(plus1 != 0) {
				if(plus2 != 0) {
					WarTimeMin = 1;
					WarTimeSec = 59;
					gangwar = 3;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					SendClientMessage(i, COLOR_TOMATO, "На территории остались участники вражеской ОПГ, стрела продлена на 2 минуты");
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 2"));
				}
			}
			if(gangwar != 3) {
				if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							gz_info[WarZone][gzopg] = Command[0];
							new col;
							switch(Command[0]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
				else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 1"));
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							GangZoneHideForPlayer(i, WarZone);
							new col;
							switch(Command[1]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
			}
		}
	}
	if(gangwar == 3) { //продление 2
		WarTimeSec--;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("продление 2"));
			}
		}
	    if(WarTimeSec == 0 && WarTimeMin != 0) {
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 2"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
			new plus1 = 0,plus2 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(PI[i][data_MEMBER] == Command[0]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[0] == PI[i][data_MEMBER]) plus1 = 1;
				if(PI[i][data_MEMBER] == Command[1]) if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[1] == PI[i][data_MEMBER]) plus2 = 1;
			}
			if(plus1 != 0) {
				if(plus2 != 0) {
					WarTimeMin = 1;
					WarTimeSec = 59;
					gangwar = 4;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					SendClientMessage(i, COLOR_TOMATO, "На территории остались участники вражеской ОПГ, стрела продлена на 2 минуты");
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
				}
			}
			if(gangwar != 4) {
				if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							gz_info[WarZone][gzopg] = Command[0];
							new col;
							switch(Command[0]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
				else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							GangZoneHideForPlayer(i, WarZone);
							new col;
							switch(Command[1]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
			}
		}
	}
	if(gangwar == 4) { //продление 3
		WarTimeSec--;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
			}
		}
	    if(WarTimeSec == 0 && WarTimeMin != 0) {
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 3"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
			new plus1 = 0,plus2 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(PI[i][data_MEMBER] == Command[0]) {
					if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[0] == PI[i][data_MEMBER]) plus1 = 1;

				}
				if(PI[i][data_MEMBER] == Command[1]) {
					if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[1] == PI[i][data_MEMBER]) plus2 = 1;

				}
			}
			if(plus1 != 0) {
				if(plus2 != 0) {
					WarTimeMin = 1;
					WarTimeSec = 59;
					gangwar = 5;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					SendClientMessage(i, COLOR_TOMATO, "На территории остались участники вражеской ОПГ, стрела продлена на 2 минуты");
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 4"));
				}
			}
			if(gangwar != 5) {
				if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							gz_info[WarZone][gzopg] = Command[0];
							new col;
							switch(Command[0]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
				else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 4"));
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							GangZoneHideForPlayer(i, WarZone);
							new col;
							switch(Command[1]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
			}
		}
	}
	if(gangwar == 5) { //продление 1
		WarTimeSec--;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("продление 5"));
			}
		}
	    if(WarTimeSec == 0 && WarTimeMin != 0) {
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 5"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
			new plus1 = 0,plus2 = 0;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(PI[i][data_MEMBER] == Command[0]) {
					if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[0] == PI[i][data_MEMBER]) plus1 = 1;

				}
				if(PI[i][data_MEMBER] == Command[1]) {
					if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) if(Command[1] == PI[i][data_MEMBER]) plus2 = 1;

				}
			}
			if(plus1 != 0) {
				if(plus2 != 0) {
					WarTimeMin = 1;
					WarTimeSec = 59;
					gangwar = 6;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					SendClientMessage(i, COLOR_TOMATO, "На территории остались участники вражеской ОПГ, стрела продлена на 2 минуты");
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 5"));
				}
			}
			if(gangwar != 6) {
				if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							gz_info[WarZone][gzopg] = Command[0];
							new col;
							switch(Command[0]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
				else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
						if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 5"));
							GangZoneHideForPlayer(i, CaptZone);
							GangZoneStopFlashForPlayer(i, WarZone);
							GangZoneHideForPlayer(i, WarZone);
							new col;
							switch(Command[1]) {
								case 5: col = 0x663399BB;
								case 6: col = 0x66CCFFBB;
								case 7: col = 0x339933AA;
							}
							GangZoneHideForPlayer(i, WarZone);
							GangZoneShowForPlayer(i, WarZone, col);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
							new str_game[144];
							format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
						}
					}
					gangwar = 0;
				}
			}
		}
	}
	if(gangwar == 6) {
	    WarTimeSec--;
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
				new time[12];
				if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
				else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
				cef_emit_event(i, "capture-time", CEFSTR(time));
				cef_emit_event(i, "capture-text", CEFSTR("продление 4"));
			}
		}
	    if(WarTimeSec == 0 && WarTimeMin != 0) {
			WarTimeSec = 59;
			WarTimeMin--;
			for(new i = 0; i < MAX_PLAYERS; i++) {
				if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					new time[12];
					if(WarTimeSec > 9) format(time, sizeof(time), "%d:%d", WarTimeMin, WarTimeSec);
					else format(time, sizeof(time), "%d:0%d", WarTimeMin, WarTimeSec);
					cef_emit_event(i, "capture-time", CEFSTR(time));
					cef_emit_event(i, "capture-text", CEFSTR("продление 4"));
				}
			}
		}
		if(WarTimeSec == 0 && WarTimeMin == 0) {
		    if(CommandKill[0] == CommandKill[1]) {
				for(new i = 0; i < MAX_PLAYERS; i++) {
				    if(PI[i][data_MEMBER] == 5 || PI[i][data_MEMBER] == 6 || PI[i][data_MEMBER] == 7) {
						cef_emit_event(i, "capture-text", CEFSTR("продление 4"));
				    	GangZoneHideForPlayer(i, CaptZone);
				    	GangZoneStopFlashForPlayer(i, WarZone);
				    	gz_info[WarZone][gzopg] = Command[0];
				    	new col;
						switch(Command[0]) {
						    case 5: col = 0x663399BB;
						    case 6: col = 0x66CCFFBB;
						    case 7: col = 0x339933AA;
						}
				    	GangZoneHideForPlayer(i, WarZone);
				    	GangZoneShowForPlayer(i, WarZone, col);
						ClearKillFeed(i);
						cef_emit_event(i, "hide-capture");
						cef_emit_event(i, "clear-kill-list");
			    		new str_game[144];
				    	format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
						SendClientMessage(i, CY, str_game);
				    }
				}
				gangwar = 0;
			}
			else {
			    if(CommandKill[0] > CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
					    if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
					    	GangZoneHideForPlayer(i, CaptZone);
					    	GangZoneStopFlashForPlayer(i, WarZone);
					    	gz_info[WarZone][gzopg] = Command[0];
					    	new col;
							switch(Command[0]) {
							    case 5: col = 0x663399BB;
							    case 6: col = 0x66CCFFBB;
							    case 7: col = 0x339933AA;
							}
					    	GangZoneHideForPlayer(i, WarZone);
					    	GangZoneShowForPlayer(i, WarZone, col);
					    	SaveGZ(Command[0], WarZone);
							ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
				    		new str_game[144];
					    	format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась успешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
					    }
					}
					gangwar = 0;
			    }
			    else if(CommandKill[0] < CommandKill[1]) {
					for(new i = 0; i < MAX_PLAYERS; i++) {
					    if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
							cef_emit_event(i, "capture-text", CEFSTR("продление 1"));
					    	GangZoneHideForPlayer(i, CaptZone);
					    	GangZoneStopFlashForPlayer(i, WarZone);
					    	GangZoneHideForPlayer(i, WarZone);
					    	new col;
							switch(Command[1]) {
							    case 5: col = 0x663399BB;
							    case 6: col = 0x66CCFFBB;
							    case 7: col = 0x339933AA;
							}
					    	GangZoneHideForPlayer(i, WarZone);
					    	GangZoneShowForPlayer(i, WarZone, col);
					    	ClearKillFeed(i);
							cef_emit_event(i, "hide-capture");
							cef_emit_event(i, "clear-kill-list");
					    	new str_game[144];
					    	format(str_game, sizeof(str_game), "Попытка ОПГ %s захватить территорию у ОПГ %s завершилась неуспешно", Fraction_Name[Command[0]], Fraction_Name[Command[1]]);
							SendClientMessage(i, CY, str_game);
					    }
					}
					gangwar = 0;
			    }
			}
		}
	}
	if(global_minute == 60) {
	    new hour, minute, second;
	    gettime(hour, minute, second);
	    switch(minute) {
		    case 2: {
				for(new b = 0; b < TotalBusiness; b++) {
					if(BUSINESS_DATA[b][data_OWNED] == 0) continue;
					if(BUSINESS_DATA[b][data_DAY] == 0) continue;
					if(BUSINESS_DATA[b][data_PROD] < 200) continue;
					new tovar = RandomEX(10, 200),money;
					switch(BUSINESS_DATA[b][data_TYPE]) {
						case 1:money = tovar*40;
						case 2:money = tovar*70;
						case 3:money = tovar*62;
						case 4:money = tovar*82;
						case 5:money = tovar*61;
						case 6:money = tovar*62;
					}
					BUSINESS_DATA[b][data_BANK] += money;
					BUSINESS_DATA[b][data_PROD] -= tovar;
					UpdateBusinessData(b);
					SaveBusinessData(b);
				}
			}
			case 35: {
			    SendClientMessageToAll(0xf00e5dFF,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			    SendClientMessageToAll(0xf00e5dFF,"{FFFFFF}Для посещения игрового магазина посетите сайт {f00e5d}"SITE"");
				SendClientMessageToAll(0xf00e5dFF,"{FFFFFF}Общение игроков и тороговая площадка - ждём тебя! {f00e5d}vk.com/"FREE"");
			    SendClientMessageToAll(0xf00e5dFF,"{FFFFFF}В нашей игре действует реферальная система. Подробности на {f00e5d}vk.com/"VK"");
			    SendClientMessageToAll(0xf00e5dFF,"{FFFFFF}При возникновении вопросов по игре, обращяйтесь в тех. поддержку: {f00e5d}vk.com/"VK"");
			    SendClientMessageToAll(0xf00e5dFF,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			    new time = GetTickCount();
			    for(new b = 0; b < TotalJB; b++) SaveJBData(b);
			    for(new k = 0; k < TotalKV; k++) SaveKVData(k);
			    for(new a = 0; a < TotalAB; a++) SaveABData(a);
			    for(new h = 0; h < TotalHouses; h++) SaveHouseData(h);
			    for(new b = 0; b < TotalBusiness; b++) SaveBusinessData(b);
			    SaveWarehouse();
			    printf("[server_log] save all. Time: %d ms.",GetTickCount()-time );
			}
			case 0: if(hour == 9) SendClientMessageToAll(COLOR_AC,"Внимание! Через 3 минуты произойдёт плановый перезапуск сервера");
            case 3: {
                if(hour == 9 && restartserver == 0) {
				    restartserver = 1;
					RestartCFG();
				}
            }
			case 59: {
                if(hour == 23 && bizfin == 0) {
				    bizfin = 1;
					SetBizFin();
				}
            }
		}
  		global_minute = 0;
		for(new carid; carid < MAX_VEHICLES; carid++) {
			if(!IsABMX(carid)) {
				if(CAR_DATA[carid][data_ENG] == 1) {
			  		if(CAR_DATA[carid][data_FUEL] <= 0) {
			    		GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
						SetVehicleParamsEx(carid,false,lights_text,alarm,doors_text,bonnet,boot,objective);
						CAR_DATA[carid][data_ENG] = 0;
						CAR_DATA[carid][data_FUEL] = 0;
						return 1;
			    	}
			    	CAR_DATA[carid][data_FUEL] -= 1;
			   	}
			}
		}
	}
	return 1;
}
callback: LoadBans() {
    new rows, fields, temp[60],time = GetTickCount(),banac;
    cache_get_data(rows, fields);
    if(rows) {
    	for(new b = 0; b < rows; b++) {
         	cache_get_field_content(b, "id", temp), BANS_DATA[b][data_ID] = strval (temp);
         	cache_get_field_content(b, "day", temp), BANS_DATA[b][data_DAY] = strval (temp);
			TotalBans++;
   			if(BANS_DATA[b][data_DAY] <= 0) {
				new str_q[144];
			    mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `banlist` WHERE `id` = '%d'", BANS_DATA[b][data_ID]);
	    		mysql_function_query(dbHandle, str_q, false, "", "");
	    		banac++;
			}
			else {
       			BANS_DATA[b][data_DAY]--;
				new str_q[144];
			    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `banlist` SET `day` = '%d' WHERE `id` = '%d'",BANS_DATA[b][data_DAY],BANS_DATA[b][data_ID]);
			    mysql_function_query(dbHandle, str_q, false, "", "");
			}
		}
		printf("[INFO]  Load bans accounts. Load: %d. Unban: %d. Ex unban: %d. Time: %d ms.",TotalBans,banac,TotalBans-banac, GetTickCount()-time);
  	}
    return 1;
}
callback: LoadAllMembers(playerid) {
    new rows, fields,temp[10];
    new name[MAX_PLAYER_NAME],rank,logd1,logd2,logd3;
	new str_1[512];
	new str_3[512];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "name", name, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(i, "rank", temp), rank = strval (temp);
		cache_get_field_content(i, "logdate_day", temp), logd1 = strval (temp);
		cache_get_field_content(i, "logdate_month", temp), logd2 = strval (temp);
		cache_get_field_content(i, "logdate_year", temp), logd3 = strval (temp);
		format(str_1,sizeof(str_1),"%s%s\t%d\t%d.%d.%d\n", str_1, name, rank, logd1, logd2, logd3);
	}
	format(str_3,sizeof(str_3),"Имя\tРанг\tПоследний вход\n%s",str_1);
	ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Список участников организации", str_3, "Закрыть", "");
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid) {
    if(clickedid == Text:INVALID_TEXT_DRAW && PI[playerid][data_CLICKTD] == true) {
        if(PI[playerid][data_OPENCASINO] == true) {
            HideCasinoGame(playerid);
            casino_stavka[playerid] = 0;
			casino_update[playerid] = 0;
			KillTimer(casino_timer[playerid]);
            return 1;
        }
  		if(PI[playerid][data_CLOTHESMENU] == true) {
			TextDrawHideForPlayer(playerid, buy_clothes[0]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[1]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[2]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[3]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[4]);
		  	TextDrawHideForPlayer(playerid, buy_clothes[5]);
		  	PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
 			PI[playerid][data_CLICKTD] = false;
 			PI[playerid][data_CLOTHESMENU] = false;
 			SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
 			new b = GetPVarInt(playerid,"Clothes_biz");
 			SetPlayerPosAC(playerid,BUSINESS_DATA[b][data_EXITX],BUSINESS_DATA[b][data_EXITY],BUSINESS_DATA[b][data_EXITZ]);
    		SetPlayerInterior(playerid,BUSINESS_DATA[b][data_INT]);
    		SetPlayerVirtualWorld(playerid,BUSINESS_DATA[b][data_VW]);
    		FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
			SetCameraBehindPlayer(playerid);
 			CancelSelectTextDraw(playerid);
			return 1;
		}
  		if(PI[playerid][data_OPENAUTOSALON] == true) {
  			DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
  			PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
			HideAutoSalonMenu(playerid);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerPosAC(playerid,2323.1794,-1804.2302,22.4540);
			SetPlayerFacingAngle(playerid, 90.4463);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
	}
	else {
     	if(clickedid == casino_bet) {
		    if(casino_update[playerid] != 0) return SendClientMessage(playerid, CG, "Дождитесь окончания игры");
		    for(new i = 0; i < sizeof(casino_pos); i++) {
		 	    if(PlayerToPoint(0.2, playerid, casino_pos[i][0], casino_pos[i][1], casino_pos[i][2]) && PI[playerid][data_OPENCASINO] == true) {
				    ShowPlayerDialog(playerid, dialog_CASINO, DIALOG_STYLE_INPUT, "{f00e5d}Color Game","Укажите вашу ставку", "Начать", "Отмена");
					return 1;
				}
	 		}
		}
	    for(new i = 0; i < 48; i++) {
		    if(clickedid == AutoSalon_Color[i]) {
			    if(GetPVarInt(playerid,"as_color") == 0) PI[playerid][data_ONECOLOR_AS] = color_veh[i][ciCar];
			    else PI[playerid][data_TWOCOLOR_AS] = color_veh[i][ciCar];
			    ChangeVehicleColor(PI[playerid][data_AUTOSALON_CAR], PI[playerid][data_ONECOLOR_AS], PI[playerid][data_TWOCOLOR_AS]);
			    return 1;
		    }
		}
	    if(clickedid == AutoSalon_ButtonColor[0]) SetPVarInt(playerid,"as_color",0);
	    if(clickedid == AutoSalon_ButtonColor[1]) SetPVarInt(playerid,"as_color",1);
	    if(clickedid == AutoSalon_Button[0]) return ShowPlayerDialog(playerid, dialog_BUY_CAR, DIALOG_STYLE_LIST, "{f00e5d}Выбор метода оплаты","1. Купить за донат-поинты\n2. Купить за наличные", "Выбрать", "Отмена");
	    if(clickedid == AutoSalon_Button[1]) {
	        PI[playerid][data_CHANGECAR]--;
			if(PI[playerid][data_CHANGECAR] <= -1) PI[playerid][data_CHANGECAR] = sizeof(autosalon_cars)-1;
			DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
		    PI[playerid][data_AUTOSALON_CAR] = CreateVehicle(autosalon_cars[PI[playerid][data_CHANGECAR]][asModel], 294.8927,1720.3408,11.8301,22.2060, PI[playerid][data_ONECOLOR_AS], PI[playerid][data_TWOCOLOR_AS], 36000);
			TextDrawShowForPlayer(playerid,AutoSalon_Stats[0]);
	    	SetVehicleVirtualWorld(PI[playerid][data_AUTOSALON_CAR], playerid);
	    	return 1;
		}
	    if(clickedid == AutoSalon_Button[2]) {
	        PI[playerid][data_CHANGECAR]++;
			if(PI[playerid][data_CHANGECAR] >= sizeof(autosalon_cars)) PI[playerid][data_CHANGECAR] = 0;
			DestroyVehicle(PI[playerid][data_AUTOSALON_CAR]);
		    PI[playerid][data_AUTOSALON_CAR] = CreateVehicle(autosalon_cars[PI[playerid][data_CHANGECAR]][asModel], 294.8927,1720.3408,11.8301,22.2060, PI[playerid][data_ONECOLOR_AS], PI[playerid][data_TWOCOLOR_AS], 36000);
	    	SetVehicleVirtualWorld(PI[playerid][data_AUTOSALON_CAR], playerid);
	    	return 1;
		}
		if(clickedid == AutoSalon_Stats[0]) {
		    new BufferCar[144];
			new modelid = GetVehicleModel(PI[playerid][data_AUTOSALON_CAR]);
			if(modelid == 560) format(BufferCar, sizeof(BufferCar), "Электрический");
			else format(BufferCar, sizeof(BufferCar), "Бензиновый");
			new str_3[512];
			format(str_3, sizeof str_3, "Название:\t\t\t{276dc1}%s\n\
			Цена:\t\t\t\t{f00e5d}%d руб / %d дп\n\
			Тип двигателя:\t\t\t{276dc1}%s\n\
			Максимальная скорость:\t\t%d км/ч\n\
			Класс автомобиля:\t\t\t%s", VehicleNames[modelid-400], autosalon_cars[PI[playerid][data_CHANGECAR]][asCena], autosalon_cars[PI[playerid][data_CHANGECAR]][asDonate], BufferCar, autosalon_cars[PI[playerid][data_CHANGECAR]][asSpeed],autosalon_cars[PI[playerid][data_CHANGECAR]][asClass]);
		    ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о транспорте", str_3, "Закрыть", "");
		}
		if(PI[playerid][data_CLOTHESMENU] == true) {
		    if(clickedid == buy_clothes[4]) {
				if(PI[playerid][data_SEX] == 1) {
				    PI[playerid][data_CHANGESKIN]--;
	       			if(PI[playerid][data_CHANGESKIN] <= -1) PI[playerid][data_CHANGESKIN] = 99;
	              	SetPlayerSkinAC(playerid,SkinMale[PI[playerid][data_CHANGESKIN]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinMale[PI[playerid][data_CHANGESKIN]][1]);
	    			PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
				else {
				    PI[playerid][data_CHANGESKIN]--;
	       			if(PI[playerid][data_CHANGESKIN] <= -1) PI[playerid][data_CHANGESKIN] = 17;
	              	SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][data_CHANGESKIN]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinFeMale[PI[playerid][data_CHANGESKIN]][1]);
		    		PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
			}
			if(clickedid == buy_clothes[5]) {
				if(PI[playerid][data_SEX] == 1) {
				    PI[playerid][data_CHANGESKIN]++;
	       			if(PI[playerid][data_CHANGESKIN] >= 100) PI[playerid][data_CHANGESKIN] = 0;
	              	SetPlayerSkinAC(playerid,SkinMale[PI[playerid][data_CHANGESKIN]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinMale[PI[playerid][data_CHANGESKIN]][1]);
	    			PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
				else {
				    PI[playerid][data_CHANGESKIN]++;
	       			if(PI[playerid][data_CHANGESKIN] >= 18) PI[playerid][data_CHANGESKIN] = 0;
	              	SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][data_CHANGESKIN]][0]);
					new str_1[30];
	   				format(str_1,sizeof(str_1),"%d",SkinFeMale[PI[playerid][data_CHANGESKIN]][1]);
		    		PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], str_1);
				}
			}
			if(clickedid == buy_clothes[3]) {
			    new b = GetPVarInt(playerid,"Clothes_biz");
			    if(BUSINESS_DATA[b][data_PROD] < 100 && BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid, CG,"В бизнесе недостаточно продуктов");
				if(PI[playerid][data_SEX] == 1) {
				    new CenaSkin;
			    	CenaSkin = SkinMale[PI[playerid][data_CHANGESKIN]][1];
					if(get_player_money(playerid) < CenaSkin) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
					PI[playerid][data_SKIN] = GetPlayerSkin(playerid);
					give_player_money(playerid,-CenaSkin,"#64",16844);
					TextDrawHideForPlayer(playerid, buy_clothes[0]);
				    TextDrawHideForPlayer(playerid, buy_clothes[1]);
				    TextDrawHideForPlayer(playerid, buy_clothes[2]);
				    TextDrawHideForPlayer(playerid, buy_clothes[3]);
				    TextDrawHideForPlayer(playerid, buy_clothes[4]);
				    TextDrawHideForPlayer(playerid, buy_clothes[5]);
				    PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
		          	PI[playerid][data_CLICKTD] = false;
		          	PI[playerid][data_CLOTHESMENU] = false;
		          	SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
		 			SetPlayerPosAC(playerid,BUSINESS_DATA[b][data_EXITX],BUSINESS_DATA[b][data_EXITY],BUSINESS_DATA[b][data_EXITZ]);
		    		SetPlayerInterior(playerid,BUSINESS_DATA[b][data_INT]);
		    		SetPlayerVirtualWorld(playerid,BUSINESS_DATA[b][data_VW]);
		    		FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		        	SetCameraBehindPlayer(playerid);
		        	CancelSelectTextDraw(playerid);
		        	SendClientMessage(playerid,CY,"Поздравляем Вас с покупкой новой одежды");
					if(BUSINESS_DATA[b][data_OWNED] != 0) {
						BUSINESS_DATA[b][data_PROD] -= 1;
						BUSINESS_DATA[b][data_BANK] += CenaSkin;
						UpdateBusinessData(b);
					}
				}
				else
				{
				    new CenaSkin;
			    	CenaSkin = SkinFeMale[PI[playerid][data_CHANGESKIN]][1];
				    if(get_player_money(playerid) < CenaSkin) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
					PI[playerid][data_SKIN] = GetPlayerSkin(playerid);
					give_player_money(playerid,-CenaSkin,"#65",16875);
					TextDrawHideForPlayer(playerid, buy_clothes[0]);
				    TextDrawHideForPlayer(playerid, buy_clothes[1]);
				    TextDrawHideForPlayer(playerid, buy_clothes[2]);
				    TextDrawHideForPlayer(playerid, buy_clothes[3]);
				    TextDrawHideForPlayer(playerid, buy_clothes[4]);
				    TextDrawHideForPlayer(playerid, buy_clothes[5]);
				    PlayerTextDrawHide(playerid, buy_clothes_m[playerid]);
		          	PI[playerid][data_CLICKTD] = false;
		          	PI[playerid][data_CLOTHESMENU] = false;
		          	SetPlayerSkinAC(playerid,PI[playerid][data_SKIN]);
		          	SetPlayerPosAC(playerid,BUSINESS_DATA[b][data_EXITX],BUSINESS_DATA[b][data_EXITY],BUSINESS_DATA[b][data_EXITZ]);
		    		SetPlayerInterior(playerid,BUSINESS_DATA[b][data_INT]);
		    		SetPlayerVirtualWorld(playerid,BUSINESS_DATA[b][data_VW]);
		    		FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
		        	SetCameraBehindPlayer(playerid);
		        	CancelSelectTextDraw(playerid);
		        	SendClientMessage(playerid,CY,"Поздравляем Вас с покупкой новой одежды");
					if(BUSINESS_DATA[b][data_OWNED] != 0) {
						BUSINESS_DATA[b][data_PROD] -= 1;
						BUSINESS_DATA[b][data_BANK] += CenaSkin;
						UpdateBusinessData(b);
					}
				}
				return 1;
			}
		}
	}
	return 1;
}

callback: CasinoUpdate(playerid)
{
    casino_update[playerid]++;
	if(casino_update[playerid] < 6)
	{
 		casino_point[playerid][0] = random(3);
		switch(casino_point[playerid][0])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][0], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][0], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][0], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][0]);
		return 1;
	}

	else if(casino_update[playerid] < 11 && casino_update[playerid] > 5)
	{
 		casino_point[playerid][1] = random(3);
		switch(casino_point[playerid][1])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][1], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][1], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][1], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][1]);
		return 1;
	}
	else if(casino_update[playerid] < 16 && casino_update[playerid] > 10)
	{
 		casino_point[playerid][2] = random(3);
		switch(casino_point[playerid][2])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][2], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][2], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][2], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][2]);
		return 1;
	}
	else if(casino_update[playerid] < 21 && casino_update[playerid] > 15)
	{
 		casino_point[playerid][3] = random(3);
		switch(casino_point[playerid][3])
		{
			case 0:PlayerTextDrawColor(playerid, casino_card[playerid][3], 16711935);
			case 1:PlayerTextDrawColor(playerid, casino_card[playerid][3], -65281);
			case 2:PlayerTextDrawColor(playerid, casino_card[playerid][3], -5963521);
			case 3:PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
		}

		PlayerTextDrawShow(playerid,casino_card[playerid][3]);
		return 1;
	}
	else {
	    KillTimer(casino_timer[playerid]);
		new str_1[35];
	    if(casino_point[playerid][0] == casino_point[playerid][1] &&
		casino_point[playerid][2] == casino_point[playerid][3] &&
		casino_point[playerid][0] == casino_point[playerid][3]) {
		    new money = casino_stavka[playerid]*10;
		    give_player_money(playerid, money, "co#2",16974);
		    cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы выиграли"));
		    new text[90];
		    format(text,sizeof(text),"Поздравляем! Вы выйграли %d рублей",money);
		    SendClientMessage(playerid ,0xFFFF33FF, text);
		}
		else {
		    cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы проиграли"));
		}
		casino_stavka[playerid] = 0;
		casino_update[playerid] = 0;
		new str_3[35];
		format(str_1, sizeof(str_1), "%d RUB", get_player_money(playerid));
		format(str_3, sizeof(str_3), "%d RUB", casino_stavka[playerid]);
		PlayerTextDrawSetString(playerid,casino_money[playerid][0],str_1);
		PlayerTextDrawSetString(playerid,casino_money[playerid][1],str_3);
	}
	return 1;
}
callback: WalkAnim(playerid)
{
    new keys, updown, leftright;
    GetPlayerKeys(playerid,keys,updown,leftright);
    if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
    {
  		if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
    else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
    {
    	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
        {
        	KillTimer(PI[playerid][data_WALK_TIMER]);
            ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
            PI[playerid][data_WALK_TIMER] = SetTimerEx("WalkAnim",200,0,"d",playerid);
        }
        else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(PI[playerid][data_WALK_TIMER]);
    }
	return 1;
}

callback: OgorodLoaded(playerid) {
    SetPVarInt(playerid,"ac_timer",1);
	ClearAnimations(playerid);
    SetPlayerCheckpoint(playerid, 2121.9841,1816.7822,12.1923, 2.0);
   	DeletePVar(playerid, "process");
    SetPVarInt(playerid, "tovar", 1);
    ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,0,0,1,1);
	SetPlayerAttachedObject(playerid, 1, 3052, 5, 0.01, 0.1, 0.2, 100, 190, 90);
	return 1;
}
callback: ClearAnimPlayer(playerid) return ClearAnimations(playerid);
callback: DrevLoaded(playerid) {
    SetPVarInt(playerid,"ac_timer", 4);
	ClearAnimations(playerid);
    SetPlayerCheckpoint(playerid, 2377.9910,-597.2129,12.1172, 2.0);
	ApplyAnimation(playerid,"PED","IDLE_chat",100.0,0,0,0,1,3150);
    ResetWeaponSlot(playerid, 1);
   	DeletePVar(playerid, "process");
    switch(random(5)) {
        case 0: SetPVarInt(playerid, "tovar", 40);
        case 1: SetPVarInt(playerid, "tovar", 45);
        case 2: SetPVarInt(playerid, "tovar", 50);
        case 3: SetPVarInt(playerid, "tovar", 55);
        case 4: SetPVarInt(playerid, "tovar", 60);
    }
	SetPlayerAttachedObject(playerid, 1, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
	SetPlayerAttachedObject(playerid, 2, 1463, 1, -0.205007, 1.545087, -0.014800, 171.406829, 96.114616, 0.066009, 0.403667, 1.000000, 1.021239 );
	return 1;
}

callback: YabloLoaded(playerid) {
    SetPVarInt(playerid,"ac_timer",3);
	if(GetPVarInt(playerid, "yablo_check") == 5) {
        SetPlayerAttachedObject(playerid, 1, 3052, 5, 0.01, 0.1, 0.2, 100, 190, 90);
    	SetPlayerCheckpoint(playerid, 1996.3546,1008.5398,14.9956, 2.0);
   		DeletePVar(playerid, "process");
		SetPVarInt(playerid, "tovar", 1);
		KillTimer(PI[playerid][data_YABLO_TIMER_ID]);
		ClearAnim(playerid);
		SendClientMessage(playerid, 0xffcd00FF, "Вы достали ящик с мусором из воды, теперь доставьте мусор на берег ({3377cc}позиция отмечена маркером на миникарте{ffcd00})");
		return 1;
	}
	SetPVarInt(playerid, "yablo_check", GetPVarInt(playerid, "yablo_check")+1);
	return 1;
}
stock UpdateBusinessData(b) {
    if(BUSINESS_DATA[b][data_TYPE] == 1) {
	    if(BUSINESS_DATA[b][data_OWNED] == 1) {
		    new mafia[16];
			switch(BUSINESS_DATA[b][data_MAFIA]) {
				case 5: mafia = "Скинхеды";
				case 6: mafia = "Гопота";
				case 7: mafia = "Кавказцы";
				default: mafia = "Нет";
			}
			new str_1[256];
	    	format(str_1,sizeof(str_1), "{c89522}%s\n{FFFFFF}Владелец: {c89522}%s\n{FFFFFF}Топлива: {c89522}%i л\n{FFFFFF}Цена за 1 л: {c89522}%i рублей\n{FFFFFF}Закупочная цена: {c89522}%i рублей\n{FFFFFF}Крыша: {c89522}%s\n{FFFFFF}/buyfuel",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_OWNER],BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_CENA],BUSINESS_DATA[b][data_PRICEPROD],mafia);
     		UpdateDynamic3DTextLabelText(BUSINESS_DATA[b][data_TEXTINFO], -1, str_1);
		}
		else {
			new str_1[256];
			format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {b54157}%s\n{FFFFFF}Стоимость: {b54157}%i руб\n{ffffff}Используйте: {e8c497}/buybusiness",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_PRICE]);
			UpdateDynamic3DTextLabelText(BUSINESS_DATA[b][data_TEXTINFO], -1, str_1);
		}
	}
	else {
		if(BUSINESS_DATA[b][data_OWNED] == 1) {
		    new mafia[16];
			switch(BUSINESS_DATA[b][data_MAFIA]) {
				case 5: mafia = "Скинхеды";
				case 6: mafia = "Гопота";
				case 7: mafia = "Кавказцы";
				default: mafia = "Нет";
			}
			new str_1[256];
			format(str_1,sizeof(str_1), "{c89522}%s\n{FFFFFF}Владелец: {c89522}%s\n{FFFFFF}Продуктов: {c89522}%i шт\n{FFFFFF}Цена покупки продуктов: {c89522}%i рублей\n{FFFFFF}Крыша: {c89522}%s\n{FFFFFF}Вход бесплатный",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_OWNER],BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_PRICEPROD],mafia);
			UpdateDynamic3DTextLabelText(BUSINESS_DATA[b][data_TEXTINFO], -1, str_1);
		}
		else {
			new str_1[256];
			format(str_1,sizeof(str_1), "{FFFFFF}Бизнес: {b54157}%s\n{ffffff}Стоимость: {b54157}%i руб\n{ffffff}Используйте: {e8c497}/buybusiness",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_PRICE]);
			UpdateDynamic3DTextLabelText(BUSINESS_DATA[b][data_TEXTINFO], -1, str_1);
		}
	}
	return 1;
}
stock SaveBusinessData(b) {
	new str_q[1048];
	new str_q2[1048];
	str_q = "UPDATE `business` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner", BUSINESS_DATA[b][data_OWNER]);
	acc_int_strcat(str_q, sizeof(str_q), "owned", BUSINESS_DATA[b][data_OWNED]);
	acc_str_strcat(str_q, sizeof(str_q), "name", BUSINESS_DATA[b][data_NAME]);
	acc_int_strcat(str_q, sizeof(str_q), "mafia", BUSINESS_DATA[b][data_MAFIA]);
	acc_int_strcat(str_q, sizeof(str_q), "prod", BUSINESS_DATA[b][data_PROD]);
	acc_int_strcat(str_q, sizeof(str_q), "day", BUSINESS_DATA[b][data_DAY]);
	acc_int_strcat(str_q, sizeof(str_q), "clients", BUSINESS_DATA[b][data_CLIENT]);
	acc_int_strcat(str_q, sizeof(str_q), "lock", BUSINESS_DATA[b][data_LOCK]);
	acc_int_strcat(str_q, sizeof(str_q), "cena", BUSINESS_DATA[b][data_CENA]);
	acc_int_strcat(str_q, sizeof(str_q), "price_prod", BUSINESS_DATA[b][data_PRICEPROD]);
	acc_int_strcat(str_q, sizeof(str_q), "bank", BUSINESS_DATA[b][data_BANK]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",BUSINESS_DATA[b][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock SaveJBData(b) {
	new str_q[1048];
	new str_q2[1048];
	str_q = "UPDATE `job_business` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner", JB_DATA[b][data_OWNER]);
	acc_int_strcat(str_q, sizeof(str_q), "owned", JB_DATA[b][data_OWNED]);
	acc_int_strcat(str_q, sizeof(str_q), "sklad", JB_DATA[b][data_SKLAD]);
	acc_int_strcat(str_q, sizeof(str_q), "bank", JB_DATA[b][data_BANK]);
	acc_int_strcat(str_q, sizeof(str_q), "sell_price_1", JB_DATA[b][data_SELL_PRICE][0]);
	acc_int_strcat(str_q, sizeof(str_q), "sell_price_2", JB_DATA[b][data_SELL_PRICE][1]);
	acc_int_strcat(str_q, sizeof(str_q), "sell_price_3", JB_DATA[b][data_SELL_PRICE][2]);
	acc_int_strcat(str_q, sizeof(str_q), "sell_price_4", JB_DATA[b][data_SELL_PRICE][3]);
	acc_int_strcat(str_q, sizeof(str_q), "sell_price_5", JB_DATA[b][data_SELL_PRICE][4]);
	acc_int_strcat(str_q, sizeof(str_q), "bus_money", JB_DATA[b][data_BUS_MONEY]);
	acc_int_strcat(str_q, sizeof(str_q), "job_money", JB_DATA[b][data_JOB_MONEY]);
	acc_int_strcat(str_q, sizeof(str_q), "car1_job", JB_DATA[b][data_MODEL_JOB][0]);
	acc_int_strcat(str_q, sizeof(str_q), "car2_job", JB_DATA[b][data_MODEL_JOB][1]);
	acc_int_strcat(str_q, sizeof(str_q), "car3_job", JB_DATA[b][data_MODEL_JOB][2]);
	acc_int_strcat(str_q, sizeof(str_q), "car4_job", JB_DATA[b][data_MODEL_JOB][3]);
	acc_int_strcat(str_q, sizeof(str_q), "car5_job", JB_DATA[b][data_MODEL_JOB][4]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",JB_DATA[b][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock NotReklama(playerid, string[]) {
	new i, AR;
	for(i = strlen(string); i != 0; --i)
	switch(string[i]) {
		case '0'..'9': AR++;
	}
	if(AR > 7) {
	    new msg[145];
		format(msg,sizeof(msg),"[Ghost-Message] Подозрение на %s[%d] (Сообщение: %s)",PI[playerid][data_NAME],playerid,string);
		SendAdminMessage(0x66e0d6FF,msg);
		return 0;
  	}
	return 1;
}
stock GetPlayerGangZone(playerid) {
	for(new i; i <= totalgz; i++) if(IsPlayerToKvadrat(playerid,gz_info[i][gzminx],gz_info[i][gzminy],gz_info[i][gzmaxx],gz_info[i][gzmaxy])) return i;
	return -1;
}
IsPlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x, y, z);
	if((x <= max_x && x >= min_x) && (y <= max_y && y >= min_y)) return 1;
	return 0;
}
stock SaveABData(b) {
	new str_q[1048];
	new str_q2[1048];
	str_q = "UPDATE `auto_business` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner", AB_DATA[b][data_OWNER]);
	acc_int_strcat(str_q, sizeof(str_q), "owned", AB_DATA[b][data_OWNED]);
	acc_int_strcat(str_q, sizeof(str_q), "procent", AB_DATA[b][data_PROCENT]);
	acc_int_strcat(str_q, sizeof(str_q), "bank", AB_DATA[b][data_BANK]);
	acc_int_strcat(str_q, sizeof(str_q), "car1_job", AB_DATA[b][data_MODEL_JOB][0]);
	acc_int_strcat(str_q, sizeof(str_q), "car2_job", AB_DATA[b][data_MODEL_JOB][1]);
	acc_int_strcat(str_q, sizeof(str_q), "car3_job", AB_DATA[b][data_MODEL_JOB][2]);
	acc_int_strcat(str_q, sizeof(str_q), "car4_job", AB_DATA[b][data_MODEL_JOB][3]);
	acc_int_strcat(str_q, sizeof(str_q), "car5_job", AB_DATA[b][data_MODEL_JOB][4]);
    acc_int_strcat(str_q, sizeof(str_q), "car6_job", AB_DATA[b][data_MODEL_JOB][5]);
	acc_int_strcat(str_q, sizeof(str_q), "car7_job", AB_DATA[b][data_MODEL_JOB][6]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",AB_DATA[b][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock UpdateABText(b) {
    DestroyDynamic3DTextLabel(AB_DATA[b][data_INFO]);
    if(AB_DATA[b][data_OWNED] == 1) {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}Автобаза '%s'\n{FFFF33}Владелец: {FFFFFF}%s\n{FFFF33}Стоимость: {FFFFFF}%d рублей\n{FFFF33}Зарплата водителя: {FFFFFF}%d процент(ов)", AB_DATA[b][data_NAME], AB_DATA[b][data_OWNER], AB_DATA[b][data_PRICE], AB_DATA[b][data_PROCENT]);
		AB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, AB_DATA[b][data_INFO_POS][0], AB_DATA[b][data_INFO_POS][1], AB_DATA[b][data_INFO_POS][2], 5.0);
	}
	else {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}Автобаза '%s'\n{FFFF33}Стоимость: {FFFFFF}%d рублей\n{99FFFF}Для покупки используйте: /buy", AB_DATA[b][data_NAME], AB_DATA[b][data_PRICE]);
		AB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, AB_DATA[b][data_INFO_POS][0], AB_DATA[b][data_INFO_POS][1], AB_DATA[b][data_INFO_POS][2], 5.0);
	}
	return 1;
}
stock ShowShopMenu(playerid) return ShowPlayerDialog(playerid, dialog_24_MENU, DIALOG_STYLE_LIST, "{bc2a52}Магазин 24/7", "\
	1. Чипсы (с собой)\t\t\t{ebeb8e}150 руб.\n\
	{252525}2. Пицца (с собой)\t\t\t{ebeb8e}400 руб.\n\
	{252525}3. Букет цветов 'Миллионы алых роз'\t{ebeb8e}500 руб.\n\
	{252525}4. Медицинская аптечка\t\t{ebeb8e}200 руб.\n\
	{252525}5. Фотоапарат\t\t\t\t{ebeb8e}500 руб.\n\
	{252525}6. Балончик с краской\t\t\t{ebeb8e}400 руб.\n\
	{252525}7. Маска\t\t\t\t{ebeb8e}300 руб.\n\
	{252525}8. bPhoneXX\t\t\t\t{ebeb8e}5500 руб.\n\
	{252525}9. SIM картка (6 цифр)\t\t\t{ebeb8e}300 руб.", "Купить", "Закрыть");
stock ShowCasinoGame(playerid)
{
    for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid, casino_fon[i]);
	for(new i = 0; i < 4; i++) PlayerTextDrawShow(playerid,casino_card[playerid][i]);
	for(new i = 0; i < 2; i++) PlayerTextDrawShow(playerid,casino_money[playerid][i]);
	TextDrawShowForPlayer(playerid, casino_bet);
    PI[playerid][data_OPENCASINO] = true;
    PI[playerid][data_CLICKTD] = true;
    SelectTextDraw(playerid,0xddddddff);
	return 1;
}
stock HideCasinoGame(playerid) {
	for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, casino_fon[i]);
	for(new i = 0; i < 4; i++) PlayerTextDrawHide(playerid,casino_card[playerid][i]);
	for(new i = 0; i < 2; i++) PlayerTextDrawHide(playerid,casino_money[playerid][i]);
	TextDrawHideForPlayer(playerid, casino_bet);
    PI[playerid][data_OPENCASINO] = false;
    PI[playerid][data_CLICKTD] = false;
    CancelSelectTextDraw(playerid);
	return 1;
}
stock ShowAutoSalonMenu(playerid) {
	SetPVarInt(playerid, "asalon", 1);
    PI[playerid][data_OPENAUTOSALON] = true;
    PI[playerid][data_CLICKTD] = true;
	for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid, AutoSalon_Button[i]);
	TextDrawShowForPlayer(playerid,AutoSalon_Stats[0]);
	SelectTextDraw(playerid,0xddddddff);
	return 1;
}
stock HideAutoSalonMenu(playerid) {
	SetPVarInt(playerid, "asalon", 0);
    PI[playerid][data_OPENAUTOSALON] = false;
    PI[playerid][data_CLICKTD] = false;
	for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, AutoSalon_Button[i]);
    for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, AutoSalon_ButtonColor[i]);
    for(new i = 0; i < 48; i++) TextDrawHideForPlayer(playerid, AutoSalon_Color[i]);
	TextDrawHideForPlayer(playerid,AutoSalon_Stats[0]);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock ShowClothesMenu(playerid,b) {
	if(PI[playerid][data_MEMBER] != 0) return SendClientMessage(playerid, CG, "Вы состоите в организации");
 	PI[playerid][data_CLICKTD] = true;
	PI[playerid][data_CLOTHESMENU] = true;
	SelectTextDraw(playerid,0xddddddff);
    SetPVarInt(playerid, "Clothes_biz", b);
	SendClientMessage(playerid,COLOR_TOMATO,"Чтобы закрыть донат меню, используйте: 'ESC'");
	PI[playerid][data_CHANGESKIN] = 0;
	if(PI[playerid][data_SEX] == 1) SetPlayerSkinAC(playerid,SkinMale[PI[playerid][data_CHANGESKIN]][0]);
	else SetPlayerSkinAC(playerid,SkinFeMale[PI[playerid][data_CHANGESKIN]][0]);
	new string[9];
	format(string,sizeof(string),"%d",SkinMale[PI[playerid][data_CHANGESKIN]][1]);
	PlayerTextDrawSetString(playerid,  buy_clothes_m[playerid], string);
	new virtworld = random(687);
	SetPlayerVirtualWorld(playerid,virtworld);
	SetPlayerInterior(playerid,0);
	TogglePlayerControllable(playerid, false);
	SetPlayerPosAC(playerid, -226.2288,487.0842,21.0635);
	SetPlayerFacingAngle(playerid,200.0);
	InterpolateCameraPos(playerid, -222.566482, 485.403137, 22.127206, -222.566482, 485.403137, 22.127206, 1000);
	InterpolateCameraLookAt(playerid, -227.177688, 486.782836, 20.773227, -227.177688, 486.782836, 20.773227, 1000);
	TextDrawShowForPlayer(playerid, buy_clothes[0]);
	TextDrawShowForPlayer(playerid, buy_clothes[1]);
	TextDrawShowForPlayer(playerid, buy_clothes[2]);
	TextDrawShowForPlayer(playerid, buy_clothes[3]);
	TextDrawShowForPlayer(playerid, buy_clothes[4]);
	TextDrawShowForPlayer(playerid, buy_clothes[5]);
	PlayerTextDrawShow(playerid, buy_clothes_m[playerid]);
	return 1;
}
stock ShowBusinessMenu(playerid,b) {
	switch(BUSINESS_DATA[b][data_TYPE]) {
	    case 2: ShowShopMenu(playerid);
	    case 3: ShowClothesMenu(playerid,b);
	 	case 4: ShowAmmoMenu(playerid);
		case 5: ShowEatMenu(playerid);
	}
	return 1;
}
stock ShowEatMenu(playerid) return ShowPlayerDialog(playerid, dialog_EAT_MENU, DIALOG_STYLE_LIST, "{f00e5d}Закусочная", "Спранк (100 рублей)\nКофе (150 рублей)\nБургер (250 рублей)", "Купить", "Отмена");
stock ShowAmmoMenu(playerid) {
	if(PI[playerid][data_LICG] == 0) return SendClientMessage(playerid, CG, "У Вас нет лицензии на оружие");
	new str_3[365];
	format(str_3,sizeof(str_3),"Убойный пистолет (50 рублей)\nПистолет (25 рублей)\nДробовик (50 рублей)\nАвтомат (30 рублей)\nШтурмовая винтовка (75 рублей)\nСнайперская винтовка (250 рублей)\nНож (5000 рублей)");
	ShowPlayerDialog(playerid, dialog_BUYGUN, DIALOG_STYLE_LIST, "{f00e5d}Выберите оружие", str_3, "Выбрать", "Отмена");
	return 1;
}
stock UpdateABData(b) {
    DestroyDynamic3DTextLabel(AB_DATA[b][data_INFO]);
    if(AB_DATA[b][data_OWNED] == 1) {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}Автобаза '%s'\n{FFFF33}Владелец: {FFFFFF}%s\n{FFFF33}Стоимость: {FFFFFF}%d рублей\n{FFFF33}Зарплата водителя: {FFFFFF}%d процент(ов)", AB_DATA[b][data_NAME], AB_DATA[b][data_OWNER], AB_DATA[b][data_PRICE], AB_DATA[b][data_PROCENT]);
		AB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, AB_DATA[b][data_INFO_POS][0], AB_DATA[b][data_INFO_POS][1], AB_DATA[b][data_INFO_POS][2], 5.0);
	}
	else {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}Автобаза '%s'\n{FFFF33}Стоимость: {FFFFFF}%d рублей\n{99FFFF}Для покупки используйте: /buy", AB_DATA[b][data_NAME], AB_DATA[b][data_PRICE]);
		AB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, AB_DATA[b][data_INFO_POS][0], AB_DATA[b][data_INFO_POS][1], AB_DATA[b][data_INFO_POS][2], 5.0);
	}
	return 1;
}
stock UpdateJBData(b) {
    DestroyDynamic3DTextLabel(JB_DATA[b][data_INFO]);
    if(JB_DATA[b][data_OWNED] == 1) {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}OOO '%s'\n{FFFF33}Владелец: {FFFFFF}%s\n{FFFF33}Стоимость предприятия: {FFFFFF}%d рублей\n{FFFF33}Зарплата водителя: {FFFFFF}%d рублей\n{FFFF33}Зарплата рабочего: {FFFFFF}%d рублей", JB_DATA[b][data_NAME], JB_DATA[b][data_OWNER], JB_DATA[b][data_PRICE], JB_DATA[b][data_BUS_MONEY], JB_DATA[b][data_JOB_MONEY]);
		JB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, JB_DATA[b][data_INFO_POS][0], JB_DATA[b][data_INFO_POS][1], JB_DATA[b][data_INFO_POS][2], 5.0);
	}
	else {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}OOO '%s'\n{FFFF33}Стоимость предприятия: {FFFFFF}%d рублей\n{99FFFF}Для покупки используйте: /buy", JB_DATA[b][data_NAME], JB_DATA[b][data_PRICE]);
		JB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, JB_DATA[b][data_INFO_POS][0], JB_DATA[b][data_INFO_POS][1], JB_DATA[b][data_INFO_POS][2], 5.0);
	}
	return 1;
}
stock UpdateJBText(b) {
    DestroyDynamic3DTextLabel(JB_DATA[b][data_INFO]);
    if(JB_DATA[b][data_OWNED] == 1) {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}OOO '%s'\n{FFFF33}Владелец: {FFFFFF}%s\n{FFFF33}Стоимость предприятия: {FFFFFF}%d рублей\n{FFFF33}Зарплата водителя: {FFFFFF}%d рублей\n{FFFF33}Зарплата рабочего: {FFFFFF}%d рублей", JB_DATA[b][data_NAME], JB_DATA[b][data_OWNER], JB_DATA[b][data_PRICE], JB_DATA[b][data_BUS_MONEY], JB_DATA[b][data_JOB_MONEY]);
		JB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, JB_DATA[b][data_INFO_POS][0], JB_DATA[b][data_INFO_POS][1], JB_DATA[b][data_INFO_POS][2], 5.0);
	}
	else {
		new str_1[256];
		format(str_1,sizeof(str_1),"{FFFFFF}OOO '%s'\n{FFFF33}Стоимость предприятия: {FFFFFF}%d рублей\n{99FFFF}Для покупки используйте: /buy", JB_DATA[b][data_NAME], JB_DATA[b][data_PRICE]);
		JB_DATA[b][data_INFO] = CreateDynamic3DTextLabel(str_1, -1, JB_DATA[b][data_INFO_POS][0], JB_DATA[b][data_INFO_POS][1], JB_DATA[b][data_INFO_POS][2], 5.0);
	}
	return 1;
}
stock UpdateHouseData(h) {
    DestroyDynamicMapIcon(HOUSE_DATA[h][data_MAPICON]);
    DestroyDynamicPickup(HOUSE_DATA[h][data_PICKUPENTER]);
    if(HOUSE_DATA[h][data_OWNED] == 0) {
	    HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
	    HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 100.0);
	}
	else {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1272, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 100.0);
	}
	return 1;
}
stock SaveHouseData(h) {
	new str_q[256];
	new str_q2[256];
	str_q = "UPDATE `houses` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner", HOUSE_DATA[h][data_OWNER]);
	acc_int_strcat(str_q, sizeof(str_q), "owned", HOUSE_DATA[h][data_OWNED]);
	acc_int_strcat(str_q, sizeof(str_q), "lock", HOUSE_DATA[h][data_LOCK]);
	acc_int_strcat(str_q, sizeof(str_q), "day", HOUSE_DATA[h][data_DAY]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",HOUSE_DATA[h][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock SaveKVData(kv) {
	new str_q[512];
	new str_q2[512];
	str_q = "UPDATE `kvartiry` SET ";
	acc_str_strcat(str_q, sizeof(str_q), "owner1", KV_DATA[kv][data_OWNER_1]);
	acc_str_strcat(str_q, sizeof(str_q), "owner2", KV_DATA[kv][data_OWNER_2]);
	acc_str_strcat(str_q, sizeof(str_q), "owner3", KV_DATA[kv][data_OWNER_3]);
	acc_str_strcat(str_q, sizeof(str_q), "owner4", KV_DATA[kv][data_OWNER_4]);
	acc_str_strcat(str_q, sizeof(str_q), "owner5", KV_DATA[kv][data_OWNER_5]);
	acc_str_strcat(str_q, sizeof(str_q), "owner6", KV_DATA[kv][data_OWNER_6]);
	acc_int_strcat(str_q, sizeof(str_q), "owned1", KV_DATA[kv][data_OWNED][0]);
	acc_int_strcat(str_q, sizeof(str_q), "owned2", KV_DATA[kv][data_OWNED][1]);
	acc_int_strcat(str_q, sizeof(str_q), "owned3", KV_DATA[kv][data_OWNED][2]);
	acc_int_strcat(str_q, sizeof(str_q), "owned4", KV_DATA[kv][data_OWNED][3]);
	acc_int_strcat(str_q, sizeof(str_q), "owned5", KV_DATA[kv][data_OWNED][4]);
	acc_int_strcat(str_q, sizeof(str_q), "owned6", KV_DATA[kv][data_OWNED][5]);
	acc_int_strcat(str_q, sizeof(str_q), "lock1", KV_DATA[kv][data_LOCK][0]);
	acc_int_strcat(str_q, sizeof(str_q), "lock2", KV_DATA[kv][data_LOCK][1]);
	acc_int_strcat(str_q, sizeof(str_q), "lock3", KV_DATA[kv][data_LOCK][2]);
	acc_int_strcat(str_q, sizeof(str_q), "lock4", KV_DATA[kv][data_LOCK][3]);
	acc_int_strcat(str_q, sizeof(str_q), "lock5", KV_DATA[kv][data_LOCK][4]);
	acc_int_strcat(str_q, sizeof(str_q), "lock6", KV_DATA[kv][data_LOCK][5]);
	acc_int_strcat(str_q, sizeof(str_q), "day1", KV_DATA[kv][data_DAY][0]);
	acc_int_strcat(str_q, sizeof(str_q), "day2", KV_DATA[kv][data_DAY][1]);
	acc_int_strcat(str_q, sizeof(str_q), "day3", KV_DATA[kv][data_DAY][2]);
	acc_int_strcat(str_q, sizeof(str_q), "day4", KV_DATA[kv][data_DAY][3]);
	acc_int_strcat(str_q, sizeof(str_q), "day5", KV_DATA[kv][data_DAY][4]);
	acc_int_strcat(str_q, sizeof(str_q), "day6", KV_DATA[kv][data_DAY][5]);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '%d' LIMIT 1",KV_DATA[kv][data_ID]);
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock UpdateKVData(kv, k) {
	DestroyDynamic3DTextLabel(KV_DATA[kv][data_INFO][k]);
    new owner[MAX_PLAYER_NAME], class_kv[9],str[174];
	switch(k) {
		case 0: strmid(owner, KV_DATA[kv][data_OWNER_1], 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
		case 1: strmid(owner, KV_DATA[kv][data_OWNER_2], 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
		case 2: strmid(owner, KV_DATA[kv][data_OWNER_3], 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
		case 3: strmid(owner, KV_DATA[kv][data_OWNER_4], 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
		case 4: strmid(owner, KV_DATA[kv][data_OWNER_5], 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
		case 5: strmid(owner, KV_DATA[kv][data_OWNER_6], 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
	}
	switch(KV_DATA[kv][data_CLASS][k]) {
	    case 0: class_kv = "Хрущёвка";
	    case 1: class_kv = "Простая";
	    case 2: class_kv = "Элитный";
	}
	if(KV_DATA[kv][data_OWNED][k] == 0) {
        format(str,sizeof(str), "\
		{ffffff}Номер квартиры: {ffffff}№%d\n\
		{ffffff}Название: {ffffff}%s\n\
		{ffffff}Стоимость: {ffffff}%d рублей\n\
		{ffffff}Используйте: {3377cc}/buykv",k+1, class_kv, KV_DATA[kv][data_PRICE][k]);
        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
    }
    else {
		format(str,sizeof(str), "\
		{ffffff}Номер квартиры: {ffffff}№%d\n\
		{ffffff}Название: {FFFFFF}%s\n\
		{ffffff}Владелец: {3377cc}%s\n\
		Стоимость: {3377cc}%d руб",k+1, class_kv, owner, KV_DATA[kv][data_PRICE][k]);
        KV_DATA[kv][data_INFO][k] = CreateDynamic3DTextLabel(str, -1, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k], 5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,KV_DATA[kv][data_ID]);
	}
	new kk;
	for(new kq = 0; kq < 6; kq++) {
		if(KV_DATA[kv][data_OWNED][kq] == 0)
		{}
		else kk++;
	}
	if(kk == 6) {
	    DestroyDynamicMapIcon(KV_DATA[kv][data_MAPICON]);
		KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 32, -1, 0, -1, -1, 100.0);
	}
	else {
	    DestroyDynamicMapIcon(KV_DATA[kv][data_MAPICON]);
		KV_DATA[kv][data_MAPICON] = CreateDynamicMapIcon(KV_DATA[kv][data_ENTER_X], KV_DATA[kv][data_ENTER_Y], KV_DATA[kv][data_ENTER_Z], 31, -1, 0, -1, -1, 100.0);
	}
	return 1;
}
stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return 1;
}
stock RemovePlayerFromVehicleAC(playerid) {
    GetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return RemovePlayerFromVehicle(playerid);
}
stock SetPlayerSkinAC(playerid, skinid) {
	ClearAnimations(playerid);
	SetPlayerSkin(playerid, skinid);
	return 1;
}
stock SetPlayerPosAC(playerid,Float:x,Float:y,Float:z) {
	oldposX[playerid] = x;
	oldposY[playerid] = y;
	oldposZ[playerid] = z;
	DeletePVar(playerid, "ac_fly");
	SetPlayerPos(playerid,oldposX[playerid],oldposY[playerid],oldposZ[playerid]);
	return 1;
}
stock PutPlayerInVehicleAC(playerid,car,set) {
    DeletePVar(playerid, "ac_fly");
	PutPlayerInVehicle(playerid,car,set);
	return 1;
}
stock OnPlayerAmmoChange(playerid, newammo, oldammo) {
    if(newammo < oldammo) {
        switch(GetPlayerWeapon(playerid)) {
            case 24: {
                SetPVarInt(playerid, "SkillD",GetPVarInt(playerid,"SkillD") +1);
                if(GetPVarInt(playerid,"SkillD") >= Ammo_DEAGLE && PI[playerid][data_DEAGLE] < 100) {
                    PI[playerid][data_DEAGLE]++;
					SavePlayerData(playerid);
                    SetPVarInt(playerid, "SkillD",0);
                }
            }
            case 22: {
                SetPVarInt(playerid, "SkillP",GetPVarInt(playerid,"SkillP") +1);
                if(GetPVarInt(playerid,"SkillP")>= Ammo_PISTOL && PI[playerid][data_PISTOL] < 100) {
                     PI[playerid][data_PISTOL]++;
					 SavePlayerData(playerid);
                     SetPVarInt(playerid, "SkillP",0);
                }
            }
            case 23: {
                SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid,"SkillSD") +1);
                if(GetPVarInt(playerid,"SkillSD")>= Ammo_SDPISTOL && PI[playerid][data_SDPISTOL] < 100) {
                     PI[playerid][data_SDPISTOL]++;
					 SavePlayerData(playerid);
                     SetPVarInt(playerid, "SkillSD",0);
                }
            }
            case 25: {
                SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid,"SkillShot") +1);
                if(GetPVarInt(playerid,"SkillShot") >= Ammo_SHOTGUN && PI[playerid][data_SHOTGUN] < 100) {
                    PI[playerid][data_SHOTGUN]++;
					SavePlayerData(playerid);
                    SetPVarInt(playerid, "SkillShot",0);
                }
            }
            case 29: {
                SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid,"SkillMP5") +1);
                if(GetPVarInt(playerid,"SkillMP5") >= Ammo_MP5 && PI[playerid][data_MP5] < 100) {
                    PI[playerid][data_MP5]++;
					SavePlayerData(playerid);
                    SetPVarInt(playerid, "SkillMP5",0);
                }
            }
            case 30: {
                SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid,"SkillAk47") +1);
                if(GetPVarInt(playerid,"SkillAk47") >= Ammo_AK47 && PI[playerid][data_AK47] < 100) {
                    PI[playerid][data_AK47]++;
					SavePlayerData(playerid);
                    SetPVarInt(playerid, "SkillAk47",0);
                }
            }
            case 34: {
                SetPVarInt(playerid, "SkillRifle",GetPVarInt(playerid,"SkillRifle") +1);
                if(GetPVarInt(playerid,"SkillRifle") >= Ammo_RIFLE && PI[playerid][data_SNIPERRIFLE] < 100) {
                    PI[playerid][data_SNIPERRIFLE]++;
					SavePlayerData(playerid);
                    SetPVarInt(playerid, "SkillRifle",0);
                }
            }
        }
    }
    return 1;
}
stock ReportDialog(playerid) {
	if(GetPVarInt(playerid,"Counting_Report") > gettime()) return SendClientMessage(playerid, CG, "Эту команду можно использовать 1 раз в 2 минуты");
	SetPVarInt(playerid,"Counting_Report",gettime() + 120);
	return ShowPlayerDialog(playerid,dialog_REPORT,DIALOG_STYLE_LIST,"{f00e5d}Выберите тип","1. Вопрос или помощь\n2. Жалоба на игрока","Далее","Назад");
}
stock SendDBMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(GetPVarInt(i, "job_db") != 0) SendClientMessage(i, color, text);
	}
	return 1;
}
stock SendLeaderMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_LEADER] >= 1) SendClientMessage(i, color, text);
	}
	return 1;
}
stock SendAdminMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_CADMIN] != 1) if(PI[i][data_ADMLVL] >= 1) SendClientMessage(i, color, text);
	}
	return 1;
}
stock SendVIPMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_VIP] >= 1) SendClientMessage(i, color, text);
	}
	return 1;
}
SetPlayerWalkingStyle(playerid, style) PI[playerid][data_WALK_STYLE] = style;
stock GetPlayerWalkingStyle(playerid) return PI[playerid][data_WALK_STYLE];
stock ClearAnim(playerid) {
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
	SetPlayerSpecialAction(playerid, 0);
	return 1;
}
stock PreloadAnimLib(playerid, animlib[]) return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
stock FreezePlayer(playerid) {
    SetPVarInt(playerid,"freeze",1);
	cef_emit_event(playerid, "show-center-notify", CEFINT(4), CEFSTR("Пожалуйста, подождите..."));
	TogglePlayerControllable(playerid, false);
	return 1;
}
stock PlaySoundForAll(soundid, Float:x, Float:y, Float:z) {
	for (new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    PlayerPlaySound(i, soundid, x, y, z);
	}
}
stock ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5) {
    if(IsPlayerConnected(playerid)) {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        new vw = GetPlayerVirtualWorld(playerid);
        for(new i = 0; i < MAX_PLAYERS; i++) {
            if(!IsPlayerConnected(i)) continue;
            if(IsPlayerConnected(i) && GetPlayerVirtualWorld(i) == vw) {
                GetPlayerPos(i, posx, posy, posz);
                tempposx = (oldposx -posx);
                tempposy = (oldposy -posy);
                tempposz = (oldposz -posz);
                if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, string);
                else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, string);
                else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, string);
                else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, string);
                else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, string);
            }
            else {}
        }
    }
    return 1;
}
stock RestartCFG() {
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		SendClientMessage(i, COLOR_TOMATO, "");
		SendClientMessage(i, COLOR_TOMATO, "");
		SendClientMessage(i, COLOR_TOMATO, "");
		SendClientMessage(i, COLOR_TOMATO, "Внимание! Происходит перезапуск сервера");
		SendClientMessage(i, COLOR_TOMATO, "Пожалуйста, перезайдите через несколько минут");
		SendClientMessage(i, COLOR_TOMATO, "");
		SendClientMessage(i, COLOR_TOMATO, "");
		SendClientMessage(i, COLOR_TOMATO, "");
		Kick(i);
	}
	for(new h = 0; h < TotalHouses; h++) {
		if(HOUSE_DATA[h][data_OWNED] == 1) {
			if(HOUSE_DATA[h][data_DAY] > 1) HOUSE_DATA[h][data_DAY]--;
			else {
				new str_q[256];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `house` = '-1', `salary` = '%d' WHERE `house` = '%d'",HOUSE_DATA[h][data_PRICE]/2, h);
    			mysql_function_query(dbHandle, str_q, false, "", "");
    			strmid(HOUSE_DATA[h][data_OWNER], "none", 0, strlen(HOUSE_DATA[h][data_OWNER]), 24);
    			HOUSE_DATA[h][data_OWNED] = 0;
			}
			SaveHouseData(h);
		}
	}
	for(new kv = 0; kv < TotalKV; kv++) {
		for(new k = 0; k < 6; k++) {
  			if(KV_DATA[kv][data_OWNED][k] == 1) {
				if(KV_DATA[kv][data_DAY][k] > 1) KV_DATA[kv][data_DAY][k]--;
				else {

				    switch(k) {
						case 0: strmid(KV_DATA[kv][data_OWNER_1], "none", 0, strlen(KV_DATA[kv][data_OWNER_1]), MAX_PLAYER_NAME);
						case 1: strmid(KV_DATA[kv][data_OWNER_2], "none", 0, strlen(KV_DATA[kv][data_OWNER_2]), MAX_PLAYER_NAME);
						case 2: strmid(KV_DATA[kv][data_OWNER_3], "none", 0, strlen(KV_DATA[kv][data_OWNER_3]), MAX_PLAYER_NAME);
						case 3: strmid(KV_DATA[kv][data_OWNER_4], "none", 0, strlen(KV_DATA[kv][data_OWNER_4]), MAX_PLAYER_NAME);
						case 4: strmid(KV_DATA[kv][data_OWNER_5], "none", 0, strlen(KV_DATA[kv][data_OWNER_5]), MAX_PLAYER_NAME);
						case 5: strmid(KV_DATA[kv][data_OWNER_6], "none", 0, strlen(KV_DATA[kv][data_OWNER_6]), MAX_PLAYER_NAME);
					}
					new str_q[345];
				    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `kv` = '-1', `padik` = '-1', `salary` = '%d' WHERE `padik` = '%d' AND `kv` = '%d'", KV_DATA[kv][data_PRICE][k]/2, kv, k);
	    			mysql_function_query(dbHandle, str_q, false,  "", "");
	    			KV_DATA[kv][data_OWNED][k] = 0;
				}
			}
		}
		SaveKVData(kv);
	}
	for(new b = 0; b < TotalBusiness; b++) {
		if(BUSINESS_DATA[b][data_OWNED] == 1) {
			if(BUSINESS_DATA[b][data_DAY] > 1) BUSINESS_DATA[b][data_DAY]--;
			else {
				new str_q[256];
	            mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `business` = '-1', `salary` = '%d' WHERE `business` = '%d'",BUSINESS_DATA[b][data_PRICE]/2,b);
    			mysql_function_query(dbHandle, str_q, false, "", "");
    			strmid(BUSINESS_DATA[b][data_OWNER], "none", 0, strlen(BUSINESS_DATA[b][data_OWNER]), 24);
    			BUSINESS_DATA[b][data_OWNED] = 0;
			}
			SaveBusinessData(b);
		}
	}
	for(new b = 0; b < TotalJB; b++) SaveJBData(b);
 	for(new a = 0; a < TotalAB; a++) SaveABData(a);
 	SaveWarehouse();
	mysql_function_query(dbHandle, "SELECT * FROM `banlist`",true, "LoadBans", "");
	mysql_function_query(dbHandle, "SELECT * FROM `fractions_blacklist`",true, "LoadBlackList", "");
	mysql_function_query(dbHandle, "SELECT * FROM `accounts`",true, "LoadBang", "");
	mysql_function_query(dbHandle, "SELECT * FROM `accounts`",true, "LoadVip", "");
	return 1;
}
stock IsABMX(carid) {
	new model = GetVehicleModel(carid);
	if(model == 481 || model == 510 || model == 509 || model == 462 || model == 484 || model == 454) return 1;
	return 0;
}
stock Player_Speed(playerid) {
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
   	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
   	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
    return floatround(ST[3]);
}
stock SpawnPlayerAC(playerid) {
    SetPVarInt(playerid,"spawn_ac",1);
    SetPlayerToSpawn(playerid);
    return 1;
}
stock CreateAccount(playerid) {
	new gpcitoken[65];
	gpci(playerid, gpcitoken, sizeof(gpcitoken));
	new createacc[512];
	mysql_format(dbHandle, createacc, sizeof(createacc), "INSERT INTO `accounts` (`id`,`name`, `password`, `email`, `register_ip`, `referal`, `sex`, `regdate_day`, `regdate_month`, `regdate_year`, `skin`,`GPCI_REG`,`lvl`) VALUES ('','%e', MD5('%e'), '%e', '%s', '%s', '%d', '%d', '%d', '%d', '%d','%e','1')",
	PI[playerid][data_NAME],PI[playerid][data_PASSWORD],PI[playerid][data_EMAIL],PI[playerid][data_REGISTER_IP],PI[playerid][data_REFERAL],PI[playerid][data_SEX],PI[playerid][data_REGDATE_DAY],PI[playerid][data_REGDATE_MONTH],PI[playerid][data_REGDATE_YEAR],PI[playerid][data_SKIN],gpcitoken);
    mysql_function_query(dbHandle, createacc, false, "", "");
	new str_ca[200];
	mysql_format(dbHandle, str_ca, sizeof(str_ca), "SELECT * FROM `accounts` WHERE `name` = '%e'",PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_ca, true, "LoadPlayerDataReg", "d", playerid);
	give_player_money(playerid, 35000,"#71",17898);
	UpdatePlayerDataIntName(playerid, "lvl", 1,17889);
	return 1;
}
stock ShowBankMoney(playerid) {
	new str_3[185];
	format(str_3,sizeof(str_3),"На Вашем банковском счёте: {32d964}%d рублей", PI[playerid][data_BANK]);
	PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX , "{f00e5d}Баланс счёта", str_3, "Закрыть", "Назад");
	return 1;
}
stock LoadTextDraws() {
	td_map_TD[0] = TextDrawCreate(30.2709, 329.9999, "interface:radardisk"); // ?????
	TextDrawTextSize(td_map_TD[0], 118.0000, 99.0000);
	TextDrawAlignment(td_map_TD[0], 1);
	TextDrawColor(td_map_TD[0], -1);
	TextDrawBackgroundColor(td_map_TD[0], 255);
	TextDrawFont(td_map_TD[0], 4);
	TextDrawSetProportional(td_map_TD[0], 0);
	TextDrawSetShadow(td_map_TD[0], 0);

    casino_fon[0] = TextDrawCreate(156.500000, 88.977699, "LD_SPAC:white");
	TextDrawLetterSize(casino_fon[0], 0.000000, 0.000000);
	TextDrawTextSize(casino_fon[0], 325.500000, 242.044433);
	TextDrawAlignment(casino_fon[0], 1);
	TextDrawColor(casino_fon[0], 862362111);
	TextDrawSetShadow(casino_fon[0], 0);
	TextDrawSetOutline(casino_fon[0], 0);
	TextDrawFont(casino_fon[0], 4);

	casino_bet = TextDrawCreate(285.000000, 284.977783, "LD_SPAC:white");
	TextDrawLetterSize(casino_bet, 0.000000, 0.000000);
	TextDrawTextSize(casino_bet, 70.000000, 32.355560);
	TextDrawAlignment(casino_bet, 1);
	TextDrawColor(casino_bet, -1);
	TextDrawSetShadow(casino_bet, 0);
	TextDrawSetOutline(casino_bet, 0);
	TextDrawFont(casino_bet, 4);
	TextDrawSetSelectable(casino_bet, true);

	casino_fon[1] = TextDrawCreate(321.000000, 286.222229, "BET");
	TextDrawLetterSize(casino_fon[1], 0.652999, 2.850668);
	TextDrawAlignment(casino_fon[1], 2);
	TextDrawColor(casino_fon[1], 862362111);
	TextDrawSetShadow(casino_fon[1], 0);
	TextDrawSetOutline(casino_fon[1], 0);
	TextDrawBackgroundColor(casino_fon[1], 51);
	TextDrawFont(casino_fon[1], 2);
	TextDrawSetProportional(casino_fon[1], 1);

	AutoSalon_Stats[0] = TextDrawCreate(293.3334, 371.5334, "Interface:info");
	TextDrawTextSize(AutoSalon_Stats[0], 77.0000, 54.0000);
	TextDrawAlignment(AutoSalon_Stats[0], 1);
	TextDrawColor(AutoSalon_Stats[0], -1);
	TextDrawBackgroundColor(AutoSalon_Stats[0], 255);
	TextDrawFont(AutoSalon_Stats[0], 4);
	TextDrawSetProportional(AutoSalon_Stats[0], 0);
	TextDrawSetShadow(AutoSalon_Stats[0], 0);
	TextDrawSetSelectable(AutoSalon_Stats[0], true);

	AutoSalon_Button[2] = TextDrawCreate(391.3334, 385.2223, "Interface:next");
	TextDrawTextSize(AutoSalon_Button[2], 95.0000, 60.0000);
	TextDrawAlignment(AutoSalon_Button[2], 1);
	TextDrawColor(AutoSalon_Button[2], -1);
	TextDrawBackgroundColor(AutoSalon_Button[2], 255);
	TextDrawFont(AutoSalon_Button[2], 4);
	TextDrawSetProportional(AutoSalon_Button[2], 0);
	TextDrawSetShadow(AutoSalon_Button[2], 0);
	TextDrawSetSelectable(AutoSalon_Button[2], true);

	AutoSalon_Button[1] = TextDrawCreate(193.6665, 385.2223, "Interface:back");
	TextDrawTextSize(AutoSalon_Button[1], 86.0000, 59.0000);
	TextDrawAlignment(AutoSalon_Button[1], 1);
	TextDrawColor(AutoSalon_Button[1], -1);
	TextDrawBackgroundColor(AutoSalon_Button[1], 255);
	TextDrawFont(AutoSalon_Button[1], 4);
	TextDrawSetProportional(AutoSalon_Button[1], 0);
	TextDrawSetShadow(AutoSalon_Button[1], 0);
	TextDrawSetSelectable(AutoSalon_Button[1], true);

	AutoSalon_Button[0] = TextDrawCreate(286.9999, 401.8146, "Interface:choice");
	TextDrawTextSize(AutoSalon_Button[0], 81.0000, 55.0000);
	TextDrawAlignment(AutoSalon_Button[0], 1);
	TextDrawColor(AutoSalon_Button[0], -1);
	TextDrawBackgroundColor(AutoSalon_Button[0], 255);
	TextDrawFont(AutoSalon_Button[0], 4);
	TextDrawSetProportional(AutoSalon_Button[0], 0);
	TextDrawSetShadow(AutoSalon_Button[0], 0);
	TextDrawSetSelectable(AutoSalon_Button[0], true);

	AutoSalon_Color[0] = TextDrawCreate(12.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[1] = TextDrawCreate(35.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[2] = TextDrawCreate(58.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[3] = TextDrawCreate(81.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[4] = TextDrawCreate(104.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[5] = TextDrawCreate(127.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[6] = TextDrawCreate(12.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[7] = TextDrawCreate(35.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[8] = TextDrawCreate(58.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[9] = TextDrawCreate(81.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[10] = TextDrawCreate(104.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[11] = TextDrawCreate(127.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[12] = TextDrawCreate(12.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[13] = TextDrawCreate(35.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[14] = TextDrawCreate(58.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[15] = TextDrawCreate(81.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[16] = TextDrawCreate(104.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[17] = TextDrawCreate(127.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[18] = TextDrawCreate(12.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[19] = TextDrawCreate(35.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[20] = TextDrawCreate(58.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[21] = TextDrawCreate(81.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[22] = TextDrawCreate(104.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[23] = TextDrawCreate(127.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[24] = TextDrawCreate(12.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[25] = TextDrawCreate(35.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[26] = TextDrawCreate(58.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[27] = TextDrawCreate(81.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[28] = TextDrawCreate(104.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[29] = TextDrawCreate(127.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[30] = TextDrawCreate(12.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[31] = TextDrawCreate(35.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[32] = TextDrawCreate(58.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[33] = TextDrawCreate(81.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[34] = TextDrawCreate(104.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[35] = TextDrawCreate(127.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[36] = TextDrawCreate(12.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[37] = TextDrawCreate(35.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[38] = TextDrawCreate(58.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[39] = TextDrawCreate(81.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[40] = TextDrawCreate(104.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[41] = TextDrawCreate(127.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[42] = TextDrawCreate(12.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[43] = TextDrawCreate(35.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[44] = TextDrawCreate(58.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[45] = TextDrawCreate(81.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[46] = TextDrawCreate(104.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[47] = TextDrawCreate(127.000000, 289.519958, "LD_SPAC:white");
	for(new i = 0; i < 48; i++) {
		TextDrawLetterSize(AutoSalon_Color[i], 0.000000, 0.000000);
		TextDrawTextSize(AutoSalon_Color[i], 21.500000, 26.879997);
		TextDrawAlignment(AutoSalon_Color[i], 1);
		TextDrawColor(AutoSalon_Color[i], color_veh[i][ciTD]);
		TextDrawSetShadow(AutoSalon_Color[i], 0);
		TextDrawSetOutline(AutoSalon_Color[i], 0);
		TextDrawFont(AutoSalon_Color[i], 4);
		TextDrawSetSelectable(AutoSalon_Color[i], true);
	}
	buy_clothes[0] = TextDrawCreate(19.000000, 142.488891, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[0], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[0], 55.000000, 28.622222);
	TextDrawAlignment(buy_clothes[0], 1);
	TextDrawColor(buy_clothes[0], 0x339999FF);
	TextDrawSetShadow(buy_clothes[0], 0);
	TextDrawSetOutline(buy_clothes[0], 0);
	TextDrawFont(buy_clothes[0], 4);
	TextDrawSetSelectable(buy_clothes[0], true);
	buy_clothes[1] = TextDrawCreate(19.000000, 173.355590, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[1], 26.500000, 31.733329);
	TextDrawAlignment(buy_clothes[1], 1);
	TextDrawColor(buy_clothes[1], 0x339999FF);
	TextDrawSetShadow(buy_clothes[1], 0);
	TextDrawSetOutline(buy_clothes[1], 0);
	TextDrawFont(buy_clothes[1], 4);
	TextDrawSetSelectable(buy_clothes[1], true);
	buy_clothes[2] = TextDrawCreate(47.500000, 173.111145, "LD_SPAC:white");
	TextDrawLetterSize(buy_clothes[2], 0.000000, 0.000000);
	TextDrawTextSize(buy_clothes[2], 26.500000, 31.733329);
	TextDrawAlignment(buy_clothes[2], 1);
	TextDrawColor(buy_clothes[2], 0x339999FF);
	TextDrawSetShadow(buy_clothes[2], 0);
	TextDrawSetOutline(buy_clothes[2], 0);
	TextDrawFont(buy_clothes[2], 4);
	TextDrawSetSelectable(buy_clothes[2], true);
	buy_clothes[3] = TextDrawCreate(281.6667, 320.5111, "Interface:choice"); // пусто
	TextDrawTextSize(buy_clothes[3], 75.0000, 53.0000);
	TextDrawAlignment(buy_clothes[3], 1);
	TextDrawColor(buy_clothes[3], -1);
	TextDrawBackgroundColor(buy_clothes[3], 255);
	TextDrawFont(buy_clothes[3], 4);
	TextDrawSetProportional(buy_clothes[3], 0);
	TextDrawSetShadow(buy_clothes[3], 0);
	TextDrawSetSelectable(buy_clothes[3], true);
	buy_clothes[4] = TextDrawCreate(393.0000, 315.1186, "Interface:back"); // пусто
	TextDrawTextSize(buy_clothes[4], 82.0000, 64.0000);
	TextDrawAlignment(buy_clothes[4], 1);
	TextDrawColor(buy_clothes[4], -1);
	TextDrawBackgroundColor(buy_clothes[4], 255);
	TextDrawFont(buy_clothes[4], 4);
	TextDrawSetProportional(buy_clothes[4], 0);
	TextDrawSetShadow(buy_clothes[4], 0);
	TextDrawSetSelectable(buy_clothes[4], true);
	buy_clothes[5] = TextDrawCreate(151.6666, 313.0444, "Interface:next"); // пусто
	TextDrawTextSize(buy_clothes[5], 89.0000, 68.0000);
	TextDrawAlignment(buy_clothes[5], 1);
	TextDrawColor(buy_clothes[5], -1);
	TextDrawBackgroundColor(buy_clothes[5], 255);
	TextDrawFont(buy_clothes[5], 4);
	TextDrawSetProportional(buy_clothes[5], 0);
	TextDrawSetShadow(buy_clothes[5], 0);
	TextDrawSetSelectable(buy_clothes[5], true);
    return 1;
}
stock LoadPlayerTextDraws(playerid) {
    casino_card[playerid][0] = CreatePlayerTextDraw(playerid, 166.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][0], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][0], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][0], 16711935);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][0], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][0], 4);
	casino_card[playerid][1] = CreatePlayerTextDraw(playerid, 244.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][1], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][1], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][1], -65281);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][1], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][1], 4);
	casino_card[playerid][2] = CreatePlayerTextDraw(playerid, 322.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][2], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][2], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][2], -5963521);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][2], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][2], 4);
	casino_card[playerid][3] = CreatePlayerTextDraw(playerid, 400.500000, 119.466659, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, casino_card[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, casino_card[playerid][3], 71.000000, 114.488891);
	PlayerTextDrawAlignment(playerid, casino_card[playerid][3], 1);
	PlayerTextDrawColor(playerid, casino_card[playerid][3], -2147483393);
	PlayerTextDrawSetShadow(playerid, casino_card[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, casino_card[playerid][3], 0);
	PlayerTextDrawFont(playerid, casino_card[playerid][3], 4);
	casino_money[playerid][0] = CreatePlayerTextDraw(playerid, 323.500000, 95.199981, "BANK: 10000 RUB");
	PlayerTextDrawLetterSize(playerid, casino_money[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, casino_money[playerid][0], 2);
	PlayerTextDrawColor(playerid, casino_money[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, casino_money[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, casino_money[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, casino_money[playerid][0], 51);
	PlayerTextDrawFont(playerid, casino_money[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, casino_money[playerid][0], 1);
	casino_money[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 253.866668, "1000 RUB");
	PlayerTextDrawLetterSize(playerid, casino_money[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, casino_money[playerid][1], 2);
	PlayerTextDrawColor(playerid, casino_money[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, casino_money[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, casino_money[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, casino_money[playerid][1], 51);
	PlayerTextDrawFont(playerid, casino_money[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, casino_money[playerid][1], 1);
	adm_info[playerid][0] = CreatePlayerTextDraw(playerid, 5.1391, 433.8334, "log_ip"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][0], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][0], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][0], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][0], 0);
	adm_info[playerid][1] = CreatePlayerTextDraw(playerid, 5.6076, 423.6336, "rei-ip"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][1], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][1], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][1], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][1], 0);
	adm_info[playerid][2] = CreatePlayerTextDraw(playerid, 5.6076, 413.8330, "warn"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][2], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][2], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][2], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][2], 0);
	adm_info[playerid][3] = CreatePlayerTextDraw(playerid, 5.6076, 404.7325, "bank"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][3], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][3], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][3], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][3], 0);
	adm_info[playerid][4] = CreatePlayerTextDraw(playerid, 5.6076, 394.9319, "cash"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][4], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][4], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][4], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][4], 0);
	adm_info[playerid][5] = CreatePlayerTextDraw(playerid, 5.6076, 385.0313, "arm"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][5], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][5], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][5], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][5], 0);
	adm_info[playerid][6] = CreatePlayerTextDraw(playerid, 5.6076, 376.2307, "hp"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][6], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][6], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][6], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][6], 0);
	adm_info[playerid][7] = CreatePlayerTextDraw(playerid, 5.6076, 366.2301, "lvl"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][7], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][7], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][7], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][7], 0);
	adm_info[playerid][8] = CreatePlayerTextDraw(playerid, 5.6076, 356.6295, "carid"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][8], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][8], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][8], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][8], 0);
	adm_info[playerid][9] = CreatePlayerTextDraw(playerid, 5.6076, 347.0289, "speed"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][9], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][9], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][9], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][9], 0);
	adm_info[playerid][10] = CreatePlayerTextDraw(playerid, 5.6076, 337.5284, "ping"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][10], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][10], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][10], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][10], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][10], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][10], 0);
	adm_info[playerid][11] = CreatePlayerTextDraw(playerid, 5.6076, 328.4278, "fps"); // ?????
	PlayerTextDrawLetterSize(playerid, adm_info[playerid][11], 0.2111, 1.1158);
	PlayerTextDrawAlignment(playerid, adm_info[playerid][11], 1);
	PlayerTextDrawColor(playerid, adm_info[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid, adm_info[playerid][11], 1);
	PlayerTextDrawBackgroundColor(playerid, adm_info[playerid][11], 255);
	PlayerTextDrawFont(playerid, adm_info[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, adm_info[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, adm_info[playerid][11], 0);
	buy_clothes_m[playerid] = CreatePlayerTextDraw(playerid, 341.000000, 339.110900, "8000000");
	PlayerTextDrawLetterSize(playerid, buy_clothes_m[playerid], 0.597499, 2.875555);
	PlayerTextDrawAlignment(playerid, buy_clothes_m[playerid], 2);
	PlayerTextDrawColor(playerid, buy_clothes_m[playerid], -1);
	PlayerTextDrawSetShadow(playerid, buy_clothes_m[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_clothes_m[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, buy_clothes_m[playerid], 51);
	PlayerTextDrawFont(playerid, buy_clothes_m[playerid], 2);
	PlayerTextDrawSetProportional(playerid, buy_clothes_m[playerid], 1);

}
stock PlayerToKvadrat(playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}
stock ClearCarData(car) {
	CAR_DATA[car][data_LOCK] = 0;
	CAR_DATA[car][data_ENG] = 0;
	CAR_DATA[car][data_LAMP] = 0;
	CAR_DATA[car][data_ASH_TEST] = INVALID_PLAYER_ID;
	CAR_DATA[car][data_RENT] = INVALID_PLAYER_ID;
	CAR_DATA[car][data_KOLVO] = 0;
	CAR_DATA[car][data_GRUZ] = 0;
	CAR_DATA[car][data_PATR] = 0;
	CAR_DATA[car][data_MET] = 0;
	return 1;
}
stock ShowStats(playerid) {
	new sex_text[8],org_text[20],number_text[12],hous[20],kvs[20],kkvs[20],bis[20],abis[20],jbis[25],status[20],vip_check[10],vip_color[10],invpt,invmt,invdr;
	new str_3[1048];
	new str_1[256];
	switch(PI[playerid][data_NUMBER]) {
	    case 0: number_text = "Нет";
	    default: format(number_text,sizeof(number_text),"%d",PI[playerid][data_NUMBER]);
	}
	switch(PI[playerid][data_LVL]) {
		case 1..3: status = "Новичок";
		case 4..9: status = "Освоившийся";
		default: status = "Опытный";
	}
	switch(PI[playerid][data_PADIK]) {
		case INVALID_KV_ID: kvs = "Бездомный";
		default: format(kvs,sizeof(kvs),"№%d",PI[playerid][data_PADIK]+1);
	}
	switch(PI[playerid][data_KV]) {
		case INVALID_KV_ID: kkvs = "Бездомный";
		default: format(kkvs,sizeof(kkvs),"№%d",PI[playerid][data_KV]+1);
	}
	switch(PI[playerid][data_HOUSE]) {
		case INVALID_HOUSE_ID: hous = "Бездомный";
		default: format(hous,sizeof(hous),"№%d",PI[playerid][data_HOUSE]+1);
	}
	switch(PI[playerid][data_BUSINESS]) {
		case INVALID_BUSINESS_ID: bis = "Нет";
		default: format(bis,sizeof(bis),"№%d",PI[playerid][data_BUSINESS]+1);
	}
	switch(PI[playerid][data_AB]) {
		case INVALID_AB_ID: abis = "Нет";
		case 0: format(abis,sizeof(abis),"'Колесо'");
		case 1: format(abis,sizeof(abis),"'Навигатор'");
	}
	switch(PI[playerid][data_JB]) {
		case INVALID_JB_ID: jbis = "Нет";
		case 0: format(jbis,sizeof(jbis),"ООО 'Пиломатериалы'");
		case 1: format(jbis,sizeof(jbis),"ООО 'Рудник'");
		case 2: format(jbis,sizeof(jbis),"ООО 'Сад'");
		case 3: format(jbis,sizeof(jbis),"ООО 'Огород'");
	}
	switch(PI[playerid][data_MEMBER]) {
	    case 0: org_text = "Нет";
		case 1: org_text = "Правительство";
		case 2: org_text = "Войсковая часть";
		case 3: org_text = "МО МВД";
		case 4: org_text = "БЦРБ";
		case 5: org_text = "Скинхеды";
		case 6: org_text = "Гопота";
		case 7: org_text = "Кавказцы";
	}
	switch(PI[playerid][data_SEX]) {
		case 1: sex_text = "Мужской";
		case 2: sex_text = "Женский";
	}
	switch(PI[playerid][data_VIP]) {
		case 0: vip_check = "Неактивна";
		case 1..365: vip_check = "Активна";
	}
	switch(PI[playerid][data_VIP]) {
		case 0: vip_color = "285d9f";
		case 1..365: vip_color = "ffcd00";
	}
	switch(PI[playerid][data_VIP]) {
		case 0: invpt = 400;
		case 1: invpt = 800;
	}
	switch(PI[playerid][data_VIP]) {
		case 0: invmt = 40;
		case 1..365: invmt = 80;
	}
	switch(PI[playerid][data_VIP]) {
		case 0: invdr = 1000;
		case 1..365: invdr = 2000;
	}
	new nextlvl = PI[playerid][data_LVL]+1;
	new nextexp = nextlvl*4;
	format(str_1,sizeof(str_1),"{252525}Имя:\t\t\t\t{285d9f}%s\n",PI[playerid][data_NAME]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{252525}Номер персонажа:{f00e5d}\t\t%d\n",PI[playerid][data_ID]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{252525}Подписка:\t\t\t{%s}%s\n", vip_color,vip_check);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"{252525}___________________________________\n\n");
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Уровень:\t\t\t%d\n",PI[playerid][data_LVL]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Очки опыта:\t\t\t%d / %d\n",PI[playerid][data_EXP], nextexp);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Пол:\t\t\t\t%s\n",sex_text);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Номер телефона:\t\t%s\n",number_text);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Баланс телефона:\t\t%d руб\n",PI[playerid][data_NUMBER_M]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Законопослушность:\t\t%d\n",PI[playerid][data_ZAKON]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Уровень розыска:\t\t%d\n",PI[playerid][data_WANTED]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Вещества:\t\t\t%d / %d\n",PI[playerid][data_DRUGS], invdr);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Зависимость:\t\t\t%d\n",PI[playerid][data_USEDRUGS]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Металл:\t\t\t%d / %d\n",PI[playerid][data_MET], invmt);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Патроны:\t\t\t%d / %d\n",PI[playerid][data_PATR], invpt);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Маска:\t\t\t\t%d / 1\n",PI[playerid][data_MASK]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Аптечки:\t\t\t%d / 3\n",PI[playerid][data_HEALPACK]);
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"___________________________________\n\n");
	strcat(str_3,str_1);
	format(str_1,sizeof(str_1),"Организация:\t\t\t%s\n",org_text);
	strcat(str_3,str_1);
	switch(PI[playerid][data_MEMBER]) {
 	    case 0:format(str_1,sizeof(str_1),"Должность:\t\t\tНет\n"),strcat(str_3,str_1);
 	    case 1:format(str_1,sizeof(str_1),"Должность:\t\t\t%s\n",rang_gov[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
		case 2:format(str_1,sizeof(str_1),"Звание:\t\t\t%s\n",rang_army[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
		case 3:format(str_1,sizeof(str_1),"Звание:\t\t\t%s\n",rang_police[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
		case 4:format(str_1,sizeof(str_1),"Должность:\t\t\t%s\n",rang_hospital[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
	    case 5:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_skinhead[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
	    case 6:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_gopota[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
	    case 7:format(str_1,sizeof(str_1),"Масть:\t\t\t\t%s\n",rang_kavkaz[PI[playerid][data_RANK]-1][frName]),strcat(str_3,str_1);
	}
	if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) {
		format(str_1,sizeof(str_1),"Место жительства:\t\t%s\n",hous);
		strcat(str_3,str_1);
	}
	else if(PI[playerid][data_KV] != INVALID_KV_ID) {
		format(str_1,sizeof(str_1),"Место жительства:\t\t%s\n",kkvs);
		strcat(str_3,str_1);
	}
	else {
		format(str_1,sizeof(str_1),"Место жительства:\t\tБездомный\n");
		strcat(str_3,str_1);
	}
	format(str_1,sizeof(str_1),"Бизнес:\t\t\t%s\n",bis);
	strcat(str_3,str_1);
	CEF__Dialog(playerid,8009,DIALOG_STYLE_MSGBOX,"{f00e5d}Статистика игрока", str_3, "Закрыть", "Назад");
	return 1;
}
stock SendFractionMessage(fraction,color, text[]) {
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_MEMBER] == fraction) SendClientMessage(i, color, text);
	}
}
stock ClearProposition(playerid) {
	send_proposition[playerid] =
	incoming_proposition[playerid] =
	incoming_proposition_type[playerid] =
	incoming_proposition_value[playerid][0] =
	incoming_proposition_value[playerid][1] = -1;
	return 1;
}
stock ClearPlayerData(playerid) {
    noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	noclipdata[playerid][lrold]	= 0;
	noclipdata[playerid][udold] = 0;
	noclipdata[playerid][mode] = 0;
	noclipdata[playerid][lastmove] = 0;
	noclipdata[playerid][accelmul] = 0.0;
    ClearProposition(playerid);
 	for(new i = 0; i < 13; i++) {
	}
	for(new i = 0; i < 13; i++) {
		PI[playerid][data_GUN][i] = 0;
		PI[playerid][data_AMMO][i] = 0;
	}
    shield[playerid] = false;
    PI[playerid][data_TIME] = 0;
    PI[playerid][data_911_1] = 0;
	PI[playerid][data_ID] = 0;
	PI[playerid][data_911_2] = 0;
	PI[playerid][data_LOGGED] = false;
	PI[playerid][data_SEX] = 0;
	animan{playerid}                    = false;
	PI[playerid][data_SKIN] = 0;
	PI[playerid][data_SKINM] = 0;
	PI[playerid][data_CONTRY] = 0;
	PI[playerid][data_MONEY] = 0;
	PI[playerid][data_ADMLVL] = 0;
	PI[playerid][data_LVL] = 0;
	PI[playerid][data_EXP] = 0;
	PI[playerid][data_MEMBER] = 0;
	PI[playerid][data_LEADER] = 0;
	PI[playerid][data_RANK] = 0;
	PI[playerid][data_ECODE] = 0;
	for(new i = 0; i < 4; i++) casino_point[playerid][i] = 0;
	casino_update[playerid] = 0;
	casino_stavka[playerid] = 0;
	PI[playerid][data_OPENCASINO] = false;
	PI[playerid][data_ANIM] = false;
	PI[playerid][data_3SECOND] = 0;
	PI[playerid][data_MINUTE] = 0;
	PI[playerid][data_CHANGESKIN] = 0;
	PI[playerid][data_MUTE] = 0;
	PI[playerid][data_MUTETIME] = 0;
	PI[playerid][data_WARN] = 0;
	PI[playerid][data_WARNTIME] = 0;
	PI[playerid][data_BANK] = 0;
	PI[playerid][data_PUTPATR] = 0;
	PI[playerid][data_PUTMET] = 0;
	PI[playerid][data_EFIR] = false;
	PI[playerid][data_SALARY] = 0;
	PI[playerid][data_AFK] = -1;
	PI[playerid][data_LICB] = 0;
	PI[playerid][data_LICG] = 0;
	for(new c = 0; c < 2; c++) {
		PI[playerid][data_CAR][c] = 0;
		PI[playerid][data_CARFUEL][c] = 0;
		PI[playerid][data_CAR_COLOR1][c] = 0;
		PI[playerid][data_CAR_COLOR2][c] = 0;
	}
	PI[playerid][data_PATR] = 0;
	PI[playerid][data_DRUGS] = 0;
	PI[playerid][data_WANTED] = 0;
	PI[playerid][data_ZAKON] = 0;
	PI[playerid][data_NUMBER] = 0;
	PI[playerid][data_NUMBER_M] = 0;
	PI[playerid][data_MET] = 0;
	PI[playerid][data_START_JOB] = 0;
	PI[playerid][data_JAILTIME] = 0;
	PI[playerid][data_JAIL] = 0;
	PI[playerid][data_VIP] = 0;
	PI[playerid][data_DONATE] = 0;
	PI[playerid][data_PHONE] = 0;
	PI[playerid][data_PHONEBOOK] = 0;
	PI[playerid][data_DIR] = 0;
	PI[playerid][data_SATIETY] = 0;
	PI[playerid][data_DRINK] = 0;
	PI[playerid][data_HP] = 100.0;
	PI[playerid][data_ARM] = 100.0;
	PI[playerid][data_MED] = 0;
	PI[playerid][data_SPAWN] = 0;
	PI[playerid][data_HOSPITAL] = 0;
	PI[playerid][data_JOB] = 0;
	PI[playerid][data_HEALPACK] = 0;
	PI[playerid][data_MASK] = 0;
	PI[playerid][data_MASK_M] = 0;
	PI[playerid][data_CALL] = -1;
	PI[playerid][data_CLICKTD] = false;
	PI[playerid][data_CLOTHESMENU] = false;
	PI[playerid][data_OPENAUTOSALON] = false;
	PI[playerid][data_ZAPCHASTI] = 0;
	PI[playerid][data_KANISTRA] = 0;
	PI[playerid][data_SETMARK] = 0;
	PI[playerid][data_PISTOL] = 0;
	PI[playerid][data_SDPISTOL] = 0;
	PI[playerid][data_DEAGLE] = 0;
	PI[playerid][data_SHOTGUN] = 0;
	PI[playerid][data_MP5] = 0;
	PI[playerid][data_AK47] = 0;
	PI[playerid][data_SNIPERRIFLE] = 0;
	PI[playerid][data_VEH] = INVALID_VEHICLE_ID;
	PI[playerid][data_VEHb] = INVALID_VEHICLE_ID;
	PI[playerid][data_HOUSE] = INVALID_HOUSE_ID;
	PI[playerid][data_BUSCAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_RENTJOB] = INVALID_VEHICLE_ID;
	PI[playerid][data_RENTCAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_BUSINESS] = INVALID_BUSINESS_ID;
	PI[playerid][data_KV] = INVALID_KV_ID;
	PI[playerid][data_PADIK] = INVALID_KV_ID;
	PI[playerid][data_JB] = INVALID_JB_ID;
	PI[playerid][data_AB] = INVALID_AB_ID;
	PI[playerid][data_ASH_CAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_TRAILER] = INVALID_VEHICLE_ID;
	PI[playerid][data_CHEK] = 0;
	PI[playerid][data_ASH_TEST] = 0;
	PI[playerid][data_DSKILL] = 1;
	PI[playerid][data_DEXP] = 0;
	PI[playerid][data_AUTOSALON_CAR] = INVALID_VEHICLE_ID;
	PI[playerid][data_CHANGECAR] = 0;
	PI[playerid][data_ONECOLOR_AS] = 0;
	PI[playerid][data_TWOCOLOR_AS] = 0;
	PI[playerid][data_VKID] = 0;
	PI[playerid][data_ADMRETURN] = 0;
	PI[playerid][data_AKS_USE] = 0;
	PI[playerid][data_TAKEAKS] = 0;
	PI[playerid][data_PROMOCODE] = 0;
}
stock give_player_money(playerid,amount,log[],stroka) {
    if(IsPlayerConnected(playerid)) {
	    GivePlayerMoney(playerid,amount);
	    PI[playerid][data_MONEY] += amount;
        new logtext[64],ctext[20];
	    if(amount < 0) {
	        format(ctext,sizeof(ctext),"%d руб.",amount);
   			SetPlayerChatBubble(playerid, ctext, COLOR_TOMATO, 20.0, 1500);
	    }
	    else {
	        format(ctext,sizeof(ctext),"+%d руб.",amount);
         	SetPlayerChatBubble(playerid, ctext, 0x99ff99FF, 20.0, 1500);
	    }
		format(logtext,sizeof(logtext),"%d %s", amount,log);
		AddLog("log_transfermoney",PI[playerid][data_NAME], logtext);
		printf("give_player_money PI[playerid][data_NAME] stroka %d", stroka);
		UpdatePlayerDataInt(playerid, "money", PI[playerid][data_MONEY],18933);
    }
}
stock RandomEX(min, max) {
	new a = random(max - min) + min;
	return a;
}
stock set_player_money(playerid,amount) {
    if(IsPlayerConnected(playerid)) {
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid,amount);
    }
	cef_emit_event(playerid, "pwd:money", CEFINT(amount));
}
stock get_player_money(playerid) return PI[playerid][data_MONEY];
stock ResetWeaponAll(playerid) {
    ResetPlayerWeapons(playerid);
    for(new s; s != 13; s++) {
        PI[playerid][data_GUN][s] = 0;
        PI[playerid][data_AMMO][s] = 0;
    }
    return 1;
}
stock getWeaponIdSlot(weaponid) {
    switch(weaponid) {
        case 0, 1: return 0;
        case 2..9: return 1;
        case 10..15: return 10;
        case 16..18, 39: return 8;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28, 29, 32: return 4;
        case 30, 31: return 5;
        case 33, 34: return 6;
        case 35..38: return 7;
        case 40: return 12;
        case 41..43: return 9;
        case 44..46: return 11;
    }
    return -1;
}
stock ResetWeaponSlot(playerid, slot) {
    if(!IsPlayerConnected(playerid)) return 0;
    new weapon[13], ammo[13];
    for(new i = 0; i < 13; i++) {
        if(i != slot) {
			weapon[i] = PI[playerid][data_GUN][i];
			ammo[i] = PI[playerid][data_AMMO][i];
		}
    }
    ResetWeaponAll(playerid);
    for(new i = 0; i < 13; i++) if(i != slot) GiveWeapon(playerid, weapon[i], ammo[i]);
    return 1;
}
stock SetWeapon(playerid, gunid, ammo) {
    new slotgunid = getWeaponIdSlot(gunid);
    ResetWeaponSlot(playerid, slotgunid);
    GivePlayerWeapon(playerid, gunid, ammo);
    PI[playerid][data_GUN][slotgunid] = gunid;
    PI[playerid][data_AMMO][slotgunid] = ammo;
    ac_gun[playerid][slotgunid] = 1;
    return 1;
}
stock GiveWeapon(playerid, gunid, ammo) {
	SetPVarInt(playerid,"gunadm",0);
    new slotgunid = getWeaponIdSlot(gunid);
    GivePlayerWeapon(playerid, gunid, ammo);
    PI[playerid][data_GUN][slotgunid] = gunid;
    PI[playerid][data_AMMO][slotgunid] += ammo;
    ac_gun[playerid][slotgunid] = 1;
    SavePlayerData(playerid);
    return 1;
}
stock ShowAdmInfo(playerid, targetid) {
	cef_emit_event(playerid, "show-spectate");
	cef_emit_event(playerid, "hide-speed");
	new Float:hp,Float:arm;
	new str[60],str1[60],str2[60],str3[60],str4[60],str5[60],str6[60],str7[60],str8[60];
	GetPlayerHealth(targetid,hp);
	GetPlayerArmour(targetid,arm);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(targetid, x, y, z);
	new hour, minute, second;
	gettime(hour, minute, second);
	format(str,sizeof(str),"%.2f, %.2f, %.2f", x, y, z);
	format(str1,sizeof(str1),"%d/%d",GetPlayerVirtualWorld(targetid), GetPlayerInterior(targetid));
	format(str2,sizeof(str2),"%s(%d)(#%d/#1)",PI[targetid][data_NAME], targetid, PI[targetid][data_ID]);
	format(str3,sizeof(str3),"%d", GetPlayerPing(targetid));
	format(str4,sizeof(str4),"%d", GetPlayerFPS(targetid));
	format(str5,sizeof(str5),"%d", Player_Speed(targetid));
	format(str6,sizeof(str6),"%d", GetPlayerState(targetid));
	format(str7,sizeof(str7),"%.2f HP", hp);
	format(str8,sizeof(str8),"%.2f ARM", arm);
	cef_emit_event(playerid, "update-spectate", CEFINT(1), CEFSTR(str2));
	cef_emit_event(playerid, "update-spectate", CEFINT(2), CEFSTR(str3));
	cef_emit_event(playerid, "update-spectate", CEFINT(3), CEFSTR(str4));
	cef_emit_event(playerid, "update-spectate", CEFINT(4), CEFSTR(str6));
	cef_emit_event(playerid, "update-spectate", CEFINT(5), CEFSTR(str7));
	cef_emit_event(playerid, "update-spectate", CEFINT(6), CEFSTR(str8));
	cef_emit_event(playerid, "update-spectate", CEFINT(7), CEFSTR(str1));
	cef_emit_event(playerid, "update-spectate", CEFINT(8), CEFSTR(str));
	cef_emit_event(playerid, "update-spectate", CEFINT(9), CEFSTR(str5));
	return 1;
}
stock HideAdmInfo(playerid) cef_emit_event(playerid, "hide-spectate");
stock GetPlayerFPS(playerid) {
	SetPVarInt(playerid, "DrunkL", GetPlayerDrunkLevel(playerid));
 	if(GetPVarInt(playerid, "DrunkL") < 100) SetPlayerDrunkLevel(playerid, 2000);
	else {
		if(GetPVarInt(playerid, "LDrunkL") != GetPVarInt(playerid, "DrunkL")) {
			SetPVarInt(playerid, "FPS", (GetPVarInt(playerid, "LDrunkL") - GetPVarInt(playerid, "DrunkL")));
 			SetPVarInt(playerid, "LDrunkL", GetPVarInt(playerid, "DrunkL"));
     		if((GetPVarInt(playerid, "FPS") > 0) && (GetPVarInt(playerid, "FPS") < 700)) {
     			return GetPVarInt(playerid, "FPS") - 1;
    		}
		}
	}
  	return 0;
}
callback: SetPlayerToSpawn(playerid) {
	HidePlayerSpeedometer(playerid);
	if(gangwar > 0) {
		if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
			static name_org[15], nameorg[15];
			switch(Command[0]) {
				case 5: name_org = "Скинхеды";
				case 6: name_org = "Гопота";
				case 7: name_org = "Кавказцы";
			}
			switch(Command[1]) {
				case 5: nameorg = "Скинхеды";
				case 6: nameorg = "Гопота";
				case 7: nameorg = "Кавказцы";
			}
			cef_emit_event(playerid, "show-capture");
			cef_emit_event(playerid, "capture-text", CEFSTR("подготовка"));
			cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
			cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
			cef_emit_event(playerid, "show_kill_list");
		}
	}
	if(PI[playerid][data_HP] < 30) PI[playerid][data_HP] = 30.0;
    switch(PI[playerid][data_SPAWN]) {
        case 1: if(PI[playerid][data_MEMBER] == 0) PI[playerid][data_SPAWN] = 0;
        case 2: if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_HOUSE_ID) PI[playerid][data_SPAWN] = 0;
    }
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
    SetPlayerSkills(playerid);
    SetPlayerColorEx(playerid);
    SetPlayerHealthAC(playerid, PI[playerid][data_HP]);
    SetPlayerTeam(playerid, NO_TEAM);
    if(PI[playerid][data_MEMBER] == 0) SetPlayerSkinAC(playerid, PI[playerid][data_SKIN]);
    else SetPlayerSkinAC(playerid, PI[playerid][data_SKINM]);
    set_player_money(playerid,PI[playerid][data_MONEY]);
	SetPlayerScore(playerid, PI[playerid][data_LVL]);
 	SetPlayerWantedLevel(playerid,PI[playerid][data_WANTED]);
	if(GetPVarInt(playerid, "SpecBool") == 1) {
	    DeletePVar(playerid, "SpecBool");
	    DeletePVar(playerid, "FlyMode");
		SetPlayerPosAC(playerid, GetPVarFloat(playerid,"SpecX"), GetPVarFloat(playerid,"SpecY"), GetPVarFloat(playerid,"SpecZ"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid,"SpecFA"));
		SetPlayerInterior(playerid,GetPVarInt(playerid,"SpecInt"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"SpecWorld"));
		HideAdmInfo(playerid);
		return true;
	}
	switch(PI[playerid][data_JAIL]) {
	    case 1: {
 			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid,1);
			SetPlayerFacingAngle(playerid, 270.5164);
			SetCameraBehindPlayer(playerid);
			switch(random(1)) {
			    case 0:SetPlayerPosAC(playerid, 2141.5742,-1972.8276,903.4900);
			    case 1:SetPlayerPosAC(playerid, 2142.1479,-1975.5963,903.4900);
			}
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
			return true;
	    }
	}
	switch(PI[playerid][data_DEMORGAN]) {
	    case 1: {
 			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid,1);
			SetPlayerFacingAngle(playerid, 87.6155);
			SetCameraBehindPlayer(playerid);
			SetPlayerPosAC(playerid, 14.5554,2.1119,1001.2870);
			FreezePlayer(playerid);
			SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
			return true;
	    }
	}
	if(GetPVarInt(playerid, "deathcapture") != 1) {
		switch(PI[playerid][data_HOSPITAL]) {
			case 1: {
				if(PI[playerid][data_MEMBER] == 2) {
					SetPlayerPosAC(playerid, 743.4705,1523.0537,2002.1899);
					SetPlayerFacingAngle(playerid, 178.3564);
					SetPlayerVirtualWorld(playerid, 5);
					SetPlayerInterior(playerid, 5);
				}
				else {
					SetPlayerPosAC(playerid, 1331.8745,2505.1877,1002.1400);
					SetPlayerFacingAngle(playerid, 90.0);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid,	2);
				}
				SetCameraBehindPlayer(playerid);
				Freeze(playerid);
				return true;
			}
		}
	}
	else {
		SetPVarInt(playerid, "deathcapture", 0);
		switch(PI[playerid][data_MEMBER])
		{
			case 5:
			{
				SetPlayerPosAC(playerid, 2612.3826,1771.0239,2.4302);
				SetPlayerFacingAngle(playerid, 4.5644);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				SetPlayerHealthAC(playerid, 176);
				return true;
			}
			case 6:
			{
				SetPlayerPosAC(playerid, 2215.6062,-2594.8127,21.9600);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 276.1525);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				SetPlayerHealthAC(playerid, 176);
				return true;
			}
			case 7:
			{
				SetPlayerPosAC(playerid, -563.0120,-1370.9995,41.1382);
				SetPlayerVirtualWorld(playerid,0);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 240.7977);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				SetPlayerHealthAC(playerid, 176);
				return true;
			}
		}
	}
	switch(PI[playerid][data_SPAWN])
	{
		case 0:
		{
			if(PI[playerid][data_LVL] < 3) {
				SetPlayerPosAC(playerid, 1804.6685,2506.1846,15.8725);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 306.3729);
				SetCameraBehindPlayer(playerid);
				return true;
			}
			if(PI[playerid][data_LVL] >= 3) {
				switch(random(3)) {
					case 0: SetPlayerPosAC(playerid, 2341.6719,-1838.8752,21.9800), SetPlayerFacingAngle(playerid, 183.8438);
					case 1: SetPlayerPosAC(playerid, 2352.8691,-1826.5319,21.9900), SetPlayerFacingAngle(playerid, 184.4691);
					case 2: SetPlayerPosAC(playerid, 2329.4270,-1825.6348,21.9900), SetPlayerFacingAngle(playerid, 171.9228);
				}
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerInterior(playerid,0);
				SetCameraBehindPlayer(playerid);
				return true;
			}
		}
		case 1:
		{
			switch(PI[playerid][data_MEMBER])
			{
				case 1:
				{
					SetPlayerPosAC(playerid, 1157.7380,2563.6736,1112.4800);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid, 0.0);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 2:
				{
					SetPlayerPosAC(playerid, 743.5262,1521.9760,2002.1899);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid, 180.0);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 3:
				{
					SetPlayerPosAC(playerid, 2131.3679,-1970.3822,903.5000);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid, 86.2074);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 4:
				{
					SetPlayerPosAC(playerid, -2842.3259,2814.4868,1002.1600);
					SetPlayerVirtualWorld(playerid,1);
					SetPlayerInterior(playerid,1);
					SetPlayerFacingAngle(playerid, 90.0);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 5:
				{
					SetPlayerPosAC(playerid, 2612.3826,1771.0239,2.4302);
					SetPlayerFacingAngle(playerid, 4.5644);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 6:
				{
					SetPlayerPosAC(playerid, 2215.6062,-2594.8127,21.9600);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					SetPlayerFacingAngle(playerid, 276.1525);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
				case 7:
				{
					SetPlayerPosAC(playerid, -563.0120,-1370.9995,41.1382);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					SetPlayerFacingAngle(playerid, 240.7977);
					SetCameraBehindPlayer(playerid);
					FreezePlayer(playerid);
					SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
					return true;
				}
			}
		}
		case 2:
		{
			if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID)
			{
				new kv = PI[playerid][data_PADIK];
				new k = PI[playerid][data_KV];
				SetPVarInt(playerid, "padik",kv);
				SetPlayerPosAC(playerid, KV_DATA[kv][data_CAR_POSX], KV_DATA[kv][data_CAR_POSY], KV_DATA[kv][data_CAR_POSZ]);
				SetPlayerFacingAngle(playerid, KV_DATA[kv][data_CAR_POSA]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				new message[45];
				format(message,sizeof(message),"Ваша квартира оплачена на {3377cc}%d дня/дней",KV_DATA[kv][data_DAY][k]);
				SendClientMessage(playerid,0xffcd00FF,message);
				return true;
			}
			else if(PI[playerid][data_KV] == INVALID_KV_ID)
			{
				new h = PI[playerid][data_HOUSE];
				SetPlayerPosAC(playerid,HOUSE_DATA[h][data_CARX],HOUSE_DATA[h][data_CARY],HOUSE_DATA[h][data_CARZ]);
				SetPlayerFacingAngle(playerid, HOUSE_DATA[h][data_CARANGLE]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				SetCameraBehindPlayer(playerid);
				FreezePlayer(playerid);
				SetTimerEx("UnfreezePlayer", 4000, false, "d", playerid);
				new message[45];
				format(message,sizeof(message),"Ваш дом оплачен на {3377cc}%d дня/дней",HOUSE_DATA[h][data_DAY]);
				SendClientMessage(playerid,0xffcd00FF,message);
				return true;
			}
		}
	}
	for(new i = 0; i < 13; i++) if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
	ShowPlayerDialog(playerid, dialog_SPAWNLAST, DIALOG_STYLE_MSGBOX, "{f00e5d}Спавн (2)", "{FFFFFF}Вы хотите появьтся на месте выхода из игры?", "Да", "Нет");
	return true;
}
stock SaveWarehouse() {
	new str_q[512];
	new str_q2[512];
	str_q = "UPDATE `warehouse` SET ";
	acc_int_strcat(str_q, sizeof(str_q), "rostov_metal", rostov_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_patr", rostov_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_narko", rostov_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "rostov_storage", rostov_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "maykop_metal", maykop_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "maykop_patr", maykop_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "maykop_narko", maykop_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "maykop_storage", maykop_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "odessa_metal", odessa_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "odessa_patr", odessa_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "odessa_narko", odessa_wh[2]);
	acc_int_strcat(str_q, sizeof(str_q), "odessa_storage", odessa_wh[3]);
	acc_int_strcat(str_q, sizeof(str_q), "army_metal", army_wh[0]);
	acc_int_strcat(str_q, sizeof(str_q), "army_patr", army_wh[1]);
	acc_int_strcat(str_q, sizeof(str_q), "smi_money", smi_money);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_kavkaz", m_kavkaz);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_gopota", m_gopota);
	acc_int_strcat(str_q, sizeof(str_q), "moroz_skinhead", m_skinhead);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_q2,sizeof(str_q2)," WHERE `id` = '1'");
	strcat(str_q, str_q2);
	mysql_function_query(dbHandle, str_q, false, "", "");
}
stock SavePlayerData(playerid) {
	if(PI[playerid][data_LOGGED] == true && IsPlayerConnected(playerid))
	{
		new str_save[4028];
		new str_s[4028];
		str_save = "UPDATE `accounts` SET ";
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		acc_float_strcat(str_save, sizeof(str_save), "startx", x);
		acc_float_strcat(str_save, sizeof(str_save), "starty", y);
		acc_float_strcat(str_save, sizeof(str_save), "startz", z);
		acc_int_strcat(str_save, sizeof(str_save), "showfps", PI[playerid][data_SHOWFPS]);
		acc_int_strcat(str_save, sizeof(str_save), "mp_adm", PI[playerid][data_MPA]);
		acc_int_strcat(str_save, sizeof(str_save), "vkbot", PI[playerid][data_ADMBOT]);
		acc_int_strcat(str_save, sizeof(str_save), "rep_adm", PI[playerid][data_REPA]);
		acc_int_strcat(str_save, sizeof(str_save), "logdate_day", PI[playerid][data_LOGDATE_DAY]);
		acc_int_strcat(str_save, sizeof(str_save), "logdate_month", PI[playerid][data_LOGDATE_MONTH]);
		acc_int_strcat(str_save, sizeof(str_save), "logdate_year", PI[playerid][data_LOGDATE_YEAR]);
		acc_int_strcat(str_save, sizeof(str_save), "skin", PI[playerid][data_SKIN]);
		acc_int_strcat(str_save, sizeof(str_save), "money", PI[playerid][data_MONEY]);
		acc_str_strcat(str_save, sizeof(str_save), "GPCIBAN", PI[playerid][data_GPCIBAN]);
		acc_str_strcat(str_save, sizeof(str_save), "bang", PI[playerid][data_BANG]);
		acc_str_strcat(str_save, sizeof(str_save), "bangun", PI[playerid][data_BANGTIME]);
		acc_int_strcat(str_save, sizeof(str_save), "lvl", PI[playerid][data_LVL]);
		acc_int_strcat(str_save, sizeof(str_save), "skinm", PI[playerid][data_SKINM]);
		acc_int_strcat(str_save, sizeof(str_save), "member", PI[playerid][data_MEMBER]);
		acc_int_strcat(str_save, sizeof(str_save), "leader", PI[playerid][data_LEADER]);
		acc_int_strcat(str_save, sizeof(str_save), "transfer", PI[playerid][data_TRANSFER]);
		acc_int_strcat(str_save, sizeof(str_save), "transfer_rang", PI[playerid][data_TRANSFER_RANG]);
		acc_int_strcat(str_save, sizeof(str_save), "transfer_frac", PI[playerid][data_TRANSFER_FRAC]);
		acc_int_strcat(str_save, sizeof(str_save), "rank", PI[playerid][data_RANK]);
		acc_int_strcat(str_save, sizeof(str_save), "admlvl", PI[playerid][data_ADMLVL]);
		acc_int_strcat(str_save, sizeof(str_save), "promocode", PI[playerid][data_PROMOCODE]);
		acc_int_strcat(str_save, sizeof(str_save), "pgive", PI[playerid][data_PRIZEGIVE]);
		acc_int_strcat(str_save, sizeof(str_save), "ptime", PI[playerid][data_PRIZETIME]);
		acc_int_strcat(str_save, sizeof(str_save), "HIDEME", PI[playerid][data_HIDEME]);
		acc_int_strcat(str_save, sizeof(str_save), "ASACHAT", PI[playerid][data_CADMIN]);
		acc_int_strcat(str_save, sizeof(str_save), "CAPTUREKILL", PI[playerid][data_CAPTUREKILL]);
		acc_int_strcat(str_save, sizeof(str_save), "CAPTURECMD", PI[playerid][data_CAPTURECMD]);
		acc_int_strcat(str_save, sizeof(str_save), "ADMINSNUMBER", PI[playerid][ADMINSNUMBER]);
		acc_str_strcat(str_save, sizeof(str_save), "login_ip", PI[playerid][data_LOGIN_IP]);
		acc_int_strcat(str_save, sizeof(str_save), "mute", PI[playerid][data_MUTE]);
		acc_int_strcat(str_save, sizeof(str_save), "mutetime", PI[playerid][data_MUTETIME]);
		acc_int_strcat(str_save, sizeof(str_save), "vmute", PI[playerid][data_VMUTE]);
		acc_int_strcat(str_save, sizeof(str_save), "vmutetime", PI[playerid][data_VMUTETIME]);
		acc_int_strcat(str_save, sizeof(str_save), "warn", PI[playerid][data_WARN]);
		acc_int_strcat(str_save, sizeof(str_save), "warntime", PI[playerid][data_WARNTIME]);
		acc_int_strcat(str_save, sizeof(str_save), "salary", PI[playerid][data_SALARY]);
		acc_int_strcat(str_save, sizeof(str_save), "bank", PI[playerid][data_BANK]);
		acc_int_strcat(str_save, sizeof(str_save), "licb", PI[playerid][data_LICB]);
		acc_int_strcat(str_save, sizeof(str_save), "licg", PI[playerid][data_LICG]);
		acc_int_strcat(str_save, sizeof(str_save), "contry", PI[playerid][data_CONTRY]);
		acc_int_strcat(str_save, sizeof(str_save), "business", PI[playerid][data_BUSINESS]);
		acc_int_strcat(str_save, sizeof(str_save), "house", PI[playerid][data_HOUSE]);
		acc_int_strcat(str_save, sizeof(str_save), "time", PI[playerid][data_TIME]);
		acc_int_strcat(str_save, sizeof(str_save), "car_1", PI[playerid][data_CAR][0]);
		acc_int_strcat(str_save, sizeof(str_save), "military", PI[playerid][data_MILITARY]);
		acc_int_strcat(str_save, sizeof(str_save), "medcard", PI[playerid][data_MEDCARD]);
		acc_int_strcat(str_save, sizeof(str_save), "car_color1_1", PI[playerid][data_CAR_COLOR1][0]);
		acc_int_strcat(str_save, sizeof(str_save), "car_color2_1", PI[playerid][data_CAR_COLOR1][0]);
		acc_int_strcat(str_save, sizeof(str_save), "car_2", PI[playerid][data_CAR][1]);
		acc_int_strcat(str_save, sizeof(str_save), "car_color1_2", PI[playerid][data_CAR_COLOR1][1]);
		acc_int_strcat(str_save, sizeof(str_save), "car_color2_2", PI[playerid][data_CAR_COLOR1][1]);
		acc_int_strcat(str_save, sizeof(str_save), "timerank", PI[playerid][data_TIMERANK]);
		if(PI[playerid][data_CAR][0] != -1) acc_int_strcat(str_save, sizeof(str_save), "carfuel_1", CAR_DATA[PI[playerid][data_CAR][0]][data_FUEL]);
		if(PI[playerid][data_CAR][1] != -1) acc_int_strcat(str_save, sizeof(str_save), "carfuel_2", CAR_DATA[PI[playerid][data_CAR][1]][data_FUEL]);
		acc_int_strcat(str_save, sizeof(str_save), "vip", PI[playerid][data_VIP]);
		acc_int_strcat(str_save, sizeof(str_save), "patr", PI[playerid][data_PATR]);
		acc_int_strcat(str_save, sizeof(str_save), "drugs", PI[playerid][data_DRUGS]);
		acc_int_strcat(str_save, sizeof(str_save), "usedrugs", PI[playerid][data_USEDRUGS]);
		acc_int_strcat(str_save, sizeof(str_save), "mednum", PI[playerid][data_MEDNUM]);
		acc_int_strcat(str_save, sizeof(str_save), "licnum", PI[playerid][data_LICNUM]);
		acc_int_strcat(str_save, sizeof(str_save), "met", PI[playerid][data_MET]);
		acc_int_strcat(str_save, sizeof(str_save), "wanted", PI[playerid][data_WANTED]);
		acc_int_strcat(str_save, sizeof(str_save), "zakon", PI[playerid][data_ZAKON]);
		acc_int_strcat(str_save, sizeof(str_save), "number", PI[playerid][data_NUMBER]);
		acc_int_strcat(str_save, sizeof(str_save), "number_m", PI[playerid][data_NUMBER_M]);
		acc_int_strcat(str_save, sizeof(str_save), "pstatus", PI[playerid][data_PHONESTATUS]);
		acc_int_strcat(str_save, sizeof(str_save), "jail", PI[playerid][data_JAIL]);
		acc_int_strcat(str_save, sizeof(str_save), "jailtime", PI[playerid][data_JAILTIME]);
		acc_int_strcat(str_save, sizeof(str_save), "donate", PI[playerid][data_DONATE]);
		acc_int_strcat(str_save, sizeof(str_save), "phone", PI[playerid][data_PHONE]);
		acc_int_strcat(str_save, sizeof(str_save), "phonebook", PI[playerid][data_PHONEBOOK]);
		acc_int_strcat(str_save, sizeof(str_save), "dir", PI[playerid][data_DIR]);
		acc_int_strcat(str_save, sizeof(str_save), "satiety", PI[playerid][data_SATIETY]);
		acc_float_strcat(str_save, sizeof(str_save), "hp", PI[playerid][data_HP]);
		acc_float_strcat(str_save, sizeof(str_save), "arm", PI[playerid][data_ARM]);
		acc_int_strcat(str_save, sizeof(str_save), "med", PI[playerid][data_MED]);
		acc_int_strcat(str_save, sizeof(str_save), "spawn", PI[playerid][data_SPAWN]);
		acc_int_strcat(str_save, sizeof(str_save), "hospital", PI[playerid][data_HOSPITAL]);
		acc_int_strcat(str_save, sizeof(str_save), "pistol_skill", PI[playerid][data_PISTOL]);
		acc_int_strcat(str_save, sizeof(str_save), "sdpistol_skill", PI[playerid][data_SDPISTOL]);
		acc_int_strcat(str_save, sizeof(str_save), "deagle_skill", PI[playerid][data_DEAGLE]);
		acc_int_strcat(str_save, sizeof(str_save), "shotgun_skill", PI[playerid][data_SHOTGUN]);
		acc_int_strcat(str_save, sizeof(str_save), "mp5_skill", PI[playerid][data_MP5]);
		acc_int_strcat(str_save, sizeof(str_save), "ak47_skill", PI[playerid][data_AK47]);
		acc_int_strcat(str_save, sizeof(str_save), "rifle_skill", PI[playerid][data_SNIPERRIFLE]);
		acc_int_strcat(str_save, sizeof(str_save), "job", PI[playerid][data_JOB]);
		acc_int_strcat(str_save, sizeof(str_save), "house", PI[playerid][data_HOUSE]);
		acc_int_strcat(str_save, sizeof(str_save), "business", PI[playerid][data_BUSINESS]);
		acc_int_strcat(str_save, sizeof(str_save), "kv", PI[playerid][data_KV]);
		acc_int_strcat(str_save, sizeof(str_save), "jb", PI[playerid][data_JB]);
		acc_int_strcat(str_save, sizeof(str_save), "ab", PI[playerid][data_AB]);
		acc_int_strcat(str_save, sizeof(str_save), "padik", PI[playerid][data_PADIK]);
		acc_int_strcat(str_save, sizeof(str_save), "d_skill", PI[playerid][data_DSKILL]);
		acc_int_strcat(str_save, sizeof(str_save), "d_exp", PI[playerid][data_DEXP]);
		acc_int_strcat(str_save, sizeof(str_save), "gun0", PI[playerid][data_GUN][0]);
		acc_int_strcat(str_save, sizeof(str_save), "gun1", PI[playerid][data_GUN][1]);
		acc_int_strcat(str_save, sizeof(str_save), "gun2", PI[playerid][data_GUN][2]);
		acc_int_strcat(str_save, sizeof(str_save), "gun3", PI[playerid][data_GUN][3]);
		acc_int_strcat(str_save, sizeof(str_save), "gun4", PI[playerid][data_GUN][4]);
		acc_int_strcat(str_save, sizeof(str_save), "gun5", PI[playerid][data_GUN][5]);
		acc_int_strcat(str_save, sizeof(str_save), "gun6", PI[playerid][data_GUN][6]);
		acc_int_strcat(str_save, sizeof(str_save), "gun7", PI[playerid][data_GUN][7]);
		acc_int_strcat(str_save, sizeof(str_save), "gun8", PI[playerid][data_GUN][8]);
		acc_int_strcat(str_save, sizeof(str_save), "gun9", PI[playerid][data_GUN][9]);
		acc_int_strcat(str_save, sizeof(str_save), "gun10", PI[playerid][data_GUN][10]);
		acc_int_strcat(str_save, sizeof(str_save), "gun11", PI[playerid][data_GUN][11]);
		acc_int_strcat(str_save, sizeof(str_save), "gun12", PI[playerid][data_GUN][12]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo0", PI[playerid][data_AMMO][0]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo1", PI[playerid][data_AMMO][1]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo2", PI[playerid][data_AMMO][2]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo3", PI[playerid][data_AMMO][3]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo4", PI[playerid][data_AMMO][4]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo5", PI[playerid][data_AMMO][5]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo6", PI[playerid][data_AMMO][6]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo7", PI[playerid][data_AMMO][7]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo8", PI[playerid][data_AMMO][8]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo9", PI[playerid][data_AMMO][9]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo10", PI[playerid][data_AMMO][10]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo11", PI[playerid][data_AMMO][11]);
		acc_int_strcat(str_save, sizeof(str_save), "ammo12", PI[playerid][data_AMMO][12]);
		acc_int_strcat(str_save, sizeof(str_save), "demorgan", PI[playerid][data_DEMORGAN]);
		acc_int_strcat(str_save, sizeof(str_save), "demorgan_time", PI[playerid][data_DEMORGANTIME]);
		acc_int_strcat(str_save, sizeof(str_save), "twarn", PI[playerid][TWARN]);
		acc_int_strcat(str_save, sizeof(str_save), "healthchest", PI[playerid][data_HEALPACK]);
		acc_int_strcat(str_save, sizeof(str_save), "HEALPACKSKLAD", PI[playerid][data_HEALPACKSKLAD]);
		acc_int_strcat(str_save, sizeof(str_save), "mask", PI[playerid][data_MASK]);
		acc_int_strcat(str_save, sizeof(str_save), "fixnabor", PI[playerid][data_FIXCOMPL]);
		acc_int_strcat(str_save, sizeof(str_save), "takeaks", PI[playerid][data_TAKEAKS]);
		acc_int_strcat(str_save, sizeof(str_save), "returnadm", PI[playerid][data_ADMRETURN]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_1", PI[playerid][data_AKS1]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_2", PI[playerid][data_AKS2]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_3", PI[playerid][data_AKS3]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_4", PI[playerid][data_AKS4]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_5", PI[playerid][data_AKS5]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_6", PI[playerid][data_AKS6]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_7", PI[playerid][data_AKS7]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_8", PI[playerid][data_AKS8]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_9", PI[playerid][data_AKS9]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_10", PI[playerid][data_AKS10]);
		acc_int_strcat(str_save, sizeof(str_save), "accessory_use", PI[playerid][data_AKS_USE]);
		if(PI[playerid][data_VEH] == INVALID_VEHICLE_ID) {
			acc_float_strcat(str_save, sizeof(str_save), "car_tpposx", PI[playerid][data_CAR_POSX]);
			acc_float_strcat(str_save, sizeof(str_save), "car_tpposy", PI[playerid][data_CAR_POSY]);
			acc_float_strcat(str_save, sizeof(str_save), "car_tpposz", PI[playerid][data_CAR_POSZ]);
			acc_float_strcat(str_save, sizeof(str_save), "car_tpangle", PI[playerid][data_CAR_ANGLE]);
		}
		PI[playerid][data_UNICALID] = 1000000+PI[playerid][data_ID];
		acc_int_strcat(str_save, sizeof(str_save), "unicalcode", PI[playerid][data_UNICALID]);
		acc_int_strcat(str_save, sizeof(str_save), "virti", GetPlayerInterior(playerid));
		acc_int_strcat(str_save, sizeof(str_save), "virtw", GetPlayerVirtualWorld(playerid));
		strdel(str_save, strlen(str_save)-1, strlen(str_save));
		format(str_s,sizeof(str_s)," WHERE `name` = '%s' LIMIT 1",PI[playerid][data_NAME]);
		strcat(str_save, str_s);
		mysql_function_query(dbHandle, str_save, false, "", "");
		//printf("Cохранение игрока: %s", PI[playerid][data_NAME]);
	}
	else printf("Ошибка сохранения игрока: %s", PI[playerid][data_NAME]);
	return 1;
}
stock GetFreeSeat(vehicleid) {
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) - 1;
	new bool:seat[3],cnt;
	for(new i;i<MAX_PLAYERS;i++) {
		if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i;i<3;i++) if(!seat[i]) return i+1;
	return -1;
}
stock GetMaxSeat(modelid) {
	switch(modelid) {
		case 596..598,427,490: return 4;
		case 599,497,528: return 2;
	}
	return -1;
}
stock SetPlayerSkills(playerid) {
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, PI[playerid][data_PISTOL]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PI[playerid][data_SDPISTOL]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PI[playerid][data_DEAGLE]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PI[playerid][data_SHOTGUN]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PI[playerid][data_MP5]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PI[playerid][data_AK47]*10);
    SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PI[playerid][data_SNIPERRIFLE]*10);
    return 1;
}
stock addkv(playerid) {
    new Float:a1 = GetPVarFloat(playerid, "aEnterX");
    new Float:a2 = GetPVarFloat(playerid, "aEnterY");
    new Float:a3 = GetPVarFloat(playerid, "aEnterZ");
    new Float:a4 = GetPVarFloat(playerid, "aCarX");
    new Float:a5 = GetPVarFloat(playerid, "aCarY");
    new Float:a6 = GetPVarFloat(playerid, "aCarZ");
    new Float:a7 = GetPVarFloat(playerid, "aCarAngle");
	new str_q[512];
	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `kvartiry` ( `enter_x`, `enter_y`, `enter_z`, `car_posx`, `car_posy`, `car_posz`, `car_posa`) VALUES ( '%f', '%f', '%f', '%f', '%f', '%f', '%f')",a1,a2,a3,a4,a5,a6,a7);
    mysql_function_query(dbHandle, str_q, false, "", "");
    CreateDynamicMapIcon(GetPVarFloat(playerid, "aEnterX"), GetPVarFloat(playerid, "aEnterY"), GetPVarFloat(playerid, "aEnterZ"), 31, -1, 0, -1, -1, 100.0);
    CreateDynamicPickup(1273, 23, GetPVarFloat(playerid, "aEnterX"), GetPVarFloat(playerid, "aEnterY"), GetPVarFloat(playerid, "aEnterZ"),-1);
	new vk_send[90];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s создал квартиру",PI[playerid][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
stock AddHouse(playerid) {
    new h = TotalHouses;
    new Float:a1 = GetPVarFloat(playerid, "aEnterX");
    new Float:a2 = GetPVarFloat(playerid, "aEnterY");
    new Float:a3 = GetPVarFloat(playerid, "aEnterZ");
    new Float:a4 = GetPVarFloat(playerid, "aExitX");
    new Float:a5 = GetPVarFloat(playerid, "aExitY");
    new Float:a6 = GetPVarFloat(playerid, "aExitZ");
    new a7 = GetPVarInt(playerid, "aInt");
    new a8 = GetPVarInt(playerid, "aClass");
    new a9 = GetPVarInt(playerid, "aPrice");
    new Float:a10 = GetPVarFloat(playerid, "aCarX");
    new Float:a11 = GetPVarFloat(playerid, "aCarY");
    new Float:a12 = GetPVarFloat(playerid, "aCarZ");
    new Float:a13 = GetPVarFloat(playerid, "aCarAngle");
    SetPVarInt(playerid,"addhouse", 0);
    SendClientMessage(playerid,-1, "Дом добавлен");
    HOUSE_DATA[h][data_ENTERX] = a1;
    HOUSE_DATA[h][data_ENTERY] = a2;
    HOUSE_DATA[h][data_ENTERZ] = a3;
    HOUSE_DATA[h][data_EXITX] = a4;
    HOUSE_DATA[h][data_EXITY] = a5;
    HOUSE_DATA[h][data_EXITZ] = a6;
    HOUSE_DATA[h][data_INT] = a7;
    HOUSE_DATA[h][data_CLASS] = a8;
    HOUSE_DATA[h][data_PRICE] = a9;
    HOUSE_DATA[h][data_CARX] = a10;
    HOUSE_DATA[h][data_CARY] = a11;
    HOUSE_DATA[h][data_CARZ] = a12;
    HOUSE_DATA[h][data_CARANGLE] = a13;
    if(HOUSE_DATA[h][data_OWNED] == 0) {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(1273, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],-1);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 31, -1, 0, -1, -1, 200.0);
	}
	else {
		HOUSE_DATA[h][data_PICKUPENTER] = CreateDynamicPickup(19131, 23, HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ],0);
		HOUSE_DATA[h][data_MAPICON] = CreateDynamicMapIcon(HOUSE_DATA[h][data_ENTERX], HOUSE_DATA[h][data_ENTERY], HOUSE_DATA[h][data_ENTERZ], 32, -1, 0, -1, -1, 200.0);
	}
	TotalHouses++;
	new str_q[712];
   	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `houses` ( `enterx`, `entery`, `enterz`, `exitx`, `exity`, `exitz`, `carx`, `cary`, `carz`, `cara`, `int`, `class`, `price`) VALUES ( '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d')",a1,a2,a3,a4,a5,a6,a10,a11,a12,a13,a7,a8,a9);
    mysql_function_query(dbHandle, str_q, false, "", "");
	new vk_send[90];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s создал дом",PI[playerid][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
stock add_business(playerid,b) {
	new name[15];
	new Float:enterx = GetPVarFloat(playerid,"add_b_enterX");
	new Float:entery = GetPVarFloat(playerid,"add_b_enterY");
	new Float:enterz = GetPVarFloat(playerid,"add_b_enterZ");
	new Float:exitx = GetPVarFloat(playerid,"add_b_exitX");
	new Float:exity = GetPVarFloat(playerid,"add_b_exitY");
	new Float:exitz = GetPVarFloat(playerid,"add_b_exitZ");
	new Float:buyx = GetPVarFloat(playerid,"add_b_buyX");
	new Float:buyy = GetPVarFloat(playerid,"add_b_buyY");
	new Float:buyz = GetPVarFloat(playerid,"add_b_buyZ");
	new inter = GetPVarInt(playerid,"add_b_int");
	new map = GetPVarInt(playerid,"add_b_map");
	new vw = GetPVarInt(playerid,"add_b_vw");
	new type = GetPVarInt(playerid,"add_b_type");
	new price = GetPVarInt(playerid,"add_b_price");
	SendClientMessage(playerid,-1, "Бизнес был добавлен");
	strmid(name, BUSINESS_DATA[b][data_NAME], 0, 15, 15);
	BUSINESS_DATA[b][data_OWNED] = 0;
	BUSINESS_DATA[b][data_PRICE] = price;
	BUSINESS_DATA[b][data_ENTERX] = enterx;
	BUSINESS_DATA[b][data_ENTERY] = entery;
	BUSINESS_DATA[b][data_ENTERZ] = enterz;
	BUSINESS_DATA[b][data_BUYX] = buyx;
	BUSINESS_DATA[b][data_BUYY] = buyy;
	BUSINESS_DATA[b][data_BUYZ] = buyz;
	BUSINESS_DATA[b][data_EXITX] = exitx;
	BUSINESS_DATA[b][data_EXITY] = exity;
	BUSINESS_DATA[b][data_EXITZ] = exitz;
	BUSINESS_DATA[b][data_TPEXITX] = GetPVarFloat(playerid, "aEnterX");
	BUSINESS_DATA[b][data_TPEXITY] = GetPVarFloat(playerid, "aEnterY");
	BUSINESS_DATA[b][data_TPEXITZ] = GetPVarFloat(playerid, "aEnterZ");
	BUSINESS_DATA[b][data_ANGLE] = GetPVarFloat(playerid, "BizzAngle");
	BUSINESS_DATA[b][data_TYPE] = type;
	BUSINESS_DATA[b][data_INT] = inter;
	BUSINESS_DATA[b][data_VW] = vw;
	BUSINESS_DATA[b][data_MAPICON] = map;
	TotalBusiness++;
	if(BUSINESS_DATA[b][data_TYPE] == 1) {
		new str_1[256];
		format(str_1,sizeof(str_1), "{F00E5D}Название бизнеса: {FFFFFF}%s\n{F00E5D}Стоимость бизнеса: {FFFFFF}%i рублей\n{F00E5D}Для покупки бизнеса используйте: {FFFFFF}/buybusiness",BUSINESS_DATA[b][data_NAME], BUSINESS_DATA[b][data_PRICE]);
		BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1, BUSINESS_DATA[b][data_BUYX],BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],3.0);
		BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
	}
	else {
		new str_1[256];
		format(str_1,sizeof(str_1), "{F00E5D}Название бизнеса: {FFFFFF}%s\n{F00E5D}Стоимость бизнеса: {FFFFFF}%i рублей\n{F00E5D}Для покупки бизнеса используйте: {FFFFFF}/buybusiness",BUSINESS_DATA[b][data_NAME],BUSINESS_DATA[b][data_PRICE]);
		BUSINESS_DATA[b][data_TEXTINFO] = CreateDynamic3DTextLabel(str_1, -1,BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],3.0);
		BUSINESS_DATA[b][data_PICKENTER] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ],-1);
		BUSINESS_DATA[b][data_PICKEXIT] = CreateDynamicPickup(19132, 23, BUSINESS_DATA[b][data_EXITX], BUSINESS_DATA[b][data_EXITY], BUSINESS_DATA[b][data_EXITZ],BUSINESS_DATA[b][data_VW]);
		BUSINESS_DATA[b][data_MAPICON] = CreateDynamicMapIcon(BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ], BUSINESS_DATA[b][data_MAPICON], -1, 0, -1, -1, 200.0);
		BUSINESS_DATA[b][data_CHEK] = CreateDynamicPickup(10270,23,BUSINESS_DATA[b][data_BUYX], BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ],BUSINESS_DATA[b][data_VW]);
	}
	new str_q[612];
	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `business` ( `name`, `enter_x`, `enter_y`, `enter_z`, `exit_x`, `exit_y`, `exit_z`, `buy_x`, `buy_y`, `buy_z`, `exittp_x`, `exittp_y`, `exittp_z`, `exittp_angle`,`int`, `vw`, `mapicon`, `price`, `type`)\
 	VALUES ( '%e', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f','%d', '%d', '%d', '%d', '%d')",
 	name,enterx,entery,enterz,exitx,exity,exitz,buyx,buyy,buyz, BUSINESS_DATA[b][data_TPEXITX], BUSINESS_DATA[b][data_TPEXITY], BUSINESS_DATA[b][data_TPEXITZ], BUSINESS_DATA[b][data_ANGLE],inter,vw,map,price,type);
    mysql_function_query(dbHandle, str_q, false, "", "");
	new vk_send[90];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s создал бизнес",PI[playerid][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
stock Business_Panel(playerid) {
	ShowPlayerDialog(playerid, dialog_BUSINESSCONTROL, DIALOG_STYLE_LIST, "{f00e5d}Управление бизнесом", "\
	1. Информация\n\
	2. Приобрести продукты\n\
	3. Продать бизнес государству\n\
	4. Положить деньги на бизнес\n\
	5. Снять деньги с бизнеса", "Выбрать", "Отмена");
	return 1;
}
stock Business_Give_Money(playerid) {
	new str_3[185];
	format(str_3,sizeof(str_3),"Комиссия составит 6%\nВведите требуемую сумму:");
 	ShowPlayerDialog(playerid, dialog_BUSINESS_GIVE_MONEY, DIALOG_STYLE_INPUT, "{f00e5d}Cнятие средств  со счёта бизнеса", str_3, "Снять", "Назад");
	return 1;
}
stock Business_Re_Money(playerid) {
	new str_3[185];
	format(str_3,sizeof(str_3),"Комиссия составит 3%\nВведите требуемую сумму:");
 	ShowPlayerDialog(playerid, dialog_BUSINESS_RE_MONEY, DIALOG_STYLE_INPUT, "{f00e5d}Покласть сердства на счёт бизнеса", str_3, "Положить", "Назад");
	return 1;
}
stock Business_Info(playerid,b) {
	new str_3[756];
    if(BUSINESS_DATA[b][data_TYPE] == 1) {
		format(str_3,sizeof(str_3),"\
		Название:\t\t{3b6da7} %s\n\
		{252525}Номер бизнеса:\t%d\n\
		{252525}Владелец:\t\t%s\n\
		{252525}Стоимость:\t\t%d руб\n\
		{252525}Арендная плата:\t\t{3bb763}3999 руб\n\
		{252525}Статус оплаты:\t\t%d дн ({f00e5d}оплатить в Банке - /gps)\n\
		{252525}Бензина на складе:\t%d л\n\
		{252525}Баланс:\t%d руб",
		BUSINESS_DATA[b][data_NAME], BUSINESS_DATA[b][data_ID],BUSINESS_DATA[b][data_OWNER],BUSINESS_DATA[b][data_PRICE],BUSINESS_DATA[b][data_DAY],BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_BANK]);
		ShowPlayerDialog(playerid, dialog_BUSINESS_INFO, DIALOG_STYLE_LIST, "{f00e5d}Информация о бизнесе", str_3, "Закрыть", "");
	}
	else {
		format(str_3,sizeof(str_3),"\
		Название:\t\t{3b6da7} %s\n\
		{252525}Номер бизнеса:\t%d\n\
		{252525}Владелец:\t\t%s\n\
		{252525}Стоимость:\t\t%d руб\n\
		{252525}Арендная плата:\t\t{3bb763}3999 руб\n\
		{252525}Статус оплаты:\t\t%d дн ({f00e5d}оплатить в Банке - /gps)\n\
		{252525}Продуктов на складе:\t%d / 500.\n\
		{252525}Баланс:\t%d руб",
		BUSINESS_DATA[b][data_NAME], BUSINESS_DATA[b][data_ID],BUSINESS_DATA[b][data_OWNER],BUSINESS_DATA[b][data_PRICE],BUSINESS_DATA[b][data_DAY],BUSINESS_DATA[b][data_PROD],BUSINESS_DATA[b][data_BANK]);
		ShowPlayerDialog(playerid, dialog_BUSINESS_INFO, DIALOG_STYLE_LIST, "{f00e5d}Информация о бизнесе", str_3, "Закрыть", "");
	}
	return 1;
}
stock Business_Change_Name(playerid) {
	new b = PI[playerid][data_BUSINESS];
	new str_3[185];
	format(str_3,sizeof(str_3),"Название бизнеса: %s\nВведите новое название вашего бизнеса",BUSINESS_DATA[b][data_NAME]);
    ShowPlayerDialog(playerid, dialog_BUSINESS_CHANGE_NAME, DIALOG_STYLE_INPUT, "{f00e5d}Название бизнеса", str_3, "Подтвердить", "Назад");
	return 1;
}
stock Business_Change_Cena(playerid) {
	new b = PI[playerid][data_BUSINESS];
	new str_3[185];
	if(BUSINESS_DATA[b][data_TYPE] == 1) {
		format(str_3,sizeof(str_3),"Цена: %d рублей\nВведите новую цену",BUSINESS_DATA[b][data_CENA]);
	    ShowPlayerDialog(playerid, dialog_BUSINESS_CHANGE_CENA, DIALOG_STYLE_INPUT, "{f00e5d}Изменение цены на бензин", str_3, "Подтвердить", "Назад");
	}
	else {
		format(str_3,sizeof(str_3),"Цена: %d рублей\nВведите новую цену",BUSINESS_DATA[b][data_CENA]);
	    ShowPlayerDialog(playerid, dialog_BUSINESS_CHANGE_CENA, DIALOG_STYLE_INPUT, "{f00e5d}Изменение цены на товар", str_3, "Подтвердить", "Назад");
	}
	return 1;
}
stock IsPlayerCops(playerid) {
	switch(PI[playerid][data_MEMBER]) {
 		case 3: return 1;
	}
	return 0;
}
stock IsPlayerOPG(playerid) {
	switch(PI[playerid][data_MEMBER]) {
	    case 5,6,7: return 1;
	}
	return 0;
}
stock acc_int_strcat(query[], len, name[], number) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%d',",name, number);
 	strcat(query, stringer, len);
 	return 1;
}
stock acc_float_strcat(query[], len, name[], Float:number) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%f',", name, number);
 	strcat(query, stringer, len);
 	return 1;
}
stock acc_str_strcat(query[], len, name[], str[]) {
    new stringer[64];
 	format(stringer, sizeof(stringer), "`%s` = '%s',",name, str);
 	strcat(query, stringer, len);
 	return 1;
}
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z) {
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
stock SendDepMessage(color, text[]) {
 	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		switch(PI[i][data_MEMBER]) {
		    case 1,2,3,4,8,9: SendClientMessage(i, color, text);
		}
	}
	return 1;
}
stock SetPlayerColorEx(playerid) {
	new M = PI[playerid][data_MEMBER];
    SetPlayerColor(playerid, PLAYER_COLOR_TEAM[M]);
	return PLAYER_COLOR_TEAM[M];
}
stock SetPlayerHealthAC(playerid, Float: Health) {
    PI[playerid][data_HP] = Health;
    SetPlayerHealth(playerid, Health);
    return 1;
}
stock SetPlayerArmourAC(playerid, Float: Armour) {
    PI[playerid][data_ARM] = Armour;
    SetPlayerArmour(playerid, Armour);
    return 1;
}
stock GetMoveDirectionFromKeys(ud, lr) {
	new direction = 0;
    if(lr < 0) {
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT;
		else if(ud > 0) direction = MOVE_BACK_LEFT;
		else            direction = MOVE_LEFT;
	}
	else if(lr > 0) {
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;
		else if(ud > 0) direction = MOVE_BACK_RIGHT;
		else			direction = MOVE_RIGHT;
	}
	else if(ud < 0) 	direction = MOVE_FORWARD;
	else if(ud > 0) 	direction = MOVE_BACK;
	return direction;
}
stock MoveCamera(playerid) {
	new Float:FV[3], Float:CP[3];
	GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;
	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
stock GetNextCameraPosition(move_mode, Float:CP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z) {
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode) {
		case MOVE_FORWARD: {
			X = CP[0]+OFFSET_X;
			Y = CP[1]+OFFSET_Y;
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_BACK: {
			X = CP[0]-OFFSET_X;
			Y = CP[1]-OFFSET_Y;
			Z = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT: {
			X = CP[0]-OFFSET_Y;
			Y = CP[1]+OFFSET_X;
			Z = CP[2];
		}
		case MOVE_RIGHT: {
			X = CP[0]+OFFSET_Y;
			Y = CP[1]-OFFSET_X;
			Z = CP[2];
		}
		case MOVE_BACK_LEFT: {
	    	X = CP[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT: {
			X = CP[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT: {
			X = CP[0]+(OFFSET_X  - OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  + OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT: {
			X = CP[0]+(OFFSET_X  + OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  - OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
	}
}
stock CancelFlyMode(playerid) {
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);
	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}
stock FlyMode(playerid) {
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);
	TogglePlayerSpectating(playerid, true);
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);
	SetPVarInt(playerid, "FlyMode", 1);
	return noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
}
stock open_mainmenu(playerid) {
	return ShowPlayerDialog(playerid, dialog_MAINMENU, DIALOG_STYLE_LIST, "{f00e5d}Меню игрока", "\
	{FFFFFF}1. Статистика\n\
	2. Настройки аккаунта\n\
	3. Правила сервера\n\
	4. Ресурсы проекта\n\
	5. Вопрос / Жалоба\n\
	6. Изменить никнейм\n\
	7. Чёрный Список\n\
	{5fc2f1}8. Дополнительные услуги", "Выбрать", "Отмена");
}
CMD:givemetall(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Подожите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid,CG,"Данную команду можно использовать только со 2 уровня");
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /givemetall [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Данного ID нет на сервере");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Данный игрок не прошел авторизацию");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передавать самому себе");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
	if(params[1] <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
	if(params[1] > 80) return SendClientMessage(playerid,CG,"Разрешено передавать не более 80 металла за один раз");
	if(get_player_met(playerid) < params[1]) return SendClientMessage(playerid,CG,"У Вас недостаточно металла на руках");
	give_player_met(playerid,-params[1],"#70");
	give_player_met(params[0],params[1],"#71");
	SendClientMessagef(playerid, 0x3366ccAA, "Вы передали %s[%d] %d кг металла", PI[params[0]][data_NAME], params[0], params[1]);
	SendClientMessagef(playerid, 0x3366ccAA, "Игрок %s[%d] передал Вам %d кг металла",PI[playerid][data_NAME], playerid, params[1]);
	format(str,sizeof(str),"%s передал(а) металл %s",PI[playerid][data_NAME], PI[params[0]][data_NAME]);
    ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
    SetPlayerChatBubble(playerid, "Передал(а) металл", 0xFF99CCFF, 20.0, 4000);
	SavePlayerData(playerid);
	return 1;
}
CMD:tpcor(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 1) return 1;
    new Float:tpX, Float:tpY, Float:tpZ;
    if(sscanf(params, "fff", tpX, tpY, tpZ)) return SendClientMessage(playerid, CG, !"Используйте: /tpcor [X] [Y] [Z]");
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        SetVehiclePos(GetPlayerVehicleID(playerid), tpX, tpY, tpZ);
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
    }
    else SetPlayerPos(playerid, tpX, tpY, tpZ);
    SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid));
    SetPlayerInterior(playerid, GetPlayerInterior(playerid));
    return 1;
}
CMD:respawnhunting(playerid, params[]) {
    if(Global_Time < GetPVarInt(playerid, "AntiFlood")) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    SetPVarInt(playerid, "AntiFlood", Global_Time+10);
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	SendClientMessage(playerid, -1, "Вы принудительно зареспавнили всех оленей для охоты");
	DestroyObject(DeathOlenID[0]);
	DestroyObject(DeathOlenID[1]);
	DestroyObject(DeathOlenID[2]);
	DestroyObject(DeathOlenID[3]);
	DestroyObject(DeathOlenID[4]);
    DestroyObject(OlenID[0]);
    DestroyObject(OlenID[1]);
    DestroyObject(OlenID[2]);
    DestroyObject(OlenID[3]);
    DestroyObject(OlenID[4]);
    Delete3DTextLabel(OlenMertwText[0]);
    Delete3DTextLabel(OlenMertwText[1]);
    Delete3DTextLabel(OlenMertwText[2]);
    Delete3DTextLabel(OlenMertwText[3]);
    Delete3DTextLabel(OlenMertwText[4]);
   	OlenMertw[0] = 0;
	OlenMertw[1] = 0;
	OlenMertw[2] = 0;
	OlenMertw[3] = 0;
	OlenMertw[4] = 0;
   	OlenID[0] = CreateObject(19315, -2385.64, -540.90, 39.73, 0.00, -3.00, -47.00);
	OlenID[1] = CreateObject(19315, -2489.48, -314.69, 41.65, 0.00, 0.00, 0.00);
    OlenID[2] = CreateObject(19315, -1615.30, -957.28, 47.79, 0.00, 0.00, 0.00);
    OlenID[3] = CreateObject(19315, -1409.18, -1292.77, 56.52,   0.00, 0.00, 0.00);
    OlenID[4] = CreateObject(19315, -860.03, -2546.97, 27.62,   0.00, 0.00, 0.00);
    return 1;
}
CMD:flip(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CG, "Используйте: /flip [ID игрока]");
	if(PI[params[0]][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(GetPlayerState(params[0])!=2) return SendClientMessage(playerid, CG, "Игрок не в машине");
	new cpos = GetPlayerVehicleID(params[0]);
	new Float:X, Float:Y, Float:Z, Float:A;
	GetVehiclePos(cpos, X, Y, Z);
	SetVehiclePos(cpos,X, Y, Z);
	GetVehicleZAngle(cpos, A);
	SetVehicleZAngle(cpos, A);
	RepairVehicle(cpos);
	new str_1[200];
	format(str_1, sizeof(str_1), "[%s #%d] %s[%d] перевернул транспорт игрока %s[%d]",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0]);
	SendAdminMessage(COLOR_ADMINCHAT, str_1);
	return 1;
}
CMD:ans(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params,"us[90]",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /ans [ID игрока] [текст]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[0] == playerid) return SendClientMessage(playerid,CG,"Вы не можете ответить самому себе");
	if(PI[params[0]][data_ADMLVL] != 0) return SendClientMessage(playerid,CG,"Вы не можете ответить Игровому мастеру");
    NotReklama(playerid, params[1]);
	new str_1[200];
    format(str_1, sizeof(str_1), "[%s #%d] %s[%d] > %s[%d]: {ffffff}%s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0],params[1]);
    SendClientMessagef(params[0], 0x782f2fFF, "Игровой мастер #%d ответил Вам: {ffffff}%s", PI[playerid][ADMINSNUMBER], params[1]);
	cef_emit_event(params[0], "show-center-notify", CEFINT(3), CEFSTR("Игровой мастер ответил Вам"));
    SendAdminMessage(0x782f2fFF, str_1);
	PI[playerid][data_REPA]++;
	UpdatePlayerDataInt(playerid, "rep_adm", PI[playerid][data_REPA],19699);
    PlayerPlaySound(params[0], 1085, 0.0, 0.0, 0.0);
    PI[playerid][data_REPORTS] += 1;
	new str_q[256];
    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `reports` = '%d' WHERE `name` = '%s'", PI[playerid][data_REPORTS], PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, false, "", "");
    return 1;
}
CMD:msg(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"s[144]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /msg [текст]");
	new str_1[200];
    foreach(new i:Player) {
		format(str_1, sizeof(str_1), "Игровой мастер #%d: %s", PI[playerid][ADMINSNUMBER],params[0]);
		SendClientMessage(i, 0xcc3366FF, str_1);
	}
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s написал на весь сервер: %s",PI[playerid][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
    return 1;
}
CMD:a(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params,"s[90]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /a [текст]");
	new str_1[200];
    format(str_1, sizeof(str_1), "[%s #%d] %s[%d]: %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,params[0]);
    SendAdminMessage(COLOR_BLUE, str_1);
    return 1;
}
CMD:kick(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params,"us[32]",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /kick [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
    if(playerid == params[0]) return SendClientMessage(playerid,CG,"Нельзя приминить на себе");
    if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровым мастерам");
	new textstr[145], str[145];
	format(textstr, sizeof(textstr), "Вы кикнули игрока %s. Причина: %s",PI[params[0]][data_NAME],params[1]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d кикнул Вас из игры. Причина: %s", PI[playerid][ADMINSNUMBER],params[1]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	SendClientMessage(params[0],COLOR_BLACK, "Вы были отключены от сервера, для выхода из игры используйте /(q)uit");
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s кикнул игрока %s[%d]. Причина: %s",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[0],params[1]);
	SendVKTest(playerid, vk_send, 3);
	Kick(params[0]);
	return 1;
}
CMD:testtun(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 8) return 1;
	new carid = GetPlayerVehicleID(playerid);
	AddVehicleComponent(carid, 1010);
	return ShowPlayerDialog(playerid, dialog_TUNGING, DIALOG_STYLE_LIST,"{f00e5d}Tunging", "1\n2\n3\n4", "Закрыть", "Далее");
}
CMD:veh(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params, "ddd",params[0],params[1],params[2])) return SendClientMessage(playerid,CG, "Используйте: /veh [ID машины] [цвет] [цвет]");
    if(params[0] < 400 || params[0] > 611 && params[0]) return SendClientMessage(playerid, CG,"ID от 400 до 611");
	if(params[0] == 432) return SendClientMessage(playerid, CG,"Данное ТС запретил разработчик сервера.");
    new Float:pos[3]; GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
    new vehc = CreateVehicle(params[0],pos[0],pos[1],pos[2],0,params[1],params[2],-1);
    SetVehicleVirtualWorld(vehc, GetPlayerVirtualWorld(playerid));
    PutPlayerInVehicleAC(playerid, vehc, 0);
    ClearCarData(vehc);
    CAR_DATA[vehc][data_FUEL] = 50;
    CAR_DATA[vehc][data_CREATE] = 1;
	new vehicadm = GetVehicleModel(vehc);
    new string[144];
    format(string,sizeof(string),"[%s #%d] %s[%d] создал %s[%d] (id: %d, цвет: %d, %d)",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid, VehicleNames[vehicadm-400], vehc, params[0], params[1], params[2]);
    SendAdminMessage(COLOR_ADMINCHAT, string);
    return 1;
}
CMD:dveh(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CG,"Нужно находиться в транспорте");
    new carid = GetPlayerVehicleID(playerid);
	if(CAR_DATA[carid][data_CREATE] == 0) return SendClientMessage(playerid, CG, "Данный транспорт нельзя удалить");
    CAR_DATA[carid][data_CREATE] = 0;
	DestroyVehicle(carid);
	HidePlayerSpeedometer(playerid);
    return 1;
}
CMD:change(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 5) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /change [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(GetPVarInt(params[0],"change_name_status") != 1) return SendClientMessage(playerid,CG,"Данный игрок не просил сменить ник");
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", CHANGE_NAME[params[0]]);
	mysql_function_query(dbHandle, str_q, true, "CheckName", "ds", params[0], CHANGE_NAME[params[0]]);
	return 1;
}
alias:goto("g");
CMD:goto(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    if(sscanf(params, "u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /goto [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(GetPVarInt(params[0], "SpecBool") == 1) return SendClientMessage(playerid,CG,"Игрок находится в режиме наблюдения");
    new string[145], Float:x, Float:y, Float:z;
    GetPlayerPos(params[0],x,y,z);
    SetPlayerPosAC(playerid,x+1,y,z);
    SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
    SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
 	format(string,sizeof(string),"[%s #%d] %s[%d] телепортировался к игроку %s[%d]",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0]);
    SendAdminMessage(-1, string);
    return 1;
}
CMD:gethere(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    if(sscanf(params, "u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /gethere [ID игрока]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
    if(params[0] == playerid) return SendClientMessage(playerid,CG,"Вы не можете телепортировать себя");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    new string[145], Float:x, Float:y, Float:z;
    DeletePVar(params[0], "ac_fly");
    GetPlayerPos(playerid,x,y,z);
    SetPlayerPosAC(params[0],x+1,y,z+1.0);
    SetPlayerInterior(params[0],GetPlayerInterior(playerid));
    SetPlayerVirtualWorld(params[0],GetPlayerVirtualWorld(playerid));
	HidePlayerSpeedometer(params[0]);
    format(string,sizeof(string),"[%s #%d] %s[%d] телепортировал к себе %s[%d]",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid, PI[params[0]][data_NAME], params[0]);
    SendAdminMessage(COLOR_ADMINCHAT, string);
    format(string,sizeof(string),"Вы были телепортированы игровым мастером",PI[params[0]][data_NAME]);
    SendClientMessage(params[0],0xccccccAA, string);
    return 1;
}
CMD:mute(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params,"uds[32]",params[0],params[1],params[2])) return SendClientMessage(playerid,CG,"Используйте: /mute [ID игрока] [минут] [причина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 1) return SendClientMessage(playerid,CG,"Нельзя меньше 1 минуты");
 	new mut = params[1];
	PI[params[0]][data_MUTE] = 1;
	PI[params[0]][data_MUTETIME] = mut;
    new textstr[145], str[145], message[145];
	format(textstr, sizeof(textstr), "Вы заблокировали чат игроку %s на %d минут. Причина: %s", PI[params[0]][data_NAME],params[1],params[2]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d заблокировал Вам чат на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER],params[1],params[2]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	format(message,sizeof(message),"[%s #%d] %s[%d] заблокировал чат игрока %s[%d] на %d минут. Причина: %s",
	GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0],params[1],params[2]);
    SendAdminMessage(0x8fbedb00,message);
	new hour, minute, second;
	gettime(hour, minute, second);
	new year, moutch, day;
	getdate(year, moutch, day);
	new str_1[256];
	format(str_1, sizeof(str_1), "Причина\t\t\t\t\t%s\nТип\t\t\t\t\t\tБлокировка чата\n\nДата\t\t\t\t\t\t%d.%d.%d\nВремя\t\t\t\t\t\t%d:%d:%d\nСрок блокировки\t\t\t\t%d мин.\n\n{f00e5d}Если Вы уверены, что блокировка ошибочная\nоставьте жалобу на форуме с этим скиншотом ("FORUM")", params[2], day, moutch, year, hour, minute, second, params[1]);
	ShowPlayerDialog(params[0], dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Чат заблокирован", str_1, "Закрыть", "");
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игрока %s[%d] на %d минут. Причина: %s",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[0],params[1],params[2]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:unmute(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /unmute [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_MUTE] == 0) return SendClientMessage(playerid,CG,"У данного игрока нет блокировки чата");
	PI[params[0]][data_MUTE] = 0;
	new textstr[145], str[145], message[145];
	format(textstr, sizeof(textstr), "Вы сняли блокировку чата игроку %s", PI[params[0]][data_NAME]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d снял Вам блокировку чата", PI[playerid][ADMINSNUMBER]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	format(message,sizeof(message),"[%s #%d] %s[%d] снял блокировку чата игроку %s[%d]", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0]);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s снял блокировку чата игроку %s[%d]",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:vmute(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params,"uds[32]",params[0],params[1],params[2])) return SendClientMessage(playerid,CG,"Используйте: /vmute [ID игрока] [минут] [причина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 1) return SendClientMessage(playerid,CG,"Нельзя меньше 1 минуты");
    if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровому мастеру");
 	new mut = params[1];
	PI[params[0]][data_VMUTE] = 1;
	PI[params[0]][data_VMUTETIME] = mut;
	new textstr[145], str[145], message[145];
	format(textstr, sizeof(textstr), "Вы заблокировали голосовой чат игроку %s на %d минут. Причина: %s",PI[params[0]][data_NAME],params[1],params[2]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d заблокировал Вам голосовой чат на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER],params[1],params[2]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	format(message,sizeof(message),"[%s #%d] %s[%d] заблокировал игроку %s[%d] голосовой чат на %d минут. Причина: %s", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0],params[1],params[2]);
	SvMutePlayerEnable(params[0]);
	new hour, minute, second;
	gettime(hour, minute, second);
	new year, moutch, day;
	getdate(year, moutch, day);
	new str_1[200];
	format(str_1, sizeof(str_1), "Причина\t\t\t\t\t%s\nТип\t\t\t\t\t\tБлокировка голосового чата\n\nДата\t\t\t\t\t\t%d.%d.%d\nВремя\t\t\t\t\t\t%d:%d:%d\nСрок блокировки\t\t\t\t%d мин.\n\n{f00e5d}Если Вы уверены, что блокировка ошибочная\nоставьте жалобу на форуме с этим скиншотом ("FORUM")", params[2], day, moutch, year, hour, minute, second, params[1]);
	ShowPlayerDialog(params[0], dialog_OK, DIALOG_STYLE_MSGBOX,"{f00e5d}Голосовой чат заблокирован", str_1, "Закрыть", "");
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал игроку %s голосовой чат на %d минут. Причина: %s",PI[playerid][data_NAME], PI[params[0]][data_NAME],params[1],params[2]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:unvmute(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /unvmute [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_VMUTE] == 0) return SendClientMessage(playerid,CG,"У данного игрока нет блокировки чата");
	PI[params[0]][data_VMUTE] = 0;
	PI[params[0]][data_VMUTETIME] = 0;
	new textstr[145], str[145], message[145];
	format(textstr, sizeof(textstr), "Вы сняли игроку %s блокировку голосового чата",PI[params[0]][data_NAME]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d снял Вам блокировку голосового чата", PI[playerid][ADMINSNUMBER]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	format(message,sizeof(message),"[%s #%d] %s[%d] снял игроку %s[%d] блокировку голосового чата", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0]);
	SvMutePlayerDisable(params[0]);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s снял игроку %s[%d] блокировку голосового чата",PI[playerid][data_NAME], PI[params[0]][data_NAME],params[0],params[1],params[2]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:skin(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"ud",params[0], params[1])) return SendClientMessage(playerid,CG,"Используйте: /skin [ID игрока] [номер скина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] > 2000) return 1;
	SetPlayerSkinAC(params[0],params[1]);
	new string[144];
 	format(string,sizeof(string),"[%s #%d] %s[%d] выдал временный скин игроку %s[%d] (ID %d)",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0], params[1]);
    SendAdminMessage(-1, string);
    SendClientMessagef(params[0], -1,"Игровой мастер #%d выдал Вам временный скин.", PI[playerid][ADMINSNUMBER]);
    new vk_send[250];
    format(vk_send, sizeof(vk_send), "Игровой мастер %s выдал временный скин игроку %s[%d] (ID %d)",PI[playerid][data_NAME], PI[params[0]][data_NAME], params[0], params[1]);
	SendVKTest(playerid, vk_send, 3);
    return 1;
}
CMD:sethp(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3 ) return 1;
    if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /sethp [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	PI[params[0]][data_HOSPITAL] = 0;
    SetPlayerHealthAC(params[0],params[1]);
	cef_emit_event(params[0], "show-center-notify", CEFINT(5), CEFSTR("Игровой мастер изменил Вам здоровье"));
	new string[144];
 	format(string,sizeof(string),"[%s #%d] %s[%d] изменил уровень здоровья игрока %s[%d] на %d.0",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0], params[1]);
    SendAdminMessage(-1, string);
    return 1;
}
CMD:setarm(playerid,params[]) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
	antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /setarm [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	cef_emit_event(params[0], "show-center-notify", CEFINT(5), CEFSTR("Игровой мастер изменил Вам броню"));
	new string[144];
	format(string,sizeof(string),"[%s #%d] %s[%d] изменил уровень брони игрока %s[%d] на %d.0",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0], params[1]);
	SendAdminMessage(-1, string);
	SendClientMessagef(params[0], -1,"Игровой мастер #%d выдал Вам бронижелет", PI[playerid][ADMINSNUMBER]);
	SetPlayerArmourAC(params[0], params[1]);
	return 1;
}
CMD:slap(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1 ) return 1;
    if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /slap [id игрока] [высота]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
    new Float:x, Float:y, Float:z,string[145];
    GetPlayerPos(params[0],x,y,z);
    SetPlayerPosAC(params[0],x,y,z + params[1]);
	cef_emit_event(params[0], "show-center-notify", CEFINT(1), CEFSTR("Игровой мастер подбросил Вас"));
    format(string,sizeof(string),"[%s #%d] %s[%d] подбросил игрока %s[%d] на %d.0 метров",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0], params[1]);
    SendAdminMessage(-1, string);
    PlayerPlaySound(params[0], 1130, x,y,z + params[1]);
    new Float:shealth;
    GetPlayerHealth(params[0], shealth);
    SetPlayerHealthAC(params[0], shealth - 5);
    return 1;
}
CMD:spawn(playerid,params[],text) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /spawn [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	SetPlayerToSpawn(params[0]);
	SendClientMessagef(params[0], -1, "Игровой мастер #%d заспавнил Вас", PI[playerid][ADMINSNUMBER]);
	cef_emit_event(params[0], "show-center-notify", CEFINT(1), CEFSTR("Игровой мастер заспавнил Вас"));
	new str_1[200];
	format(str_1,sizeof(str_1),"[%s #%d] %s[%d] заспавнил игрока %s[%d]", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0]);
 	SendAdminMessage(0x8fbedb00,str_1);
	new vk_send[70];
	format(vk_send,sizeof(vk_send),"Игровой мастер %s заспавнил игрока %s",PI[playerid][data_NAME], PI[params[0]][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
    return 1;
}
CMD:admins(playerid) {
    if(PI[playerid][data_ADMLVL] <= 1) return 1;
    SendClientMessage(playerid, COLOR_BLUE, "Игровые мастера онлайн");
    foreach(new i: Player)
	{
		if (!IsPlayerConnected(i)) continue;
		if(PI[i][data_ADMLVL] >= 1)
		{
 			if(GetPVarInt(i, "SpecBool") != 0 && GetPVarInt(i, "FlyMode") == 0) SendClientMessagef(playerid, 0xffd100FF, "[%s #%d] %s[%d] {26A65B}(/sp > %d)", GSName[PI[i][data_ADMLVL]], PI[i][ADMINSNUMBER], PI[i][data_NAME], i, GetPVarInt(i,"specid"));
  			else if(GetPVarInt(i, "FlyMode") != 0) SendClientMessagef(playerid, 0xffd100FF, "[%s #%d] %s[%d] {33AAFF}(/fly)", GSName[PI[i][data_ADMLVL]], PI[i][ADMINSNUMBER], PI[i][data_NAME], i);
			else if(PI[i][data_AFK] > 1) SendClientMessagef(playerid, 0xffd100FF, "[%s #%d] %s[%d] {EF4836}(AFK: %d сек)", GSName[PI[i][data_ADMLVL]], PI[i][ADMINSNUMBER], PI[i][data_NAME], i, PI[i][data_AFK]);
			else if(PI[i][data_AFK] < 1 && GetPVarInt(i, "FlyMode") == 0 && GetPVarInt(i, "SpecBool") == 0) SendClientMessagef(playerid, 0xffd100FF, "[%s #%d] %s[%d]", GSName[PI[i][data_ADMLVL]], PI[i][ADMINSNUMBER], PI[i][data_NAME], i);
			SavePlayerData(playerid);
		}
	}
	return 1;
}
CMD:warn(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"us[32]",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /warn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(playerid == params[0]) return SendClientMessage(playerid,CG,"Нельзя приминить на себе");
    if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровым мастерам");
    PI[params[0]][data_MEMBER] = 0;
	PI[params[0]][data_LEADER] = 0;
	PI[params[0]][data_RANK] = 0;
	PI[params[0]][data_ADMLVL] = 0;
	UpdatePlayerDataInt(playerid, "admlvl", PI[params[0]][data_ADMLVL],20073);
	if(PI[params[0]][data_WARN] < 3) {
	    PI[params[0]][data_WARN]++;
	    PI[params[0]][data_WARNTIME] += 3600;
	    for(new i = 0; i < MAX_PLAYERS; i++) {
			if(!IsPlayerConnected(i)) continue;
			if(GetPVarInt(i,"gPlayerAaction") == 0) {
			}
		}
	    SendClientMessage(params[0],CG,"Для просмотра информации о предупреждении, используйте: /warntime");
	    SendClientMessage(params[0],CG,"До снятия всех предупреждений запрещено вступать во фракции");
	    new year, mounth, day, hour, minute, second;
		getdate(year, mounth, day);
		gettime(hour, minute, second);
		new str_1[256];
		format(str_1, sizeof(str_1), "Ваш никнейм: {e21e40}%s\n{252525}Дата и время: {e21e40}%02d.%02d.%04d %02d:%02d:%02d\n{252525}Причина: {e21e40}%s\n{57c5c0}Примечание: Если вы не согласны с выданным вам наказанием,\n{57c5c0}сделайте скриншот('F8') этого окна и отправьте жалобу на форум "FORUM"",PI[params[0]][data_NAME],day, mounth, year, hour, minute, second,params[1],PI[playerid]);
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `punishment` ( `player`,`type`, `support`, `reason`, `day`, `mounth`, `year`) VALUES ( '%s', '2', '%d', '%s', '%d', '%d', '%d')",PI[params[0]][data_NAME],PI[playerid], params[2], day, mounth, year);
		mysql_function_query(dbHandle, str_q, false, "", "");
		ShowPlayerDialog(params[0], DLG_BAN, DIALOG_STYLE_MSGBOX, "{911e42}Игровое предупреждение", str_1, "Выход", "");
	    return Kick(params[0]);
	}
	if(PI[params[0]][data_WARN] >= 3) {
		new str_q[512];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '30', '%e', '%e')",PI[params[0]][data_NAME],PI[playerid][data_NAME],params[2],PI[params[0]][data_LOGIN_IP]);
	    mysql_function_query(dbHandle, str_q, false, "", "");
		Kick(params[0]);
		new str_1[256];
		for(new i = 0; i < MAX_PLAYERS; i++) {
			if(!IsPlayerConnected(i)) continue;
			if(GetPVarInt(i,"gPlayerAaction") == 0) {
				format(str_1, sizeof(str_1), "Игровой мастер #%d заблокировал %s на 30 дней. Причина: 3 предупреждения", PI[playerid][ADMINSNUMBER],PI[params[0]][data_NAME]);
				SendClientMessage(i,COLOR_AC,str_1);
			}
		}
		return 1;
	}
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s выдал предупреждение %s [%d|3]. Причина: %s",PI[playerid][data_NAME],PI[params[0]][data_NAME],PI[params[0]][data_WARN],params[1]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:unwarn(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /uwarn [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_WARN] == 0)return  SendClientMessage(playerid,CG,"У игрока нет предупреждений");
 	PI[params[0]][data_WARN] = 0;
	PI[params[0]][data_WARNTIME] = 0;
    new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s снял все предупреждения игроку %s[%d]",PI[playerid][data_NAME], PI[params[0]][data_NAME], params[0]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:spawncar(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	new carid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CG,"Нужно находиться за рулем транспорта");
	SetVehicleToRespawn(carid);
	return SendClientMessage(playerid,-1, "Автомобиль был заспавнен");
}
CMD:setfuel(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /setfuel [кол-во]");
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new carid = GetPlayerVehicleID(playerid);
		CAR_DATA[carid][data_FUEL] = params[0];
		SendClientMessage(playerid,COLOR_AC,"Уровень топлива в автомобиле изменен");
	}
	else SendClientMessage(playerid,CG,"Нужно находиться на водительском месте");
	return 1;
}
CMD:ban(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"uds[32]",params[0],params[1],params[2])) return SendClientMessage(playerid,CG,"Используйте: /ban [ID игрока] [кол-во дней] [причина]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 1 || params[1] > 90) return SendClientMessage(playerid,CG,"Нельзя меньше 1 дня и больше 90 дней");
    if(playerid == params[0]) return SendClientMessage(playerid,CG,"Нельзя приминить на себе");
	if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровым мастерам");
	PI[params[0]][data_MEMBER] = 0;
	PI[params[0]][data_LEADER] = 0;
	PI[params[0]][data_RANK] = 0;
	PI[params[0]][data_ADMLVL] = 0;
	UpdatePlayerDataInt(playerid, "admlvl", PI[params[0]][data_ADMLVL],20170);
	new str_q[456];
    mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '%d', '%e', '%e')",PI[params[0]][data_NAME],PI[playerid][data_NAME],params[1],params[2],PI[params[0]][data_LOGIN_IP]);
    mysql_function_query(dbHandle, str_q, false, "", "");
    for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		if(GetPVarInt(i,"gPlayerAaction") == 0) {
	        new string[145];
			format(string, sizeof(string), "Игровой мастер #%d заблокировал %s на %d дней. Причина: %s", PI[playerid][ADMINSNUMBER],PI[params[0]][data_NAME],params[1],params[2]);
			SendClientMessage(i,COLOR_AC,string);
		}
	}
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал игрока %s на %d дней. Причина: %s",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[1],params[2]);
	SendVKTest(playerid, vk_send, 3);
	new year, mounth, day, hour, minute, second, id;
	getdate(year, mounth, day);
	gettime(hour, minute, second);
	new str_1[256];
	format(str_1, sizeof(str_1), "Никнейм: {396cac}%s\n{252525}ID аккаунта: {396cac}%s\n{252525}Дата и время: {252525}%02d.%02d.%04d %02d:%02d:%02d\n{252525}Количество дней: {252525}%d дн\n{252525}Причина: {252525}%s\n{d6d886}Советуем сделать скриншот (клавиша F8), чтобы иметь\n{d6d886}возможность обжаловать бан на форуме",PI[params[0]][data_NAME],id, day, mounth, year, hour, minute, second,params[1],params[2]);
    mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `punishment` ( `player`,`id`,`type`, `support`, `reason`, `day`, `mounth`, `year`) VALUES ( '%s', '1', '%d', '%s', '%d', '%d', '%d')",PI[params[0]][data_NAME],PI[playerid], params[2], day, mounth, year);
    mysql_function_query(dbHandle, str_q, false, "", "");
	ShowPlayerDialog(params[0], DLG_BAN, DIALOG_STYLE_MSGBOX, "{911e42}Блокировка основного аккаунта", str_1, "Выход", "");
	SendClientMessage(params[0], COLOR_BLACK, "Ваш аккаунт заблокирован, для выхода введите /q");
	TogglePlayerSpectating(params[0], true);
	return Kick(params[0]);
}
CMD:unban(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, CG, "Используйте: /unban [имя]");
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `banlist` WHERE `name` = '%e'",params[0]);
 	mysql_function_query(dbHandle, str_q, true, "UnbanAccount", "is", playerid, params[0]);
	return 1;
}
CMD:offadmin(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, CG, "Используйте: /offadmin [имя]");
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'",params[0]);
 	mysql_function_query(dbHandle, str_q, true, "OffAdmin", "is", playerid, params[0]);
	return 1;
}
CMD:offleader(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, CG, "Используйте: /offleader [имя]");
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'",params[0]);
 	mysql_function_query(dbHandle, str_q, true, "OffLeader", "is", playerid, params[0]);
	return 1;
}
alias::report("rep");
CMD:report(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    return ReportDialog(playerid);
}
CMD:hi(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /hi [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(playerid == params[0]) return 1;
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_HI);
}
CMD:s(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /s [текст]");
    NotReklama(playerid, params[0]);
	new string[145];
    format(string, sizeof(string), "%s[%d] крикнул: %s",PI[playerid][data_NAME],playerid,params[0]);
	ProxDetector(50.0, playerid, string, -1, -1, -1, -1, -1);
	new string1[145];
	format(string1, sizeof(string1), "%s", params[0]);
	SetPlayerChatBubble(playerid, string1, -1, 20.0, 4000);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"ON_LOOKERS","shout_01",1000.0,0,0,0,0,0,1);
	return 1;
}
CMD:weap(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    if(sscanf(params,"ud",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /weap [ID игрока] [slot]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 0 || params[1] > 12) return SendClientMessage(playerid,CG,"Используйте: /weap [ID игрока] [1-12]");
	new datagunid, dataammo;
	GetPlayerWeaponData(params[0], params[1], datagunid, dataammo);
	new str_3[185];
	format(str_3,sizeof(str_3),"slot: %d\ndatagunid: %d\ndataammo: %d\nammo %d\n{FF6666}[!] dataammo > ammo = cheat",params[1], datagunid, dataammo, PI[playerid][data_AMMO][params[1]]);
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, PI[params[0]][data_NAME], str_3, "Закрыть", "");
	new str_1[144];
	format(str_1,sizeof(str_1),"[%s #%d] %s проверка /weap %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	return SendAdminMessage(0x8fbedb00,str_1);
}
CMD:resgun(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /resgun [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s удалил все оружие у игрока %s",PI[playerid][data_NAME], PI[params[0]][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	new str_1[144];
	format(str_1,sizeof(str_1),"[%s #%d] %s удалил все оружие у игрока %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	SendAdminMessage(0x8fbedb00,str_1);
    return ResetWeaponAll(params[0]);
}
CMD:me(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /me [текст]");
    NotReklama(playerid, params[0]);
	new string[145];
    format(string, sizeof(string), "%s %s",PI[playerid][data_NAME],params[0]);
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubble(playerid, string, 0xFF99CCFF, 20.0, 4000);
	return 1;
}
CMD:todo(playerid, params[]) {
    static text[128], text2[128];
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
    if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid, CG, !"[Ошибка] {FFFFFF}/todo Фраза*Действие");
    format(text2, sizeof(text2), "\"%s\", - сказал %s,{FF99FF} %s.",text,PI[playerid][data_NAME],text2);
    return 	ProxDetector(30.0, playerid, text2, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
}
CMD:do(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /do [текст]");
    NotReklama(playerid, params[0]);
	new string[145];
    format(string, sizeof(string), "%s (%s)",params[0],PI[playerid][data_NAME]);
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, params, 0xFF99CCFF, 20.0, 5000);
}
CMD:b(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,COLOR_WHITE,"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /b [OOC (nonRP) сообщение]");
    NotReklama(playerid, params[0]);
	new str_1[144];
    format(str_1, sizeof(str_1), "(( %s[%d]: %s ))",PI[playerid][data_NAME],playerid,params[0]);
	ProxDetector(30.0, playerid, str_1, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA, 0xAFAFAFAA);
	return SetPlayerChatBubble(playerid, params, 0xAFAFAFAA, 35.0, 4000);
}
alias:b("n");
CMD:try(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(sscanf(params,"s[80]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /try [текст]");
    NotReklama(playerid, params[0]);
	new str_1[144];
    switch(random(2)) {
		case 0: format(str_1, sizeof(str_1), "%s %s {26A65B}(удачно)",PI[playerid][data_NAME],params[0]);
    	case 1: format(str_1, sizeof(str_1), "%s %s {EF4836}(неудачно)",PI[playerid][data_NAME],params[0]);
	}
	ProxDetector(30.0, playerid, str_1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, params, 0xFF99CCFF, 20.0, 5000);
}
CMD:setleader(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /setleader [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
    if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    //if(PI[params[0]][data_ADMLVL] >= 1) return SendClientMessage(playerid,CG,"Нельзя поставить игрового мастера, на пост лидера");
    //if(PI[params[0]][data_VKID] < 500000) return SendClientMessage(playerid,CG,"У игрока не привязана страница ВКонктакте. (/vk - инструкция)");
    if(PI[params[0]][data_LEADER] >= 1) return SendClientMessage(playerid,CG,"Игрок уже лидер, его нужно снять чтобы поставить - /luninvite");
    SetPVarInt(playerid,"gLeader",params[0]);
    return ShowPlayerDialog(playerid, dialog_SETLEADER, DIALOG_STYLE_LIST, "{f00e5d}Выберете организацию", "1. Правительство\n2. Войсковая часть\n3. МО МВД\n4. БЦРБ\n5. Скинхеды\n6. Гопота\n7. Кавказцы", "Выбрать", "Отмена");
}
CMD:makegm(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /makegm [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_ADMLVL] >= PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, -1, "Чтобы изменить уровень данного игрового мастера обратитесь к DEV мастерам.");
	if(PI[playerid][data_ADMLVL] < PI[params[0]][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя изменить уровень игрового мастера который выше Вас");
	SendClientMessage(params[0],CY,"Следуйте дальнейшим указзаниям главного администратора");
	SendClientMessagef(params[0],CY,"Поздравляем! Игровой мастер #%d назначил Вас на должность следящего, {ff2457}ожидайте выдачи уровня", PI[playerid][ADMINSNUMBER]);
	if(PI[params[0]][data_ADMLVL] != 0) {
		SetPVarInt(playerid, "AdmID", params[0]);
		return ShowPlayerDialog(playerid, DLG_INVITEGSPLAYER, DIALOG_STYLE_LIST, "{f00e5d}Настройки игрового мастера", "1. Снять с поста\n2. NGM\n3. JRGM\n4. GM\n5. GM+\n6. LGM\n7. SGM\n8. SGM+\n9. DEV", "Назначить", "Отмена");
	}
	SetPVarInt(playerid, "AdmID", params[0]);
	new string[144];
	format(string, 144, "Введите номер игрового мастера для {2770eb}%s[%d]", PI[params[0]][data_NAME], params[0]);
	return ShowPlayerDialog(playerid, DLG_INVITEGS, DIALOG_STYLE_INPUT, "{f00e5d}GS-номер", string, "Назначить", "Отмена");
}
CMD:auninvite(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 5) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /auninvite [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_LEADER] == 1) return SendClientMessage(playerid,CG,"Игрок является лидером организации! Что бы снять используйте - /luninvite");
	new year,month,day ;
	getdate(year, month, day);
	new str_q[512];
	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','Увольнение игровым мастером','%d','%d','%d','%d')", PI[params[0]][data_ID], PI[params[0]][data_MEMBER], PI[params[0]][data_NAME], PI[params[0]][data_RANK], day, month, year);
	mysql_function_query(dbHandle, str_q, false, "", "");
	new vk_send[144];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s уволил из организцаии игрока %s[%d]",PI[playerid][data_NAME],PI[params[0]][data_NAME], params[0]);
	SendVKTest(playerid, vk_send, 3);
	new fmt_msg[65];
	format(fmt_msg, sizeof fmt_msg, "Игровой мастер #%d уволил Вас из организации %s (%d ранг)", PI[playerid][ADMINSNUMBER], Fraction_Name[PI[playerid][data_MEMBER]], PI[params[0]][data_RANK]);
	cef_emit_event(params[0], "hide-capture");
	SendClientMessage(params[0], CY, fmt_msg);
	PI[params[0]][data_LEADER] = 0;
	PI[params[0]][data_MEMBER] = 0;
	PI[params[0]][data_RANK] = 0;
	PI[params[0]][data_SKINM] = 0;
	SetPlayerSkinAC(params[0], PI[params[0]][data_SKIN]);
	SetPlayerColorEx(params[0]);
	SetPlayerTeam(params[0], NO_TEAM);
	SavePlayerData(params[0]);
	for(new g; g <= totalgz; g++) GangZoneHideForPlayer(params[0], g);
	GangZoneStopFlashForPlayer(params[0], WarZone);
	PI[params[0]][data_TIMERANK] = 0;
	ClearGroup(params[0]);
	new str_1[144];
	format(str_1,sizeof(str_1),"[%s #%d] %s[%d] уволил из организцаии игрока %s[%d]", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME], params[0]);
	return SendAdminMessage(0x8fbedb00,str_1);
}
CMD:luninvite(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 7) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /luninvite [ID игрока]");
	if(!IsPlayerConnected(params[0]))return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	new leader[32];
	switch(PI[params[0]][data_MEMBER]) {
		case 1: leader = "leader_pravo";
		case 2: leader = "leader_vch";
		case 3: leader = "leader_mvd";
		case 4: leader = "leader_bcrd";
		case 5: leader = "leader_skinhead";
		case 6: leader = "leader_gopota";
		case 7: leader = "leader_kavkaz";
	}
	new warn[32];
	switch(PI[params[0]][data_MEMBER]) {
		case 1: warn = "warn_pravo";
		case 2: warn = "warn_vch";
		case 3: warn = "warn_mvd";
		case 4: warn = "warn_bcrd";
		case 5: warn = "warn_skinhead";
		case 6: warn = "warn_gopota";
		case 7: warn = "warn_kavkaz";
	}
	new year,month,day ;
	getdate(year, month, day);
	new str_q1[512];
	mysql_format(dbHandle,str_q1, sizeof str_q1, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','Снятие с поста лидера','%d','%d','%d','%d')", PI[params[0]][data_ID], PI[params[0]][data_MEMBER], PI[params[0]][data_NAME], PI[params[0]][data_RANK], day, month, year );
	mysql_function_query(dbHandle, str_q1, false, "", "");
	SendClientMessage(params[0],CY,"Вы были сняты с должности лидера.");
	new vk_send[144];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s снял с поста лидера организцаии %s[%d]",PI[playerid][data_NAME],PI[params[0]][data_NAME], params[0]);
	SendVKTest(playerid, vk_send, 3);
	new str_1[144];
	format(str_1,sizeof(str_1),"[%s #%d] %s[%d] снял с поста лидера организцаии %s[%d]", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME], params[0]);
	SendAdminMessage(0x8fbedb00,str_1);
	PI[params[0]][data_LEADER] = 0;
	PI[params[0]][data_MEMBER] = 0;
	PI[params[0]][data_RANK] = 0;
	PI[params[0]][data_SKINM] = 0;
	SetPlayerSkinAC(params[0], PI[params[0]][data_SKIN]);
	SetPlayerColorEx(params[0]);
	SetPlayerTeam(params[0], NO_TEAM);
	SavePlayerData(params[0]);
	cef_emit_event(params[0], "hide-capture");
	for(new g; g <= totalgz; g++) GangZoneHideForPlayer(params[0], g);
	GangZoneStopFlashForPlayer(params[0], WarZone);
	PI[params[0]][data_TIMERANK] = 0;
	ClearGroup(params[0]);
	return 1;
}
CMD:get(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params,"s[24]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /get [имя]");
	new str_1[144];
	new str_3[365];
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    if(strfind(PI[i][data_CHAT_TEXT], params[0], true) != -1) {
			if(PI[i][data_ADMLVL] >= 7) return SendClientMessage(playerid, CG, "Вы не можете просмотреть информацию об этом аккаунте");
			format(str_3,sizeof(str_3),"Номер аккаунта: %d\nДонат: %d\nНаличные: %d руб.\nБанковский счет: %d руб.\nУровень: %d\nEXP: %d\nДом: %d +1 (-1 - нет)\nБизнес: %d +1 (-1 - нет)\nНомер телефона: %d (0 - нет)\nОрганизация: %d\nРанг: %d\nЛидер: %d\nREG-IP: %s\nLOG-IP: %s\nREG-DATA: %d/%d/%d\nLOG-DATA: %d/%d/%d\nПроведенное время в игре (сегодня): %d минут",
			PI[i][data_ID],PI[i][data_DONATE],PI[i][data_MONEY],PI[i][data_BANK],PI[i][data_EXP],
			PI[i][data_HOUSE],PI[i][data_BUSINESS],PI[i][data_NUMBER],PI[i][data_MEMBER],PI[i][data_RANK],
			PI[i][data_LEADER],PI[i][data_REGISTER_IP],PI[i][data_LOGIN_IP],PI[i][data_REGDATE_DAY],PI[i][data_REGDATE_MONTH],
			PI[i][data_LOGDATE_DAY],PI[i][data_LOGDATE_MONTH],PI[i][data_LOGDATE_YEAR],PI[i][data_TIME]);
			ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, PI[i][data_NAME], str_3, "Закрыть", "");
			format(str_1,sizeof(str_1),"[%s #%d] %s просматривает информацию аккаунта %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[i][data_NAME]);
			SendAdminMessage(0x8fbedb00,str_1);
	        return 1;
	    }
	}
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'",params[0]);
 	mysql_function_query(dbHandle, str_q, true, "GetAccount", "i", playerid);
   	return 1;
}
CMD:geton(playerid,params[]) {
	new playername[24];
    format(playername,sizeof(playername),PI[params[0]][data_NAME]);
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params,"s[24]",playername)) return SendClientMessage(playerid,CG,"Используйте: /get [имя]");
	new str_1[144];
	new str_3[365];
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    if(strfind(PI[i][data_CHAT_TEXT], playername, true) != -1) {
			format(str_3,sizeof(str_3),"Номер аккаунта: %d\nДонат: %d\nНаличные: %d руб.\nБанковский счет: %d руб.\nУровень: %d\nEXP: %d\nДом: %d +1 (-1 - нет)\nБизнес: %d +1 (-1 - нет)\nНомер телефона: %d (0 - нет)\nОрганизация: %d\nРанг: %d\nЛидер: %d\nREG-IP: %s\nLOG-IP: %s\nREG-DATA: %d/%d/%d\nLOG-DATA: %d/%d/%d\nПроведенное время в игре (сегодня): %d минут",
			PI[i][data_ID],PI[i][data_DONATE],PI[i][data_MONEY],PI[i][data_BANK],PI[i][data_EXP],
			PI[i][data_HOUSE],PI[i][data_BUSINESS],PI[i][data_NUMBER],PI[i][data_MEMBER],PI[i][data_RANK],
			PI[i][data_LEADER],PI[i][data_REGISTER_IP],PI[i][data_LOGIN_IP],PI[i][data_REGDATE_DAY],PI[i][data_REGDATE_MONTH],
			PI[i][data_LOGDATE_DAY],PI[i][data_LOGDATE_MONTH],PI[i][data_LOGDATE_YEAR],PI[i][data_TIME]);
			ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, PI[i][data_NAME], str_3, "Закрыть", "");
			format(str_1,sizeof(str_1),"[%s #%d] %s просматривает информацию аккаунта %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[i][data_NAME]);
			SendAdminMessage(0x8fbedb00,str_1);
	        return 1;
	    }
	}
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'",playername);
 	mysql_function_query(dbHandle, str_q, true, "GetAccount", "i", playerid);
   	return 1;
}
CMD:allleaders(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	mysql_function_query(dbHandle, "SELECT * FROM `accounts` WHERE `leader` != '0'", true, "LoadAllLeaders", "d", playerid);
	return 1;
}
CMD:addhouse(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	return ShowPlayerDialog(playerid,dialog_ADD_HOUSE,DIALOG_STYLE_MSGBOX,"{f00e5d}Добавление дома","Вы желаете добавить дом?","Да","Отмена");
}
CMD:tph(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED]== false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	if(GetPVarInt(playerid, "addhouse") == 0) return SendClientMessage(playerid,CG,"Вы не начали добавлять дом");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPVarFloat(playerid,"aEnterX",x);
	SetPVarFloat(playerid,"aEnterY",y);
	SetPVarFloat(playerid,"aEnterZ",z);
	return ShowPlayerDialog(playerid, dialog_ADD_HOUSE_1, DIALOG_STYLE_LIST, "{f00e5d}Выберите интерьер", "2 этажа. Средний\n1 этаж. Сельский дом", "Выбрать", "Отмена");
}
CMD:jail(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params,"uds[32]",params[0],params[1],params[2])) return SendClientMessage(playerid,CG,"Используйте: /jail [ID игрока] [время] [причина]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 1 || params[1] > 600) return SendClientMessage(playerid,CG,"Нельзя меньше 1 минуты и больше 600 минут");
    if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровому мастеру");
	PI[params[0]][data_HOSPITAL] = 0;
	PI[params[0]][data_DEMORGAN] = 1;
	PI[params[0]][data_DEMORGANTIME] = params[1]*60;
    new textstr[90], str[90], atext[145];
	format(textstr, sizeof(textstr), "Вы посадили в тюрьму игрока %s на %d минут. Причина: %s", PI[params[0]][data_NAME], params[1], params[2]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d посадил Вас в тюрьму на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER], params[1], params[2]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	format(atext,sizeof(atext),"[%s #%d] %s[%d] посадил игрока %s в тюрьму на %d минут. Причина: %s", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[1],params[2]);
	SendAdminMessage(COLOR_ADMINCHAT, atext);
	SetPlayerToSpawn(params[0]);
	NullSpawnCord(playerid);
	SavePlayerData(params[0]);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил игрока %s в тюрьму на %d минут. Причина: %s",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[1],params[2]);
	SendVKTest(playerid, vk_send, 3);
	return ResetPlayerWeapons(params[0]);
}
CMD:unjail(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /unjail [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	PI[params[0]][data_JAIL] = 0;
	PI[params[0]][data_JAILTIME] = 0;
	PI[params[0]][data_DEMORGAN]= 0;
	PI[params[0]][data_DEMORGANTIME]= 0;
	SetPlayerToSpawn(params[0]);
    new textstr[90], str[90], message[145];
	format(textstr, sizeof(textstr), "Вы выпустили игрока %s из тюрьмы", PI[params[0]][data_NAME]);
	SendClientMessage(playerid, COLOR_TOMATO, textstr);
	format(str, sizeof(str), "Игровой мастер #%d выпустил Вас из тюрьмы.", PI[playerid][ADMINSNUMBER]);
	SendClientMessage(params[0], COLOR_TOMATO, str);
	SavePlayerData(params[0]);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s освободил игрока %s[%d] из тюрьмы",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
	format(message,sizeof(message),"[%s #%d] %s[%d] освободил игрока %s[%d] из тюрьмы", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0]);
	return SendAdminMessage(0x8fbedb00,message);
}
CMD:givelic(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используйте: /givelic [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	PI[params[0]][data_LICB] = 1;
	if(PI[params[0]][data_LICNUM] == 0) PI[params[0]][data_LICNUM] = RandomEX(1111111, 6666666);
	SavePlayerData(params[0]);
	new str[145];
	format(str,sizeof(str),"[%s #%d] %s выдал водительские права %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	return SendAdminMessage(0x8fbedb00,str);
}
CMD:ahelp(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] == 0) return 1;
    new dialog[123];
	format(dialog, sizeof(dialog), "1. NGS%s%s%s%s%s%s", (PI[playerid][data_ADMLVL] >= 2) ? ("\n2. JRGM") : (""), (PI[playerid][data_ADMLVL] >= 3) ? ("\n3. GM") : (""), (PI[playerid][data_ADMLVL] >= 4) ? ("\n4. GM+") : (""), (PI[playerid][data_ADMLVL] >= 5) ? ("\n5. LGM") : (""), (PI[playerid][data_ADMLVL] >= 6) ? ("\n6. SGM") : (""), (PI[playerid][data_ADMLVL] >= 7) ? ("\n7. SGM+") : (""), (PI[playerid][data_ADMLVL] > 8) ? ("\n7. DEV") : (""));
	return ShowPlayerDialog(playerid, dialog_ADMCOMMAND, DIALOG_STYLE_LIST, "{911E42}Меню помощи", dialog, "Выбрать", "Закрыть");
}
CMD:load(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_START_JOB] != 6 && PI[playerid][data_START_JOB] != 7) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	new carid = GetPlayerVehicleID(playerid);
	if(PI[playerid][data_RENTJOB] != carid) return SendClientMessage(playerid, CG, "Вы должны находиться в своём тягаче");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, CG, "Вы должны находиться за рулем");
	new bugfix;
	for(new i = 0; i < TotalJB; i++) {
	    if(PlayerToPoint(100.0, playerid, g_load_pos[i][0], g_load_pos[i][1], g_load_pos[i][2])) {
	        switch(i) {
	            case 0: ShowPlayerDialog(playerid,dialog_LOAD_LESOPILKA,DIALOG_STYLE_LIST,"{f00e5d}Выберете товар", "Вагонка\nДоска\nБрус", "Выбрать","Отмена");
	        	case 1: ShowPlayerDialog(playerid,dialog_LOAD_RUDNIK,DIALOG_STYLE_LIST,"{f00e5d}Выберете товар", "Руда", "Выбрать","Отмена");
	          	case 2: ShowPlayerDialog(playerid,dialog_LOAD_FRUCT,DIALOG_STYLE_LIST,"{f00e5d}Выберете товар", "Яблоки\nСливы\nПерсики\nАпельсины", "Выбрать","Отмена");
	           	case 3: ShowPlayerDialog(playerid,dialog_LOAD_OGOROD,DIALOG_STYLE_LIST,"{f00e5d}Выберете товар", "Картофель\nПомидоры\nОгурцы\nКапуста\nМорковь", "Выбрать","Отмена");
	           	case 4: ShowPlayerDialog(playerid,dialog_LOAD_FUEL,DIALOG_STYLE_LIST,"{f00e5d}Выберете товар", "Топливо", "Выбрать","Отмена");
	        }
	        bugfix = 1;
	    }
	}
	if(bugfix != 1) return SendClientMessage(playerid, CG, "Нужно находиться на месте загрузки (/dhelp > GPS)");
	return 1;
}
CMD:unload(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	new carid = GetPlayerVehicleID(playerid);
	if(carid != PI[playerid][data_RENTJOB]) return SendClientMessage(playerid, CG, "Нужно находиться в своей рабочей машине");
	if(PI[playerid][data_START_JOB] == 8) {
	    if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /unload [кол-во]");
		if(params[0] <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
		if(PlayerToPoint(20.0, playerid, 2745.839355, -2431.429199, 13.643185)) {
            if(CAR_DATA[carid][data_KOLVO] < params[0]) return SendClientMessage(playerid, CG, "В фургоне недостаточно товара");
          	new cena;
			switch(GetPVarInt(playerid, "buytovar")) {
				case 1:cena = cena_azs;
				case 2:cena = cena_24;
				case 3:cena = cena_clothes;
				case 4:cena = cena_gun;
				case 5:cena = cena_eat;
			}
			new money = cena*params[0];
	        CAR_DATA[carid][data_KOLVO] -= params[0];
	      	if(CAR_DATA[carid][data_KOLVO] == 0) CAR_DATA[carid][data_GRUZ] = 0;
	        give_player_money(playerid, money,"#66",20703);
        	SendClientMessage(playerid, COLOR_AC, "Вы разгрузили товар");
        	new str[145];
        	format(str,sizeof(str),"Вы разгрузили: %d ед. Осталось в фургоне: %s ед.",params[0],CAR_DATA[carid][data_KOLVO]);
			return 1;

		}
    	for(new b = 0; b < TotalBusiness; b++) {
		    if(PlayerToPoint(20.0, playerid, BUSINESS_DATA[b][data_ENTERX],BUSINESS_DATA[b][data_ENTERY],BUSINESS_DATA[b][data_ENTERZ])) {
		        if(BUSINESS_DATA[b][data_OWNED] == 0) return SendClientMessage(playerid, CG,"Данный бизнес закрыт");
                if(CAR_DATA[carid][data_GRUZ] == 0) return SendClientMessage(playerid, CG, "Ваш фургон пуст");
                if(BUSINESS_DATA[b][data_PROD] == 1000) return SendClientMessage(playerid, CG,"Склад бизнеса полон");
				if(params[0] > CAR_DATA[carid][data_KOLVO]) return SendClientMessage(playerid,CG,"У Вас недостаточно товара в фургоне");
				new money = params[0]*BUSINESS_DATA[b][data_PRICEPROD];
				new sklad = params[0]+BUSINESS_DATA[b][data_PROD];
				if(BUSINESS_DATA[b][data_BANK] < money) return SendClientMessage(playerid, CG, "У владельца бизнеса недостаточно денег");
				if(sklad > 1000) return SendClientMessage(playerid, CG, "На складе недостаточно места");
				if(BUSINESS_DATA[b][data_TYPE] != CAR_DATA[carid][data_GRUZ])return SendClientMessage(playerid, CG, "Ваш товар не подходит данному бизнесу");
				give_player_money(playerid, money,"#67",20721);
				BUSINESS_DATA[b][data_BANK] -= money;
				BUSINESS_DATA[b][data_PROD] += params[0];
				CAR_DATA[carid][data_KOLVO] -= params[0];
				if(CAR_DATA[carid][data_KOLVO] == 0) CAR_DATA[carid][data_GRUZ] = 0;
				UpdateBusinessData(b);
				SaveBusinessData(b);
				new str[50];
				format(str,sizeof(str),"Вы продали %d ед. Заработали: %d  рублей",params[0],money);
				return SendClientMessage(playerid,0x99FF00FF,str);
		    }
		}
	}
	if(PI[playerid][data_START_JOB] == 6 || PI[playerid][data_START_JOB] == 7) {
	    if(!PlayerToPoint(100.0, playerid, 2398.9829, -971.9788, 2.1992)) return SendClientMessage(playerid, CG, "Нужно находиться на месте разгрузки (/dhelp > GPS)");
		new trailer = GetVehicleTrailer(carid);
		if(PI[playerid][data_RENTJOB] != carid) return SendClientMessage(playerid, CG, "Вы должны находиться в своём тягаче");
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, CG, "Вы должны находиться за рулем");
		if(trailer != PI[playerid][data_TRAILER]) return SendClientMessage(playerid, CG, "У Вас нет прицепа");
		if(CAR_DATA[trailer][data_GRUZ] <= 0 || CAR_DATA[trailer][data_KOLVO] <= 0) return SendClientMessage(playerid, CG, "Ваш прицеп пуст");
		switch(CAR_DATA[trailer][data_GRUZ]) {
		    case VAGONKA_ID: SetPVarInt(playerid, "d_money_sell",sell_vagonka*CAR_DATA[trailer][data_KOLVO]);
			case DOSKA_ID: SetPVarInt(playerid, "d_money_sell",sell_doska*CAR_DATA[trailer][data_KOLVO]);
			case BRUS_ID: SetPVarInt(playerid, "d_money_sell",sell_brus*CAR_DATA[trailer][data_KOLVO]);
			case RUDA_ID: SetPVarInt(playerid, "d_money_sell",sell_ruda*CAR_DATA[trailer][data_KOLVO]);
			case MORKOV_ID: SetPVarInt(playerid, "d_money_sell",sell_morkov*CAR_DATA[trailer][data_KOLVO]);
			case KAPUSTA_ID: SetPVarInt(playerid, "d_money_sell",sell_kapusta*CAR_DATA[trailer][data_KOLVO]);
			case OGUREC_ID: SetPVarInt(playerid, "d_money_sell",sell_ogurec*CAR_DATA[trailer][data_KOLVO]);
			case POMIDOR_ID: SetPVarInt(playerid, "d_money_sell",sell_pomidor*CAR_DATA[trailer][data_KOLVO]);
			case KARTOFEL_ID: SetPVarInt(playerid, "d_money_sell",sell_kartofel*CAR_DATA[trailer][data_KOLVO]);
			case ORANGE_ID: SetPVarInt(playerid, "d_money_sell",sell_orange*CAR_DATA[trailer][data_KOLVO]);
			case PERSIK_ID: SetPVarInt(playerid, "d_money_sell",sell_persiky*CAR_DATA[trailer][data_KOLVO]);
			case SLIVA_ID: SetPVarInt(playerid, "d_money_sell",sell_sliva*CAR_DATA[trailer][data_KOLVO]);
			case YABLOKO_ID: SetPVarInt(playerid, "d_money_sell",sell_yabloki*CAR_DATA[trailer][data_KOLVO]);
			case FUEL_ID: SetPVarInt(playerid, "d_money_sell",sell_fuel*CAR_DATA[trailer][data_KOLVO]);
		}
		new money = GetPVarInt(playerid, "d_money_sell");
		new chisto = money-GetPVarInt(playerid, "d_money_buy");
		if(chisto >= 1) {
		    for(new b = 0; b < TotalAB; b++) {
		    	if(GetPVarInt(playerid, "job_db") == AB_DATA[b][data_ID]) {
		    	    new var = chisto*AB_DATA[b][data_PROCENT];
					new zabral = var/100;
					new otdal = chisto-zabral;
					new str[145];
					format(str,sizeof(str),"Вы продали груз за %d рублей. Чистая прибыль %d рублей. Отдано владельцу автобазы %d рублей",money, chisto, otdal);
					SendClientMessage(playerid, COLOR_AC, str);
					new zp = money-otdal;
					give_player_money(playerid, zp,"#68",20769);
					AB_DATA[b][data_BANK] += otdal;
					break;
		    	}
			}
		}
		else {
		    new str[145];
			format(str,sizeof(str),"Вы продали груз за %d рублей. Чистая прибыль 0 рублей. Отдано владельцу автобазы 0 рублей",money);
			SendClientMessage(playerid, COLOR_AC, str);
			give_player_money(playerid, money,"#69",20779);
		}
		new skill, exp;
	    skill = PI[playerid][data_DSKILL]+1;
	    new exexp = skill*600;
	    exp = exexp+5200;
		PI[playerid][data_DEXP] += CAR_DATA[trailer][data_KOLVO];
		if(exp <= PI[playerid][data_DEXP] && PI[playerid][data_DSKILL] < 50) {
		    PI[playerid][data_DSKILL]++;
			SendClientMessage(playerid,0xFF9999FF,"Поздравляем! Вы повысили свой навык дальнобойщика");
			new newexp = PI[playerid][data_DEXP]-exp;
			PI[playerid][data_DEXP] = newexp;
		}
		DestroyVehicle(PI[playerid][data_TRAILER]);
		CAR_DATA[trailer][data_GRUZ] = 0;
		CAR_DATA[trailer][data_KOLVO] = 0;
		PI[playerid][data_TRAILER] = INVALID_VEHICLE_ID;
	}
	return 1;
}
alias:menu("mm", "mn", "mainmenu");
CMD:menu(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    open_mainmenu(playerid);
    return SavePlayerData(playerid);
}
CMD:lights_text(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
   	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new carid = GetPlayerVehicleID(playerid);
		if(!IsABMX(carid)) {
			switch(CAR_DATA[carid][data_LAMP]) {
				case 0: {
					GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,true,alarm,doors_text,bonnet,boot,objective);
					CAR_DATA[carid][data_LAMP] = 1;
				}
				case 1: {
					GetVehicleParamsEx(carid,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(carid,engine,false,alarm,doors_text,bonnet,boot,objective);
					CAR_DATA[carid][data_LAMP] = 0;
				}
			}
		}
	}
	return 1;
}
CMD:pay(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid,CG,"Данную команду можно использовать со 2 уровня");
	if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /pay [ID игрока] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передать деньги самому себе");
    if(GetPVarInt(playerid,"Counting_pay") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 15 секунд");
    SetPVarInt(playerid,"Counting_pay",gettime() + 15);
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок от Вас");
	if(params[1] <= 0) return SendClientMessage(playerid, CG, "Недопустимое значение");
	if(params[1] > 3000) return SendClientMessage(playerid,CG,"Разрешено передавать не более 3000 рублей за один раз");
	if(get_player_money(playerid) < params[1]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
	give_player_money(playerid,-params[1],"#70",20848);
	give_player_money(params[0],params[1],"#71",20849);
	new str2[70],str1[70],pay[20],pay1[20];
	format(str2,sizeof(str2),"Передача денег %s[%d]",PI[params[0]][data_NAME],params[0]);
	format(str1,sizeof(str1),"Получено денег от %s[%d]",PI[playerid][data_NAME],playerid);
	format(pay,sizeof(pay),"-%dР",params[1]);
	format(pay1,sizeof(pay1),"+%dР",params[1]);
	cef_emit_event(playerid, "show-notify-no-img", CEFSTR(str2), CEFSTR("fb4949"), CEFSTR(pay));
	cef_emit_event(params[0], "show-notify-no-img", CEFSTR(str1), CEFSTR("418055"), CEFSTR(pay1));
    new logtext[64];
    format(logtext,sizeof(logtext),"передал %s %d рублей",PI[params[0]][data_NAME],params[1]);
    AddLog("log_paymoney",PI[playerid][data_NAME], logtext);
    SavePlayerData(playerid);
	return 1;
}
CMD:eject(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CG,"Вы не за рулем");
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /eject [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[0] == playerid) return SendClientMessage(playerid,CG,"Вы не можете выкинуть из машины самого себя");
    new car = GetPlayerVehicleID(playerid);
	new idcar = GetPlayerVehicleID(params[0]);
	if(!IsPlayerInVehicle(playerid,car)) return 1;
	if(car != idcar) return SendClientMessage(playerid,CG,"Данный игрок не находиться в Вашей машине");
	RemovePlayerFromVehicleAC(params[0]);
	new str_1[144];
	format(str_1,sizeof(str_1),"%s был выброшен из автомобиля",PI[params[0]][data_NAME]);
	SendClientMessage(playerid,0xFF9999FF,str_1);
	return SendClientMessage(params[0],0xFF9999FF,"Вас выбросили из автомобиля");
}
CMD:card(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_MEDCARD] == 0) return SendClientMessage(playerid, CG, "У Вас нет медицинской карты, получить её можно в здании БЦРБ.");
    if(PI[playerid][data_LOGGED] == false) return 1;
	new str_3[256];
    if(sscanf(params, "u", params[0])) {
		format(str_3,sizeof(str_3),"ЦРБ птг. Батырево: \t\tДокумент №%d\nГражданин РФ\t\t\t{3377cc}%s\nАнализы\t\t\tПройдены\nФизическое состояние\tНормальное\nЗависимость\t\t\tНет", PI[playerid][data_MEDNUM], PI[playerid][data_NAME]);
		return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Лицензии", str_3, "Закрыть", "");
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Используйте: /card [ид игрока]");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Игрок слишком далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_MEDCARD);
}
CMD:lic(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "u", params[0])) {
        new licb[102+1],dtext[202+1], licg[102+1];
		switch(PI[playerid][data_LICB]) {
			case 1: format(licb,sizeof(licb),"{252525}Водительские права: \t\t\t{FF6347}-");
			case 2: format(licb,sizeof(licb),"{252525}Водительские права: \t\t\t{24ff78}+");
		}
		switch(PI[playerid][data_LICG]) {
			case 1: format(licg,sizeof(licg),"{252525}Лицензия на оружие: \t\t\t{FF6347}-");
			case 2: format(licg,sizeof(licg),"{252525}Лицензия на оружие: \t\t\t{24ff78}+");
		}
		format(dtext,sizeof(dtext),"Автошкола птг. Батырево: \tДокумент №%d\nГражданин РФ\t\t\t{3377cc}%s\n%s\n%s", PI[playerid][data_LICNUM], PI[playerid][data_NAME], licb, licg);
		return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Лицензии", dtext, "Закрыть", "");
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Используйте: /lic [ид игрока]");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Игрок слишком далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_LIC);
}
CMD:payday(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	new str_1[85];
    format(str_1, sizeof(str_1), "%s[%d]: сделал PAYDAY", PI[playerid][data_NAME],playerid);
    SendAdminMessage(COLOR_BLUE, str_1);
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		PayDay(i);
		SavePlayerData(i);
	}
	new vk_send[144];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s сделал PayDay",PI[playerid][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:dice(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /dice [ID игрока] [сумма]");
    if(params[0] == playerid) return SendClientMessage(playerid,CG,"Нельзя использовать на самом себе");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] < 1000 || params[1] > 100000000) return SendClientMessage(playerid, CG, "Сумма ставки должна быть от 1000 до 100000000 рублей");
	if(get_player_money(playerid) < params[1]) return SendClientMessage(playerid, CG, "У Вас недостаточно денег на руках");
    if(get_player_money(params[0]) < params[1]) return SendClientMessage(playerid, CG, "У игрока недостаточно денег на руках");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
    if(!PlayerToPoint(100.0, playerid, 1250.2006,1517.6091,835.2716)) return SendClientMessage(playerid, CG, "Нужно находиться в казино");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_DICE, params[1]);
}
CMD:pass(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используйте: /pass [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_PASS);
}
CMD:skill(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new str_3[365];
    if(sscanf(params, "u", params[0])) {
		format(str_3,sizeof(str_3),"1. ТТ:\t\t\t%d %%\n2. ТТ с глушителем:\t%d %%\n3. Desert Eagle:\t\t%d %%\n4. Дробовик:\t\t\t%d %%\n5. MP5:\t\t\t%d %%\n6. AK-47:\t\t%d %%",PI[playerid][data_PISTOL],PI[playerid][data_SDPISTOL],PI[playerid][data_DEAGLE],PI[playerid][data_SHOTGUN],PI[playerid][data_MP5],PI[playerid][data_AK47]);
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Навыки владения оружием", str_3, "Закрыть", "");
  		return SetPlayerChatBubble(playerid, "просматривает навыки владения оружием", 0xFF99CCFF, 20.0, 4000);
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_SKILLS);
}
CMD:setspawn(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    return ShowPlayerDialog(playerid, dialog_SETSPAWN, DIALOG_STYLE_LIST, "{f00e5d}Выберете место появления", "1. База организации\n2. Автомобильный / железнодорожный вокзал\n3. Дом / квартира", "Выбрать", "Закрыть");
}
CMD:invite(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /invite [ID игрока]");
	SetPVarInt(playerid, "Invite", params[0]);
	new str_q[256];
    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_name = '%e' AND bl_fraction = '%d'", PI[params[0]][data_NAME], PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "CheckBlackList", "d", playerid);
	return 1;
}
callback: CheckBlackList(playerid) {
	new id = GetPVarInt(playerid, "Invite");
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SendClientMessage(playerid, CG,"Вы не можете принять игрока из чёрного списка организации."), SendClientMessage(id, CG,"Вы находитесь в чёрном списке организации");
	else {
		if(id == playerid) return SendClientMessage(playerid,CG,"Нельзя использовать на самом себе");
		if(!IsPlayerConnected(id))return  SendClientMessage(playerid,CG,"Игрок не в сети");
		if(PI[id][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
		if(PI[id][data_MEMBER] != 0) return  SendClientMessage(playerid,CG,"Данный игрок состоит в организации");
		if(PI[id][data_WARN] > 0) return SendClientMessage(playerid,CG,"У данного игрока есть предупреждения");
		if(PI[id][data_MILITARY] == 0 && PI[playerid][data_MEMBER] == 3) return SendClientMessage(playerid, CG, "У игрока нет военного билета");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(id,x,y,z);
		if(!PlayerToPoint(5.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
		SetPVarInt(playerid, "to_player", id);
		new str1[144];
		format(str1,sizeof(str1),"{FFFFFF}- Отлично! Я думаю мы сработаемся {FF99CC}- сказал %s, взяв пакет с формой",PI[playerid][data_NAME]);
		ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
		pCurrectMessage[playerid]++;
		pTimerMessage[playerid] = gettime() + 1;
	}
	return 1;
}
CMD:leave(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_VIP] < 1) return SendClientMessage(playerid, CG, "Данная функция доступна только VIP игрокам");
	if(PI[playerid][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Вы не состоите в организации");
	if(PI[playerid][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Для снятия с должности лидера по собственному желанию обратитесь к Игровым мастерам");
	ShowPlayerDialog(playerid, 7214, DIALOG_STYLE_MSGBOX, "{f00e5d}Увольнение", "Вы действительно хотите уволиться из организации по собственному желанию?\n{696969}Обратите внимание: информация о Вашем уходе будет видна в чате организации", "Да", "Нет");
	return SavePlayerData(playerid);
}
CMD:uninvite(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
    if(sscanf(params,"us[60]",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /uninvite [ID игрока] [причина]");
    if(params[0] == playerid) return SendClientMessage(playerid,CG,"Нельзя использовать на самом себе");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[playerid][data_MEMBER] != PI[params[0]][data_MEMBER]) return SendClientMessage(playerid,CG,"Данный игрок не состоит в Вашей организации");
	if(PI[params[0]][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Нельзя применить к лидеру");
	if(PI[playerid][data_RANK] == PI[params[0]][data_RANK]) return SendClientMessage(playerid, CG, "Нельзя применить к человеку у которого такой-же ранг");
	SetPVarString(playerid, "uninvitereason", params[1]);
	SetPVarInt(playerid, "uninviteid", params[0]);
	static name[24];
	SetString(name, NameRang(params[0]));
	name = NameRang(params[0]);
	new str_3[365];
	format(str_3,sizeof(str_3),"Вы хотите уволить {3377cc}%s %s\n{FFFFFF}Причина увольнения: {3377cc}%s\n\n{696969}Обратите внимание: отменить это действие будет невозможно!", name, PI[params[0]][data_NAME], params[1]);
	return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_MSGBOX, "{f00e5d}Уволить игрока", str_3, "Да", "Нет");
}
CMD:setskin(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /setskin [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Данный игрок не состоит в Вашей организации");
	if(PI[playerid][data_MEMBER] != PI[params[0]][data_MEMBER]) return SendClientMessage(playerid, CG, "Данный игрок не состоит в Вашей организации");
	if(PI[params[0]][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Нельзя применить к лидеру");
	SetPVarInt(playerid,"gPLAYER",params[0]);
	if(PI[playerid][data_SEX] == 1) {
		switch(PI[playerid][data_MEMBER]) {
			case 1: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t156\n2\t\t154\n3\t\t208\n4\t\t155\n5\t\t147\n6\t\t187", "Выбрать", "Отмена");
			case 2: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t179\n2\t\t262\n3\t\t253\n4\t\t283\n5\t\t167\n6\t\t277\n7\t\t278\n8\t\t279\n9\t\t188\n10\t\t222\n11\t\t255\n\t\t84", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t280\n2\t\t281\n3\t\t282\n4\t\t285\n5\t\t286\n6\t\t288", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t276\n2\t\t71\n3\t\t275\n4\t\t70", "Выбрать", "Отмена");
			case 5: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t8\n[5-7 ранг]\t\t17\n[Стрелковый состав 1-7 ранг]\t\t28\n[8-9 ранг]\t\t126\n[10 ранг]\t\t117", "Выбрать", "Отмена");
			case 6: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t115\n[5-7 ранг]\t\t116\n[Стрелковый состав 1-7 ранг]\t\t114\n[8-9 ранг]\t\t111\n[10 ранг]\t\t236", "Выбрать", "Отмена");
			case 7: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Группа и Номер\t\tID Скина\n[1-4 ранг]\t\t\t123\n[5-7 ранг]\t\t122\n[Стрелковый состав 1-7 ранг]\t\t109\n[8-9 ранг]\t\t108\n[10 ранг]\t\t118", "Выбрать", "Отмена");
			case 8: ShowPlayerDialog(playerid, dialog_SETSKIN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t15\n2\t\t17\n3\t\t23", "Выбрать", "Отмена");
		}
	}
	if(PI[playerid][data_SEX] == 2) {
		switch(PI[playerid][data_MEMBER]) {
			case 1: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t216", "Выбрать", "Отмена");
			case 2: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t191", "Выбрать", "Отмена");
			case 3: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t141", "Выбрать", "Отмена");
			case 4: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t194", "Выбрать", "Отмена");
			case 5: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 6: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 7: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t13", "Выбрать", "Отмена");
			case 8: ShowPlayerDialog(playerid, dialog_SETSKINDEV, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберете форму одежды", "Номер\t\tID Скина\n1\t\t\t12", "Выбрать", "Отмена");
		}
	}
	return 1;
}
CMD:setrang(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
 	if(sscanf(params, "dc", params[0], params[1])) return SendClientMessage(playerid, CG, "Используйте: /setrang [id игрока] [+/-]");
	if(params[0] == playerid) return SendClientMessage(playerid,CG,"Нельзя использовать на самом себе");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Данный игрок не состоит в Вашей организации");
	if(PI[playerid][data_MEMBER] != PI[params[0]][data_MEMBER]) return SendClientMessage(playerid, CG, "Данный игрок не состоит в Вашей организации");
	if(PI[params[0]][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Нельзя применить к лидеру");
	if(PI[params[0]][data_TIMERANK] > gettime()) return SendClientMessage(playerid, CG, "Повышать игрока можно раз в 24 часа");
	static name[24], nametwo[24];
	SetString(nametwo, NameRang(playerid));
	nametwo = NameRang(playerid);
	if(params[1] == 43) {
	    if(PI[params[0]][data_RANK] == 9 || PI[params[0]][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Вы не можете повысить этого игрока, так как его ранг равен 9 или больше");
	    if(PI[params[0]][data_RANK] == PI[playerid][data_RANK]) return SendClientMessage(playerid, CG, "Вы не можете управлять рангом игрока схожим с Вами");
		PI[params[0]][data_RANK]++;
        PI[params[0]][data_LEADER] = 0;
        SetString(name, NameRang(params[0]));
		name = NameRang(params[0]);
		SendClientMessagef(playerid, 0x9eceffFF, "Вы повысили ранг %s[%d] до %s[%d]", PI[params[0]][data_NAME], params[0], name, PI[params[0]][data_RANK]);
		SendClientMessagef(params[0], 0x9eceffFF, "%s %s[%d] повысил Ваш ранг до %s[%d]", nametwo, PI[playerid][data_NAME], playerid, name, PI[params[0]][data_RANK]);
		PI[params[0]][data_TIMERANK] = gettime() + 86400;
		SetRang("log_setrang",PI[playerid][data_NAME], PI[params[0]][data_RANK], PI[params[0]][data_NAME], "повысил");
		return SavePlayerData(params[0]);
	}
	else if(params[1] == 45) {
		if(PI[params[0]][data_RANK] == 1) return SendClientMessage(playerid, CG, "Вы не можете понизить этого игрока, так как его ранг равен 1");
		if(PI[params[0]][data_RANK] == PI[playerid][data_RANK]) return SendClientMessage(playerid, CG, "Вы не можете управлять рангом игрока схожим с Вами");
        PI[params[0]][data_RANK]--;
        SetString(name, NameRang(params[0]));
		name = NameRang(params[0]);
		SendClientMessagef(playerid, 0x9eceffFF, "Вы понизил ранг %s[%d] до %s[%d]", PI[params[0]][data_NAME], params[0], name, PI[params[0]][data_RANK]);
		SendClientMessagef(params[0], 0x9eceffFF, "%s %s[%d] понизил Ваш ранг до %s[%d]", nametwo, PI[playerid][data_NAME], playerid, name, PI[params[0]][data_RANK]);
		PI[params[0]][data_TIMERANK] = gettime() + 86400;
		SetRang("log_setrang",PI[playerid][data_NAME], PI[params[0]][data_RANK], PI[params[0]][data_NAME], "понизил");
		return SavePlayerData(params[0]);
	}
	return 1;
}
CMD:gov(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(PI[playerid][data_MEMBER] == 5 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 7) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"s[90]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /gov [текст]");
    NotReklama(playerid, params[0]);
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	return SendClientMessageToAllf(0x0066CCFF, "%s %s: %s",name,PI[playerid][data_NAME],params[0]);
}
CMD:dd(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_MEMBER] == 5) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	if(PI[playerid][data_MEMBER] == 6) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	if(PI[playerid][data_MEMBER] == 7) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
    if(PI[playerid][data_MEMBER] == 0) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	if(sscanf(params,"s[32]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /dd [текст]");
    NotReklama(playerid, params[0]);
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	new str[145];
 	format(str,sizeof(str),"(( [D | %s] %s %s[%d]: %s ))", PI[playerid][data_GRNAME],name,PI[playerid][data_NAME],playerid,params[0]);
    SendFractionMessage(PI[playerid][data_MEMBER],0xFF8282FF,str);
    return 1;
}
CMD:r(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(PI[playerid][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /r [текст]");
	NotReklama(playerid, params[0]);
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	new str[145];
	if(PI[playerid][data_GID] != -1) {
		switch(PI[playerid][data_MEMBER])
		{
		    case 1..7:format(str,sizeof(str),"[R | %s] %s %s[%d]: %s", PI[playerid][data_GRNAME],name,PI[playerid][data_NAME],playerid,params[0]);
		}
 	}
	else {
	    switch(PI[playerid][data_MEMBER])
		{
		    case 1..7:format(str,sizeof(str),"[R] %s %s[%d]: %s",name,PI[playerid][data_NAME],playerid,params[0]);
		}
	}
 	foreach(new i:Player) if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(i, 0x69b867FF, str);
	SetPlayerChatBubble(playerid, "сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
CMD:rr(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(PI[playerid][data_MEMBER] == 0) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /rr [текст]");
	NotReklama(playerid, params[0]);
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	new str[145];
	if(PI[playerid][data_GID] != -1) {
		switch(PI[playerid][data_MEMBER])
		{
		    case 1..7:format(str,sizeof(str),"(( [R | %s] %s %s[%d]: %s ))", PI[playerid][data_GRNAME],name,PI[playerid][data_NAME],playerid,params[0]);
		}
 	}
	else {
	    switch(PI[playerid][data_MEMBER])
		{
		    case 1..7:format(str,sizeof(str),"(( [R] %s %s[%d]: %s ))",name,PI[playerid][data_NAME],playerid,params[0]);
		}
	}
	foreach(new i:Player) if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(i, 0x69b867FF, str);
	SetPlayerChatBubble(playerid, "сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
CMD:d(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_MEMBER] == 5) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	if(PI[playerid][data_MEMBER] == 6) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	if(PI[playerid][data_MEMBER] == 7) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
    if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /d [текст]");
	if(PI[playerid][data_MEMBER] == 0) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
    NotReklama(playerid, params[0]);
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	new str[145];
    format(str,sizeof(str),"[D | %s] %s %s[%d]: %s", PI[playerid][data_GRNAME],name,PI[playerid][data_NAME],playerid,params[0]);
	SendDepMessage(0xFF8282FF,str);
	return SetPlayerChatBubble(playerid, "сообщил нечто в департамент", 0xcd7a7aFF, 20.0, 4000);
}
callback: LoadMembers(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
	new string[1048*2],all;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(!IsPlayerConnected(i)) continue;
        if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
            if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) all++;
            if(PI[i][data_AFK] > 2) format(string,sizeof(string),"%s%s[%d]{FF6347}[AFK](0/3){252525}\t%d\t%s\t%d\n",string,PI[i][data_NAME],i,PI[i][data_RANK], PI[i][data_GRNAME],PI[i][data_NUMBER]);
			else if(PI[i][TWARN] != 0) {
				if(PI[i][data_AFK] > 2) format(string,sizeof(string),"%s%s[%d]{FF6347}[AFK]{FF8000}(%d/3){252525}\t%d\t%s\t%d\n",string,PI[i][data_NAME],i,PI[i][TWARN],PI[i][data_RANK], PI[i][data_GRNAME],PI[i][data_NUMBER]);
				else format(string,sizeof(string),"%s%s[%d]{FF8000}(%d/3){252525}\t%d\t%s\t%d\n",string,PI[i][data_NAME],i,PI[i][TWARN],PI[i][data_RANK], PI[i][data_GRNAME],PI[i][data_NUMBER]);
			}
			else format(string,sizeof(string),"%s%s[%d]{33d267}(0/3){252525}\t%d\t%s\t%d\n",string,PI[i][data_NAME],i,PI[i][data_RANK], PI[i][data_GRNAME],PI[i][data_NUMBER]);
        }
    }
    SendClientMessagef(playerid, 0x3366ccFF, "Участников организации: %d чел, онлайн: %d чел", rows, all);
	new str_1[1048*2];
	format(str_1,sizeof(str_1),"Имя и выговоры\tРанг\tГруппа\tТелефон\n%s",string);
    ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Члены организации онлайн", str_1, "Закрыть", "");
	return 1;
}
CMD:members(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] == 0) return  SendClientMessage(playerid,CG,"Вы не состоите во организации");
	new str_q[144];
	mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `member` = '%d'",PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "LoadMembers", "d", playerid);
	return 1;
}
CMD:allmembers(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_LEADER] == 0) return SendClientMessage(playerid,CG, "Данная команда Вам недоступна");
	new str_q[144];
	mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `member` = '%d'",PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "LoadAllMembers", "d", playerid);
	return 1;
}
cmd:setmember(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /setmember [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	SetPVarInt(playerid,"gLeader", params[0]);
	ShowPlayerDialog(playerid, dialog_TEMPMEMBER, DIALOG_STYLE_LIST, "{f00e5d}Выберете организацию", "1. Правительство\n2. Войсковая часть\n3. МО МВД\n4. БЦРБ\n5. Скинхеды\n6. Гопота\n7. Кавказцы", "Выбрать", "Отмена");
	return 1;
}
CMD:leaders(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new string[256], string1[256], bugfix;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		new ltext[17];
		if(PI[i][data_LEADER] != 0) {
			switch(PI[i][data_LEADER]) {
				case 1: ltext = "Правительство";
				case 2: ltext = "Войсковая часть";
				case 3: ltext = "МО МВД";
				case 4: ltext = "БЦРБ";
				case 5: ltext = "Скинхеды";
				case 6: ltext = "Гопота";
				case 7: ltext = "Кавказцы";
			}
			format(string,sizeof(string),"%s{252525}%s\t%s[%d]\t%d\n",string,ltext,PI[i][data_NAME],i,PI[i][data_NUMBER]);
			format(string1, sizeof(string1), "Организация\tИмя\t\tТелефон\n%s", string);
			bugfix = 1;
		}
	}
	if(bugfix == 0) ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Лидеры онлайн", "В данный момент лидеров на сервере нет", "Закрыть", "");
	else ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Лидеры онлайн", string1, "Закрыть", "");
	return 1;
}
CMD:id(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid,CG,"Используйте: /id [имя]");
    new count,ggwp;
	if(ggwp == 10) return 1;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(!IsPlayerConnected(i)) continue;
        if(strfind(PI[i][data_NAME], params[0], true) != -1) {
        	SendClientMessagef(playerid, -1, "%s[%d]",PI[i][data_NAME], i);
        	count++;
			ggwp++;
			if(ggwp == 10) return SendClientMessage(playerid, 0xFFCC00FF, "Первые 10 игроков с похожим ником");
        }
    }
    if(count == 0) return SendClientMessage(playerid, CG, "Игроков с похожим ником нет на сервере");
    return 1;
}
CMD:addbusiness(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	ShowPlayerDialog(playerid, dialog_ADD_BUSINESS, DIALOG_STYLE_LIST, "{f00e5d}Добавление бизнеса", "1. Магазин 24/7\n2. Заправка\n3. Магазин одежды\n4. Закусочная\n5. Автосалон", "Выбрать", "Отмена");
	return 1;
}
CMD:addkv(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	ShowPlayerDialog(playerid,dialog_ADD_KV,DIALOG_STYLE_MSGBOX,"{f00e5d}Добавление подъезда","Вы желаете добавить подъезд?","Да","Отмена");
	return 1;
}
CMD:tpc(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	if(GetPVarInt(playerid, "addkv") == 0 && GetPVarInt(playerid, "addhouse") == 0) return SendClientMessage(playerid,CG,"Вы не начали добавлять подъезд");
	new Float:x, Float:y, Float:z, Float:a;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerFacingAngle(playerid, a);
  	SetPVarFloat(playerid,"aCarX",x);
  	SetPVarFloat(playerid,"aCarY",y);
  	SetPVarFloat(playerid,"aCarZ",z);
  	SetPVarFloat(playerid,"aCarAngle",a);
  	SendClientMessage(playerid,-1, "Встаньте на место, где будет находиться подъезд и введите (/tpkv) или же если создаёте дом (/tph)");
	return 1;
}
cmd:free(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] == 1 && PI[playerid][data_RANK] == 4) {
    	if(sscanf(params, "u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /free [ID игрока]");
    	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
		if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Вы находитесь далеко от данного игрока");
		if(PI[params[0]][data_JAIL] == 0) return SendClientMessage(playerid,CG,"Данный игрок не находится в тюрьме");
		switch(PI[params[0]][data_JAILTIME]) {
			case 0..600: SetPVarInt(params[0],"free_money",1000);
			case 601..1200: SetPVarInt(params[0],"free_money",2500);
			case 1201..1800: SetPVarInt(params[0],"free_money",5000);
			case 1801..3600: SetPVarInt(params[0],"free_money",10000);
		}
		SendProposition(playerid, params[0], PROPOSITION_TYPE_FREE,GetPVarInt(params[0],"free_money"));
    }
    else SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
	return 1;
}
CMD:licsell(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] == 1 && PI[playerid][data_RANK] == 3) {
		if(sscanf(params, "ud", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /licsell [ID игрока] [1 - водительские права, 2 - лицензия на оружие]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
		if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
		if(params[1] < 1 || params[1] > 2) return SendClientMessage(playerid, CG, "Используйте: /licsell [ID игрока] [1 - водительские права, 2 - лицензия на оружие]");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
		if(params[1] == 1) {
			if(PI[params[0]][data_LICB] == 1) return SendClientMessage(playerid, CG, "У игрока уже есть водительские права");
			SendProposition(playerid, params[0], PROPOSITION_TYPE_LIC2);
		}
		else {
		    if(PI[params[0]][data_LICG] == 1) return SendClientMessage(playerid, CG, "У игрока уже есть лицензия на оружие");
		    SendProposition(playerid, params[0], PROPOSITION_TYPE_LIC1);
		}
	}
	else SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
	return 1;
}
CMD:tpbizz(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED]== false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(GetPVarInt(playerid, "ADDBIZZ") != 1) return SendClientMessage(playerid,CG,"Вы не начали добавлять бизнес");
   	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPVarFloat(playerid,"aEnterX",x);
	SetPVarFloat(playerid,"aEnterY",y);
	SetPVarFloat(playerid,"aEnterZ",z);
	new Float:Angle;
	GetPlayerFacingAngle(playerid, Angle);
	SetPVarFloat(playerid, "BizzAngle", Angle);
	return add_business(playerid,TotalBusiness);
}
CMD:tpkv(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED]== false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	if(GetPVarInt(playerid, "addkv") == 0) return SendClientMessage(playerid,CG,"Вы не начали добавлять подъезд");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetPVarFloat(playerid,"aEnterX",x);
	SetPVarFloat(playerid,"aEnterY",y);
	SetPVarFloat(playerid,"aEnterZ",z);
	return addkv(playerid);
}
CMD:home(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
	if(PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) ShowPlayerDialog(playerid, dialog_HOUSE, DIALOG_STYLE_LIST, "{f00e5d}Дом", "Информация\nОткрыть/закрыть дом\nПродать дом", "Выбрать", "Отмена");
	else ShowPlayerDialog(playerid, dialog_KV, DIALOG_STYLE_LIST, "{f00e5d}Квартира", "Информация\nОткрыть/закрыть квартиру\nПродать квартиру", "Выбрать", "Отмена");
	return 1;
}
CMD:buybusiness(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, COLOR_BLACK, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
    for(new b = 0; b < TotalBusiness; b++) {
        if(PlayerToPoint(3.0, playerid, BUSINESS_DATA[b][data_ENTERX], BUSINESS_DATA[b][data_ENTERY], BUSINESS_DATA[b][data_ENTERZ])) {
            if(PI[playerid][data_JB] != INVALID_JB_ID || PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID || PI[playerid][data_AB] != INVALID_AB_ID) return SendClientMessage(playerid,CG,"У Вас уже есть бизнес");
            if(BUSINESS_DATA[b][data_OWNED] == 1) return SendClientMessage(playerid,CG,"Данный бизнес уже куплен");
			if(get_player_money(playerid) < BUSINESS_DATA[b][data_PRICE]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
			PI[playerid][data_BUSINESS] = b;
			new logtext[64];
			format(logtext,sizeof(logtext),"купил бизнес ID:%d", BUSINESS_DATA[b][data_ID]);
			AddLog("log_player",PI[playerid][data_NAME], logtext);
			BUSINESS_DATA[b][data_BANK] = 0;
			BUSINESS_DATA[b][data_PROD] = 0;
            BUSINESS_DATA[b][data_OWNED] = 1;
            BUSINESS_DATA[b][data_DAY] = 3;
            strmid(BUSINESS_DATA[b][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), 24);
            give_player_money(playerid,-BUSINESS_DATA[b][data_PRICE],"#76",21491);
            SendClientMessage(playerid,0x276e6cFF, "Поздравляем! Вы купили бизнес. Не забудьте оплатить его в банке.");
            SendClientMessage(playerid,0x276e6cFF, "Неоплаченное имущество будет опечатано и продано государству в течение {f2e3cf}2-4 дей.");
	    	ShowPlayerDialog(playerid, 1592, DIALOG_STYLE_MSGBOX, "{933145}Покупка бизнеса", "Для управления бизнесом используйте команду {1f4f81}/business{252525}.\n\
			Оплатите бизнес в банке {1f4f81}(/gps 1 8 и /gps 7){252525} или Мобильном банке {1f4f81}(клавиша P){252525}\n\
			Не забывайте вовремя платить за него, в противном случае он будет опечатан!\n\
			Если в бизнесе не будет продуктов в течение 5-7 дней, он будет опечатан.", "Выбрать", "Отмена");
            UpdateBusinessData(b);
            SaveBusinessData(b);
           	SavePlayerData(playerid);
           	break;
        }
    }
    for(new p = 0; p < TotalJB; p++) {
        if(PlayerToPoint(3.0, playerid, JB_DATA[p][data_INFO_POS][0], JB_DATA[p][data_INFO_POS][1], JB_DATA[p][data_INFO_POS][2])) {
            if(PI[playerid][data_JB] != INVALID_JB_ID || PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID || PI[playerid][data_AB] != INVALID_AB_ID) return SendClientMessage(playerid,CG,"У Вас уже есть бизнес");
            if(JB_DATA[p][data_OWNED] == 1) return SendClientMessage(playerid,CG,"У данного предприятия уже есть владелец");
			if(get_player_money(playerid) < JB_DATA[p][data_PRICE]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
            PI[playerid][data_JB] = p;
            JB_DATA[p][data_OWNED] = 1;
            JB_DATA[p][data_BANK] = 0;
            JB_DATA[p][data_SKLAD] = 0;
            strmid(JB_DATA[p][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
            give_player_money(playerid,-JB_DATA[p][data_PRICE],"#74",21514);
            SendClientMessage(playerid,0x143b3bFF, "Поздравляем! Вы купили бизнес. Не забудьте оплатить его в банке.");
            SendClientMessage(playerid,0x143b3bFF, "Неоплаченное имущество будет опечатано и продано государству в течение {f2e3cf}2-4 дей.");
	    	ShowPlayerDialog(playerid, 1592, DIALOG_STYLE_MSGBOX, "{933145}Покупка бизнеса", "{252525}Для управления бизнесом используйте команду {1f4f81}/business{252525}.\n\
			Оплатите бизнес в банке {1f4f81}(/gps 1 8 и /gps 7){252525} или Мобильном банке {1f4f81}(клавиша P){252525}\n\
			Не забывайте вовремя платить за него, в противном случае он будет опечатан!\n\
			Если в бизнесе не будет продуктов в течение 5-7 дней, он будет опечатан.", "Выбрать", "Отмена");
            new logtext[64];
			format(logtext,sizeof(logtext),"купил предприятие ID:%d", JB_DATA[p][data_ID]);
			AddLog("log_player",PI[playerid][data_NAME], logtext);
            UpdateJBData(p);
            SaveJBData(p);
           	return SavePlayerData(playerid);
        }
    }
    for(new p = 0; p < TotalAB; p++) {
        if(PlayerToPoint(3.0, playerid, AB_DATA[p][data_INFO_POS][0], AB_DATA[p][data_INFO_POS][1], AB_DATA[p][data_INFO_POS][2])) {
            if(PI[playerid][data_JB] != INVALID_JB_ID || PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID || PI[playerid][data_AB] != INVALID_AB_ID) return SendClientMessage(playerid,CG,"У Вас уже есть бизнес");
            if(AB_DATA[p][data_OWNED] == 1) return SendClientMessage(playerid,CG,"У данной автобазы уже есть владелец");
			if(get_player_money(playerid) < AB_DATA[p][data_PRICE]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
            PI[playerid][data_AB] = p;
            AB_DATA[p][data_OWNED] = 1;
            AB_DATA[p][data_BANK] = 0;
            strmid(AB_DATA[p][data_OWNER], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
            give_player_money(playerid,-AB_DATA[p][data_PRICE],"#75",21538);
            new logtext[64];
			format(logtext,sizeof(logtext),"купил автобазу ID:%d", AB_DATA[p][data_ID]);
			AddLog("log_player",PI[playerid][data_NAME], logtext);
            SendClientMessage(playerid,0x143b3bFF, "Поздравляем! Вы купили бизнес. Не забудьте оплатить его в банке.");
            SendClientMessage(playerid,0x143b3bFF, "Неоплаченное имущество будет опечатано и продано государству в течение {f2e3cf}2-4 дей.");
	    	ShowPlayerDialog(playerid, 1592, DIALOG_STYLE_MSGBOX, "{933145}Покупка бизнеса", "Для управления бизнесом используйте команду {1f4f81}/business{252525}.\n\
			Оплатите бизнес в банке {1f4f81}(/gps 1 8 и /gps 7){252525} или Мобильном банке {1f4f81}(клавиша P){252525}\n\
			Не забывайте вовремя платить за него, в противном случае он будет опечатан!\n\
			Если в бизнесе не будет продуктов в течение 5-7 дней, он будет опечатан.", "Выбрать", "Отмена");
            UpdateABData(p);
            SaveABData(p);
           	return SavePlayerData(playerid);
        }
    }
    return 1;
}
CMD:buykv(playerid)
{
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
	antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, COLOR_BLACK, "Для преобретения имущества Вы должны иметь как минимум 2 уровень");
	for(new k = 0; k < TotalKV; k++)
    {
        new kv = GetPlayerVirtualWorld(playerid)-1;
        if(kv == -1) break;
        if(PlayerToPoint(3.0, playerid, KV_DATA[kv][data_ENTER_POSX][k], KV_DATA[kv][data_ENTER_POSY][k], KV_DATA[kv][data_ENTER_POSZ][k]))
        {
            if(PI[playerid][data_KV] != INVALID_KV_ID || PI[playerid][data_HOUSE] != INVALID_HOUSE_ID) return SendClientMessage(playerid,CG,"У Вас уже есть недвижимость");
            if(KV_DATA[kv][data_OWNED][k] == 1) return SendClientMessage(playerid,CG,"У данной квартиры уже есть владелец");
			if(get_player_money(playerid) < KV_DATA[kv][data_PRICE][k]) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
			PI[playerid][data_PADIK] = kv;
			PI[playerid][data_KV] = k;
            KV_DATA[kv][data_OWNED][k] = 1;
            KV_DATA[kv][data_DAY][k] = 3;
            switch(k)
			{
				case 0: strmid(KV_DATA[kv][data_OWNER_1], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 1: strmid(KV_DATA[kv][data_OWNER_2], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 2: strmid(KV_DATA[kv][data_OWNER_3], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 3: strmid(KV_DATA[kv][data_OWNER_4], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 4: strmid(KV_DATA[kv][data_OWNER_5], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
				case 5: strmid(KV_DATA[kv][data_OWNER_6], PI[playerid][data_NAME], 0, strlen(PI[playerid][data_NAME]), MAX_PLAYER_NAME);
			}
            give_player_money(playerid,-KV_DATA[kv][data_PRICE][k],"#72",21583);
			SendClientMessage(playerid, 0x185557FF, "Поздравляем! Вы купили дом");
			ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка жилья", "Для управления недвижимостью используйте команду /home\nОплата дома производится в банке (/gps 1 5). Не забудьте\nвовремя платить за него, в противном случае он будет опечатан!", "Закрыть", "");
            new logtext[64];
			format(logtext,sizeof(logtext),"купил квартиру №%d, подъезд ID:%d", k+1, KV_DATA[kv][data_ID]);
			AddLog("log_player",PI[playerid][data_NAME], logtext);
            SaveKVData(kv);
           	SavePlayerData(playerid);
			UpdateKVData(kv, k);
           	return true;
        }
    }
    return true;
}
CMD:business(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_BUSINESS] == INVALID_BUSINESS_ID && PI[playerid][data_JB] == INVALID_JB_ID && PI[playerid][data_AB] == INVALID_AB_ID) return SendClientMessage(playerid,CG,"У Вас нет бизнеса");
	new str_3[365];
	if(PI[playerid][data_JB] != INVALID_BUSINESS_ID) {
	    new b = PI[playerid][data_JB];
	    format(str_3 ,sizeof(str_3), "Информация\nУправление автопарком\nИзменить зарплату рабочих ({66FF66}%d рублей{252525})\nИзменить зарплату водителей ({66FF66}%d рублей{252525})\nИзменить стоимость экспорта ресурсов\nСнять деньги со счета\nПоложить деньги на счет\n{FF0033}Продать предприятие государству",JB_DATA[b][data_JOB_MONEY], JB_DATA[b][data_BUS_MONEY]);
	    ShowPlayerDialog(playerid, dialog_JB, DIALOG_STYLE_LIST, "{f00e5d}Управление бизнесом", str_3, "Выбрать", "Отмена");
	}
	else if(PI[playerid][data_AB] != INVALID_AB_ID) {
	    new b = PI[playerid][data_AB];
	    format(str_3 ,sizeof(str_3), "Информация\nУправление автопарком\nИзменить процент зарплаты водителей ({66FF66}%d процентов{252525})\nСнять деньги со счета\nПоложить деньги на счет\n{FF0033}Продать автобазу государству",AB_DATA[b][data_PROCENT]);
	    ShowPlayerDialog(playerid, dialog_AB, DIALOG_STYLE_LIST, "{f00e5d}Управление бизнесом", str_3, "Выбрать", "Отмена");
	}
	else if(PI[playerid][data_BUSINESS] != INVALID_BUSINESS_ID) return Business_Panel(playerid);
	return 1;
}
CMD:dhelp(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_START_JOB] != 6 && PI[playerid][data_START_JOB] != 7) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
    return ShowPlayerDialog(playerid, dialog_DHELP, DIALOG_STYLE_LIST, "{f00e5d}Помощь дальнобойщика", "Информация\nМониторинг\nКоманды\nНавык\nGPS", "Выбрать", "Отмена");
}
CMD:healme(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_HEALPACK] == 0) return SendClientMessage(playerid, CG, "У Вас нет медицинской аптечки");
    if(GetPVarInt(playerid, "Sleep") == 1) return SendClientMessage(playerid, CG, "Команда недоступна в данный момент");
	if(GetPVarInt(playerid,"kdhealcapt") > gettime()) return SendClientMessagef(playerid, CG, "Вы получили урон в бою, использовать аптечку можно будет через %d сек", GetPVarInt(playerid,"kdhealcapt")-gettime());
	if(GetPVarInt(playerid,"healmekd") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 3 секунд");
	new Float:hp,string[145];
	GetPlayerHealth(playerid, hp);
	if(PI[playerid][data_VIP] == 0) {
		if(hp >= 100) return SendClientMessage(playerid, CG, "Вы не нуждаетесь в лечении");
	}
	else if(hp >= 176) return SendClientMessage(playerid, CG, "Вы не нуждаетесь в лечении");
	if(hp+30 > 176) SetPlayerHealthAC(playerid, 176);
	else SetPlayerHealthAC(playerid, hp+30);
	SetPVarInt(playerid,"healmekd",gettime() + 3);
	cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Использована аптечка"), CEFSTR("487f5f"), CEFSTR("+30 HP"));
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
    PI[playerid][data_HEALPACK] -= 1;
	SetPlayerChatBubble(playerid, "+30 HP", 0x008000FF, 20.0, 4000);
    format(string, sizeof(string), "%s использовал аптечку",PI[playerid][data_NAME]);
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	return SetPlayerChatBubble(playerid, "использовал аптечку", 0xFF99CCFF, 20.0, 4000);
}
CMD:mask(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MASK] == 0) return SendClientMessage(playerid, CG, "У Вас нет маски");
    if(PI[playerid][data_MASK_M] != 0) return SendClientMessage(playerid, CG, "Вы уже надели маску");
    if(GetPVarInt(playerid, "Sleep") == 1) return SendClientMessage(playerid, CG, "Команда недоступна в данный момент");
	if(gangwar != 0) {
		if(PI[playerid][data_MEMBER] != Command[0] && PI[playerid][data_MEMBER] != Command[1]) {
			return SendClientMessage(playerid, CG, "В момент захвата территории нельзя использовать маску");
		}
	}
	new string[145];
    PI[playerid][data_MASK]--;
    PI[playerid][data_MASK_M] = 1;
	foreach(new i:Player) SetPlayerColor(playerid, 0x33333300);
    format(string, sizeof(string), "%s натянул маску на лицо",PI[playerid][data_NAME]);
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubble(playerid, "натянул маску на лицо", 0xFF99CCFF, 20.0, 4000);
	SendClientMessage(playerid, COLOR_BLACK, "Вы надели маску. Теперь Вас не будет видно на мини-карте");
	SendClientMessage(playerid, COLOR_BLACK, "Чтобы снять маску используйте {EF4836}/maskoff");
	cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Маска надета"));
	if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid), ApplyAnimation(playerid, !"SHOP", !"ROB_SHIFTY", 4.1, 0, 0, 0, 0, 0, 1);
	return 1;
}
CMD:maskoff(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MASK_M] == 0) return SendClientMessage(playerid, CG, "На Вас нет маски");
	new string[145];
   	SetPlayerColorEx(playerid);
   	PI[playerid][data_MASK_M] = 0;
    format(string, sizeof(string), "%s снял маску",PI[playerid][data_NAME]);
	ProxDetector(30.0, playerid, string, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
	SetPlayerChatBubble(playerid, "Cнял маску", CG, 20.0, 4000);
	return cef_emit_event(playerid, "show-center-notify", CEFINT(1), CEFSTR("Маска снята"));
}
CMD:heal(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] != 4) return SendClientMessage(playerid, CG, "Данная команда для Вас недоступна");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используйте: /heal [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Вы не можете вылечить себя");
	if(PI[params[0]][data_MONEY] == 750) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_HEAL);
}
CMD:call(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SendClientMessage(playerid,CG,"У Вас нет SIM карты");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CG, "Используйте: /call [номер]");
    if(PI[playerid][data_NUMBER] == params[0]) return SendClientMessage(playerid,CG,"Нельзя позвонить самому себе");
    if(params[0] == 102) {
        if(PI[playerid][data_911_1] > 0) return SendClientMessage(playerid, CG, "Нельзя вызывать полицию слишком часто");
        new string[144];
	    format(string, sizeof(string), "%s достал bPhone XX из кармана",PI[playerid][data_NAME]);
		ProxDetector(30.0, playerid, string, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
		return ShowPlayerDialog(playerid, dialog_911_1, DIALOG_STYLE_INPUT, "{f00e5d}Вызов полиции", "Вы позвонили на гарячую линию вызова полции.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
    }
    if(params[0] == 103) {
        if(PI[playerid][data_911_2] > 0) return SendClientMessage(playerid, CG, "Нельзя вызывать скорую помощь слишком часто");
        new string[144];
	    format(string, sizeof(string), "%s достал bPhone XX из кармана",PI[playerid][data_NAME]);
		ProxDetector(30.0, playerid, string, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
		return ShowPlayerDialog(playerid, dialog_911_2, DIALOG_STYLE_INPUT, "{f00e5d}Вызов скорой помощи", "Вы позвонили на гарячую линию вызова скорой помощи.\nПожалуйста, оставайтесь на месте и опишите Ваше местоположение:", "Вызов", "Отмена");
    }
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_NUMBER] == params[0]) {
   			if(PI[playerid][data_NUMBER_M] <= 0) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на телефоне");
      		if(PI[i][data_CALL] != -1) return SendClientMessage(playerid,CG,"Данный игрок разговаривает по телефону");
			PI[playerid][data_CALL] = i;
			new stringtext[144];
	    	format(stringtext, sizeof(stringtext), "%s достал bPhone XX из кармана",PI[playerid][data_NAME]);
			ProxDetector(30.0, playerid, stringtext, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
    		new string[144];
			format(string,sizeof(string),"[Входящий вызов] т. %d. Ожидание ответа...", PI[playerid][data_NUMBER]);
			SendClientMessage(i, 0x42d272FF,string);
			SendClientMessage(i, -1, "Введите {42d272}/p {FFFFFF}чтобы ответить или {FF6347}/h {FFFFFF}чтобы отклонить вызов");
      		PlayerPlaySound(i, 20600, 0.0, 0.0, 0.0);
      		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
      		SendClientMessage(playerid,0x42d272FF,"[Исходящий вызов] Ожидание ответа абонента...");
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
  		}
	}
	return SendClientMessage(playerid,CG,"Аппарат абонента выключен или находится вне зоны действия сети");
}
CMD:p(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SendClientMessage(playerid,CG,"В Вашем телефоне нет SIM-карты");
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
	    if(PI[i][data_CALL] == playerid) {
    		PI[playerid][data_CALL] = i;
    		SetPVarInt(i,"call_m", 1);
    		new string[144];
			format(string,sizeof(string),"Вы приняли вызов от %s", PI[i][data_NAME]);
			SendClientMessage(playerid, 0xFF99CCFF,string);
    		new string1[144];
			format(string1,sizeof(string1),"%s принял Ваш вызов", PI[playerid][data_NAME]);
			SendClientMessage(playerid, 0xFF99CCFF,string1);
    		new stringadm[144];
			format(stringadm,sizeof(stringadm),"[CALL] %s[%d] > %s[%d]: {42d272}звонок начался", PI[i][data_NAME], i, PI[playerid][data_NAME], playerid);
			SendAdminMessage(CY,stringadm);
			if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			return 1;
		}
	}
	return SendClientMessage(playerid,CG,"У Вас нет входящих вызовов");
}
CMD:h(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SendClientMessage(playerid,CG,"В Вашем телефоне нет SIM-карты");
	if(PI[playerid][data_CALL] == -1) return SendClientMessage(playerid,CG,"В данный момент Вы не разговариваете по телефону");
	new id = PI[playerid][data_CALL];
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	if(PI[id][data_CALL] == playerid) {
    	if(!IsPlayerInAnyVehicle(id)) SetPlayerSpecialAction(id, SPECIAL_ACTION_STOPUSECELLPHONE);
 	}
	SendClientMessage(playerid,CG,"Вы завершили звонок");
	new string1[144];
	format(string1,sizeof(string1),"%s завершил звонок", PI[id][data_NAME]);
	SendClientMessage(id, CG,string1);
	new stringadm[144];
	format(stringadm,sizeof(stringadm),"[CALL] %s[%d] > %s[%d]: {FF6347}звонок завершился", PI[id][data_NAME], id, PI[playerid][data_NAME], playerid);
	SendAdminMessage(CY, stringadm);
	PI[id][data_CALL] = -1;
 	PI[playerid][data_CALL] = -1;
	SetPVarInt(id,"call_m",0);
	return SetPVarInt(playerid,"call_m",0);
}
CMD:sms(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(sscanf(params, "ds[84]", params[0],params[1])) return SendClientMessage(playerid, CG, "Используйте: /sms [номер] [текст]");
    if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У Вас нет телефона");
	if(PI[playerid][data_NUMBER] == 0) return SendClientMessage(playerid,CG,"У Вас нет SIM карты");
    if(PI[playerid][data_NUMBER] == params[0]) return SendClientMessage(playerid,CG,"Нельзя отправить SMS самому себе");
    if(PI[playerid][data_VIP] < 1) if(PI[playerid][data_NUMBER_M] != 100) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на счёт телефона");
    else if(PI[playerid][data_NUMBER_M] != 50) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на счёт телефона");
	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_NUMBER] == params[0]) {
   			if(PI[playerid][data_NUMBER_M] <= 0) return SendClientMessage(playerid,CG,"На Вашем счете недостаточно средств");
			new str_1[256];
			format(str_1,sizeof(str_1),"[SMS | т. %d] %s: %s",PI[playerid][data_NUMBER], PI[playerid][data_NAME], params[1]);
			SendClientMessage(i,CY,str_1);
			new str_3[256];
			format(str_3,sizeof(str_3),"[SMS | т. %d] %s: %s",params[0], PI[i][data_NAME],params[1]);
			SendClientMessage(playerid,CY,str_3);
			new str_4[256];
			format(str_4,sizeof(str_4),"[SMS] %s[%d] > %s[%d]: %s", PI[playerid][data_NAME],playerid, PI[i][data_NAME],i, params[1]);
			SendClientMessage(playerid,CY,str_4);
			PI[playerid][data_NUMBER_M]--;
			return PlayerPlaySound(i, 40407, 0.0, 0.0, 0.0);
  		}
	}
	return SendClientMessage(playerid,CG,"Аппарат абонента выключен или находится вне зоны действия сети");
}
CMD:fuel(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_KANISTRA] == 0) return SendClientMessage(playerid, CG, "У Вас нет канистры. Купить ее можно на любом АЗС области");
	new carid = GetPlayerVehicleID(playerid);
	if(carid == INVALID_VEHICLE_ID) return SendClientMessage(playerid, CG, "Нужно находиться в автомобиле");
	if(CAR_DATA[carid][data_FUEL] == 50) return SendClientMessage(playerid, CG, "Бак автомобиля полон");
	if(CAR_DATA[carid][data_FUEL] < 50 && CAR_DATA[carid][data_FUEL] >= 40) CAR_DATA[carid][data_FUEL] = 50;
	else CAR_DATA[carid][data_FUEL] += 10;
	SendClientMessage(playerid, 0x66CC00FF, "Вы заправили свой автомобиль");
	return PI[playerid][data_KANISTRA] = 0;
}
CMD:buyprod(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED]== false) return 1;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
    if(PI[playerid][data_START_JOB] == 8) {
	    new car = GetPlayerVehicleID(playerid);
        if(PlayerToPoint(100.0, playerid, 2395.3770,-987.5811,2.1261) && IsPlayerInAnyVehicle(playerid)) {
            if(CAR_DATA[car][data_GRUZ] != 0) return SendClientMessage(playerid, CG, "Вы уже загрузили свою машину товаром, чтобы выгрузить товар и забрать деньги введите: /unload");
            ShowPlayerDialog(playerid, dialog_BUYPROD, DIALOG_STYLE_LIST, "{f00e5d}Выберите товар", "Продукты\nТопливо\nБрендовая одежда\nОружие и патроны\nЕда и напитки", "Выбрать", "Отмена");
		}
		else SendClientMessage(playerid, CG, "Нужно находиться возле склада");
	}
	else SendClientMessage(playerid, CG, "Данная функция Вам недоступна");
	return 1;
}
CMD:prodmenu(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_START_JOB] != 8) return 1;
    return ShowPlayerDialog(playerid, dialog_PRODMENU, DIALOG_STYLE_LIST, "{f00e5d}Развозчик продуктов", "Мониторинг\nИнформация о грузе\nGPS", "Выбрать", "Отмена");
}
CMD:buyfuel(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    for(new b = 0; b < TotalBusiness; b++) {
        if(PlayerToPoint(10.0, playerid, BUSINESS_DATA[b][data_BUYX],BUSINESS_DATA[b][data_BUYY], BUSINESS_DATA[b][data_BUYZ])) {
            if(BUSINESS_DATA[b][data_TYPE] == 1) {
			    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
				    ShowPlayerDialog(playerid, dialog_BUYFUEL, DIALOG_STYLE_LIST, "{f00e5d}АЗС", "Бензин\nКанистра (10 л)\nЗапчасти", "Купить", "Отмена");
				    return SetPVarInt(playerid, "business",b);
				}
			}
		}
	}
	return 1;
}
CMD:sellcar(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new str_1[256];
	for(new c = 0; c < 2; c++) {
	    if(PI[playerid][data_CAR][c] == 0) format(str_1,sizeof(str_1),"%s{252525}[%d] пустой слот\n",str_1, c+1);
		else format(str_1,sizeof(str_1),"%s{252525}[%d] %s\n",str_1, c+1, VehicleNames[PI[playerid][data_CAR][c]-400]);
	}
	return ShowPlayerDialog(playerid,dialog_SELLCAR, DIALOG_STYLE_LIST, "{f00e5d}Продажа автомобилей", str_1, "Выбрать", "Отмена");
}
CMD:gps(playerid) return ShowPlayerDialog(playerid, dialog_GPS, DIALOG_STYLE_LIST, "{f00e5d}Навигатор", "{e1e187}Информация\n{252525}1. Важные места\n2. Временные работы\n3. Основные работы\n4. Государственные организации\n5. Нелегальные организации\n6. Развлечения\n{44a996}7. Поиск дома\n{44a996}8. Поиск подъезда\n{44a996}9. Поиск бизнеса\n{44a996}10. Поиск ближайшего банкомат", "Выбрать", "Отмена");
CMD:randpaintjob(playerid, params[]) {
    new vehicleid = GetPlayerVehicleID(playerid);
    if(vehicleid == 0) return SendClientMessage(playerid, -1, "Ошибка: Вы не внутри транспортного средства.");
    new num_paintjobs = GetNumberOfPaintjobsForVehicle(GetVehicleModel(vehicleid));
    if(num_paintjobs == 0) return SendClientMessage(playerid, -1, "Ошибка: Для текущего транспортного средства нет доступных раскрасок.");
    new rand_paintjob = random(num_paintjobs);
    ChangeVehiclePaintjob(vehicleid, rand_paintjob);
    return SendClientMessagef(playerid, -1, "Вы сменили раскраску транспорта на %d.", rand_paintjob);
}
CMD:park(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
	if(GetPlayerVehicleID(playerid) != PI[playerid][data_VEH]) return SendClientMessage(playerid,CG, "Для парковки личного транспорта Вы должны находиться в нем");
	if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return 1;
	if(!IsPlayerGreenZone(playerid)) return SendClientMessage(playerid, CG, "Нельзя припарковать личный транспорт в Зеленой Зона");
	SendClientMessage(playerid, 0x0088ffFF, "Транспорт был припаркован, теперь при его доставке он будет появляться здесь");
	new Float:x, Float:y, Float:z, Float:angle;
	GetVehiclePos(PI[playerid][data_VEH], x, y, z);
	GetVehicleZAngle(PI[playerid][data_VEH], angle);
    new string[145];
	new str_q[256];
	str_q = "UPDATE `accounts` SET ";
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposx", x);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposy", y);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposz", z);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpangle", angle);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(string,sizeof(string)," WHERE `name` = '%s' LIMIT 1",PI[playerid][data_NAME]);
	strcat(str_q, string);
	mysql_function_query(dbHandle, str_q, false, "", "");
	PI[playerid][data_CAR_POSX] = x;
	PI[playerid][data_CAR_POSY] = y;
	PI[playerid][data_CAR_POSZ] = z;
	PI[playerid][data_CAR_ANGLE] = angle;
	return 1;
}
CMD:su(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(GetPVarInt(playerid,"sucop") > gettime()) return SendClientMessage(playerid, CG, "Объявить в розыск можно раз в 5 секунд");
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "us[50]", params[0], params[1])) return SendClientMessage(playerid,CG,"Используйте: /su [ID игрока] [причина]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[0] == playerid) return SendClientMessage(playerid,CG,"Нельзя выдать розыск самому себе");
	if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Ваш ранг слишком мал для использования данной команды");
	if(PI[params[0]][data_WANTED] == 6) return SendClientMessage(playerid,CG,"У игрока максимальный уровень розыска");
	if(GetPVarInt(params[0], "Sleep") == 1) return SendClientMessage(playerid, CG, "Игрок спит");
	PI[params[0]][data_WANTED]++;
	SetPlayerWantedLevel(params[0],PI[params[0]][data_WANTED]);
	if(PI[params[0]][data_ZAKON] > 0) PI[params[0]][data_ZAKON]--;
	SetPVarInt(playerid,"sucop",gettime() + 5);
	new str1[145],str2[145];
	format(str1,sizeof(str1),"%s %s[%d] объявил %s[%d] в розыск [%d|6]. Причина: %s.", rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid, PI[params[0]][data_NAME],params[0],PI[params[0]][data_WANTED], params[1]);
	SendFractionMessage(PI[playerid][data_MEMBER],CY,str1);
	format(str2,sizeof(str2),"%s %s[%d] объявил Вас в розыск [%d|6]. Причина: %s", rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,PI[params[0]][data_WANTED], params[1]);
	return SendClientMessage(params[0],0x93baffFF,str2);
}
CMD:aclear(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /aclear [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[params[0]][data_WANTED] == 0) return SendClientMessage(playerid,CG,"У игрока нет розыска");
	PI[params[0]][data_WANTED] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][data_WANTED]);
	new str_1[144];
	format(str_1,sizeof(str_1),"[%s #%d] %s обнулил розыск %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	return SendAdminMessage(0x8fbedb00,str_1);
}
CMD:clear(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(PI[playerid][data_RANK] < 8) return SendClientMessage(playerid,CG,"Снять розыск игрока можно с 8 ранга");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /clear [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[params[0]][data_WANTED] == 0) return SendClientMessage(playerid,CG,"У игрока нет розыска");
	if(!PlayerToPoint(3.0, playerid, 1456.4865,1627.6499,697.1956)) return SendClientMessage(playerid, CG, "Чтобы снять розыск игрока Вы и игрока должны находится в ДЧ");
	if(!PlayerToPoint(3.0, params[0], 1456.4865,1627.6499,697.1956)) return SendClientMessage(playerid, CG, "Чтобы снять розыск игрока Вы и игрока должны находится в ДЧ");
	PI[params[0]][data_WANTED] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][data_WANTED]);
	new str1[145],str2[145];
	format(str1,sizeof(str1),"%s закрыл уголовное дело %s",PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	SendFractionMessage(PI[playerid][data_MEMBER],COLOR_RADIO,str1);
	format(str2,sizeof(str2),"%s закрыл ваше уголовное дело",PI[playerid][data_NAME]);
	return SendClientMessage(params[0],0x0099ccFF,str2);
}
CMD:cuff(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /cuff [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Эта команда доступна для 2+ звания.");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
    if(GetPVarInt(params[0],"PlayerCuffed") == 1) return SendClientMessage(playerid,CG,"Данный игрок уже в наручниках");
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0],5,19418,6,0.020000,0.049999,-0.015000,-11.899997,-13.999941,-103.800086,1.110999,1.042000,1.934998);
	SetPVarInt(params[0],"PlayerCuffed",1);
	FreezePlayer(params[0]);
	SendClientMessagef(playerid, 0x4671acff, "Вы надели наручники на %s", PI[playerid][data_NAME]);
	format(str,sizeof(str),"%s надел наручники на %s",PI[playerid][data_NAME],PI[params[0]][data_NAME]);
 	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:uncuff(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /uncuff [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Ваш ранг слишком мал для использования данной команды");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
    if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SendClientMessage(playerid,CG,"Данный игрок без наручников");
	SetPlayerSpecialAction(params[0], 0);
	RemovePlayerAttachedObject(params[0], 5);
	DeletePVar(params[0],"PlayerCuffed");
	UnfreezePlayer(params[0]);
	new str[145];
	format(str,sizeof(str),"%s снял наручники с %s",PI[playerid][data_NAME],PI[params[0]][data_NAME]);
 	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:incar(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /incar [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Ваш ранг слишком мал для использования данной команды");
    if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SendClientMessage(playerid,CG,"Игрок должен находиться в наручниках");
	if(!IsPlayerInAnyVehicle(playerid)) return  SendClientMessage(playerid,CG,"Вы должны находиться в автомобиле");
	new Float:x,Float:y,Float:z;
	new car = GetPlayerVehicleID(playerid);
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(5.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
    if(car == police_car[0] || car == police_car[1] ||car == police_car[2] ||
	car == police_car[3] || car == police_car[4] || car == police_car[5] || car == police_car[6] ||
	car == police_car[7]) {
	    if(GetFreeSeat(car) == -1) return SendClientMessage(playerid,CG,"В машине нет места");
	    new str[145];
	    PutPlayerInVehicleAC(params[0],car,GetFreeSeat(car));
     	FreezePlayer(params[0]);
	    format(str,sizeof(str),"%s затащил в автомобиль %s",PI[playerid][data_NAME],PI[params[0]][data_NAME]);
	    ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
	}
	else SendClientMessage(playerid,CG,"Данный транспорт не предназначен для перевозки преступников");
	return 1;
}
CMD:uncar(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /uncar [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Ваш ранг слишком мал для использования данной команды");
    if(!IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid,CG,"Игрок должен находиться в транспорте");
	new Float:x,Float:y,Float:z,str[145];
	GetPlayerPos(playerid,x,y,z);
	if(!PlayerToPoint(5.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок слишком далеко от Вас");
 	UnfreezePlayer(params[0]);
 	SetPlayerPosAC(params[0],x+1.0,y,z);
  	format(str,sizeof(str),"%s вытащил из автомобиля %s",PI[playerid][data_NAME],PI[params[0]][data_NAME]);
  	return ProxDetector(30.0, playerid, str,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
}
CMD:arrest(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid,CG,"Используйте: /arrest [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[playerid][data_RANK] < 2 && PI[playerid][data_MEMBER] != 8) return SendClientMessage(playerid,CG,"Ваш ранг слишком мал для использования данной команды");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(3.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Игрок находится слишком далеко");
	if(GetPVarInt(params[0],"PlayerCuffed") == 0) return SendClientMessage(playerid,CG,"Данный игрок должен находиться в наручниках");
	if(PI[params[0]][data_WANTED] == 0) return SendClientMessage(playerid,CG,"Данный игрок не находиться в розыске");
	if(PlayerToPoint(20.0, playerid, -289.9960,-1548.9326,41.1223)) {
	    new str[145];
		PI[params[0]][data_JAIL] = 1;
		format(str,sizeof(str),"[Всем постам] %s %s арестовал подозреваемого %s", rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],PI[params[0]][data_NAME]);
		SendFractionMessage(PI[playerid][data_MEMBER],CY,str);
		give_player_money(playerid,3000*PI[params[0]][data_WANTED],"#78",22079);
		new pay[20];
		format(pay,sizeof(pay),"+%dР",3000*PI[params[0]][data_WANTED]);
		cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Премия за арест преступника"), CEFSTR("418055"), CEFSTR(pay));

	}
	else return SendClientMessage(playerid,CG,"Нужно находиться возле здания МВД");
    PI[params[0]][data_JAILTIME] = 600*PI[params[0]][data_WANTED];
	UnfreezePlayer(params[0]);
	PI[params[0]][data_WANTED] = 0;
	SetPlayerWantedLevel(params[0],PI[params[0]][data_WANTED]);
	SetPlayerToSpawn(params[0]);
	SetPlayerSpecialAction(params[0], 0);
	RemovePlayerAttachedObject(params[0], 5);
	ResetWeaponAll(params[0]);
	return DeletePVar(params[0],"PlayerCuffed");
}
CMD:setmark(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /setmark [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(GetPlayerInterior(params[0]) != 0) return SendClientMessage(playerid,CG,"Игрок находиться в интерьере");
	if(PI[params[0]][data_WANTED] == 0) return SendClientMessage(playerid,CG,"Данный игрок не находиться в розыске");
	if(PI[playerid][data_SETMARK] != 0) return SendClientMessage(playerid, CG, "Данную функцию можно использовать только один раз в минуту");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	SetPVarFloat(playerid, "gps_pos_x", x);
	SetPVarFloat(playerid, "gps_pos_y", y);
	SetPVarFloat(playerid, "gps_pos_z", z);
	DisablePlayerCheckpoint(playerid);
 	SetPlayerCheckpoint(playerid,x,y,z,5.0);
 	SendClientMessage(playerid, 0x6699cc3FF, "Последнее место положение подозреваемого отмечено у Вас на мини-карте");
 	SendClientMessage(playerid, 0x6699cc3FF, "Оно будет автоматически обновляться в течение 30 секунд");
	PI[playerid][data_SETMARK] = 60;
	return 1;
}
CMD:wanted(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
	new bugfix;
	new str_3[712];
	for(new i = 0; i < MAX_PLAYERS; i++) {
 	    if(!IsPlayerConnected(playerid)) continue;
		if(PI[i][data_WANTED] != 0){
		    bugfix = 1;
    		format(str_3,sizeof(str_3),"%s\n{252525}Дело №%d, имя: %s, уровень розыска: %d\n",str_3, i,PI[i][data_NAME],PI[i][data_WANTED]);
    	}
    }
	if(bugfix == 0) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Преступники", "Область чиста, преступники не обнаружены!", "Закрыть", "");
    ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Преступники", str_3, "Закрыть", "");
	return 1;
}
CMD:accept(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используйте: /accept [ID игрока]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(PI[playerid][data_MEMBER] == 3) {
        if(PI[params[0]][data_911_1] != 1) return SendClientMessage(playerid, CG, "Игрок не вызывал полицию");
        SetPVarFloat(playerid, "gps_pos_x", x);
		SetPVarFloat(playerid, "gps_pos_y", y);
		SetPVarFloat(playerid, "gps_pos_z", z);
  		DisablePlayerCheckpoint(playerid);
  		SetPlayerCheckpoint(playerid,x, y, z,5.0);
  		PI[params[0]][data_911_1] = 0;
  		SendClientMessagef(params[0], 0x658bcdFF, "Сотрудник полиции %s[%d] принял Ваш вызов, не покидайте место вызова", PI[playerid][data_NAME], playerid);
	}
	else if(PI[playerid][data_MEMBER] == 4) {
	    if(PI[params[0]][data_911_2] != 1) return SendClientMessage(playerid, CG, "Игрок не вызывал скорую помощь");
        SetPVarFloat(playerid, "gps_pos_x", x);
		SetPVarFloat(playerid, "gps_pos_y", y);
		SetPVarFloat(playerid, "gps_pos_z", z);
  		DisablePlayerCheckpoint(playerid);
  		SetPlayerCheckpoint(playerid,x, y, z,5.0);
  		PI[params[0]][data_911_2] = 0;
  		SendClientMessagef(params[0], 0x658bcdFF, "Сотрудник скорой помощи %s[%d] принял Ваш вызов, не покидайте место вызова", PI[playerid][data_NAME], playerid);
	}
	else SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	return 1;
}
CMD:ginfo(playerid)
{
	if(!IsPlayerOPG(playerid)) return SendClientMessage(playerid, CG, "Вы не состоите в ОПГ");
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
	new str_q[144];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `gangzone` WHERE `gzid` != '101'");
 	mysql_function_query(dbHandle, str_q, true, "GzInfo", "i", playerid);
    return true;
}
CMD:setgz(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 7) return 1;
	new gz = GetPlayerGangZone(playerid);
	if(gz_info[gz][gzid] == 101) return 1;
	if(gz_info[gz][gzid] == 0) return 1;
 	ShowPlayerDialog(playerid, dialog_SETGZ, DIALOG_STYLE_LIST, "{f00e5d}Выберите ОПГ", "1. Скинхеды\n2. Гопота\n3. Кавказцы", "Далее", "Закрыть");
	return 1;
}
cmd:capture(playerid) {
    if(!IsPlayerOPG(playerid))  return SendClientMessage(playerid, CG, "Вы не состоите в ОПГ");
    if(PI[playerid][data_RANK] < 7) return SendClientMessage(playerid, CG, "Данную команду можно использовать с 7-го ранга");
	new gz = GetPlayerGangZone(playerid);
	if(gz == -1) return SendClientMessage(playerid, CG, "Вы не находитесь ни в одной из зон");
    if(GetPVarInt(playerid,"Counting_Capture") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 1 минуту");
    SetPVarInt(playerid,"Counting_Capture",gettime() + 59);
    new hour, minute, second;
    gettime(hour, minute, second);
    if(capturetime == 1) {
		if(hour != 10 && minute != 0 ||
		hour != 11 && minute != 0 ||
		hour != 12 && minute != 0 ||
    	hour != 13 && minute != 0 ||
		hour != 14 && minute != 0 ||
		hour != 15 && minute != 0 ||
		hour != 16 && minute != 0 ||
		hour != 17 && minute != 0 ||
		hour != 18 && minute != 0 ||
		hour != 19 && minute != 0 ||
		hour != 20 && minute != 0 ||
		hour != 21 && minute != 0 ||
		hour != 22 && minute != 0 ||
		hour != 23 && minute != 0 ||
		hour == 00 ||
		hour == 01 ||
		hour == 02 ||
		hour == 03 ||
		hour == 04 ||
		hour == 05 ||
		hour == 06 ||
		hour == 07 ||
		hour == 08 ||
		hour == 09) return SendClientMessage(playerid, CG, "Захват территорий для вашей ОПГ доступен в 10:00, 11:00, 12:00, 13:00, 14:00, 15:00, 16:00, 17:00, 18:00, 20:00, 21:00, 22:00, 23:00");
	}
	if(gangwar == 1) return SendClientMessage(playerid, CG, "В данный момент уже идет война за территорию");
    if(gz_info[gz][gzopg] == PI[playerid][data_MEMBER]) return SendClientMessage(playerid, CG, "Вы не можете захватить свою территорию");
	switch(gz_info[gz][gzopg]) {
	    case 5: if(m_skinhead > 1) return SendClientMessage(playerid, CG, "В данной ОПГ замороженны захваты территорий");
		case 6: if(m_gopota > 1) return SendClientMessage(playerid, CG, "В данной ОПГ замороженны захваты территорий");
		case 7: if(m_kavkaz > 1) return SendClientMessage(playerid, CG, "В данной ОПГ замороженны захваты территорий");
	}
	switch(PI[playerid][data_MEMBER]) {
	    case 5: if(m_skinhead > 1) return SendClientMessage(playerid, CG, "В Вашей ОПГ замороженны захваты территорий");
		case 6: if(m_gopota > 1) return SendClientMessage(playerid, CG, "В Вашей ОПГ замороженны захваты территорий");
		case 7: if(m_kavkaz > 1) return SendClientMessage(playerid, CG, "В Вашей ОПГ замороженны захваты территорий");
	}
    if(gz_info[gz][gzid] == 101) return 1;
    new warname[15];
	if(gz_info[gz][gzopg] == 5) warname = "'Скинхеды'";
	if(gz_info[gz][gzopg] == 6) warname = "'Гопота'";
	if(gz_info[gz][gzopg] == 7) warname = "'Кавказцы'";
	PI[playerid][data_CAPTURECMD]++;
    SavePlayerData(playerid);
	WarTimeMin = 10;
	WarTimeSec = 01;
	WarTimeMin = 1;
	WarTimeSec = 01;
	WarTimeMin = 10;
	WarTimeSec = 01;
	CommandKill[0]= 0;
	CommandKill[1]= 0;
	WarZone = gz;
	Command[0] = PI[playerid][data_MEMBER];
	Command[1] = gz_info[gz][gzopg];
    gangwar = 1;
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	new str[145];
	switch(PI[playerid][data_MEMBER]) {
     	case 5:format(str,sizeof(str),"%s {3377CC}%s[%d] {3377CC}(%s){FFFF00} инициировал захват территории {3377CC}(%s)", name, PI[playerid][data_NAME], playerid, Fraction_Name[PI[playerid][data_MEMBER]], warname);
   		case 6:format(str,sizeof(str),"%s {3377CC}%s[%d] {3377CC}(%s){FFFF00} инициировал захват территории {3377CC}(%s)", name, PI[playerid][data_NAME], playerid, Fraction_Name[PI[playerid][data_MEMBER]], warname);
	    case 7:format(str,sizeof(str),"%s {3377CC}%s[%d] {3377CC}(%s){FFFF00} инициировал захват территории {3377CC}(%s)", name, PI[playerid][data_NAME], playerid, Fraction_Name[PI[playerid][data_MEMBER]], warname);
	}
    static name_org[15], nameorg[15];
    switch(Command[0]) {
        case 5: name_org = "Скинхеды";
        case 6: name_org = "Гопота";
        case 7: name_org = "Кавказцы";
    }
    switch(Command[1]) {
        case 5: nameorg = "Скинхеды";
        case 6: nameorg = "Гопота";
        case 7: nameorg = "Кавказцы";
    }
	SendClientMessage(playerid, CY, "За инициацию захвата территории Вы получите вознаграждение в PayDay");
	foreach(new i:Player) {
	    if(IsPlayerOPG(i)) {
			if(PI[i][data_MEMBER] == Command[0]) {
				SendClientMessage(i, CY, str);
				SendClientMessage(i, CY, "Территория отмечена у Вас на мини-карте красным (мигающим) прямоугольником");
				SendClientMessage(i, CY, "Место стрельбы отмечено у Вас на мини-карте красным (не мигающим!) прямоугольником в южной части карты");
				SendClientMessage(i, CY, "Используйте команду {3377CC}/cteam{FFFF00}, чтобы посмотреть список участников своей ОПГ на территории стрелы");
				cef_emit_event(i, "show-capture");
				cef_emit_event(i, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
				cef_emit_event(i, "capture-text", CEFSTR("подготовка"));
				cef_emit_event(i, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
				cef_emit_event(i, "show_kill_list");
				GangZoneFlashForPlayer(i, gz, 0xFF000055);
			}
			if(PI[i][data_MEMBER] == Command[1]) {
				SendClientMessage(i, CY, str);
				SendClientMessage(i, CY, "Территория отмечена у Вас на мини-карте красным (мигающим) прямоугольником");
				SendClientMessage(i, CY, "Место стрельбы отмечено у Вас на мини-карте красным (не мигающим!) прямоугольником в южной части карты");
				SendClientMessage(i, CY, "Используйте команду {3377CC}/cteam{FFFF00}, чтобы посмотреть список участников своей ОПГ на территории стрелы");
				cef_emit_event(i, "show-capture");
				cef_emit_event(i, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
				cef_emit_event(i, "capture-text", CEFSTR("подготовка"));
				cef_emit_event(i, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
				cef_emit_event(i, "show_kill_list");
				GangZoneFlashForPlayer(i, gz, 0xFF000055);
			}
		}
	}
	for(new g; g < totalgz; g++) {
	    if(gz_info[g][gzid] == 101) {
			CaptZone = GangZoneCreate(gz_info[g][gzminx], gz_info[g][gzminy], gz_info[g][gzmaxx], gz_info[g][gzmaxy]);
			foreach(new i:Player) if(PI[i][data_MEMBER] >= 5 && PI[i][data_MEMBER] <= 7) GangZoneShowForPlayer(i, g, 0xFF000055);
	    }
	}
	return 1;
}
stock SaveGangZone(gzopg1, gz) {
    new str_q[176];
    mysql_format(ConnectMySQL,str_q, sizeof(str_q), "UPDATE `gangzone` SET `gzopg` = '%d' WHERE `gzid` = '%d'", gzopg1, gz_info[gz][gzid]);
	mysql_function_query(ConnectMySQL, str_q, false, "", "");
	return 1;
}
CMD:drugs(playerid, params[]) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CG, "Используйте: /drugs [1-10]");
    if(params[0] <= 0 || params[0] > 10) return SendClientMessage(playerid, CG, "Введите значение от 1 до 10");
    if(PI[playerid][data_DRUGS] < params[0]) return SendClientMessage(playerid, CG, "У Вас недостаточно едениц");
	if(GetPVarInt(playerid,"kdhealcapt") > gettime()) return SendClientMessagef(playerid, CG, "Вы получили урон в бою, использовать вещества можно будет через %d", GetPVarInt(playerid,"kdhealcapt")-gettime());
    if(GetPVarInt(playerid,"Counting_drugs") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 30 секунд");
    new Float:Health;
    GetPlayerHealth(playerid, Health);
    if(PI[playerid][data_VIP] == 0) if(Health >= 176) return SendClientMessage(playerid, CG, "Вы не нуждаетесь в использовании веществ");
	new d = params[0]*2;
	if(Health+d > 176) SetPlayerHealthAC(playerid, 176);
	else SetPlayerHealthAC(playerid, Health+d);
    PI[playerid][data_DRUGS] -= params[0];
	PI[playerid][data_USEDRUGS] += params[0];
	new hptext[25];
	format(hptext, sizeof hptext, "+%d HP", d);
	cef_emit_event(playerid, "show-notify-right-text", CEFINT(4), CEFSTR("Здоровье пополнено"), CEFSTR("0e3e2d"), CEFSTR(hptext));
	if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid), ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);
	SetPVarInt(playerid,"Counting_drugs",gettime() + 30);
    SetTimerEx("SetPlayerDrunkLevelNull", 150000, false, "d", playerid);
    new string[144];
    format(string, sizeof(string), "%s принял {ff9933}%d ед",PI[playerid][data_NAME], params[0]);
	ProxDetector(30.0, playerid, string, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA, 0xFF99CCAA);
	if(GetPVarInt(playerid, "lomka") == 1) {
		SendClientMessage(playerid,0x9d3400FF,"У Вас началась ломка. Примите вещества (/drugs) или вызовите Скорую помощь (/call)");
		SendClientMessage(playerid,0x9d3400FF,"Вы можете продолжить движение на несколько секунд, нажав клавишу SPACE");
		ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.0, 1, 0, 0, 0, 0);
	}
	return 1;
}
CMD:makegun(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_BANGTIME] > 0) return SendClientMessage(playerid, CG, "У Вас блокировка оружия");
	if(PI[playerid][data_MEMBER] == 5 || PI[playerid][data_MEMBER] == 6|| PI[playerid][data_MEMBER] == 7) ShowPlayerDialog(playerid, dialog_MAKEGUN, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Выберите оружие", "ID и название\t\t\tКол-во металла\n1. Бейсбольная бита\t\t1\n2. ТТ \t\t5\n3. ТТ с глушителем\t\t3\n4. Desert Eagle\t\t\t6\n5. Дробовик\t8\n6. Обрез\t7\n7. Автоматический дробовик\t9\n8. MP40\t\t\t7\n9. AKC-74Y\t\t\t8\n10. AK-47\t9\n11. AK-104\t\t\t9\n12. Tec-9\t\t\t7\n13. Country Rifle\t\t\t10", "Далее", "Отмена");
	else SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	return 1;
}
CMD:fly(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1 ) return 1;
    SetPVarInt(playerid,"spawn_ac",1);
	if(GetPVarType(playerid, "FlyMode")) {
	    new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
	    GetPlayerHealth(playerid,PI[playerid][data_HP]);
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);
		CancelFlyMode(playerid);
	}
	else {
		HideAdmInfo(playerid);
	 	PI[playerid][data_HIDEME] = 0;
		foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, true);
		SetPVarInt(playerid, "SpecBool", 1);
		FlyMode(playerid);
		SendClientMessage(playerid, 0xdbdbdbFF, "Зажмите {ff7139}'SHIFT'{dbdbdb} чтобы лететь быстрее или {ff7139}'ALT'{dbdbdb} чтобы лететь медленнее");
	}
	return 1;
}
CMD:sp(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
    if(sscanf(params,"u",params[0])) {
		if(GetPVarInt(playerid, "SpecBool") != 1) return SendClientMessage(playerid, CG, "Используйте: /sp [ID игрока]");
	    SetPVarInt(playerid,"spawn_ac",1);
		TogglePlayerSpectating(playerid, false);
		return 1;
	}
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[0] == playerid) return SendClientMessage(playerid, CG,"Вы не можете следить за самим собой");
 	if(GetPVarInt(params[0], "SpecBool") == 1) return SendClientMessage(playerid,CG,"Игрок находится в режиме наблюдения");
 	PI[playerid][data_HIDEME] = 0;
	foreach(new i:Player) ShowPlayerNameTagForPlayer(playerid, i, true);
	SendClientMessage(playerid, 0xFFA500FF, "Подсказки:");
 	SendClientMessage(playerid, 0xFFA500FF, "Покинуть слежку: {5353ec}клавиша SHIFT или команда /sp");
	SendClientMessage(playerid, 0xFFA500FF, "Обновить слежку: {5353ec}клавиша CTRL");
	SendClientMessage(playerid, 0xFFA500FF, "Статистика игрока: {5353ec}клавиша CAPSLOCK");
    SetPVarInt(playerid,"spawn_ac",1);
	new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
	ShowAdmInfo(playerid, params[0]);
	SetPVarInt(playerid,"specid",params[0]);
	if(GetPVarInt(playerid,"SpecBool") == 0) {
	    GetPlayerHealth(playerid,PI[playerid][data_HP]);
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		SetPVarInt(playerid, "SpecBool", 1);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);
	}
	SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
	TogglePlayerSpectating(playerid,true);
	if(IsPlayerInAnyVehicle(params[0])) {
		new carid = GetPlayerVehicleID(params[0]);
		PlayerSpectateVehicle(playerid, carid);
	}
	else PlayerSpectatePlayer(playerid,params[0]);
	return 1;
}
CMD:put(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] == 2) {
	    if(PI[playerid][data_PUTPATR] == 0 && PI[playerid][data_PUTMET] == 0) return SendClientMessage(playerid, CG,"У Вас нет в руках ящика");
		for(new c = 0; c < MAX_VEHICLES; c++) {
			new model = GetVehicleModel(c);
			new Float:x,Float:y,Float:z;
			GetCoordBootVehicle(c, x, y, z);
			if(PlayerToPoint(2.0, playerid, x, y, z)) {
				if(model != 433) return SendClientMessage(playerid,CG, "Это не специальный грузовик");
				if(PI[playerid][data_PUTPATR] != 0) {
					if(CAR_DATA[c][data_PATR] >= 10000) return SendClientMessage(playerid,CG, "В грузовике недостаточно места");
	                CAR_DATA[c][data_PATR] += 500;
	                PI[playerid][data_PUTPATR] = 0;
	                cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы положили патроны"));
	                if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	                SetPlayerSpecialAction(playerid,0);
					new str_1[185];
					format(str_1,sizeof(str_1),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/10000 шт.\n{FFFFFF}Металл: {FF6600}%d/10000 шт.",CAR_DATA[c][data_PATR], CAR_DATA[c][data_MET]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_1);
	                return 1;
                }
                else if(PI[playerid][data_PUTMET] != 0) {
					if(CAR_DATA[c][data_MET] >= 10000) return SendClientMessage(playerid,CG, "В грузовике недостаточно места");
	                CAR_DATA[c][data_MET] += 500;
	                PI[playerid][data_PUTMET] = 0;
	                cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы положили металл"));
	                if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	                SetPlayerSpecialAction(playerid,0);
					new str_1[185];
					format(str_1,sizeof(str_1),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/10000 шт.\n{FFFFFF}Металл: {FF6600}%d/10000 шт.",CAR_DATA[c][data_PATR], CAR_DATA[c][data_MET]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_1);
	                return 1;
                }
			}
		}
		PI[playerid][data_PUTPATR] = 0;
		PI[playerid][data_PUTMET] = 0;
		cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Успех"));
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		SetPlayerSpecialAction(playerid,0);
	}
	else SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	return 1;
}
CMD:bar(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	new Float:x,Float:y,Float:z,model;
	for(new c = 0; c < MAX_VEHICLES; c++) {
	    GetVehiclePos(c,x,y,z);
	    model = GetVehicleModel(c);
	    if(PlayerToPoint(10.0, playerid, x,y,z) && model == 454) {
		    ShowPlayerDialog(playerid, dialog_CATER, DIALOG_STYLE_LIST, "{f00e5d}Бар", "1. Спранк\n2. Кофе\n3. Пиво\n4. Водка\n5. Вино\n6. Коньяк\n7. Виски\n8. Ром", "Выбрать", "Отмена");
			break;
		}
	}
	return 1;
}
CMD:putammo(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] == 2) {
	    new car = GetPlayerVehicleID(playerid);
	    new model = GetVehicleModel(car);
	    new materials = CAR_DATA[car][data_PATR];
		new metals = CAR_DATA[car][data_MET];
	    if(model != 433) return SendClientMessage(playerid, CG, "Нужно находиться в специальном грузовике");
		if(PlayerToPoint(30.0, playerid, 1567.5477,1823.2529,15.6548) && PI[playerid][data_MEMBER] == 2) {
	        if(car == army_car[0]) {
	            if(CAR_DATA[car][data_PATR] != 0 || CAR_DATA[car][data_MET] != 0) {
					army_wh[1] += materials;
					CAR_DATA[car][data_PATR] = 0;
					army_wh[0] += metals;
					CAR_DATA[car][data_MET] = 0;
					new str_1[185];
					format(str_1,sizeof(str_1),"[R] %s[%d] разгрузил грузовик с боеприпасами. (+%d патронов, +%d металла)",PI[playerid][data_NAME],playerid, materials, metals);
					SendFractionMessage(PI[playerid][data_MEMBER],0x69b867FF,str_1);
					new str_3[185];
            		format(str_3,sizeof(str_3),"{3366FF}Склад армии\n{FFFFFF}Металла на складе: {FF6600}%d шт.\n{FFFFFF}Патронов на складе: {FF6600}%d шт.",army_wh[0],army_wh[1]);
       				UpdateDynamic3DTextLabelText(army_sklad_text, -1, str_3);
					new str_4[185];
					format(str_4,sizeof(str_4),"{3366FF}МЗКТ\n{FFFFFF}Патроны: {FF6600}%d/10000 шт.\n{FFFFFF}Металл: {FF6600}%d/10000 шт.",CAR_DATA[car][data_PATR], CAR_DATA[car][data_MET]);
	                UpdateDynamic3DTextLabelText(vehicletext, -1, str_4);
					return 1;
				}
                SendClientMessage(playerid, CG, "Грузовик пуст");
			}
			else SendClientMessage(playerid, CG, "Нужно находиться в специальном грузовике");
		}
	}
	else SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	return 1;
}
CMD:lock(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	for(new c = 0; c < MAX_VEHICLES; c++) {
		if(c == PI[playerid][data_VEH]) {
			new Float:x,Float:y,Float:z;
		    GetVehiclePos(c,x,y,z);
			if(!PlayerToPoint(5.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Вы находитесь далеко от личного транспорта");
			switch(CAR_DATA[c][data_LOCK]) {
				case 0: {
				    PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
					GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(c,engine,lights_text,alarm,true,bonnet,boot,objective);
					CAR_DATA[c][data_LOCK] = 1;
					cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Личный транспорт закрыт"), CEFSTR("c13537"));
					if(IsPlayerInAnyVehicle(playerid)) cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(1));
				}
				case 1: {
				    PlayerPlaySound(playerid, 25800, 0.0, 0.0, 0.0);
					GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
					SetVehicleParamsEx(c,engine,lights_text,alarm,false,bonnet,boot,objective);
					CAR_DATA[c][data_LOCK] = 0;
					cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Личный транспорт открыт"));
					if(IsPlayerInAnyVehicle(playerid)) cef_emit_event(playerid, "update-speed-icon", CEFINT(2), CEFINT(0));
				}
			}

		}
	}
	return 1;
}
CMD:attach(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используйте: /attach [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
    SetPVarInt(playerid, "attach_id",params[0]);
    new string[128];
	for(new x = 0; x < MAX_PLAYER_ATTACHED_OBJECTS; x++) {
		if(IsPlayerAttachedObjectSlotUsed(params[0], x)) format(string, sizeof(string), "%s%d (Used)\n", string, x);
		else format(string, sizeof(string), "%s%d\n", string, x);
	}
	ShowPlayerDialog(playerid, dialog_ATTACH_INDEX_SELECTION, DIALOG_STYLE_LIST, "{f00e5d}Выберите слот", string, "Выбрать", "Отмена");
    return 1;
}
CMD:mphp(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /mphp [кол-во]");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
   	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		if(PlayerToPoint(100.0, i, x,y,z)) {
		    SetPlayerHealthAC(i, params[0]);
		    SendClientMessagef(i, -1,"Игровой мастер #%d изменил уровень вашего здоровья", PI[playerid][ADMINSNUMBER]);
			PI[i][data_HOSPITAL] = 0;
		}
   	}
    return 1;
}
CMD:mparm(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /mparm [кол-во]");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
   	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		if(PlayerToPoint(100.0, i, x,y,z)) {
		    SetPlayerHealthAC(i, params[0]);
		    SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам бронижелет", PI[playerid][ADMINSNUMBER]);
		}
   	}
    return 1;
}
CMD:mpskin(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params,"dd",params[0], params[1])) return SendClientMessage(playerid,CG,"Используйте: /mpskin [1, 2, 3] [номер скина]");
	if(params[1] > 297) return 1;
	new team_1[250],team_2[250], all, team1, team2;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
   	for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(i == playerid) continue;
		if(!IsPlayerConnected(i)) continue;
		if(PlayerToPoint(100.0, i, x,y,z)) {
		    all++;
            if(params[0] == 3) {
			    SetPlayerSkinAC(i,params[1]);
			    SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам временный скин", PI[playerid][ADMINSNUMBER]);
			    continue;
			}
            if(params[0] == 2 && all%2 == 0) {
                team2++;
            	team_2[team2] = i;
            	SetPlayerSkinAC(i,params[1]);
            	SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам временный скин", PI[playerid][ADMINSNUMBER]);
            	continue;
			}
			if(params[0] == 1 && all%2 == 1) {
			    team1++;
			    team_1[team1] = i;
			    SetPlayerSkinAC(i,params[1]);
			    SendClientMessagef(i, -1,"Игровой мастер выдал Вам временный скин", PI[playerid][ADMINSNUMBER]);
			    continue;
			}
			if(params[0] < 1 || params[0] > 3) {
			    SendClientMessage(playerid, CG,"Используйте: /mpskin [1, 2, 3] [номер скина]");
			    break;
			}
		}
   	}
	if(params[0] == 3) return SendClientMessage(playerid,-1, "Вы выдали всем игрокам в радиусе скин");
	if(params[0] == 2) return SendClientMessage(playerid,-1, "Вы выдали некоторым игрокам в радиусе скин");
	if(params[0] == 1) return SendClientMessage(playerid,-1, "Вы выдали некоторым игрокам в радиусе скин");
    return 1;
}
CMD:mpgun(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
	if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, CG, "Используйте: /mpgun [1, 2, 3] [оружие] [патроны]");
  	else if(params[1] > 47 || params[1] < 1) return SendClientMessage(playerid, CG,"Такого оружия не существует");
    else if(params[2] > 1000 || params[2] < 1) return SendClientMessage(playerid, CG,"Не верное количество патрон");
	if(params[1] == 35 && params[1] == 36 && params[1] == 37 && params[1] == 38 && params[1] == 39 && params[1] == 40) return SendClientMessage(playerid, CG,"Данное оружие запретил разработчик сервера.");
	new team_1[250],team_2[250], all, team1, team2;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
   	for(new i = 0; i < MAX_PLAYERS; i++) {
	   // if(i == playerid) continue;
		if(!IsPlayerConnected(i)) continue;
		if(PlayerToPoint(100.0, i, x,y,z)) {
		    all++;
            if(params[0] == 3) {
			    GiveWeapon(i,params[1], params[2]);
			    SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам %s (+%d пт)", PI[playerid][ADMINSNUMBER], weapon_names[params[1]], params[2]);
			    continue;
			}
            if(params[0] == 2 && all%2 == 0) {
                team2++;
            	team_2[team2] = i;
            	GiveWeapon(i,params[1], params[2]);
            	SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам %s (+%d пт)", PI[playerid][ADMINSNUMBER], weapon_names[params[1]], params[2]);
            	continue;
			}
			if(params[0] == 1 && all%2 == 1) {
			    team1++;
			    team_1[team1] = i;
			    GiveWeapon(i,params[1], params[2]);
			    SendClientMessagef(i, -1,"Игровой мастер #%d выдал Вам %s (+%d пт)", PI[playerid][ADMINSNUMBER], weapon_names[params[1]], params[2]);
			    continue;
			}
			if(params[0] < 1 || params[0] > 3) {
			    SendClientMessage(playerid, CG,"Используйте: /mpgun [1, 2, 3] [оружие] [патроны]");
				SendClientMessage(playerid, CG,"1 - первая команда, 2 - вторая команда, 3 - все игроки");
			    break;
			}
		}
   	}
	if(params[0] == 3) return SendClientMessage(playerid,-1, "Вы выдали всем игрокам в радиусе оружие");
	if(params[0] == 2) return SendClientMessage(playerid,-1, "Вы выдали некоторым игрокам в радиусе оружие");
	if(params[0] == 1) return SendClientMessage(playerid,-1, "Вы выдали некоторым игрокам в радиусе оружие");
    return 1;
}
CMD:gun(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_ADMLVL] < 4 ) return true;
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, CG, "Используйте: /gun [ид] [оружие] [патроны]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	else if(params[1] > 47 || params[1] < 1) return SendClientMessage(playerid, CG,"Такого оружия не существует!");
    else if(params[2] > 1000 || params[2] < 1) return SendClientMessage(playerid, CG,"Не верное количество патрон!");
    GiveWeapon(params[0], params[1], params[2]);
	new str_ADM[144];
	format(str_ADM,sizeof(str_ADM),"[%s #%d] %s[%d] выдал %s[%d] %s[%d] (%d пт)", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME], params[0], weapon_names[params[1]], params[1], params[2]);
	SendAdminMessage(0xa3ffffFF, str_ADM);
	new string[144];
	format(string, sizeof(string),"Игровой мастер выдал Вам %s (%d пт)", weapon_names[params[1]], params[2]);
    SendClientMessage(params[0], COLOR_WHITE, string);
    return true;
}
CMD:m(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "s[80]", params[0])) return SendClientMessage(playerid,CG,"Используйте: /m [текст]");
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    new car = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(car) == 598 ||
	GetVehicleModel(car) == 551 ||
	GetVehicleModel(car) == 427 ||
	GetVehicleModel(car) == 443 ||
	GetVehicleModel(car) == 597 ||
	GetVehicleModel(car) == 427 ||
	GetVehicleModel(car) == 599 || GetVehicleModel(car) == 490) {
	    new string[145];
		format(string, sizeof(string), "[М] %s[%d]: %s",PI[playerid][data_NAME],playerid,params[0]);
		ProxDetector(50.0, playerid, string, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF, 0xFACC2EFF);
	}
	else SendClientMessage(playerid,CG,"Данный транспорт не оснащен мегафоном");
	return 1;
}
callback: Gunjobanim(playerid) {
	RemovePlayerAttachedObject(playerid,3);
	ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
	SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
	SetPVarInt(playerid, "Gjob",3);
	SendClientMessage(playerid, COLOR_LIGHTGREEN, "Оружие собрано. Следуйте к складу.");
	SetPlayerCheckpoint(playerid,2750.8000500,-2172.6001000,22.0000000,1.5);
	return 1;
}
CMD:ss(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params,"ud",params[0], params[1])) return SendClientMessage(playerid,CG,"Используйте: /ss [ID игрока] [номер скина]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] > 297) return 1;
	PI[params[0]][data_SKIN] = params[1];
	SetPlayerSkinAC(params[0], PI[params[0]][data_SKIN]);
	new string[144];
 	format(string,sizeof(string),"[%s #%d] %s[%d] выдал вечный скин игроку %s[%d] (ID %d)",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, PI[params[0]][data_NAME], params[0], params[1]);
    SendAdminMessage(-1, string);
    SavePlayerData(params[0]);
	new vk_send[250];
	format(vk_send,sizeof(vk_send),"Игровой мастер %s выдал вечный скин игроку %s[%d] (ID %d)",PI[playerid][data_NAME], PI[params[0]][data_NAME], params[0], params[1]);
	SendVKTest(playerid, vk_send, 3);
    return 1;
}
CMD:changenumber(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 7) return 1;
	if(sscanf(params,"ud",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /changenumber [ID игрока] [номер]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(1 > params[1] > 9999) return SendClientMessage(playerid, CG, "Значение номера не может быть меньше 1 и больше 9999");
    if(PI[params[0]][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровому мастеру");
    new str_q[176];
    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `adminsnumber` = '%d'",params[1]);
	mysql_function_query(dbHandle, str_q, true, "CheckGSNumber", "d", playerid);
	SetPVarInt(playerid, "AdmNumber", params[1]);
	SetPVarInt(playerid, "NumberID", params[0]);
	return 1;
}
callback: CheckCarHealth() {
	for(new c; c < MAX_VEHICLES; c++) {
	    new Float:health;
	    GetVehicleHealth(c,health);
	    if(health <= 350) {
			SetVehicleHealth(c, 350);
			GetVehicleParamsEx(c,engine,lights_text,alarm,doors_text,bonnet,boot,objective);
			SetVehicleParamsEx(c,false,lights_text,alarm,doors_text,bonnet,boot,objective);
		}
	}
}
stock Freeze(playerid) {
	TogglePlayerControllable(playerid, 0);
	cef_emit_event(playerid, "show-center-notify", CEFINT(4), CEFSTR("Пожалуйста, подождите..."));
	return SetTimerEx("unFreeze",5000,0,"%d",playerid);
}
callback: unFreeze(playerid) {
	TogglePlayerControllable(playerid, 1);
}
stock GetGZFrac(gznum){
	new cvet;
	switch(gz_info[gznum][gzopg]) {
	    case 0: cvet = 0xFF000055;
	    case 5: cvet = 0x663399BB;
	    case 6: cvet = 0x66CCFFBB;
		case 7: cvet = 0x339933AA;
	}
	return cvet;
}

stock UpdatePlayerDataIntName(const playerid, const field[], data, stroka) {
	mysql_tqueryf(dbHandle, "UPDATE `accounts` SET `%e` = '%i' WHERE `name` = '%s' LIMIT 1", field, data, PI[playerid][data_NAME]);
	printf("UpdatePlayerDataIntName UPDATE `accounts` SET %s = '%i' WHERE name = '%s' LIMIT 1, stroka %d", field, data, PI[playerid][data_NAME], stroka);
}
stock UpdatePlayerDataInt(const playerid, const field[], data, stroka) {
	if(PI[playerid][data_ID] == -1) {
		mysql_tqueryf(dbHandle, "UPDATE `accounts` SET `%e` = '%i' WHERE `name` = '%s' LIMIT 1", field, data, PI[playerid][data_NAME]);
		printf("UpdatePlayerDataIntName UPDATE `accounts` SET %s = '%i' WHERE name = '%s' LIMIT 1, stroka %d", field, data, PI[playerid][data_NAME], stroka);
	}
	else {
		mysql_tqueryf(dbHandle, "UPDATE `accounts` SET `%e` = '%i' WHERE `id` = '%i' LIMIT 1", field, data, PI[playerid][data_ID]);
		printf("UpdatePlayerDataInt UPDATE `accounts` SET %s = '%i' WHERE id = '%i' LIMIT 1, stroka %d", field, data, PI[playerid][data_ID], stroka);
	}
}
stock UpdatePlayerDataIntNoLog(playerid, field[], data[]) {
	new strup[256];
	format(strup, sizeof(strup), "UPDATE `accounts` SET %s = '%i' WHERE id = '%i' LIMIT 1", field, data, PI[playerid][data_ID]);
	return mysql_function_query(dbHandle, strup, false, "", "");
}
stock MysqlUpdatePlayerStr(const playerid, const field[], data[]) {
	mysql_tqueryf(dbHandle, "UPDATE `accounts` SET `%s` = '%s' WHERE `id` = '%i' LIMIT 1", field, data, PI[playerid][data_ID]);
	return 1;
}
callback: CheckGSNumber(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new an = GetPVarInt(playerid, "AdmNumber");
	    SendClientMessage(playerid, CG, "Данный номер уже используется другим игровым мастером");
	    DeletePVar(playerid, "AdmNumber");
		DeletePVar(playerid, "NumberID");
		new string[144];
		format(string, 144, "Введите номер игрового мастера для {2770eb}%s[%d]{252525}", PI[an][data_NAME], an);
		ShowPlayerDialog(playerid, DLG_INVITEGS, DIALOG_STYLE_INPUT, "{f00e5d}GS-номер", string, "Назначить", "Отмена");
	}
	else {
	    new string[145];
	    new an = GetPVarInt(playerid, "AdmNumber");
	    new anid = GetPVarInt(playerid, "NumberID");
	    format(string, sizeof(string), "[%s #%d] %s[%d] установил номер GS для %s[%d] (Номер #%d)", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid, PI[anid][data_NAME], anid, an);
	    SendAdminMessage(-1, string);
	    PI[anid][ADMINSNUMBER] = an;
		DeletePVar(playerid, "AdmNumber");
		DeletePVar(playerid, "NumberID");
		SavePlayerData(anid);
	}
}
callback: CheckAdmNumber(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
	    new i = GetPVarInt(playerid, "AdmID");
	    SendClientMessage(playerid, CG, "Данный номер уже используется другим игровым мастером");
	    DeletePVar(playerid, "AdmNumber");
		DeletePVar(playerid, "NumberID");
		new string[144];
		format(string, 144, "Введите номер игрового мастера для {2770eb}%s[%d]{252525}", PI[i][data_NAME], i);
		ShowPlayerDialog(playerid, DLG_INVITEGS, DIALOG_STYLE_INPUT, "{f00e5d}GS-номер", string, "Назначить", "Отмена");
	}
	else {
	    new string[145];
	    new i = GetPVarInt(playerid, "AdmID");
	    new an = GetPVarInt(playerid, "AdmNumber");
	    format(string, sizeof(string), "[%s #%d] %s[%d] назначил %s[%d] на должность NGS и присвоил номер #%d", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid, PI[i][data_NAME], i, an);
	    SendAdminMessage(-1, string);
	    PI[i][ADMINSNUMBER] = an;
		UpdatePlayerDataInt(i, "ADMINSNUMBER", PI[i][ADMINSNUMBER], 22883);
	    PI[i][data_ADMLVL] = 1;
		UpdatePlayerDataInt(i, "admlvl", PI[i][data_ADMLVL], 22885);
	    PI[i][data_VIP] = 90;
		UpdatePlayerDataInt(i, "vip", PI[i][data_VIP], 22887);
		DeletePVar(playerid, "AdmNumber");
		DeletePVar(playerid, "NumberID");
	}
}
CMD:twarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 9) return 1;
	if(sscanf(params,"us",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /twarn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_MEMBER] != PI[playerid][data_MEMBER]) return SendClientMessage(playerid, CG, "Этот игрок не состоит в вашей организации");
	if(params[0] == playerid) return SendClientMessage(playerid, CG, "Вы не можете выдать выговор себе");
    if(PI[params[0]][data_RANK] == 10 && PI[playerid][data_RANK] == 9) return SendClientMessage(playerid, CG, "Вы не можете выдать выговор лидеру");
	if(PI[params[0]][data_RANK] == PI[playerid][data_RANK]) return SendClientMessage(playerid, CG, "Вы не можете выдать выговор человеку, чей ранг схож с вашим");
    static name[24],namepl[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	SetString(namepl, NameRang(params[0]));
	namepl = NameRang(params[0]);
	if(PI[params[0]][TWARN] < 3) {
	    PI[params[0]][TWARN]++;
	    new string[144];
	    format(string, sizeof(string), "%s %s[%d] выдал выговор %s %s[%d] [%d|3]. Причина: %s", name, PI[playerid][data_NAME], playerid, namepl, PI[params[0]][data_NAME], params[0], PI[params[0]][TWARN], params[1]);
        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
	}
	if(PI[params[0]][TWARN] == 3) {
        PI[params[0]][TWARN] = 0;
	    new string[144], string1[144];
	    new year,month,day;
		getdate(year, month, day);
		new str_q[365];
		mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`,`w_dal`,`w_reas`,`w_dalrank`) VALUES ('%d','%d','%s','Увольнение','%d','%d','%d','%d','%s','%s','%s')", PI[params[0]][data_ID], PI[params[0]][data_MEMBER], PI[params[0]][data_NAME], PI[params[0]][data_RANK], day, month, year, PI[playerid][data_RANK], params[1], name);
		mysql_function_query(dbHandle, str_q, false, "", "");
	    format(string, sizeof(string), "%s %s[%d] выдал выговор %s %s[%d] [3|3]. Причина: %s", name, PI[playerid][data_NAME], playerid, namepl, PI[params[0]][data_NAME], params[0], params[1]);
        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
		format(string1, sizeof(string1), "%s %s[%d] уволил %s %s[%d] из организации [3|3]", name, PI[playerid][data_NAME], playerid, namepl, PI[params[0]][data_NAME], params[0]);
        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string1);
        PI[params[0]][data_MEMBER] = 0;
		PI[params[0]][data_RANK] = 0;
		PI[params[0]][data_LEADER] = 0;
		ClearGroup(params[0]);
		SetPlayerSkinAC(params[0],PI[params[0]][data_SKIN]);
		SetPlayerColorEx(params[0]);
		PI[params[0]][data_MEDCARD] = 0;
		cef_emit_event(params[0], "hide_kill_list");
		cef_emit_event(params[0], "hide-capture");
	}
	SavePlayerData(params[0]);
	return 1;
}
CMD:untwarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 9) return 1;
	if(sscanf(params,"us",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /untwarn [ID игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(PI[params[0]][data_MEMBER] != PI[playerid][data_MEMBER]) return SendClientMessage(playerid, CG, "Этот игрок не состоит в вашей организации");
	if(params[0] == playerid) return SendClientMessage(playerid, CG, "Вы не можете снять выговор себе");
    if(PI[params[0]][data_RANK] == 10 && PI[playerid][data_RANK] == 9) return SendClientMessage(playerid, CG, "Вы не можете снять выговор лидеру");
	if(PI[params[0]][data_RANK] == PI[playerid][data_RANK]) return SendClientMessage(playerid, CG, "Вы не можете снять выговор человеку, чей ранг схож с вашим");
    if(PI[params[0]][TWARN] == 0) return SendClientMessage(playerid, CG, "Игрок не имеет выговоров");
    PI[params[0]][TWARN]--;
    static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
    static name2[24];
	SetString(name2, NameRang(params[0]));
	name2 = NameRang(params[0]);
	new string[144];
	format(string, sizeof(string), "%s %s[%d] снял выговор с %s %s[%d]", name, PI[playerid][data_NAME], playerid, name2, PI[params[0]][data_NAME], params[0]);
    SendRadioMessage(PI[playerid][data_MEMBER], 0x6699cc3FF, string);
    SendClientMessagef(params[0], 0x6699cc3FF, "%s %s[%d] снял с Вас выговор", name, PI[playerid][data_NAME],playerid);
    SavePlayerData(params[0]);
	return 1;
}
CMD:offtwarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 9) return 1;
	if(sscanf(params, "s[144]", params[0])) return SendClientMessage(playerid,CG,"Используйте: /offtwarn [имя]");
	new name[MAX_PLAYER_NAME];
	format(name, sizeof(name), "%s", params[0]);
 	if(params[0] == PI[playerid][data_NAME]) return SendClientMessage(playerid, CG, "Вы не можете снять выговор себе");
	new str_q[176];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", name);
    mysql_function_query(dbHandle, str_q, true, "OffTwarn", "i", playerid);
	return 1;
}
callback: OffTwarn(playerid) {
    new rows, fields, temp[80];
    cache_get_data(rows, fields);
    if(rows) {
	    new names[24], twarn, members, ranks, leaders, groupid;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "twarn", temp), twarn = strval (temp);
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
		cache_get_field_content(0, "groupid", temp), groupid = strval (temp);
	    if(ranks == 10 && PI[playerid][data_RANK] == 9) return SendClientMessage(playerid, CG, "Вы не можете снять выговор лидеру");
		if(ranks == PI[playerid][data_RANK]) return SendClientMessage(playerid, CG, "Вы не можете снять выговор человеку, чей ранг схож с вашим");
		if(PI[playerid][data_MEMBER] != members) return SendClientMessage(playerid, CG, "Игрок должен состоять в Вашей организации");
	    static name[24];
		SetString(name, NameRang(playerid));
		name = NameRang(playerid);
		if(twarn < 3) {
		    twarn++;
		    new string[144];
		    format(string, sizeof(string), "(( %s %s[%d] выдал выговор оффлайн %s [%d/3] ))", name, PI[playerid][data_NAME], playerid, names, twarn);
	        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
		}
		if(twarn == 3) {
		    twarn = 0;
		    new string[144];
		    format(string, sizeof(string), "(( %s %s[%d] уволил оффлайн %s [3/3] ))", name, PI[playerid][data_NAME], playerid, names);
	        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
	        members = 0;
			ranks = 0;
			leaders = 0;
  			groupid = 0;
  			new res[144];
		    format(res, sizeof(res), "Получение 3 выговоров");
  			SetPVarString(playerid, "text_wbook", res);
			new str_q[176];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE name = '%e'", names);
			mysql_function_query(dbHandle, str_q, true, "WbookOff", "is", playerid, names);
		}
		new str_q[200];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `rank` = '%d', `leader` = '%d', `twarn` = '%d', `groupid` = '%d' WHERE `name` = '%s'",members, ranks, leaders, twarn, groupid, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
	}
	else SendClientMessage(playerid, CG, "Игрок не найден");
	return 1;
}
stock SendRadioMessage(member1, color, text[]) {
    for(new i = 0; i < MAX_PLAYERS; i++) {
	    if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_MEMBER] == member1) SendClientMessage(i, color, text);
	}
	return 1;
}
CMD:offmute(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offmute [ник] [время] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /mute");
    }
	SetPVarString(playerid, "roffmute",param_reason);
	SetPVarInt(playerid, "offmutetime", param_time);
	new str_q[144];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffMute", "i", playerid);
	return 1;
}
callback: OffMute(playerid) {
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], mute, mutetime, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "mute", temp), mute = strval (temp);
		cache_get_field_content(0, "mutetime", temp), mutetime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffmute", reason, 32);
		time = GetPVarInt(playerid, "offmutetime");
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d заблокировал чат игроку %s(оффлайн) на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER], names, time, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        mute = 1;
        mutetime += GetPVarInt(playerid, "offmutetime");
        new str_q[256];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `mute` = '%d', `mutetime` = '%d' WHERE `name` = '%s'", mute, mutetime, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал чат игроку %s(оффлайн) на %d минут. Причина: %s",PI[playerid][data_NAME], names, time, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам заблокировали чат на %d минут, персонаж %s (Сервер №1).<br><br>Причина: %s (для обжалования на forum.arcanarp.online)",time,names,reason);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offjail(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offjail [ник] [время] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /jail");
    }
	SetPVarString(playerid, "roffjail",param_reason);
	SetPVarInt(playerid, "offjailtime", param_time);
	new str_q[144];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffJail", "i", playerid);
	return 1;
}
callback: OffJail(playerid) {
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], demorgan, demorgan_time, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "demorgan", temp), demorgan = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), demorgan_time = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffjail", reason, 32);
		time = GetPVarInt(playerid, "offjailtime");
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d посадил в деморган игрока %s(оффлайн) на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER], names, time, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        demorgan = 1;
        demorgan_time += GetPVarInt(playerid, "offjailtime");
        new str_q[256];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `demorgan` = '%d', `demorgan_time` = '%d', `hospital` = '0' WHERE `name` = '%s'", demorgan, demorgan_time, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s посадил в деморган игрока %s(оффлайн) на %d минут. Причина: %s",PI[playerid][data_NAME], names, time, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Ваc посадили в деморган на %d минут, персонаж %s (Сервер №1).<br><br>Причина: %s (для обжалования на forum.arcanarp.online)",time,names,reason);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offvmute(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offvmute [ник] [время] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /vmute");
    }
	SetPVarString(playerid, "roffvmute",param_reason);
	SetPVarInt(playerid, "offvmutetime", param_time);
	new str_q[110];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffVMute", "i", playerid);
	return 1;
}
callback: OffVMute(playerid) {
    new rows, fields, temp[32], reason[32], time;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], vmute, vmutetime, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "vmute", temp), vmute = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), vmutetime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffvmute", reason, 32);
		time = GetPVarInt(playerid, "offvmutetime");
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d заблокировал голосовой чат игрока %s(оффлайн) на %d минут. Причина: %s", PI[playerid][ADMINSNUMBER], names, time, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        vmute = 1;
        vmutetime += GetPVarInt(playerid, "offvmutetime");
        new str_q[176];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `vmute` = '%d', `vmutetime` = '%d' WHERE `name` = '%s'", vmute, vmutetime, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал голосовой чат игрока %s(оффлайн) на %d минут. Причина: %s",PI[playerid][data_NAME], names, time, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам заблокировали голосовой чат на %d минут, персонаж %s (Сервер №1).<br><br>Причина: %s (для обжалования на forum.arcanarp.online)",time,names,reason);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offunvmute(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offunvmute [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /unvmute");
    }
	SetPVarString(playerid, "roffvmute",param_reason);
	new str_q[144];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffUnVMute", "i", playerid);
	return 1;
}
callback: OffUnVMute(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], vmute, vmutetime, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "vmute", temp), vmute = strval (temp);
		cache_get_field_content(0, "vmutetime", temp), vmutetime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		if(vmutetime == 0) return SendClientMessage(playerid, CG, "Голосовой чат игрока не заблокирован");
		GetPVarString(playerid,"roffvmute", reason, 32);
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d разблокировал голосовой чат игрока %s(оффлайн). Причина: %s", PI[playerid][ADMINSNUMBER], names, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        vmute = 0;
        vmutetime = 0;
        new str_q[185];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `vmute` = '%d', `vmutetime` = '%d' WHERE `name` = '%s'", vmute, vmutetime, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s разблокировал голосовой чат игрока %s(оффлайн). Причина: %s",PI[playerid][data_NAME], names, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам сняли блокировку голосового чата на персонаже %s (Сервер №1).",names);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offunjail(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offunjail [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /unjail");
    }
	SetPVarString(playerid, "roffjail",param_reason);
	new str_q[185];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffUnJail", "i", playerid);
	return 1;
}
callback: OffUnJail(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], demorgan, demorgan_time, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "demorgan", temp), demorgan = strval (temp);
		cache_get_field_content(0, "demorgan_time", temp), demorgan_time = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffjail", reason, 32);
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d выпустил из деморгана игрока %s(оффлайн). Причина: %s", PI[playerid][ADMINSNUMBER], names, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        demorgan = 0;
        demorgan_time = 0;
        new str_q[144];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `demorgan` = '%d', `demorgan_time` = '%d' WHERE `name` = '%s'", demorgan, demorgan_time, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s выпустил из деморгана игрока %s(оффлайн). Причина: %s",PI[playerid][data_NAME], names, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вас выпустили из деморгана на персонаже %s (Сервер №1).",names);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offunmute(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 2) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offunmute [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /unmute");
    }
	SetPVarString(playerid, "roffmute",param_reason);
	new str_q[144];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffUnMute", "i", playerid);
	return 1;
}
callback: OffUnMute(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], mute, mutetime, admin;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "mute", temp), mute = strval (temp);
		cache_get_field_content(0, "mutetime", temp), mutetime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		GetPVarString(playerid,"roffmute", reason, 32);
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d разблокировал чат игроку %s(оффлайн). Причина: %s", PI[playerid][ADMINSNUMBER], names, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        mute = 0;
        mutetime = 0;
        new str_q[185];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `mute` = '%d', `mutetime` = '%d' WHERE `name` = '%s'", mute, mutetime, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s разблокировал чат игроку %s(оффлайн). Причина: %s",PI[playerid][data_NAME], names, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам сняли блокировку игрового чата на персонаже %s (Сервер №1).",names);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offwarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offwarn [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /warn");
    }
	SetPVarString(playerid, "roffwarn",param_reason);
	new str_q[144];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffWarn", "i", playerid);
	new str_1[185];
	format(str_1, sizeof(str_1), "Игровой мастер #%d выдал предупреждение %s [%d|3]. Причина: %s", PI[playerid][ADMINSNUMBER],PI[params[0]][data_NAME],PI[params[0]][data_WARN],params[1]);
	SendClientMessage(playerid,COLOR_AC,str_1);
	return 1;
}
callback: OffWarn(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], warn, warntime, admin, member1, rank, leader, adminsnumber;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "warn", temp), warn = strval (temp);
		cache_get_field_content(0, "warntime", temp), warntime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		cache_get_field_content(0, "member", temp), member1 = strval (temp);
		cache_get_field_content(0, "leader", temp), leader = strval (temp);
		cache_get_field_content(0, "rank", temp), rank = strval (temp);
		cache_get_field_content(0, "ADMINSNUMBER", temp), adminsnumber = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		if(warn >= 2) return SendClientMessage(playerid, CG, "Игрок имеет 2 предупреждения, используйте /offban");
		GetPVarString(playerid,"roffwarn", reason, 32);
		SetPVarString(playerid, "text_wbook", reason);
		new query5[144];
		mysql_format(dbHandle, query5, sizeof(query5), "SELECT * FROM `accounts` WHERE name = '%e'", names);
		mysql_function_query(dbHandle, query5, true, "WbookOff", "is", playerid, names);
		warn++;
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d выдал предупреждение игроку %s[%d/3](оффлайн). Причина: %s", PI[playerid][ADMINSNUMBER], names, warn, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        warntime += 1200;
        member1 = 0;
        leader = 0;
        rank = 0;
        admin = 0;
        adminsnumber = 0;
        new str_q[256];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `warn` = '%d', `warntime` = '%d', `member` = '%d', `rank` = '%d', `leader` = '%d', `admlvl` = '%d', `ADMINSNUMBER` = '%d' WHERE `name` = '%s'", warn, warntime, member1, leader, rank, admin, adminsnumber, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s выдал предупреждение игроку %s[%d/3](оффлайн). Причина: %s",PI[playerid][data_NAME], names, warn, reason);
		SendVKTest(playerid, vk_send, 3);
		new vkid;
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам выдано предупреждение (%d из 3) на персонаже %s (Сервер №1).<br>Имея три активных предупреждения, персонаж будет заблокирован на 10 дней.<br><br>Причина: %s (для обжалования на forum.arcanarp.online)",warn,names,reason);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offunwarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32];
    if(sscanf(params, "s[24]s[32]", param_name,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offunwarn [ник] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /unwarn");
    }
	SetPVarString(playerid, "roffwarn",param_reason);
	new str_q[185];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffUnWarn", "i", playerid);
	return 1;
}
callback: OffUnWarn(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], warn, warntime, admin,vkid;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "warn", temp), warn = strval (temp);
		cache_get_field_content(0, "warntime", temp), warntime = strval (temp);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		if(warn == 0) return SendClientMessage(playerid, CG, "Игрок не имеет предупреждений");
		GetPVarString(playerid,"roffwarn", reason, 32);
		warn--;
		new string[144];
	    format(string, sizeof(string), "Игровой мастер #%d снял предупреждение игроку %s[%d/3](оффлайн). Причина: %s", PI[playerid][ADMINSNUMBER], names, warn, reason);
        SendClientMessageToAll(COLOR_TOMATO, string);
        if(warn == 0) warntime = 0;
        if(warn == 1) warntime = 1200;
        new str_q[256];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `warn` = '%d', `warntime` = '%d' WHERE `name` = '%s'", warn, warntime, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new vk_send[250];
		format(vk_send, sizeof(vk_send), "Игровой мастер %s снял предупреждение игроку %s[%d/3](оффлайн). Причина: %s",PI[playerid][data_NAME], names, warn, reason);
		SendVKTest(playerid, vk_send, 3);
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Вам сняли предупреждение на персонаже %s.", names);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:offban(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 3) return 1;
    new param_name[24],param_reason[32],param_time;
    if(sscanf(params, "s[24]ds[32]", param_name,param_time,param_reason)) return SendClientMessage(playerid, CG, "Используйте: /offban [ник] [дни] [причина]");
    foreach(Player, i) {
        new szName[64];
        if(!IsPlayerConnected(i)) continue;
        GetPlayerName(i,szName,64);
        if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /ban");
    }
	SetPVarString(playerid, "roffban",param_reason);
	SetPVarInt(playerid, "offbantime", param_time);
	new str_q[185];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "OffBan", "i", playerid);
	return 1;
}
callback: OffBan(playerid) {
    new rows, fields, temp[32], reason[32];
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Такого игрока нет");
    if(rows) {
	    new names[24], admin, member1, rank, leader, adminsnumber, ip[32],vkid;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "admlvl", temp), admin = strval (temp);
		cache_get_field_content(0, "member", temp), member1 = strval (temp);
		cache_get_field_content(0, "leader", temp), leader = strval (temp);
		cache_get_field_content(0, "rank", temp), rank = strval (temp);
		cache_get_field_content(0, "ADMINSNUMBER", temp), adminsnumber = strval (temp);
		cache_get_field_content(0, "login_ip", ip, dbHandle, 32);
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		if(PI[playerid][data_ADMLVL] < 6 && admin != 0) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		else if(PI[playerid][data_ADMLVL] < admin) return SendClientMessage(playerid, CG, "Вы не можете наказать этого игрока");
		member1 = 0;
		leader = 0;
		rank = 0;
		admin = 0;
		adminsnumber = 0;
		GetPVarString(playerid,"roffban", reason, 32);
		new str_q[512];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `leader` = '%d', `rank` = '%d', `admlvl` = '%d', `adminsnumber` = '%d' WHERE `name` = '%s'", member1, leader, rank, admin, adminsnumber, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new str_q2[300];
	    mysql_format(dbHandle,str_q2, sizeof(str_q2), "INSERT INTO `banlist` ( `name`,`admin`, `day`, `text`, `ip`) VALUES ( '%e', '%e', '%d', '%e', '%e')",names,PI[playerid][data_NAME],GetPVarInt(playerid, "offbantime"),reason,ip);
	    mysql_function_query(dbHandle, str_q2, false, "", "");
	    new vk_send[250];
	    format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал игрока %s оффлайн на %d дней. Причина: %s",PI[playerid][data_NAME], names, GetPVarInt(playerid, "offbantime"), reason);
		SendVKTest(playerid, vk_send, 3);
		if(vkid != 0) {
			new vk_to[250];
			format(vk_to, sizeof(vk_to), "Ваш аккаунт (%s) заблокирован на %d дней. Причина: %s (для обжалования на forum.arcanarp.online)", names, GetPVarInt(playerid, "offbantime"), reason);
			SendVKServer(playerid, vk_to, 1, vkid);
		}
	}
	return 1;
}
CMD:vw(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CG, "Используйте: /vw [ID виртуального мира] (0 - стандартный)");
	if(PI[playerid][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Ошибка авторизации и аутентификации");
	if(params[0] > 500 || params[0] < 0) return SendClientMessagef(playerid, CG, "ID виртуального мира должен быть не больше 500 и не меньше 0");
	SetPlayerVirtualWorld(playerid, params[0]);
	foreach(new i:Player) if(PI[i][data_ADMLVL] != 0) SendClientMessagef(i, COLOR_ADMINCHAT, "[%s #%d] %s[%d] перешёл в виртуальный мир №%d", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid, params[0]);
	return 1;
}
CMD:sleep(playerid)
{
    if(GetPVarInt(playerid,"Counting") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 2 минуты");
	if(PI[playerid][data_LOGGED] == false)return SendClientMessage(playerid,CG,"Ошибка авторизации и аутентификации");
	if(PI[playerid][data_LEADER] != 0) return SendClientMessage(playerid, CG, "Лидер не может спать на посту");
	if(PI[playerid][data_ADMLVL] != 0 && PI[playerid][data_ADMLVL] < 1) return SendClientMessage(playerid, CG, "Администрация сервера не может ложится в /sleep");
	if(GetPVarInt(playerid, "Sleep") == 0) {
	    SetPVarInt(playerid, "Sleep", 1);
	    new Float:x, Float:y, Float:z;
	    GetPlayerPos(playerid, x, y, z);
		TextSleep[playerid] = Create3DTextLabel("Спит", 0xcd7a7aFF, x, y, z, 30.0, -1, -1);
		Attach3DTextLabelToPlayer(TextSleep[playerid], playerid, 0.0, 0.0, 0.0);
		ApplyAnimation(playerid, !"CRACK", !"CRCKIDLE2", 4.1, 0, 0, 0, 0, 0, 1);
	    ClearAnimations(playerid);
	    ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,0);
	    ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,0);
        TogglePlayerControllable(playerid, 0);
	    SendClientMessage(playerid, 0xcd7a7aFF, "Вы уснули. Используйте {3366cc}/sleep {cd7a7a}чтобы проснутся");
		return 0;
	}
	if(GetPVarInt(playerid, "Sleep") == 1) {
	    SetPVarInt(playerid, "Sleep", 0);
	    Delete3DTextLabel(TextSleep[playerid]);
	    Delete3DTextLabel(TextSleep[playerid]);
	    SendClientMessage(playerid, 0xcd7a7aFF, "Вы проснулись");
	    ClearAnimations(playerid);
	    TogglePlayerControllable(playerid, 1);
	    SetPVarInt(playerid,"Counting",gettime() + 120);
	    return 0;
	}
	return 1;
}
CMD:fix(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new vehicle = GetNearestVehicle(playerid);
	if(vehicle) {
	    if(PI[playerid][data_FIXCOMPL] == 0) return SendClientMessage(playerid, CG, "Чтобы починить этот транспорт требуется ремотный набор #1");
	    if(GetPVarInt(playerid, "Sleep") == 1) return SendClientMessage(playerid, CG, "Команда недоступна в данный момент");
		if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CG,"Вы не должны находиться в транспорте");
	    PI[playerid][data_FIXCOMPL]--;
	    SendClientMessagef(playerid, 0x69b867FF, "Для починки был использован Ремотный набор #1 (неизвестно) (осталось: %d шт)", PI[playerid][data_FIXCOMPL]);
		if(vehicle) RepairVehicle(vehicle);
		else SendClientMessage(playerid, CG, "Рядом с Вами нет транспорта");
	}
	else SendClientMessage(playerid, CG, "Рядом с Вами нет транспорта");
	return 1;
}
CMD:storage(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_MEMBER] != 5 && PI[playerid][data_RANK] < 9 ||
	PI[playerid][data_MEMBER] != 6 && PI[playerid][data_RANK] < 9 ||
	PI[playerid][data_MEMBER] != 7 && PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(PI[playerid][data_MEMBER] == 5) {
		switch(rostov_wh[3]) {
		    case 0: {
		        rostov_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
						new str1[174];
                        format(str1,sizeof(str1),"Склад {ff6633}(закрыт)\n{cc6666}Скинхеды\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",rostov_wh[0],rostov_wh[1],rostov_wh[2]);
						UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str1);
				    }
				}
		    }
		    case 1: {
		        rostov_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
				        new str1[174];
                        format(str1,sizeof(str1),"Склад\n{cc6666}Скинхеды\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",rostov_wh[0],rostov_wh[1],rostov_wh[2]);
						UpdateDynamic3DTextLabelText(rostov_sklad_text, -1, str1);
					}
				}
		    }
		}
	}
	if(PI[playerid][data_MEMBER] == 6) {
		switch(maykop_wh[3]) {
		    case 0: {
		        maykop_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
				        new str2[174];
                        format(str2,sizeof(str2),"Склад {ff6633}(закрыт)\n{cc6666}Гопота\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",maykop_wh[0],maykop_wh[1],maykop_wh[2]);
						UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str2);
				    }
				}
		    }
		    case 1: {
		        maykop_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
				        new str2[174];
                        format(str2,sizeof(str2),"Склад\n{cc6666}Гопота\n\
						{FFFFFF}Металл: {e6d455}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {e6d455}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {e6d455}%d / 12000 шт.",maykop_wh[0],maykop_wh[1],maykop_wh[2]);
						UpdateDynamic3DTextLabelText(maykop_sklad_text, -1, str2);
					}
				}
		    }
		}
	}
	if(PI[playerid][data_MEMBER] == 7) {
		switch(odessa_wh[3]) {
		    case 0: {
		        odessa_wh[3] = 1;
				cef_emit_event(playerid, "show-notify", CEFINT(2), CEFSTR("Склад ОПГ закрыт"), CEFSTR("c13537"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
                        new str3[174];
						format(str3,sizeof(str3),"Склад {ff6633}(закрыт)\n{cc6666}Кавказцы\n\
						{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str3);
					}
				}
		    }
		    case 1: {
		        odessa_wh[3] = 0;
				cef_emit_event(playerid, "show-notify", CEFINT(3), CEFSTR("Склад ОПГ открыт"), CEFSTR("487f5f"));
        		foreach(new i:Player) {
				    if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
                        new str3[174];
						format(str3,sizeof(str3),"Склад\n{cc6666}Кавказцы\n\
						{FFFFFF}Металл: {ffcc33}%d / 6000 шт.\n\
						{FFFFFF}Патроны: {ffcc33}%d / 50000 шт.\n\
						{FFFFFF}Вещества: {ffcc33}%d / 12000 шт.",odessa_wh[0],odessa_wh[1],odessa_wh[2]);
						UpdateDynamic3DTextLabelText(odessa_sklad_text, -1, str3);
					}
				}
		    }
		}
	}
	return 1;
}
stock SetPlayerToFacePlayer(playerid, targetid) {
    new Float:PlayerX, Float:PlayerY, Float:PlayerZ, Float:X, Float:Y, Float:Z, Float:ang;
    if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;
    GetPlayerPos(targetid, X, Y, Z);
    GetPlayerPos(playerid, PlayerX, PlayerY, PlayerZ);
    if( Y > PlayerY ) ang = (-acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 90.0);
    else if( Y < PlayerY && X < PlayerX ) ang = (acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 450.0);
    else if( Y < PlayerY ) ang = (acos((X - PlayerX) / floatsqroot((X - PlayerX)*(X - PlayerX) + (Y - PlayerY)*(Y - PlayerY))) - 90.0);
    if(X > PlayerX) ang = (floatabs(floatabs(ang) + 180.0));
    else ang = (floatabs(ang) - 180.0);
    SetPlayerFacingAngle(playerid, ang);
    return 0;
}
callback: GetPunishment(playerid) {
	new rows, fields, type, name[MAX_PLAYER_NAME], reason[144], temp[20], string[625], string1[625], bugfix,logd1,logd2,logd3, support;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "player", name, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(i, "reason", reason, dbHandle, 144);
		cache_get_field_content(i, "type", temp), type = strval (temp);
		cache_get_field_content(i, "support", temp), support = strval (temp);
		cache_get_field_content(i, "day", temp), logd1 = strval (temp);
		cache_get_field_content(i, "mounth", temp), logd2 = strval (temp);
		cache_get_field_content(i, "year", temp), logd3 = strval (temp);
		new ltext[64];
		switch(type) {
			case 1: ltext = "Блокировка аккаунта";
			case 2: ltext = "Игровое предупреждение";
		}
    	format(string,sizeof(string),"%s{252525}%s\t%s\t#%d\t%d.%d.%d\t%s\n",string, name, ltext, support, logd1, logd2, logd3, reason);
    	format(string1,sizeof(string1),"Никнейм\tТип\tИгровой мастер \tДата\tПричина\n%s",string);
    	bugfix = 1;
	}
	if(bugfix == 1) return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Список наказаний", string1, "Закрыть", "");
  	ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Список наказаний", "{252525}В данный момент наказаний игрока нет", "Закрыть", "");
	return 1;
}
CMD:punishment(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid,CG,"Используйте: /punishment [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Данного ID нет на сервере");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Данный игрок не прошел авторизацию");
	new str_q[256];
 	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `punishment` WHERE `player` = '%s'", PI[params[0]][data_NAME]);
 	mysql_function_query(dbHandle, str_q, true, "GetPunishment", "d", playerid);
	return 1;
}
CMD:spawncars(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Используйте: /spawncars [id машины]");
	return SetVehicleToRespawn(params[0]);
}
CMD:cc(playerid) {
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	for(new i; i < 500; i++) SendClientMessageToAll(0xFFFFFFFF,"");
	return SendClientMessageToAll(0xFFFFFFFF,"Игровой мастер очистил чат");
}
CMD:freeze(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 1) return 1;
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, 0xFFFFFFFF, "Введите: /freeze [ID игрока]");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, 0xA19B9BFF, "Игрок не найден");
    if(GetPVarInt(playerid,"Freeze") == 0) {
        SetPVarInt(playerid,"Freeze", 1);
        TogglePlayerControllable(params[0], 0);
        SendClientMessage(params[0], 0xFFFFFFFF, "Игровой мастер заморозил Вас");
        SendClientMessage(playerid, 0xFFFFFFFF, "Вы заморозили игрока");
    }
    else {
         DeletePVar(playerid, "Freeze");
         TogglePlayerControllable(params[0], 1);
         SendClientMessage(params[0], 0xFFFFFFFF, "Игровой мастер разморозил Вас");
         SendClientMessage(playerid, 0xFFFFFFFF, "Вы разморозили игрока");
    }
    return 1;
}
CMD:banip(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 7) return 1;
  	if(sscanf(params, "s[16]", params[0])) return SendClientMessage(playerid, -1, "Используйте: /banip [ip]");
  	new string[24];
  	format(string, sizeof(string), "banip %s", params[0]);
  	SendRconCommand(string);
  	SendClientMessagef(playerid, -1, "IP-адресс ('%d') заблокирован", params[0]);
  	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал IP %d",PI[playerid][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:unbanip(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 7) return 1;
  	if(sscanf(params, "s[16]", params[0])) return SendClientMessage(playerid, -1, "Используйте: /unbanip [ip]");
  	new string[24];
  	format(string, sizeof(string), "unbanip %s", params[0]);
  	SendRconCommand(string);
  	SendClientMessagef(playerid, -1, "IP-адресс ('%d') разблокирован", params[0]);
  	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s разблокировал IP %d",PI[playerid][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
	return 1;
}
CMD:ahp(playerid, params[]) {
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 3) return 1;
	new Float:radius;
	if (sscanf(params, "f", radius)) return SendClientMessage(playerid,COLOR_WHITE,"{}Введите: /ahp [радиус]");
	new Float:player_x, Float:player_y, Float:player_z;
	for(new players = 0; players < MAX_PLAYERS; players++) {
		GetPlayerPos(players, player_x, player_y, player_z);
		if(IsPlayerInRangeOfPoint(playerid, radius, player_x, player_y, player_z)) {
			SetPlayerHealthAC(players, 100.0);
			SendClientMessagef(players, -1,"Игровой мастер #%d изменил Вам здоровье", PI[playerid][ADMINSNUMBER]);
		}
	}
	return 1;
}
CMD:atw(playerid, params[]) {
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 3) return 1;
	new Float:radius;
	if (sscanf(params, "f", radius)) return  SendClientMessage(playerid,COLOR_WHITE,"Введите: /atw [радиус]");
	new Float:player_x, Float:player_y, Float:player_z;
	for(new players = 0; players < MAX_PLAYERS; players++) {
		GetPlayerPos(players, player_x, player_y, player_z);
		if(IsPlayerInRangeOfPoint(playerid, radius, player_x, player_y, player_z)) {
			ResetPlayerWeapons(players);
			SendClientMessagef(players, -1,"Игровой мастер #%d изъял Ваше оружие", PI[playerid][ADMINSNUMBER]);
		}
	}
	new string[145];
    format(string, sizeof(string), "Вы изъяли оружие у игроков в установленном радиусе.",PI[playerid][data_NAME],params[0]);
	ProxDetector(radius, playerid, string, CY, CY, CY, CY, CY);
	return SetPlayerChatBubble(playerid, string, CY, 20.0, 4000);
}
CMD:ip(playerid, params[]) {
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 7) return 1;
	if(isnull(params)) return 0;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CG, "Используй: /ip [ID игрока]") & 0;
	if(params[0] == INVALID_PLAYER_ID) return 0;
	new string[59+(-2+15)+1];
	GetPlayerIp(params[0], string, sizeof string);
	return SendClientMessagef(playerid, -1, "IP игрока на данный момент: %s", string);
}
alias:hideme("as");
CMD:hideme(playerid) {
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
    return SendClientMessage(playerid, CG, "Нажмите - Y");
}
stock UpdatePlayerDataStr(const playerid, const field[], data[]) {
	mysql_tqueryf(dbHandle, "UPDATE `accounts` SET `%s` = '%s' WHERE `id` = '%d' LIMIT 1", field, data, PI[playerid][data_ID]);
	return printf("UpdatePlayerDataStr UPDATE `accounts` SET `%s` = '%s' WHERE `id` = '%d' LIMIT 1", field, data, PI[playerid][data_ID]);
}
CMD:givechest(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params,"iii", params[0])) return SendClientMessage(playerid, CG, "Используйте: /givechest [ID игрока]");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передать аптечку самому себе");
	if(PI[playerid][data_HEALPACK] == 0) return SendClientMessage(playerid,CG,"У вас нет набор аптечек");
	if(PI[params[0]][data_HEALPACK] == 3) return SendClientMessage(playerid,CG,"У игрока уже есть 3 набора аптечек");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Игрок слишком далеко от Вас");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_GIVECHEST);
}
stock ShowDialogRule_1(playerid) {
    return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{EE3366}Правила сервера", "\
	{f00e5d}Игровой процесс\n\
	{f00e5d}Нарушения за которые Вы можете получить наказание или же блокировку{252525}\n\
	• Запрещено использование посторонних программ {f00e5d}(читы; скрипты; моды, дающие приемущества над игроками){252525}\n\
	• Использование недоработок {f00e5d}(багов) {252525}сервера\n\
	• Развод игроков на имущество и игровую валюту\n\
	• Выдача себя за администрацию\n\
	• Угроза баном или другим наказанием\n\
	• Убийство людей без причины {f00e5d}(DeathMatch){252525}\n\
	• Убийство с помощью транспорта {f00e5d}(DriveBy){252525}\n\
	• Убийство на месте спавна {f00e5d}(SpawnKill){252525}\n\
	• Убийство членов своей фракции {f00e5d}(TeamKill){252525}\n\
	• Повторное убийство одного и того же человека {f00e5d}(RevengeKill){252525}\n\
	• Выход из игры или выход в AFK при {f00e5d}РП {252525}ситуации\n\
	• БанниХоп {f00e5d}(Бег с прыжками){252525}\n\
	• ВиллиХоп {f00e5d}(Высокие прыжки на велосипеде){252525}\n\
	• Доставать оружие без отыгровки в зелёной зоне\n\
	• Продавать оружие в людном месте\n\
	• Геройствовать - стреляться 1 против 7 {f00e5d}(PowerGaming){252525}\n\
	• Использовать аптечки во время боя\n\
	• Использование отвода {f00e5d}( Пистолет )и +С", "Закрыть", "");
}
stock ShowDialogResurs(playerid) {
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST,
	"{EE3366}Ресурсы проекта{252525}",
	"Форум\t\t\t\t\t{f00e5d}"FORUM"\n\
	{252525}Тех. поддержка\t\t\t{f00e5d}vk.com/"VK"\n\
	{252525}Сообщество ВКонтакте\t\t{f00e5d}vk.com/"VK"\n\
	{252525}Аркановый сад\t\t\t{f00e5d}vk.com/"FREE"\n\
	{252525}Блог разработчиков\t\t\t{f00e5d}vk.com/"DEV"", "Назад", "Закрыть");
	return 1;
}
stock SendProposition(playerid, to_player, type, value_1 = 0, value_2 = 0) {
	if(GetPVarInt(to_player,"Counting_prop") > gettime()) return SendClientMessage(playerid, CG, "Игрок может получить 1 предложение раз в 10 секунд");
	if(send_proposition[playerid] != -1) return SendClientMessage(playerid, -1, "Используйте {FF9900}/cancel {FFFFFF}чтобы отозвать предыдущее предложение");
    new str1[145], str2[145];
	switch(type) {
		case PROPOSITION_TYPE_GIVECHEST: {
			format(str1,sizeof(str1),"Вы предложили %s взять вашу аптечку.",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взять аптечку",PI[playerid][data_NAME], Fraction_Name[PI[playerid][data_MEMBER]]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_GIVEMASK: {
			format(str1,sizeof(str1),"Вы предложили %s взять вашу маску.",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взять маску",PI[playerid][data_NAME], Fraction_Name[PI[playerid][data_MEMBER]]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_HI: {
			format(str1,sizeof(str1),"Вы предложили пожать руку %s",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам пожать руку.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x36e96cFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_MEDCARD: {
			format(str1,sizeof(str1),"Вы предложили взглянуть на Вашу Мед. карту %s",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взглянуть на его Мед. карту.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x36e96cFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_LIC: {
			format(str1,sizeof(str1),"Вы предложили взглянуть на Ваши лицензии %s",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взглянуть на его лицензии.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x36e96cFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_DICE: {
			format(str1,sizeof(str1),"Вы предложили %s сыграть в кости на %d рублей",PI[to_player][data_NAME],value_1);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам сыграть в кости на %d рублей",PI[playerid][data_NAME],value_1);
			SendClientMessage(to_player, 0x36e96cFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_PASS: {
			format(str1,sizeof(str1),"Вы предложили взглянуть на Ваш паспорт %s",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взглянуть на его паспорт.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_SKILLS: {
			format(str1,sizeof(str1),"Вы предложили взглянуть на Ваши навыки владения оружием %s",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взглянуть на его навыки владения оружием.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_INVITE: SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		case PROPOSITION_TYPE_FREE: {
			format(str1,sizeof(str1),"Вы предложили выйти из тюрьмы игроку %s за %d рублей",PI[to_player][data_NAME],value_1);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"Адвокат %s предложил Вам выйти из тюрьмы за %d рублей.",PI[playerid][data_NAME],value_1);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_LIC1: {
			format(str1,sizeof(str1),"Вы предложили купить лицензию на оружие игроку %s за 30000 рублей",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам купить лицензию на оружие за 30000 рублей.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_LIC2: {
			format(str1,sizeof(str1),"Вы предложили купить водительские права игроку %s за 5000 рублей",PI[to_player][data_NAME]);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам купить водительские права за 5000 рублей.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_SELLGUN: {
			new gun = GetPlayerWeapon(playerid);
			new cena = GetPVarInt(playerid, "cena")/GetPVarInt(playerid, "pt");
			format(str1,sizeof(str1),"Вы предложили %s купить у Вас %s (%d пт) за %d руб (%d за 1 пт)",PI[to_player][data_NAME], weapon_names[gun], value_1, GetPVarInt(playerid, "cena"),cena);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам купить у него %s (%d пт) за %d руб (%d за 1 пт)",PI[playerid][data_NAME], weapon_names[gun], value_1, GetPVarInt(playerid, "cena"),cena);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_GIVEGUN: {
			new gun = GetPlayerWeapon(playerid);
			format(str1,sizeof(str1),"Вы предложили %s взять у Вас %s (%d пт)",PI[to_player][data_NAME], weapon_names[gun], value_1);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"%s предложил Вам взять у него %s (%d пт)",PI[playerid][data_NAME], weapon_names[gun], value_1);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		case PROPOSITION_TYPE_HEAL: {
			new gun = GetPlayerWeapon(playerid);
			format(str1,sizeof(str1),"Вы предложили %s пройти курс платного лечения.",PI[to_player][data_NAME], weapon_names[gun], value_1);
			SendClientMessage(playerid, 0x36e96cFF, str1);
			format(str2,sizeof(str2),"Сотрудник БЦРБ %s предложил Вам пройти курс платного лечения за 2500 руб.",PI[playerid][data_NAME]);
			SendClientMessage(to_player, 0x33ceffFF, str2);
			SendClientMessage(to_player, 0xccccccFF, "Введите {2dc45b}/yes{cccccc} чтобы согласиться или {fd6533}/no{cccccc} чтобы отказатся");
		}
		default: return 1;
	}
	SetPVarInt(to_player,"Counting_prop",gettime() + 10);
	send_proposition[playerid] = to_player;
	incoming_proposition[to_player] = playerid;
	incoming_proposition_type[to_player] = type;
	incoming_proposition_value[to_player][0] = value_1;
	incoming_proposition_value[to_player][1] = value_2;
	return 1;
}
CMD:yes(playerid, params[]) {
	new proposition = incoming_proposition[playerid];
	new type = incoming_proposition_type[playerid];
	new value_1 = incoming_proposition_value[playerid][0];
	if(proposition != -1) {
		if(send_proposition[proposition] == playerid) ClearProposition(proposition);
		else type = -1;
		ClearProposition(playerid);
		if(!IsPlayerConnected(proposition)) return SendClientMessage(playerid, 0x999999FF, "Игрок вышел из игры");
		new Float: x, Float: y, Float: z;
		GetPlayerPos(proposition, x, y, z);
		new Float: dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
		if(dist > 10.0) return SendClientMessage(playerid, 0x999999FF, "Игрок слишком далеко");
		switch(type) {
			case PROPOSITION_TYPE_GIVECHEST:
			{
                new str[145];
			 	PI[proposition][data_HEALPACK]--;
				PI[playerid][data_HEALPACK]++;
				format(str,sizeof(str),"%s передал аптечку %s",PI[proposition][data_NAME], PI[playerid][data_NAME]);
			    ProxDetector(25.0, playerid, str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
			    SetPlayerChatBubble(proposition, "передал аптечку", 0xFF99CCFF, 20.0, 4000);
			}
			case PROPOSITION_TYPE_GIVEMASK:
			{
                new str[145];
			 	PI[proposition][data_MASK]--;
				PI[playerid][data_MASK]++;
				format(str,sizeof(str),"%s передал маску %s",PI[proposition][data_NAME], PI[playerid][data_NAME]);
			    ProxDetector(25.0, playerid, str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
			    SetPlayerChatBubble(proposition, "передал маску", 0xFF99CCFF, 20.0, 4000);
			}
			case PROPOSITION_TYPE_HI:
			{
				new Float:angle, str[144];
				GetPlayerFacingAngle(proposition, angle);
				SetPlayerFacingAngle(playerid, angle + 180);
				ApplyAnimation(proposition,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				format(str, sizeof(str),"%s пожал руку %s", PI[proposition][data_NAME], PI[playerid][data_NAME]);
			 	ProxDetector(25.0, playerid, str, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF);
		 	}
		 	case PROPOSITION_TYPE_MEDCARD:
		 	{
				new str_3[285];
				format(str_3,sizeof(str_3),"ЦРБ птг. Батырево: \t\t\tДокумент №%d\n\
				Гражданин РФ\t\t\t{3377cc}%s\n\
				{252525}Анализы\t\t\tПройдены\n\
				{252525}Физическое состояние\t\t\tНормальное\n\
				{252525}Зависимость\t\t\tНет", PI[proposition][data_MEDNUM], PI[proposition][data_NAME]);
				return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Лицензии", str_3, "Закрыть", "");
		 	}
		 	case PROPOSITION_TYPE_LIC:
		 	{
		        new licb[40+1], licg[40+1];
				switch(PI[proposition][data_LICB]) {
     				case 1: format(licb,sizeof(licb),"{252525}Водительские права: \t\t\t{FF6347}-");
					case 2: format(licb,sizeof(licb),"{252525}Водительские права: \t\t\t{24ff78}+");
				}
				switch(PI[proposition][data_LICG]) {
     				case 1: format(licg,sizeof(licg),"{252525}Лицензия на оружие: \t\t\t{FF6347}-");
					case 2: format(licg,sizeof(licg),"{252525}Лицензия на оружие: \t\t\t{24ff78}+");
				}
				new str_3[285];
				format(str_3,sizeof(str_3),"Автошкола птг. Батырево: \t\t\tДокумент №%d\nГражданин РФ\t\t\t{3377cc}%s\n%s\n%s", PI[proposition][data_LICNUM], PI[proposition][data_NAME], licb, licg);
				ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, PI[proposition][data_NAME], str_3, "Закрыть", "");
		 	}
		 	case PROPOSITION_TYPE_DICE:
			{
   				new money = value_1;
		        if(get_player_money(proposition) < money) {
					ClearProposition(proposition);
				    SendClientMessage(proposition, CG, "У Вас недостаточно денег на руках");
					return 1;
				}
    			if(get_player_money(playerid) < money) {
					ClearProposition(proposition);
					SendClientMessage(playerid, CG, "У игрока недостаточно денег на руках");
					return 1;
				}
		        new p1 = RandomEX(1,12);
		        new p2 = RandomEX(1,12);
				if(p1 > p2) {
				    give_player_money(playerid, -money, "dice#1",24077);
				    give_player_money(proposition, money, "dice#2",24078);
					cef_emit_event(proposition, "show-center-notify", CEFINT(5), CEFSTR("Вы выиграли"));
		    		cef_emit_event(playerid, "show-center-notify", CEFINT(3), CEFSTR("Вы проиграли"));
				}
				else if(p1 < p2) {
				    give_player_money(playerid, money, "dice#2",24081);
				    give_player_money(proposition, -money, "dice#1",24082);
					cef_emit_event(playerid, "show-center-notify", CEFINT(5), CEFSTR("Вы выиграли"));
		    		cef_emit_event(proposition, "show-center-notify", CEFINT(3), CEFSTR("Вы проиграли"));
				}
				else
				{}
		        new str[145];
				format(str,sizeof(str),"%s и %s бросили несколько игральных костей {FF9966}(%d|%d)",PI[proposition][data_NAME],PI[playerid][data_NAME], p1,p2);
		        ProxDetector(25.0, proposition, str, 0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF,0xFF99CCFF);
			}
			case PROPOSITION_TYPE_PASS:
			{
				new playerhouse[5];
				if(PI[proposition][data_HOUSE] != -1) format(playerhouse,sizeof(playerhouse),PI[proposition][data_HOUSE]);
				else format(playerhouse,sizeof(playerhouse),"---");
				new dialog[256];
				format(dialog,sizeof(dialog),"Имя\t\t\t\t%s\nЛет в области\t\t\t%d\nЗаконнопослушность\t\t%d\nУровень розыска\t\t%d\n{252525}Номер дома\t\t\t%d\n{252525}Место работы\t\t%s",PI[proposition][data_NAME],PI[proposition][data_LVL],PI[proposition][data_ZAKON],PI[proposition][data_WANTED],playerhouse,PI[proposition][data_JOB]);
				ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Паспорт", dialog, "Закрыть", "");
				SetPlayerChatBubble(playerid, "просматривает документы", 0xFF99CCFF, 20.0, 4000);
			}
			case PROPOSITION_TYPE_SKILLS:
			{
				new dialog[256];
				format(dialog,sizeof(dialog),"1. ТТ:\t\t\t%d %%\n2. ТТ c глушителем:\t%d %%\n3. Desert Eagle:\t\t%d %%\n4. Дробовик:\t\t\t%d\n5. Автоматический дробовик:\t\t\t%d %%\n6. АК-47:\t\t%d %%", PI[proposition][data_PISTOL],PI[proposition][data_SDPISTOL],PI[proposition][data_DEAGLE],PI[proposition][data_SHOTGUN],PI[proposition][data_MP5],PI[proposition][data_AK47]);
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Навыки владения оружием", dialog, "Закрыть", "");
			 	SetPlayerChatBubble(playerid, "просматривает навыки владения оружием", 0xFF99CCFF, 20.0, 4000);
			}
			case PROPOSITION_TYPE_INVITE:
			{
			    pDialogCurrectTime[playerid] = gettime() + 5;
				pDialogTimer[playerid] = SetTimerEx("DialogTimerInvite", 500, true, "i", playerid);
			    SetPVarInt(playerid,"proposition",proposition);
				return 1;
			}
			case PROPOSITION_TYPE_FREE:
			{
                if(get_player_money(playerid) < value_1) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-value_1,"#3",24117);
				give_player_money(proposition,value_1,"#4",24118);
				switch(PI[playerid][data_JAIL]) {
    				case 1: {
				        SetPlayerPosAC(playerid, 22.9993,281.1662,12.0260);
					    SetPlayerVirtualWorld(playerid,0);
					    SetPlayerInterior(playerid,0);
						SetPlayerFacingAngle(playerid, 66);
						SetCameraBehindPlayer(playerid);
					    SendClientMessage(playerid,0x9F81F7FF,"Адвокат смог освободить Вас из тюрьмы");
				    }
				}
			}
			case PROPOSITION_TYPE_LIC1:
			{
				if(get_player_money(playerid) < 30000) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-30000,"#80",24133);
				give_player_money(proposition,3000,"#82",24134);
				PI[playerid][data_LICG] = 1;
				if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_NUMBER] = RandomEX(1111111, 6666666);
				SendClientMessage(playerid, 0x9F81F7FF, "Вы купили лицензию на оружие за 30000 рублей");
			}
			case PROPOSITION_TYPE_LIC2:
			{
				if(get_player_money(playerid) < 5000) return SendClientMessage(playerid,CG,"У Вас недостаточно денег на руках");
				give_player_money(playerid,-5000,"#3",24142);
				give_player_money(proposition,5000,"#4",24143);
				PI[playerid][data_LICB] = 1;
				if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_NUMBER] = RandomEX(1111111, 6666666);
				SendClientMessage(playerid, 0x9F81F7FF, "Вы купили водительские права за 5000$");
			}
			case PROPOSITION_TYPE_GIVEGUN:
			{
			    pDialogCurrectTime[playerid] = gettime() + 5;
				pDialogTimer[playerid] = SetTimerEx("DialogTimerGiveGun", 500, true, "i", playerid);
				SetPVarInt(playerid, "proposition", proposition);
				SetPVarInt(playerid, "value_1", value_1);
			}
			case PROPOSITION_TYPE_SELLGUN:
			{
			    pDialogCurrectTime[playerid] = gettime() + 5;
				pDialogTimer[playerid] = SetTimerEx("DialogTimerSellGun", 500, true, "i", playerid);
				SetPVarInt(playerid, "proposition", proposition);
				SetPVarInt(playerid, "value_1", value_1);
			}
			case PROPOSITION_TYPE_HEAL:
			{
			    new str1[144];
				format(str1,sizeof(str1),"Сотрудник БЦРБ %s провёл курс платного лечения.",PI[proposition][data_NAME]);
				SendClientMessage(proposition, 0xFF99CCFF, str1);
				give_player_money(playerid, -2500,"#80",24160);
				give_player_money(proposition, 5000,"#4",24161);
				if(PI[playerid][data_VIP] == 0) SetPlayerHealthAC(playerid, 100);
				else SetPlayerHealthAC(playerid, 176);
			}
			default: return SendClientMessage(playerid, 0x999999FF, "В данный момент Вам ничего не предлагают");
		}
	}
	else SendClientMessage(playerid, 0x999999FF, "В данный момент Вам ничего не предлагают");
	return 1;
}
CMD:no(playerid, params[]) {
	new proposition = incoming_proposition[playerid];
	if(proposition == -1) return SendClientMessage(playerid, 0x999999FF, "В данный момент Вам ничего не предлагают");
	if(send_proposition[proposition] == playerid) {
		ClearProposition(proposition);
		new str_1[185];
		format(str_1, sizeof str_1, "%s отказался от Вашего предложения", PI[playerid][data_NAME]);
		SendClientMessage(proposition, 0x999999FF, str_1);
		new str_3[185];
		format(str_3, sizeof str_3, "Вы отказались от предложения игрока %s", PI[proposition][data_NAME]);
		SendClientMessage(playerid, 0x999999FF, str_3);
	}
	else SendClientMessage(playerid, 0x999999FF, "Вы отказались от предложения игрока");
	ClearProposition(playerid);
	return 1;
}
CMD:cancel(playerid, params[]) {
	new send_to_player = send_proposition[playerid];
	if(send_to_player == -1) return SendClientMessage(playerid, 0x999999FF, "У Вас нет активных предложений");
	new player_incoming_proposition = incoming_proposition[send_to_player];
	ClearProposition(playerid);
	if(player_incoming_proposition == playerid) {
		ClearProposition(send_to_player);
		new str_1[185];
		format(str_1, sizeof str_1, "%s отозвал свое предложение", PI[playerid][data_NAME]);
		SendClientMessage(send_to_player, 0x999999FF, str_1);
		new str_3[185];
		format(str_3, sizeof str_3, "Вы отозвали свое предложение для %s", PI[send_to_player][data_NAME]);
		SendClientMessage(playerid, 0x999999FF, str_3);
	}
	else SendClientMessage(playerid, 0x999999FF, "Вы отозвали свое последнее предложение");
	return 1;
}
CMD:tome(playerid, params[]) {
	new gotplayer;
	if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда вам недоступна");
	if(sscanf(params, "u", gotplayer)) return SendClientMessage(playerid, CG, "Введите: /tome [ID игрока]"); {
            if(playerid == gotplayer) return SendClientMessage(playerid, CG, "Вы не можите сопровождать самого себя ");
            else if(!IsPlayerConnected(gotplayer)) return SendClientMessage(playerid, CG, "Игрок не в сети");
            else if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CG, "Вы не можете потащить с машины");
            else if(FollowBy[playerid] != MAX_PLAYERS) return SendClientMessage(playerid, CG, "Вы не можете вести больше игроков");
            else if(GetPVarInt(params[0],"PlayerCuffed") == 1) return SendClientMessage(playerid,CG,"Игрок должен быть в наручниках");
            else if(IsPlayerInAnyVehicle(gotplayer)) return SendClientMessage(playerid, CG, "Вы не можете потащить за собой когда игрок в машине");
            new Float: X, Float: Y, Float: Z; GetPlayerPos(gotplayer, X, Y, Z);
            if(!IsPlayerInRangeOfPoint(playerid, 1.5, X, Y, Z)) return SendClientMessage(playerid, CG, "Игрок далеко от вас");
            else if(FollowBy[gotplayer] != MAX_PLAYERS) {
                SetPVarInt(playerid, "TempFollowBy", -1);
                FollowBy[gotplayer] = MAX_PLAYERS;
                KillTimer(TimerForPlayer[gotplayer]);
                TimerForPlayer[gotplayer] = MAX_PLAYERS;
                ClearAnimations(playerid);
                TogglePlayerControllable(gotplayer, 1);
                SendClientMessagef(playerid, CG, "Вы больше не контролируете %s", PI[gotplayer][data_NAME]);
                return SendClientMessagef(gotplayer, CG, "%s %s перестал Вас контролировать", rang_police[PI[playerid][data_RANK]-1][frName], PI[gotplayer][data_NAME]);
            }
            if(GetPVarInt(playerid, "TempFollowBy") != -1) return SendClientMessage(playerid, 0xAA3333AA, "Вы не можете сопровождать больше 2х игроков одновременно");
            FollowBy[gotplayer] = playerid;
            SetPVarInt(playerid, "TempFollowBy", gotplayer);
            TimerForPlayer[gotplayer] = SetTimerEx("FollowToPlayer", 1000, 1, "i", gotplayer);
            SendClientMessagef(playerid, CG, "Вы начали контролировать игрока %s", PI[gotplayer][data_NAME]);
            return SendClientMessagef(gotplayer, CG, "%s %s начал Вас контролировать", rang_police[PI[playerid][data_RANK]-1][frName], PI[gotplayer][data_NAME]);
    }
}
callback: FollowToPlayer(playerid)
{
    static AnimShot[MAX_PLAYERS];
    if(!IsPlayerConnected(FollowBy[playerid]))
    {
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        FollowBy[playerid] = MAX_PLAYERS;
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        AnimShot[playerid] = false;
        return 1;
    }
    else if(!IsPlayerConnected(playerid))
    {
		SendClientMessagef(FollowBy[playerid], CG, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][data_NAME]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else if(FollowBy[playerid] == MAX_PLAYERS)
    {
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        return 1;
    }
    else if(IsPlayerInAnyVehicle(playerid))
    {
		SendClientMessagef(FollowBy[playerid], CG, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][data_NAME]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        AnimShot[playerid] = false;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else if(GetPlayerVirtualWorld(FollowBy[playerid]) != GetPlayerVirtualWorld(playerid) || GetPlayerInterior(FollowBy[playerid]) != GetPlayerInterior(playerid))
    {
        new Float: X, Float: Y, Float: Z;
        GetPlayerPos(FollowBy[playerid], X, Y, Z);
        SetPlayerPos(playerid, X, Y, Z);
        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(FollowBy[playerid]));
        SetPlayerInterior(playerid, GetPlayerInterior(FollowBy[playerid]));
        TogglePlayerControllable(playerid, 0);
        AnimShot[playerid] = false;
        return 1;
    }
    new Float: GotDistance = GetDistanceBetweenPlayers(playerid, FollowBy[playerid]);
    if(GotDistance < 0.95)
    {
        TogglePlayerControllable(playerid, 0);
        SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
        AnimShot[playerid] = false;
        return 1;
    }
    else if(GotDistance > 29.0)
    {
		SendClientMessagef(FollowBy[playerid], CG, "Вы больше не контролируете %s",PI[GetPVarInt(playerid, "TempFollowBy")][data_NAME]);
        SetPVarInt(FollowBy[playerid], "TempFollowBy", -1);
        TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid);
        KillTimer(TimerForPlayer[playerid]);
        TimerForPlayer[playerid] = MAX_PLAYERS;
        FollowBy[playerid] = MAX_PLAYERS;
        return 1;
    }
    else
    {
        TogglePlayerControllable(playerid, 1);
        SetPlayerToFacePlayer(playerid, FollowBy[playerid]);
        ApplyAnimation(playerid, "ped", "WALK_civi", 6.0, 1, 1, 1, 1, 0, 1);
    }
    return 1;
}
public Float:GetDistanceBetweenPlayers(p1,p2) {
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
CMD:givemask(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params,"iii", params[0])) return SendClientMessage(playerid, CG, "Используйте: /givemask [ID игрока]");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передать маску самому себе");
	if(PI[playerid][data_MASK] == 0) return SendClientMessage(playerid,CG,"У вас нет маски");
	if(PI[params[0]][data_MASK] == 1) return SendClientMessage(playerid,CG,"У игрока уже есть маска");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Игрок слишком далеко от Вас");
	SendProposition(playerid, params[0], PROPOSITION_TYPE_GIVEMASK);
	return 1;
}
stock open_lmenu(playerid) {
	new dialog[712];
	format(dialog,sizeof(dialog),
    "{f00e5d}1. Управление группами\n\
	{f00e5d}2. Заявки на перевод\n\
	{f00e5d}3. Список всех участников организации\n\
	{f00e5d}4. Чёрный список\n\
	{f00e5d}5. Автопарк организации\n\
	{3CB371}6. Принять в организацию\n\
	{3CB371}7. Уволить из организации\n\
	{3CB371}8. Уволить из огранизации оффлайн\n\
	{3CB371}9. Выдать выговор\n\
	{3CB371}10. Выдать выговор оффлайн\n\
	{3CB371}11. Снять выговор\n\
	{3CB371}12. Снять выговор оффлайн\n\
	{3CB371}13. Изменить ранг\n\
	{3CB371}14. Изменить внешность\n\
	{3CB371}15. Изменить группу\n\
	{6dbdd8}16. Расформировать организацию");
	return ShowPlayerDialog(playerid, 7500, DIALOG_STYLE_LIST, "{db2751}Меню лидера", dialog, "Выбрать", "Отмена");
}
cmd:lmenu(playerid) {
    if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда доступна лидерам организаций и их заместителям");
    return open_lmenu(playerid);
}
CMD:offuninvite(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 10) return SendClientMessage(playerid, CG, "Данная команда доступна лидерам организаций");
    new param_name[24];
	if(sscanf(params, "s[144]", param_name)) return SendClientMessage(playerid,CG,"Используйте: /offuninvite [имя]");
    foreach(Player, i) {
	    new szName[64];
	    if(!IsPlayerConnected(i)) continue;
	    GetPlayerName(i,szName,64);
	    if(!strcmp(param_name, szName, false)) return SendClientMessage(playerid,CG,"Этот игрок в сети, используйте /uninvite");
    }
	if(GetString(param_name, PI[playerid][data_NAME])) return SendClientMessage(playerid, CG, "Вы не можете уволить себя");
	new str_q[256];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", param_name);
    mysql_function_query(dbHandle, str_q, true, "offuninvite", "is", playerid, param_name);
	return 1;
}
callback: offuninvite(playerid, names[]) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
	    new twarn, members, ranks, leaders, groupid;
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
		cache_get_field_content(0, "groupid", temp), groupid = strval (temp);
		if(members != PI[playerid][data_MEMBER]) return SendClientMessage(playerid, CG, "Игрок должен состоять в Вашей организации");
	    static name[24];
		SetString(name, NameRang(playerid));
		name = NameRang(playerid);
		new res[144];
	    format(res, sizeof(res), "Увольнение оффлайн");
		SetPVarString(playerid, "text_wbook", res);
		new query5[144];
		mysql_format(dbHandle, query5, sizeof(query5), "SELECT * FROM `accounts` WHERE name = '%e'", names);
		mysql_function_query(dbHandle, query5, true, "WbookOff", "is", playerid, names);
	    new string[144];
	    format(string, sizeof(string), "(( %s %s[%d] уволил оффлайн %s ))", name, PI[playerid][data_NAME], playerid, names);
        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
        members = 0;
		ranks = 0;
		leaders = 0;
		groupid = 0;
		new str_q[345];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `rank` = '%d', `leader` = '%d', `groupid` = '%d', `twarn` = '%d' WHERE `name` = '%s'",members, ranks, leaders, groupid, twarn, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
	}
	else SendClientMessage(playerid, CG, "Игрок не найден");
	return 1;
}
CMD:unofftwarn(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 9) return 1;
	if(sscanf(params, "s[144]", params[0])) return SendClientMessage(playerid,CG,"Используйте: /unofftwarn [имя]");
 	if(params[0] == PI[playerid][data_NAME]) return SendClientMessage(playerid, CG, "Вы не можете снять выговор себе");
	new name[MAX_PLAYER_NAME];
	format(name, sizeof(name), "%s", params[0]);
	new str_q[110];
	mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%s'", name);
    mysql_function_query(dbHandle, str_q, true, "UnOffTwarn", "i", playerid);
	return 1;
}
callback: UnOffTwarn(playerid) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
	    new names[24], twarn, members, ranks;
	    cache_get_field_content(0, "name", names, dbHandle);
		cache_get_field_content(0, "twarn", temp), twarn = strval (temp);
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
	    if(ranks == 10 && PI[playerid][data_RANK] == 9) return SendClientMessage(playerid, CG, "Вы не можете снять выговор лидеру");
		if(members != PI[playerid][data_MEMBER]) return SendClientMessage(playerid, CG, "Игрок должен состоять в Вашей организации");
	    if(twarn == 0) return SendClientMessage(playerid, CG, "Игрок не имеет выговоров");
		new str[30];
		switch(PI[playerid][data_MEMBER]) {
	 	    case 1:format(str,sizeof(str),"%s",rang_gov[PI[playerid][data_RANK]-1][frName]);
			case 2:format(str,sizeof(str),"%s",rang_army[PI[playerid][data_RANK]-1][frName]);
			case 3:format(str,sizeof(str),"%s",rang_police[PI[playerid][data_RANK]-1][frName]);
			case 4:format(str,sizeof(str),"%s",rang_hospital[PI[playerid][data_RANK]-1][frName]);
		    case 5:format(str,sizeof(str),"%s",rang_skinhead[PI[playerid][data_RANK]-1][frName]);
		    case 6:format(str,sizeof(str),"%s",rang_gopota[PI[playerid][data_RANK]-1][frName]);
		    case 7:format(str,sizeof(str),"%s",rang_kavkaz[PI[playerid][data_RANK]-1][frName]);
		}
		twarn--;
	    new string[144];
	    format(string, sizeof(string), "(( %s %s[%d] снял выговор оффлайн %s [%d/3] ))", str, PI[playerid][data_NAME], playerid, names, twarn);
        SendRadioMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, string);
		new str_q[144];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `twarn` = '%d' WHERE `name` = '%s'", twarn, names);
		mysql_function_query(dbHandle, str_q, false, "", "");
	}
	else SendClientMessage(playerid, CG, "Игрок не найден");
	return 1;
}
cmd:transfer(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
   	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_MEMBER] == 5) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
	if(PI[playerid][data_MEMBER] == 6) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
	if(PI[playerid][data_MEMBER] == 7) return SendClientMessage(playerid, CY, "Переводы доступны только в Государственых Организациях");
    if(PI[playerid][data_RANK] > 9) return 1;
    if(PI[playerid][data_MEMBER] < 3) return SendClientMessage(playerid, CY, "Переводы доступны c 3го ранга");
    ShowPlayerDialog(playerid, 7600, DIALOG_STYLE_LIST, "{f00e5d}Переводы", "1. БЦРБ\n2. МО МВД\n3. Правительство\n4. Воинская Часть", "Выбрать", "Отмена");
	return 1;
}
CMD:transfers(playerid) {
    if(PI[playerid][data_LEADER] == 0) return SendClientMessage(playerid,CG,"Вы не являетесь лидером организации");
	if(antiflood[playerid]) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
	if(!PI[playerid][data_LOGGED]) return 1;
	antiflood[playerid]++;
	new string[256+144] = "ID\tИмя\tРанг\tОрганизация\n", bool: bugfix ;
	for(new i = 0; i < MAX_PLAYERS; i++) {
    	if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_TRANSFER_FRAC] == PI[playerid][data_MEMBER]) {
			format(string, sizeof(string), "%s%d\t%s\t%d ранг\t%d\n", string, i,PI[i][data_NAME],PI[i][data_RANK], PI[i][data_MEMBER]);
			bugfix = true;
		}
	}
	return ShowPlayerDialog(playerid, (bugfix) ? (dialog_MenuOwner) : (dialog_OK), DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Меню Переводов", (bugfix) ? (string) : ("В данный момент нет заявок на перевод"), "Одобрить", "");
}
callback:  clearDialogTimer(playerid) {
	if pDialogTimer[playerid] != -1 *then KillTimer(pDialogTimer[playerid]);
	pDialogTimer[playerid] = -1;
	pDialogCurrectTime[playerid] = -1;
	DeletePVar(playerid, "codelid");
}
callback: DialogTimerInvite(playerid) {
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime());
	new dialog[185];
	format(dialog,sizeof(dialog),"Пригласил: %s\nОрганизация: %s\n\nВы действительно хотите вступить в организацию?", PI[GetPVarInt(playerid, "proposition")][data_NAME], Fraction_Name[PI[GetPVarInt(playerid, "proposition")][data_MEMBER]]);
	ShowPlayerDialog(playerid, 7242, DIALOG_STYLE_MSGBOX, "{f00e5d}Вступление в организацию", dialog, (pDialogCurrectTime[playerid] < gettime()) ? ("Вступить") : (str), "Закрыть" );
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
callback: DialogTimerLeader(playerid) {
    SetPVarInt(playerid, "DialogID", 509);
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );
	new dtext[256];
	format(dtext,sizeof(dtext),"{FFFFFF}Поздравляем! Вы были назначены лидером  организации %s\n\nТеперь Вам необходимо вступить в беседу лидеров ВКонтакте. Для этого перейдите по ссылке: {FFFF99}vk.cc/"LIDCF"", Fraction_Name[PI[playerid][data_MEMBER]]);
	ShowPlayerDialog(playerid, 509, DIALOG_STYLE_MSGBOX, !"{f00e5d}Подсказка", dtext, (pDialogCurrectTime[playerid] < gettime()) ? (!"Ок") : (str), !"Закрыть" );
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
callback: CheckBlackListBl(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
	    if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid,CG, "Данная команда Вам недоступна");
		new str_q[185];
		mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `fractions_blacklist` WHERE `bl_fraction` = '%d'",PI[playerid][data_MEMBER]);
		mysql_function_query(dbHandle, str_q, true, "BlackList", "d", playerid);
	}
	else ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "{f00e5d}Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
	return 1;
}
CMD:bl(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid,CG, "Данная команда Вам недоступна");
	new str_q[256];
    mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `fractions_blacklist` WHERE bl_fraction = '%d'",PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "CheckBlackListBl", "d", playerid);
	return 1;
}
callback: BlackList(playerid) {
    new rows, fields;
    new bl_name[MAX_PLAYER_NAME], string5[50];
	new dialog1[256];
	new dialog[556];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "bl_name", bl_name, dbHandle, MAX_PLAYER_NAME);
		format(dialog1,sizeof(dialog1),"%s%s\n", dialog1, bl_name);
		format(string5,sizeof(string5),"{f00e5d}Показано %d из %d игроков (страница: 1)", rows, rows);
	}
	format(dialog,sizeof(dialog),"Чёрный Список\n{f00e5d}1. Добавить в ЧС\n{f00e5d}2. Убрать из ЧС{252525}\n%s",dialog1);
	ShowPlayerDialog(playerid,7887, DIALOG_STYLE_TABLIST_HEADERS, string5, dialog, "Закрыть", "");
	return 1;
}
callback: check_bl_list(playerid, pl_name[]) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) {
    	new str_q[256];
    	mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `fractions_blacklist` WHERE `bl_name` = '%s' AND `bl_fraction` = '%d'", pl_name, PI[playerid][data_MEMBER]);
    	mysql_function_query(dbHandle, str_q, false, "", "");
		new str_text[85];
		format(str_text, sizeof(str_text), "Вы убрали из чёрного списка %s.", pl_name);
		SendClientMessage(playerid, COLOR_WHITE, str_text);
		new str_1[256];
		switch(PI[playerid][data_MEMBER]) {
		    case 1: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_gov[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
		    case 2: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
		    case 3: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
		    case 4: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_hospital[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
	     	case 5: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
	   		case 6: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
		    case 7: format(str_1,sizeof(str_1),"[R] %s %s[%d] вынес %s из черного списка организации.",rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name);
		}
		foreach(new i:Player) if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(i, 0xff6633FF, str_1);
		ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
	}
	else {
		new text_string[98];
		format(text_string, 98, "Игрок %s не найден в ЧС.", pl_name);
		SendClientMessage(playerid, CG, text_string);
		ShowPlayerDialog(playerid, d_blacklist, DIALOG_STYLE_LIST, "Чёрный список", "1. Добавить в ЧС\n2. Убрать из ЧС", "Выбрать", "Назад");
	}
	return 1;
}
callback: CheckBlackListPlayer(playerid)
{
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new str_q[256];
		mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `fractions_blacklist` WHERE `bl_name` = '%e'",PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q, true, "BlackList123", "i", playerid);
	}
	else ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Чёрный список организаций", "Вы не состоите в чёрном списке ни одной организации", "Закрыть", "");
	return 1;
}
callback: BlackList123(playerid) {
    new rows, fields,temp[256],fracname5,dob[32],day,reas[32],rank[32];
    cache_get_data(rows, fields);
	new str_1[256];
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "bl_dob", dob, dbHandle, 32);
		cache_get_field_content(i, "bl_day", temp), day = strval(temp);
		cache_get_field_content(i, "bl_fraction", temp), fracname5 = strval(temp);
		cache_get_field_content(i, "bl_reason", reas, dbHandle, 32);
		cache_get_field_content(i, "bl_rank", rank, dbHandle, 32);
		new fracname[64];
		switch(fracname5) {
			case 1: fracname = "Правительство";
			case 2: fracname = "Войсковая часть";
			case 3: fracname = "МО МВД";
   			case 4: fracname = "БЦРБ";
			case 5: fracname = "Скинхеды";
			case 6: fracname = "Гопота";
			case 7: fracname = "Кавказцы";
  		}
		format(str_1,sizeof(str_1),"%s%s (%s %s)\t%d дней\t%s\n", str_1, fracname,rank, dob,day,reas);
	}
	new dialog[556];
	format(dialog,sizeof(dialog),"Организация(добавил)\tОсталось дней\tПричина\n%s",str_1);
	ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Чёрный список организаций", dialog, "Закрыть", "");
	return 1;
}
callback: BlackListCheck(playerid, pl_name[]) {
	new rows, fields,temp[516],dob[64],day,reas[64],rank[64],bl_name[64],bl_name2[64];
    cache_get_data(rows, fields);
	new str_3[512];
    for(new i = 0; i < rows; i++) {
        cache_get_field_content(i, "bl_name", bl_name, dbHandle, 63);
		cache_get_field_content(i, "bl_dob", dob, dbHandle, 63);
		cache_get_field_content(i, "bl_day", temp), day = strval(temp);
		cache_get_field_content(i, "bl_reason", reas, dbHandle, 63);
		cache_get_field_content(i, "bl_rank", rank, dbHandle, 63);
		cache_get_field_content(i, "bl_name2", bl_name2, dbHandle, 63);
		format(str_3,sizeof(str_3),"%s{252525}Имя на момент внесения: {274e87}\t%s\n\
		{252525}Имя в данный момент: {274e87}\t%s\n\
		{252525}Внёс в чёрный список: {274e87}\t%s %s\n\
		{252525}Вынесение через: \t{274e87}\t%d дней\n\
		{252525}Причина: \t\t\t{274e87}%s\n\n\
		{f00e5d}Вы хотите удалить игрока из черного списка организации?", str_3, bl_name, bl_name2,rank, dob,day,reas);
		SetPVarString(playerid, "name_bl", pl_name);
	}
	ShowPlayerDialog(playerid,7874, DIALOG_STYLE_MSGBOX, "{f00e5d}Чёрный список организации", str_3, "Ок", "Закрыть");
	return 1;
}
callback: CheckWbook(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new str_q[256];
		mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q, true, "WorkBook", "i", playerid, PI[playerid][data_NAME]);
	}
	else SendClientMessage(playerid, CG,"У вас нет истории в трудовой книге.");
	return 1;
}
CMD:wbook(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(sscanf(params, "u", params[0])) {
		new str_q[256];
		mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",PI[playerid][data_NAME]);
		mysql_function_query(dbHandle, str_q, true, "WorkBook", "i", playerid);
	}
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!PlayerToPoint(10.0, playerid, x,y,z)) return SendClientMessage(playerid,CG,"Данный игрок далеко от Вас");
	new str_q[256];
	mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `wbook` WHERE `w_name` = '%e'",PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, true, "WorkBook", "dd", playerid,params[0]);
	return 1;
}
callback: WorkBook(playerid,id) {
    new rows, fields, temp[144], reas[256], rank, w_d, w_m, w_y, fracname5;
	new str_3[512];
	new str_1[256];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "w_day", temp), w_d = strval(temp);
		cache_get_field_content(i, "w_mes", temp), w_m = strval(temp);
		cache_get_field_content(i, "w_year", temp), w_y = strval(temp);
		cache_get_field_content(i, "w_fraction", temp), fracname5 = strval(temp);
		cache_get_field_content(i, "w_rank", temp), rank = strval(temp);
		cache_get_field_content(i, "w_reason", reas, dbHandle, 24*2);
		new fracname[16];
		switch(fracname5) {
			case 1: fracname = "Правительство";
			case 2: fracname = "Войсковая часть";
			case 3: fracname = "МО МВД";
   			case 4: fracname = "БЦРБ";
			case 5: fracname = "Скинхеды";
			case 6: fracname = "Гопота";
			case 7: fracname = "Кавказцы";
  		}
		new monthname[9];
		switch(w_m) {
			case 1: monthname = "январь";
			case 2: monthname = "февраль";
			case 3: monthname = "март";
   			case 4: monthname = "апрель";
			case 5: monthname = "май";
			case 6: monthname = "июнь";
			case 7: monthname = "июль";
   			case 8: monthname = "август";
			case 9: monthname = "сентябрь";
			case 10: monthname = "октябрь";
			case 11: monthname = "ноябрь";
			case 12: monthname = "декабрь";
  		}
  		new str[20];
		switch(fracname5)
	 	{
	 	    case 1:format(str,sizeof(str),"%s",rang_gov[rank-1][frName]);
			case 2:format(str,sizeof(str),"%s",rang_army[rank-1][frName]);
			case 3:format(str,sizeof(str),"%s",rang_police[rank-1][frName]);
			case 4:format(str,sizeof(str),"%s",rang_hospital[rank-1][frName]);
		    case 5:format(str,sizeof(str),"%s",rang_skinhead[rank-1][frName]);
		    case 6:format(str,sizeof(str),"%s",rang_gopota[rank-1][frName]);
		    case 7:format(str,sizeof(str),"%s",rang_kavkaz[rank-1][frName]);
		}
		format(str_3,sizeof(str_3),"%s%d %s %d г.{252525}\t%s - %s[%d]\t%s\n", str_3, w_d, monthname, w_y, fracname, str, rank, reas);
	}
	format(str_1,sizeof(str_1),"Уход из организации\tОргнизация - ранг\tПричина ухода\n%s",str_3);
	return ShowPlayerDialog(id,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Трудовая книга", str_1, "Закрыть", "");
}
CMD:anim(playerid)
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(GetPVarInt(playerid, "OglushEn") != 0 || GetPVarInt(playerid, "Sleep") == 1) return SendClientMessage(playerid,CG,"Анимации не доступны во время другой анимации");
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(GetPVarInt(playerid, "anim_load") != 1)
	{
		PreloadAnimLib(playerid,"SMOKING");
		PreloadAnimLib(playerid,"BD_FIRE");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"RAPPING");
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"BSKTBALL");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"GRAVEYARD");
		PreloadAnimLib(playerid,"RYDER");
		PreloadAnimLib(playerid,"MISC");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"RIOT");
		PreloadAnimLib(playerid,"PARK");
		SetPVarInt(playerid, "anim_load",1);
		return true;
	}
	new string[406+1];
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SendClientMessage(playerid, CG,"Нельзя использовать в транспорте!");
	format(string,sizeof(string),"\
	1. Поднять руки вверх\n\
	2. Курить\n3. Мыть руки\n\
	4. Сесть на землю\n\
	5. Лечь на спину\n\
	6. Лечь и приподнять ногу\n\
	7. Читать рэп \n\
	8. Прилечь\n\
	9. Установить бомбу\n\
	10. Поза вратаря\n\
	11. Сложить руки\n\
	12. Плакать (девушка)\n\
	13. Пьяная походка\n\
	14. Голосовать\n\
	15. Поднять руку\n\
	16. Поднять руки\n\
	17. Облокотиться\n\
	18. Смотреть на небо\n\
	19. Махать рукой\n\
	20. Болельщик\n\
	21. Медитация\n\
	22. Facepalm\n\
	23. Заложник\n\
	24. Справить нужду");
 	CEF__Dialog(playerid,dialog_ANIM,DIALOG_STYLE_LIST,"{f00e5d}Список анимаций:", string, "Выбрать","Отмена");
	return true;
}
CMD:tp(playerid) {
	if(PI[playerid][data_ADMLVL] < 1) return  true;
	return  CEF__Dialog(playerid,4386,DIALOG_STYLE_LIST, "{db2751}Телепортация", "{f00e5d}1. Админ зона\n{f00e5d}2. Обзвон поле\n{f00e5d}3. Обзвон пляж\n{f00e5d}4. Обзвон поле с рекой\n{f00e5d}5. Обзвон вышка\n{252525}6. КаптТерра.\n7. [МП] Трасса 'гонки'\n8. ОПГ 'Кавказцы'\n9. Военная Часть\n10. ОПГ 'Гопота'\n11. ОПГ 'Скинхеды'\n12. МО МВД\n13. Правительство\n14. БЦРБ\n15. Казино\n16. Автосалон г. Южный\n17. Гора (зона захвата)\n18. База дальнобойщиков\n19. Шахта", "Принять", "Закрыть");
}
callback: bl_invite_check(playerid, name[]) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SendClientMessage(playerid, CG,"Данный игрок уже находится в чёрном списке вашей организации");
	else {
		new str_q[144];
		mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", name);
	    mysql_function_query(dbHandle, str_q, true, "bl_invite", "ds", playerid, name);
	}
	return 1;
}
callback: bl_invite(playerid, pl_name[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, CG, "Вы ввели неверное имя, или же игрок изменил его.");
    if(rows) {
		new text[32];
		GetPVarString(playerid,"reason_bl", text, sizeof(text));
		FixSVarString(text);
	    new ltext[25];
		switch(PI[playerid][data_RANK]) {
			case 9: ltext = "Заместитель";
			case 10: ltext = "Лидер";
  		}
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `fractions_blacklist`(`bl_fraction`,`bl_name`,`bl_day`,`bl_reason`,`bl_dob`,`bl_rank`,`bl_name2`) VALUES ('%d','%s','15','%s','%s','%s','%s')",PI[playerid][data_MEMBER],pl_name,text,PI[playerid][data_NAME],ltext,pl_name);
		mysql_function_query(dbHandle, str_q, false, "", "");
		new strtext[175];
		switch(PI[playerid][data_MEMBER]) {
		    case 1: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_gov[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
		    case 2: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_army[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
		    case 3: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_police[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
		    case 4: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_hospital[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
	     	case 5: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_skinhead[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
	   		case 6: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_gopota[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
		    case 7: format(strtext,sizeof(strtext),"[R] %s %s[%d] добавил %s в чёрный список на 15 дней. Причина: %s.",rang_kavkaz[PI[playerid][data_RANK]-1][frName],PI[playerid][data_NAME],playerid,pl_name,text);
		}
		foreach(new i:Player) if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(i, 0xff6633FF, strtext);
		DeletePVar(playerid, "reason_bl");
	}
	return 1;
}
callback: CheckInviteBL(playerid, pl_name[]) {
    new rows, fields, temp[32];
    cache_get_data(rows, fields);
    if(rows) {
	    new members, ranks, groupid;
		cache_get_field_content(0, "member", temp), members = strval (temp);
		cache_get_field_content(0, "rank", temp), ranks = strval (temp);
		cache_get_field_content(0, "groupid", temp), groupid = strval (temp);
		if(members != PI[playerid][data_MEMBER]) return 1;
        members = 0;
		ranks = 0;
		groupid = 0;
		new str_q[365];
	    mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `member` = '%d', `rank` = '%d', `leader` = '0', `groupid` = '%d', `twarn` = '0' WHERE `name` = '%s'",members, ranks, groupid, pl_name);
		mysql_function_query(dbHandle, str_q, false, "", "");
	}
	return 1;
}
callback: DialogTimerGiveGun(playerid) {
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );
    new gun = GetPlayerWeapon(GetPVarInt(playerid, "proposition"));
	new str_3[256];
	format(str_3,sizeof(str_3),"Владелец: %s[%d]\nОружие: %s (%d пт)\n\nВы действительно хотите принять это предложение",
	PI[GetPVarInt(playerid, "proposition")][data_NAME],
	GetPVarInt(playerid, "proposition"),
	weapon_names[gun],
	GetPVarInt(playerid, "value_1"));
	ShowPlayerDialog(playerid, 8790, DIALOG_STYLE_MSGBOX, "{f00e5d}Передача оружия", str_3, (pDialogCurrectTime[playerid] < gettime()) ? ("Принять") : (str), "Нет");
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
CMD:givegun(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(!IsPlayerOPG(playerid))  return SendClientMessage(playerid, CG, "Вы не состоите в ОПГ");
 	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid,CG,"Используйте: /givegun [ID игрока] [кол-во]");
    if(PI[params[0]][data_BANGTIME] > 0) return SendClientMessage(playerid, CG, "У данного игрока блокировка оружия");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передавать самому себе");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Данного ID нет на сервере");
	if(PI[params[0]][data_MEMBER] != PI[playerid][data_MEMBER]) return SendClientMessage(playerid,CG,"Данный игрок не состоит в вашей организации");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Данный игрок не прошел авторизацию");
	if(params[1] < 1) return SendClientMessage(playerid, CG, "Минимальное значение патрон 1");
	if(PI[params[0]][data_LVL] < 2) return SendClientMessage(playerid, CG, "У игрока нет 2-го уровня");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
    if(!PlayerToPoint(5.0, params[0], x,y,z)) return SendClientMessage(playerid,CG,"Нужно находиться возле игрока");
	new gun = GetPlayerWeapon(playerid);
	new gunslot = getWeaponIdSlot(gun);
	if(gun == 38 && gun == 34 && gun == 35 && gun == 36 && gun == 37 && gun == 39 && gun == 40) return SendClientMessage(playerid, CG, "Нельзя передать данное оружие");
	if(params[1] < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
	if(PI[playerid][data_GUN][gunslot] == 0 || gunslot == 0) return SendClientMessage(playerid,CG,"Чтобы передать оружие, нужно взять его в руки");
	if(PI[playerid][data_AMMO][gunslot] < params[1]) return SendClientMessage(playerid,CG, "У Вас нет такого количества патронов");
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_GIVEGUN, params[1]);
}
stock PlayerGetsChatBan(playerid, text[]) {
	new g = random(777);
	new str_1[185];
	format(str_1, sizeof(str_1), "[Варнинг] <#%d> %s[%i] отправил сообщение: %s",g, PI[playerid][data_NAME], playerid, text);
	return SendAdminMessage(0xa0bbbbFF, str_1);
}
stock CheckString(string[]) {
    static const WebSites[][] = {
		"NEW IP","Заходите на лучший сервер",".com","46","176 46","точка ру",".su",".info",
		"Переезд","Новый сервер","NEW IP","ну что го сливать админку","ну что го сливать лидерку",
		"Переехали","переезжаем","дам админку","переехали",". ru","нубо сервер","нубомод","дносервер","нубосервер",""
	};
	for(new i = 0; i < sizeof(WebSites); i++) if(strfind(string, WebSites[i], true) != -1) return 1;
	return 0;
}
CMD:up(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 2) return 1;
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
	return SetPlayerPos(playerid, x, y, z+2);
}
CMD:down(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 2) return 1;
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
	return SetPlayerPos(playerid, x, y, z-2);
}
CMD:left(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 2) return 1;
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
	return SetPlayerPos(playerid, x, y-2, z);
}
CMD:right(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 2) return 1;
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
	return SetPlayerPos(playerid, x, y+2, z);
}
CMD:nick(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_ADMLVL] < 2) return 1;
	extract params -> new to_player; else return SendClientMessage(playerid, CG, "Введите: /nick [ID игрока]");
	new fmt_msg[128];
	format(fmt_msg, sizeof fmt_msg, "Игровой мастер #%d кикнул игрока %s. Причина: смените ник. (Формат: Имя_Фамилия)", PI[playerid][ADMINSNUMBER], PI[to_player][data_NAME]);
	SendClientMessageToAll(0xFF4530FF, fmt_msg);
	Kick(to_player);
	return 1;
}
callback: LoadBlackList()
{
    new rows, fields, temp[60],time = GetTickCount(),banac;
    cache_get_data(rows, fields);
    if(rows) {
    	for(new b = 0; b < rows; b++) {
         	cache_get_field_content(b, "bl_id", temp), BL_DATA[b][data_ID] = strval (temp);
         	cache_get_field_content(b, "bl_day", temp), BL_DATA[b][data_DAY] = strval (temp);
			TotalBlackList++;
   			if(BL_DATA[b][data_DAY] <= 0) {
				new str_q[185];
			    mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `fractions_blacklist` WHERE `bl_id` = '%d'", BL_DATA[b][data_ID]);
	    		mysql_function_query(dbHandle, str_q, false, "", "");
	    		banac++;
			}
			else {
       			BL_DATA[b][data_DAY]--;
				new str_q[185];
			    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `fractions_blacklist` SET `bl_day` = '%d' WHERE `bl_id` = '%d'",BL_DATA[b][data_DAY],BL_DATA[b][data_ID]);
			    mysql_function_query(dbHandle, str_q, false, "", "");
			}
		}
		printf("[INFO]  Load blacklist accounts. Load: %d. UnBlackList: %d. Ex UnBlackList: %d. Time: %d ms.",TotalBlackList,banac,TotalBans-banac, GetTickCount()-time);
  	}
    return 1;
}
CMD:phone(playerid) {
	if(PI[playerid][data_PHONE] == 0) return SendClientMessage(playerid,CG,"У вас нет телефона");
	if(PI[playerid][data_PHONESTATUS] == 1) {
		ShowPlayerDialog(playerid, 7220, DIALOG_STYLE_LIST, "{f00e5d}Телефон", "\
		1. Информация\n\
		2. Позвонить\n\
		3. Отправить SMS\n\
		4. Мобильный банк\n\
		5. Телефонная книга\n\
		6. Телефонные услуги\n\
		{f8f897}7. Выключить телефон", "Выбрать", "Отмена");
		return 1;
	}
	else return ShowPlayerDialog(playerid, 7210, DIALOG_STYLE_LIST, "{f00e5d}Телефон", "1. Информация\n{f8f897}2. Включить телефон", "Выбрать", "Отмена");
}
stock IsAtBankomat(playerid,Float:distance) {
    for(new i = 0;i < sizeof(Bankomats);i ++) if(IsPlayerInRangeOfPoint(playerid,distance,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2])) return 1;
	return 0;
}
CMD:vb(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    new vb[14];
    switch(PI[playerid][data_MILITARY]) {
		case 0: vb = "нету";
		case 1: vb = "есть";
	}
	new str_3[256];
	format(str_3,sizeof(str_3),"Войсковая часть г. Батырево\nГражданин РФ: {3377cc}%s\n{252525}Военный билет: %s", PI[playerid][data_NAME], vb);
	return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Военный билет", str_3, "Закрыть", "");
}
CMD:time(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
	new string[50];
	format(string,sizeof(string),"В игре ~b~%d мин~n~~w~Сервер ~b~1",PI[playerid][data_TIME]);
	GameTextForPlayer(playerid, string, 5000, 1);
	if(PI[playerid][data_DEMORGANTIME] != 0) {
		new str_1[256];
		format(str_1,sizeof(str_1),"До выхода из деморгана {FF6347}%d сек.", PI[playerid][data_DEMORGANTIME]);
		SendClientMessage(playerid, 0xf0f0f0FF, str_1);
	}
	else if(PI[playerid][data_JAILTIME] != 0) {
		new str_1[256];
		format(str_1,sizeof(str_1),"До выхода из тюрьмы {FF6347}%d сек.", PI[playerid][data_JAILTIME]);
		SendClientMessage(playerid, 0xf0f0f0FF, str_1);
	}
	else if(PI[playerid][data_MUTE] != 0) {
		new str_1[256];
		format(str_1,sizeof(str_1),"До разблокировки чата {FF6347}%d мин.", PI[playerid][data_MUTETIME]/60);
		SendClientMessage(playerid, 0xf0f0f0FF, str_1);
	}
	else if(PI[playerid][data_VMUTE] != 0) {
		new str_1[256];
		format(str_1,sizeof(str_1),"До разблокировки голосового чата {FF6347}%d сек.", PI[playerid][data_VMUTETIME]/60);
		SendClientMessage(playerid, 0xf0f0f0FF, str_1);
	}
    SetPlayerChatBubble(playerid, "Cмотрит на часы", 0xFF99CCFF, 20.0, 4000);
	return 1;
}
CMD:prison(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 1) return 1;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CG, "Используйте /prison [ID игрока]");
    if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[params[0]][data_ADMLVL] != 0) return SendClientMessage(playerid, CG, "Вы не можете выдать наказание игровому мастеру");
    if(params[0] == playerid) return SendClientMessage(playerid, CG, "Вы не можете выдать наказание самому себе");
    SetPVarInt(playerid, "PrisonID", params[0]);
    new str_3[2048];
	format(str_3,sizeof(str_3),"\
		№\t\t\tНазвание\t\t\tКоманда\n\
	    1\tDM\t\t\t\t/jail %d 15 DM (п. 1.1)\n\
	    2\tNonRP Drive\t\t\t\t/jail %d 30 NonRP Drive (п. 1.19)\t\n\
	    3\tDriveBy\t\t\t\t/jail %d 10 DriveBy (п 1.4)\n\
		4\tБагоюз\t\t\t\t/jail %d 30 Багоюз (п 1.7)\n\
		5\tПомеха работе\t\t\t\t/jail %d 15 Помеха работе (п 1.9)\n\
		6\tПомеха РП процессу\t\t\t\t/jail %d 15 Помеха РП процессу (п 1.22)\n\
		7\tМузыка в голосовой чат\t\t\t\t/vmute %d 10 Музыка (п 2.9)\n\
		8\tTeamKill\t\t\t\t/jail %d 5 TeamKill (п 1.7)\n\
		9\tОскорбление игры\t\t\t\t/ban %d 5 Оскорбление игры (п 1.25)\n\
		10\tОскорбление игрового мастера\t\t\t\t/mute %d 120 Оскорбление ИМ (п 1.25)\n\
		11\tРеклама сторонних ресурсов\t\t\t\t/ban %d 1 Реклама (п 2.6)\n\
		12\tФлуд в текстовый чат\t\t\t\t/mute %d 15 Флуд (п 2.5)\n\
		13\tОффтоп в репорт\t\t\t\t/mute %d 15 Оффтоп (п 2.5)\n\
		14\tAFK во время боя\t\t\t\t/jail %d 25 AFK в бою (п 1.5)\n\
		15\tMG в текстовый чат\t\t\t\t/mute %d 10 MG (п 2.7)\n\
		16\tMG в голосовой чат\t\t\t\t/vmute %d 10 MG (п 2.10)\n\
		17\tИспользование стороннего ПО\t\t\t\t/jail %d 120 Читы / Скрипты (п 1.6)\n\
		18\tPowerGaming\t\t\t\t/jail %d 15 PowerGaming (п 1.12)\n\
		19\tNonRP /me\t\t\t\t/jail %d 5 NonRP /me (п 1.25)\n\
		20\tNonRP /sleep\t\t\t\t/kick %d NonRP /sleep (п 1.39)\n\
		21\tНеадекват в голосовой чат\t\t\t\t/vmute %d 20 Неадекватное поведение (п 2.10)", params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0], params[0]);
	new str_1[2048];
	format(str_1,sizeof(str_1),"{f00e5d}Наказать %s[ID: %d]", PI[params[0]][data_NAME], params[0]);
    ShowPlayerDialog(playerid, 5213, DIALOG_STYLE_TABLIST_HEADERS, str_1, str_3, "Наказать", "Отмена");
    return 1;
}
callback: WbookOff(playerid, name[]) {
    new rows, fields,temp[256],w_player, w_rank;
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "id", temp), w_player = strval(temp);
		cache_get_field_content(0, "rank", temp), w_rank = strval(temp);
		new text[24];
		GetPVarString(playerid,"text_wbook", text, sizeof(text));
		FixSVarString(text);
		new year, month, day ;
		getdate(year, month, day);
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `wbook`(`w_player`,`w_fraction`,`w_name`,`w_reason`,`w_rank`,`w_day`,`w_mes`,`w_year`) VALUES ('%d','%d','%s','%s','%d','%d','%d','%d')", w_player, PI[playerid][data_MEMBER], name, text, w_rank, day, month, year);
		mysql_function_query(dbHandle, str_q, false, "", "");
	}
	return 1;
}
callback: PhoneBook(playerid) {
    new rows, fields, temp[144], p_number, p_name[32];
    cache_get_data(rows, fields);
	new str_1[185];
	new str_3[185];
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp);
		cache_get_field_content(i, "name", p_name, dbHandle, 32);
		format(str_3,sizeof(str_3),"%s{252525}%s\t\tт. %d\n", str_3, p_name, p_number);
	}
	format(str_1,sizeof(str_1),"{f00e5d}Добавить контакт{252525}\n%s",str_3);
	ShowPlayerDialog(playerid, 7229, DIALOG_STYLE_TABLIST, "{f00e5d}Телефонная книга", str_1, "Далее", "Назад");
	return 1;
}
callback: PhoneBookAddCheck(playerid, name[]) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SendClientMessage(playerid, CG,"Данное имя контакта уже используйется");
	else {
	    new text[24];
		GetPVarString(playerid,"name_pb", text, sizeof(text));
		FixSVarString(text);
		new str_q[256];
		mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e'", text);
	    mysql_function_query(dbHandle, str_q, true, "PhoneBookAdd", "ds", playerid, text);
	}
	return 1;
}
callback: PhoneBookAdd(playerid, name[]) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new text[24];
		GetPVarString(playerid,"name_pb", text, sizeof(text));
		FixSVarString(text);
		new year,month,day;
		getdate(year, month, day);
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `phonebook`(`name`,`number`,`name_add`,`day`,`mounth`,`year`,`data`) VALUES ('%s','%d','%s','%d','%d','%d',NOW())",text,GetPVarInt(playerid, "number_pb"),PI[playerid][data_NAME],PI[playerid][data_NAME],day,month,year);
		mysql_function_query(dbHandle, str_q, false, "", "");
		SendClientMessagef(playerid, 0x3399ffFF, "Вы добавили {ffff33}т. %d{3399ff} в свою телефонную книгу (имя: {ffff33}'%s'{3399ff})", GetPVarInt(playerid, "number_pb"), text);
		DeletePVar(playerid, "name_pb");
	}
	return 1;
}
callback: InfoPhoneBook(playerid) {
	new rows, fields,temp[256],string[256],p_number, p_name[32],p_data[20];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp);
		cache_get_field_content(i, "name", p_name, dbHandle, 32);
		cache_get_field_content(i, "data", p_data, dbHandle, 20 );
		format(string,sizeof(string),"%s{252525}Имя контакта: {3377cc}%s\n{252525}Номер телефона: {3377cc}%d\n{252525}Время добавления: {3377cc}%s", string, p_name, p_number, p_data);
	}
	return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о контакте", string, "Закрыть", "");
}
callback: CallPhoneBook(playerid) {
	new rows, fields,temp[64],p_number;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp); {
			new str_1[256];
			format(str_1, sizeof(str_1),"%d",p_number);
			callcmd::call(playerid,str_1);
		}
	}
	return 1;
}
callback: SmsPhoneBook(playerid) {
	new rows, fields,temp[64],p_number;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "number", temp), p_number = strval(temp); {
			new text[144];
			GetPVarString(playerid,"sms_pb", text, sizeof(text));
			FixSVarString(text);
			new str_1[256];
			format(str_1, sizeof(str_1),"%d %s",p_number,text);
			callcmd::sms(playerid,str_1);
		}
	}
	return 1;
}
callback: ChangeNumberPhoneBook(playerid) {
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `phonebook` SET `number` = '%d' WHERE `name` = '%e' AND `name_add` = '%e'", GetPVarInt(playerid, "number_pb"), name, PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, false, "", "");
	SendClientMessagef(playerid, 0x3399ffFF, "Номер кантакта изменён на {ffff33}%d", GetPVarInt(playerid, "number_pb"));
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "number_pb");
	return 1;
}
callback: ChangeNamePhoneBook(playerid) {
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new text[24];
	GetPVarString(playerid,"c_name", text, sizeof(text));
	FixSVarString(text);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `phonebook` SET `name` = '%e' WHERE `name` = '%e' AND `name_add` = '%e'", text, name, PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, false, "", "");
	SendClientMessagef(playerid, 0x3399ffFF, "Имя контакта изменено на {ffff33}'%s'", text);
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "name_pb");
	return 1;
}
callback: DeletePhoneBook(playerid) {
	new name[24];
	GetPVarString(playerid,"pb_namecont", name, sizeof(name));
	FixSVarString(name);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `phonebook` WHERE `name` = '%e' AND `name_add` = '%e'", name, PI[playerid][data_NAME]);
	mysql_function_query(dbHandle, str_q, false, "", "");
	SendClientMessage(playerid, COLOR_TOMATO, "Вы удалили контакт из телефонной книги");
	DeletePVar(playerid, "pb_namecont");
	DeletePVar(playerid, "name_pb");
	return 1;
}
stock GetNearestVehicle(playerid) {
    for(new i=1,Float:x,Float:y,Float:z; i<MAX_VEHICLES; ++i) {
        if(IsVehicleStreamedIn(i, playerid)) {
            GetVehiclePos(i, x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z)) return i;
        }
    }
    return 0;
}
stock BanPC(playerid) {
	new hour, minute, second, year, month, day;
	gettime(hour, minute, second);
	getdate(year,month,day);
	new monthname[9];
	switch(month) {
		case 1: monthname = "января";
		case 2: monthname = "февраля";
		case 3: monthname = "марта";
		case 4: monthname = "апреля";
		case 5: monthname = "мая";
		case 6: monthname = "июня";
		case 7: monthname = "июля";
		case 8: monthname = "августа";
		case 9: monthname = "сентября";
		case 10: monthname = "октября";
		case 11: monthname = "ноября";
		case 12: monthname = "декабря";
	}
	new str_3[512];
	format(str_3,sizeof(str_3),
    "{FFFFFF}Вы заблокированны и больше не можете играть на сервере Arcana.\n\n\
	{FFFFFF}ID аккаунта: {27b947}%d\n\
	{FFFFFF}ID блокировки: {27b947}%s\n\
	{FFFFFF}Дата и время: {27b947}%d:%d:%d (%d %s %d г)\n\n\
	{4682c5}Если вы уверенны что блокировка ошибочная - обратитесь в техническую\n\
	поддержу прекрепив к своему обращению скриншот данного диалога (F8)", PI[playerid][data_ID], PI[playerid][data_GPCIBAN],hour,minute,second, day, monthname, year);
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{db2751}Упс", str_3, "Ок", "");
	SendClientMessage(playerid, 0x8b8b85FF, "Введите /q, чтобы выйти из игры");
    return Kick(playerid);
}
CMD:bangun(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	new id,day,reason[32];
	if(sscanf(params,"uds[100]",id,day,reason)) return SendClientMessage(playerid,CG,"Используйте: /bangun [ID игрока] [дни] [причина]");
    if(!IsPlayerConnected(id))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[id][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(day < 1 || day > 30) return SendClientMessage(playerid,CG,"Нельзя меньше 1 дня и больше 30 дней");
    if(PI[id][data_ADMLVL] > PI[playerid][data_ADMLVL]) return SendClientMessage(playerid, CG, "Нельзя применить к игровому мастеру");
	PI[id][data_BANGTIME] = day;
	UpdatePlayerDataInt(id, "bangun", PI[id][data_BANGTIME], 25391);
	SendClientMessagef(id, COLOR_TOMATO, "Игровой мастер #%d заблокировал Вам использование оружия на %d дн. Причина: %s", PI[playerid][ADMINSNUMBER], day, reason);
	new str_3[185];
	format(str_3,sizeof(str_3),"[%s #%d] %s[%d] заблокировал использование оружия игроку %s на %d дн. Причина: %s",GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[id][data_NAME],day,reason);
	SendAdminMessage(COLOR_ADMINCHAT,str_3);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s заблокировал использование оружия игроку %s на %d дн. Причина: %s",PI[playerid][data_NAME], PI[id][data_NAME],day,reason);
	SendVKTest(playerid, vk_send, 3);
	return ResetPlayerWeapons(id);
}
CMD:unbangun(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /unbangun [ID игрока]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	PI[params[0]][data_BANGTIME] = 0;
	UpdatePlayerDataInt(params[1], "bangun", PI[params[1]][data_BANGTIME],25413);
	SendClientMessagef(params[0], COLOR_TOMATO,"Игровой мастер #%d снял Вам блокировку на использование оружия", PI[playerid][ADMINSNUMBER]);
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "Игровой мастер %s снял блокировку оружия игроку %s",PI[playerid][data_NAME], PI[params[0]][data_NAME]);
	SendVKTest(playerid, vk_send, 3);
	new str_1[185];
	format(str_1,sizeof(str_1),"[%s #%d] %s[%d] снял блокировку оружия игроку %s[%d]", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME],params[0]);
	return SendAdminMessage(0x8fbedb00,str_1);
}
stock NullSpawnCord(playerid) {
	new str_q[256];
    format(str_q, sizeof(str_q), "UPDATE `accounts` SET `startx` = '0', `starty` = '0', `startz` = '0' WHERE `id` = '%d'", PI[playerid][data_ID]);
	mysql_query(dbHandle, str_q, false);
	return 1;
}
callback: LoadBang() {
    new rows, fields, temp[60],time = GetTickCount(),gunb;
	new str_q[512];
    cache_get_data(rows, fields);
    if(rows) {
    	for(new g = 0; g < rows; g++) {
         	cache_get_field_content(g, "id", temp), G_DATA[g][data_ID] = strval (temp);
         	cache_get_field_content(g, "bangun", temp), G_DATA[g][data_DAY] = strval (temp);
			TotalG++;
   			if(G_DATA[g][data_DAY] >= 1) {
				G_DATA[g][data_DAY]--;
			    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `accounts` SET `bangun` = '%d' WHERE `id` = '%d'",G_DATA[g][data_DAY],G_DATA[g][data_ID]);
			    mysql_function_query(dbHandle, str_q, false, "", "");
			}
			else {
			    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `accounts` SET `bangun` = '0' WHERE `id` = '%d'",G_DATA[g][data_ID]);
	    		mysql_function_query(dbHandle, str_q, false, "", "");
	    		gunb++;
			}
		}
		printf("[INFO]  Load gun ban accounts. Load: %d. Unbang: %d. Ex unbang: %d. Time: %d ms.",TotalG,gunb,TotalG-gunb, GetTickCount()-time);
  	}
    return 1;
}
stock NameRang(id) {
	new name[24];
	switch(PI[id][data_MEMBER]) {
	    case 1:format(name,sizeof(name),"%s", rang_gov[PI[id][data_RANK]-1][frName]);
	    case 2:format(name,sizeof(name),"%s", rang_army[PI[id][data_RANK]-1][frName]);
	    case 3:format(name,sizeof(name),"%s", rang_police[PI[id][data_RANK]-1][frName]);
	    case 4:format(name,sizeof(name),"%s", rang_hospital[PI[id][data_RANK]-1][frName]);
     	case 5:format(name,sizeof(name),"%s", rang_skinhead[PI[id][data_RANK]-1][frName]);
   		case 6:format(name,sizeof(name),"%s", rang_gopota[PI[id][data_RANK]-1][frName]);
	    case 7:format(name,sizeof(name),"%s", rang_kavkaz[PI[id][data_RANK]-1][frName]);
	}
    return name;
}
cmd:bank(playerid) {
    if(PlayerToPoint(1.0, playerid, 1534.6836,1820.4808,578.6213) || PlayerToPoint(1.0, playerid, 1537.8619,1820.2335,578.6213) || PlayerToPoint(1.0, playerid, 1540.8298,1820.5121,578.6213)) {
		new str_3[185];
		format(str_3,sizeof(str_3),"1. Банковская карта {f00e5d}(№ %d)\n{252525}2. Оплата имущества\n3. Медицинские услуги", PI[playerid][data_ID]);
		ShowPlayerDialog(playerid, 7999, DIALOG_STYLE_LIST, "{f00e5d}Банк", str_3, "Закрыть", "");
	}
	else return 1;
	return 1;
}
CMD:boost(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_BOOST] == 0) return SendClientMessage(playerid,CG,"У Вас нет активных бустеров");
	new str_3[456];
	format(str_3,sizeof(str_3),"\
		{252525}Бустер 'x2 опыт и +25% к зарплате' активен\n\
		{252525}Он будет активен до 00:00.  Текущие бонусы:\n\n\
		{252525}Бонус EXP во время PayDay:\t\t{f00e5d}x2EXP\n\
		{252525}Бонус зарплат в организациях:\t\t{f00e5d}+25%\n\
		{252525}Бонус зарплат на основных работаъ:\t{f00e5d}+25%");
    ShowPlayerDialog(playerid, dialog_DONATE_VIP, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о бустере", str_3, "Закрыть", "");
    return 1;
}
CMD:plus(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	if(PI[playerid][data_LOGGED] == false) return 1;
	new str_3[756];
	format(str_3,sizeof(str_3),"\
		{252525}Примущества, которые даёт подписка {f00e5d}Arcana Плюс\n\
		{252525}Активация и продление просходит на сайт {f00e5d}"SITE"\n\n\
		{3366cc}1. Уникальная личность\n\
		{252525}Ваш никнейм в чате будет выделен постфиксом: Ivan_Ivanov {F00E5D}[А+]{252525}\n\
		{3366cc}2. Топливная карта\n\
		{252525}Скидка при заправке на АЗС (15%%)\n\
		{3366cc}3. Почётный гражданин\n\
		{252525}Скидка при оплате квартплаты дома и квартиры (30%%)\n\
		{3366cc}4. Знай меру\n\
		{252525}Полное отсутствие эффекта зависимости\n\
		{3366cc}5. Меценат\n\
		{252525}Кол-во донат-поинтов при пополнении увеличивается на 5%%\n\
		{3366cc}6. Рабочий класс\n\
		{252525}Бесплатный инвентарь на временных работах (для 1 и 2 уровней)\n\
		{3366cc}7. Большие карманы\n\
		{252525}Вместимость инвентаря увеличивается в 2 раза\n\
		{3366cc}8. Карьерист\n\
		{252525}Возможность покинуть организацию в любой момент (/leave)\n\
		{3366cc}9. Выгодный тариф\n\
		{252525}Цены на звонки, SMS и телефонные учлуги снижены\n\
		{3366cc}10. Олды на месте\n\
		{252525}Вы получите в два раза больше очков опыта за каждый PayDay");
    ShowPlayerDialog(playerid, dialog_DONATE_VIP, DIALOG_STYLE_MSGBOX, "{f00e5d}Arcana Плюс", str_3, "Купить", "Отмена");
    return 1;
}
callback: LoadVip() {
    new rows, fields, temp[60],time = GetTickCount(),vip;
	new str_q[512];
    cache_get_data(rows, fields);
    if(rows) {
    	for(new v = 0; v < rows; v++) {
         	cache_get_field_content(v, "id", temp), V_DATA[v][data_ID] = strval (temp);
         	cache_get_field_content(v, "vip", temp), V_DATA[v][data_DAY] = strval (temp);
			TotalVIP++;
			if(V_DATA[v][data_DAY] != 0) {
	   			V_DATA[v][data_DAY]--;
			    mysql_format(dbHandle,str_q, sizeof(str_q),"UPDATE `accounts` SET `vip` = '%d' WHERE `id` = '%d'",V_DATA[v][data_DAY],V_DATA[v][data_ID]);
			    mysql_function_query(dbHandle, str_q, false, "", "");
			}
		}
		printf("[INFO]  Load vip accounts. Load: %d. Unvip: %d. Ex Unvip: %d. Time: %d ms.",TotalVIP,vip,TotalVIP-vip, GetTickCount()-time);
  	}
    return 1;
}
CMD:l(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_LEADER] < 1) return 1;
    if(sscanf(params,"s[90]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /l [текст]");
    new string[145];
    format(string, sizeof(string), "[L] %s %s[%d]: %s", Fraction_Name[PI[playerid][data_MEMBER]], PI[playerid][data_NAME],playerid,params[0]);
    SendLeaderMessage(0xCD9B6AFF, string);
    return 1;
}
alias:ll("lb");
CMD:ll(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_LEADER] < 1) return 1;
    if(sscanf(params,"s[90]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /lb [текст]");
    new string[145];
    format(string, sizeof(string), "(( [L] %s %s[%d]: %s ))", Fraction_Name[PI[playerid][data_MEMBER]], PI[playerid][data_NAME],playerid,params[0]);
    SendLeaderMessage(0xCD9B6AFF, string);
    new vk_send[250];
    format(vk_send, sizeof(vk_send), "(( [L] %s %s[%d]: %s ))", Fraction_Name[PI[playerid][data_MEMBER]], PI[playerid][data_NAME],playerid,params[0]);
    SendVKMessage(playerid, vk_send, 5, 0);
    return 1;
}
CMD:car(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_HOUSE] == INVALID_HOUSE_ID && PI[playerid][data_KV] == INVALID_KV_ID) return SendClientMessage(playerid,CG,"У Вас нет дома или квартиры");
	if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid) != 0) return 1;
	if(PI[playerid][data_CAR][0] == 0 && PI[playerid][data_CAR][1] == 0) return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{F00E5D}Список личного транспорта", "У Вас нет личного транспота.\nЕго можно купить в автосалоне {3377cc}(/gps - 1 - 3) или на сайте {3377cc}arcanarp.online", "Закрыть", "");
	if(PI[playerid][data_VEH] != INVALID_VEHICLE_ID) {
		ShowPlayerDialog(playerid, 9317, DIALOG_STYLE_LIST, "{f00e5d}Личный транспорт", "\
		1. Паспорт транспортного средства\n\
		2. Руководство по эксплуатации\n\
		3. Открыть транспорт\n\
		4. Вытащить ключи\n\
		5. Управление капотом / багажником\n\
		6. Отбуксировать транспорт\n\
		7. Поставить GPS метку на мини-карте\n\
		8. Припарковать транспорт\n\
		9. Продать транспорт\n\
		{f00e5d}10. Выгрузить транспорт", "Далее", "Закрыть");
	}
	else {
	    new string[150];
		new string1[150];
		for(new c = 0; c < 2; c++) {
	 	    if(PI[playerid][data_CAR][c] == 0) {
			}
			else {
			    format(string,sizeof(string),"%s\n%s\tНету\tОбычный\tДа", string, VehicleNames[PI[playerid][data_CAR][c]-400]);
			    format(string1,sizeof(string1),"Название\tНомер\tТип\tДоступ\n%s", string);
			}
		}
		return ShowPlayerDialog(playerid,dialog_FIXCAR, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Список личного транспорта", string1, "Выбрать", "Отмена");
	}
	return 1;
}
alias:carpass("cp", "passcar");
CMD:carpass(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_VEH] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, CG, "У Вас нет загруженого транспорта");
	new carid = GetVehicleModel(PI[playerid][data_VEH]);
	new cena;
	for(new i = 0; i < sizeof(autosalon_cars); i++) {
		cena = autosalon_cars[i][asCena];
	}
	new str_3[512];
    if(sscanf(params, "u", params[0])) {
		format(str_3,sizeof(str_3),"\
		Название: {3377cc}%s\n\
		{252525}Владелец: %s\n\
		Тип: Обычный\n\
		Тип КПП: АКПП\n\
		Тип топлива: АИ-92\n\
		Расход в час: 16.0 л.\n\
		Вместимость бака: 50.0 л.\n\
		Модель: %d\n\
		Номер: {f00e5d}----\n\
		{252525}Стоимость: %d руб\n\
		Цвет корпуса: {252525}|||\n\
		Цвет салона: {252525}|||\n\
		Цвет дисков: {252525}|||\n\
		Цвет фар: {252525}|||", VehicleNames[carid-400], PI[playerid][data_NAME], carid, cena);
		return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Документы", str_3, "Закрыть", "");
	}
	return 1;
}
stock CarPass(playerid) {
 	if(PI[playerid][data_VEH] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, CG, "У Вас нет загруженого транспорта");
	new carid = GetVehicleModel(PI[playerid][data_VEH]);
	new colorcar[7];
	new str_3[512];
	for(new i = 0; i < sizeof(c_veh); i++) if(c_veh[i][colorCar] == PI[playerid][data_CAR_COLOR1]) colorcar = c_veh[i][colorcode];
	for(new i = 0; i < sizeof(autosalon_cars); i++) {
		if(autosalon_cars[i][asModel] == carid) {
			format(str_3,sizeof(str_3),"\
			Название: {3377cc}%s\n\
			{252525}Владелец: %s\n\
			Тип: Обычный\n\
			Тип КПП: АКПП\n\
			Тип топлива: АИ-92\n\
			Расход в час: 16.0 л.\n\
			Вместимость бака: 50.0 л.\n\
			Модель: %d\n\
			Номер: {f00e5d}----\n\
			{252525}Стоимость: %d руб\n\
			Цвет корпуса: {%s}|||\n\
			{252525}Цвет салона: {%s}|||\n\
			{252525}Цвет дисков: {252525}|||\n\
			Цвет фар: {252525}|||",
				VehicleNames[carid-400],
				PI[playerid][data_NAME],
				carid,
				autosalon_cars[i][asCena],
				colorcar,
				colorcar);

			return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Документы", str_3, "Закрыть", "");
		}
	}
	return 1;
}
stock IsPlayerGreenZone(playerid) {
	if(PlayerToKvadrat(playerid,  2048.77,1787.74, 2168.30,1845.31) && GetPlayerVirtualWorld(playerid) == 0 || // БЦРБ
	PlayerToKvadrat(playerid, 1784, 2060.5, 1878, 2132.5) && GetPlayerVirtualWorld(playerid) == 0 || // Правительство
	PlayerToKvadrat(playerid, 1765, 2476.5, 1846, 2536.5) && GetPlayerVirtualWorld(playerid) == 0 || // рудник
	PlayerToKvadrat(playerid, 1851, 1837.5, 1918, 1906.5) && GetPlayerVirtualWorld(playerid) == 0 || // казино
	PlayerToKvadrat(playerid, 1771.5, 1418.1666259765625, 1871.5, 1518.1666259765625) && GetPlayerVirtualWorld(playerid) == 0 || // автошкола
	PlayerToKvadrat(playerid, -2668.5, 245.5, -2548.5, 345.5) && GetPlayerVirtualWorld(playerid) == 0) return 1;
	return 1;
}
callback: PayDay(playerid)
{
	if(GetPVarInt(playerid,"gPlayerAaction") == 0) {
		switch(random(1)) {
			case 0: SetWeather(1);
			case 1: SetWeather(1);
		}
		new hour, minute, second;
		gettime(hour, minute, second);
		SetWorldTime(hour);
		if(hour == 0 && minute == 0) {
			PI[playerid][data_TIME] = 0;
			PI[playerid][data_REPORTS] = 0;
			new Query2[128];
			format(Query2, sizeof(Query2), "UPDATE `accounts` SET time = '0' WHERE time != '0'");
			mysql_tquery(dbHandle, Query2, "", "");
			new Query1[128];
			format(Query1, sizeof(Query1), "UPDATE `accounts` SET reports = '0' WHERE reports != '0'");
			mysql_tquery(dbHandle, Query1, "", "");
		}
		new MYSQL[128];
		format(MYSQL, sizeof(MYSQL), "UPDATE `accounts` SET HEALPACKSKLAD = '0'");
		mysql_tquery(dbHandle, MYSQL, "", "");
		PI[playerid][data_HEALPACKSKLAD] = 0;
		if(PI[playerid][data_LOGGED] == false) {
			new str[41];
			gettime(hour, minute, second);
			format(str,sizeof(str)," Московское время {3377CC}%02d:%02d", hour, minute);
			SendClientMessage(playerid,0xFFFFFFFF,str);
			return 1;
		}
		if(PI[playerid][data_AFK] > 5) {
			new str_3[90];
			format(str_3,sizeof(str_3),"Московское время {3377CC}%02d:%02d", hour, minute);
			SendClientMessage(playerid,-1,str_3);
			SendClientMessage(playerid,0xFFFFFF00,"Клиент банка пгт. Батырево:");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			SendClientMessage(playerid, CG, " Для получения PayDay необходимо не находиться на паузе");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			return 1;
		}
		if(PI[playerid][data_TIME] < 20) {
			new str_3[90];
			format(str_3,sizeof(str_3),"Московское время {3377CC}%02d:%02d", hour, minute);
			SendClientMessage(playerid,-1,str_3);
			SendClientMessage(playerid,0xFFFFFF00,"Клиент банка пгт. Батырево:");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			SendClientMessage(playerid, CG, " Для получения PayDay необходимо отыграть минимум 20 минут");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			return 1;
		}
		switch(PI[playerid][data_MEMBER]) {
			case 1:PI[playerid][data_SALARY] += 35000+750*PI[playerid][data_RANK];
			case 2:PI[playerid][data_SALARY] += 35000+750*PI[playerid][data_RANK];
			case 3:PI[playerid][data_SALARY] += 35000+750*PI[playerid][data_RANK];
			case 4:PI[playerid][data_SALARY] += 35000+750*PI[playerid][data_RANK];
			case 5,6,7: {
				new bonus = 0;
				if(PI[playerid][data_RANK] < 9) {
					if(PI[playerid][data_CAPTUREKILL] != 0) bonus += 1500*PI[playerid][data_CAPTUREKILL];
					else if(PI[playerid][data_CAPTURECMD] != 0) bonus += 2000*PI[playerid][data_CAPTUREKILL];
					PI[playerid][data_SALARY] = 35000+bonus;
				}
				else {
					if(PI[playerid][data_CAPTUREKILL] != 0) bonus += 1500*PI[playerid][data_CAPTUREKILL];
					else if(PI[playerid][data_CAPTURECMD] != 0) bonus += 2000*PI[playerid][data_CAPTUREKILL];
					PI[playerid][data_SALARY] = 35000+1200*PI[playerid][data_RANK]+bonus;
				}
			}
			case 8:PI[playerid][data_SALARY] += 35000+750*PI[playerid][data_RANK];
		}
		new lvlup = 0;
		new nextlvl = PI[playerid][data_LVL]+1;
		new nextexp = nextlvl*4;
		new zp = PI[playerid][data_SALARY];
		if(PI[playerid][data_BOOST] == 1) {
			PI[playerid][data_EXP] += 2;
			PI[playerid][data_SALARY] = zp+zp*25/100;
		}
		else PI[playerid][data_EXP]++;
		if(PI[playerid][data_WANTED] > 0) {
			PI[playerid][data_WANTED]--;
			SetPlayerWantedLevel(playerid,PI[playerid][data_WANTED]);
		}
		if(PI[playerid][data_ZAKON] < 100) PI[playerid][data_ZAKON]++;
		if(PI[playerid][data_EXP] >= nextexp) {
			lvlup = 1;
			PI[playerid][data_EXP] = 0;
			PI[playerid][data_LVL]++;
			UpdatePlayerDataIntName(playerid, "lvl", PI[playerid][data_LVL],25768);
			SetPlayerScore(playerid,PI[playerid][data_LVL]);
			if(PI[playerid][data_LVL] == 4) {
				new bugfix;
				if(strfind(PI[playerid][data_REFERAL], PI[playerid][data_NAME], true) != -1) {
					PI[playerid][data_SALARY] += 250000;
					bugfix = 1;
				}
				if(bugfix == 0) {
					new str_q[256];
					mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `name` = '%e' LIMIT 1",PI[playerid][data_REFERAL]);
					mysql_function_query(dbHandle, str_q, true, "CheckReferal", "i", playerid);
				}
			}
		}
		UpdatePlayerDataIntName(playerid, "exp", PI[playerid][data_EXP],25783);
		if(PI[playerid][data_ADMLVL] != 0) {
			new gamemasterpay = 1500*PI[playerid][data_ADMLVL];
			PI[playerid][data_BANK] += PI[playerid][data_SALARY]+gamemasterpay;
			new strt[190];
			format(strt,sizeof(strt),"Московское время {3377CC}%02d:%02d", hour, minute);
			SendClientMessage(playerid,-1,strt);
			SendClientMessage(playerid,0xFFFFFF00,"Клиент банка пгт. Батырево:");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			SendClientMessagef(playerid,-1, "  Зарплата: {EE3366}%d руб", PI[playerid][data_SALARY]);
			SendClientMessagef(playerid,-1,"  Зарплата игрового мастера: {EE3366}%d руб", gamemasterpay);
			SendClientMessagef(playerid,-1,"  Текущий баланс зарплатного счёта: {EE3366}%d руб",PI[playerid][data_BANK]);
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			PI[playerid][data_SALARY] = 0;
			if(PI[playerid][data_PRIZEGIVE] != 1) {
				if(PI[playerid][data_PRIZETIME]++ >= 100) {
					PI[playerid][data_PRIZEGIVE] = 1, SendClientMessage(playerid,0x4dcfffFF,"Вы получили 300 донат-поинтов за отыгровку 100 часов. Ожидайте новых акций");
					PI[playerid][data_DONATE] += 300;
				}
				else if(PI[playerid][data_PRIZETIME] < 100) {
					PI[playerid][data_PRIZETIME]++, SendClientMessage(playerid,0x4dcfffFF,"Вы получили +1 час игры для получения 300 донат-поинтов, /prize");
				}
			}
			if(lvlup == 1) SendClientMessage(playerid,0x4dcfffFF,"Поздравляем! Ваш уровень повышен.");
		}
		else {
			PI[playerid][data_BANK] += PI[playerid][data_SALARY];
			new strt[190];
			format(strt,sizeof(strt),"Московское время {3377CC}%02d:%02d", hour, minute);
			SendClientMessage(playerid,-1,strt);
			SendClientMessage(playerid,0xFFFFFF00,"Клиент банка пгт. Батырево:");
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			SendClientMessagef(playerid,-1,"  Зарплата: {EE3366}%d руб",PI[playerid][data_SALARY]);
			SendClientMessagef(playerid,-1,"  Текущий баланс зарплатного счёта: {EE3366}%d руб",PI[playerid][data_BANK]);
			SendClientMessage(playerid,0xFFFFFFFF," ____________________________");
			PI[playerid][data_SALARY] = 0;
			if(PI[playerid][data_PRIZEGIVE] != 1) {
				if(PI[playerid][data_PRIZETIME]++ >= 20) {
					PI[playerid][data_PRIZEGIVE] = 1, SendClientMessage(playerid,0x4dcfffFF,"Вы получили 100 донат-поинтов за отыгровку 20 часов. Ожидайте новых акций");
					PI[playerid][data_DONATE] += 100;
				}
				else if(PI[playerid][data_PRIZETIME] < 20) {
					PI[playerid][data_PRIZETIME]++, SendClientMessage(playerid,0x4dcfffFF,"Вы получили +1 час игры для получения 100 донат-поинтов, /prize");
				}
			}
			if(lvlup == 1) SendClientMessage(playerid,0x4dcfffFF,"Поздравляем! Ваш уровень повышен.");
		}
	}
	SavePlayerData(playerid);
	return 1;
}
CMD:lname(playerid, params[]) {
    if(PI[playerid][data_RANK] < 10) return 1;
	if(sscanf(params, "s[30]", params[0]))return SendClientMessage(playerid, CG,"Используйте: /lname [имя]");
	new str_q[256];
	mysql_format(dbHandle, str_q, sizeof str_q, "SELECT `id` FROM `accounts` WHERE `name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(dbHandle, str_q, "nameleader_check", "i", playerid);
	return 1 ;
}
callback:nameleader_check(playerid) {
	new rows, fields ;
	cache_get_data(rows, fields);
	if (!rows) return SendClientMessage(playerid, CG,"Не удалось найти игроков с указанным никнеймом");
	new db_increment = cache_get_field_content_int(0, "id", dbHandle);
	new str_q[256];
	format(str_q, sizeof str_q, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(dbHandle, str_q, "sql_lname", "i", playerid);
	return 1 ;
}
callback:sql_lname(playerid) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, CG,"Игрок не менял имена");
	new str_1[256];
	strcat(str_1, "Старый никнейм - Новый никнейм - Дата изменения\n\n");
	for(new j = 0; j < rows; j ++ ) {
		new _nh_oldname[MAX_PLAYER_NAME ],_nh_newname[MAX_PLAYER_NAME ],_nh_date[20],line_string[68];
		cache_get_field_content(j, "nh_oldname", _nh_oldname, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, dbHandle, 20 );
		format(line_string, sizeof (line_string), "%s - %s - %s\n", _nh_oldname, _nh_newname, _nh_date);
		strcat(str_1, line_string);
	}
	return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "История никнеймов", str_1, "Закрыть", "");
}
cmd:givegod(playerid, params[]) {
	if(PI[playerid][data_ADMLVL] < 3) return 1;
    if(sscanf(params, "d", params[0]))return SendClientMessage(playerid, CG,"Используйте: /givegod [ID игрока]");
	switch(PI[params[0]][data_HIDEME]) {
		case 0: {
    	    PI[params[0]][data_HIDEME] = 1;
    	    SetTimerEx("adminsettings", 50, 0, "d", params[0]);
			SetPVarInt(params[0],"agm", 1);
			SetPlayerHealthAC(params[0], 100);
			SendClientMessagef(playerid, CY, "Вы установили режим бога игроку %s", PI[params[0]][data_NAME]);
    		for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i, params[0], false);
			new atext[145];
			format(atext,sizeof(atext),"[%s #%d] %s[%d] выдал режим игрового мастера игроку %s", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME]);
			SendAdminMessage(COLOR_ADMINCHAT, atext);
		}
		case 1: {
    	    PI[params[0]][data_HIDEME] = 0;
			SetPVarInt(params[0],"agm", 0);
			SetPlayerHealthAC(params[0], 100.0);
			SendClientMessagef(playerid, CY, "Вы сняли режим бога игроку %s", PI[params[0]][data_NAME]);
    	    SetTimerEx("adminsettings", 50, 0, "d", params[0]);
    		for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(i,params[0], true);
			new atext[145];
			format(atext,sizeof(atext),"[%s #%d] %s[%d] снял режим игрового мастера игроку %s", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[params[0]][data_NAME]);
			SendAdminMessage(COLOR_ADMINCHAT, atext);
		}
	}
	return 1;
}
CMD:editgroup(playerid) {
    if(PI[playerid][data_RANK] < 10) return SendClientMessage(playerid, CG, "Данная команда доступна лидерам организаций");
	if(antiflood[playerid]) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
	if(!PI[playerid][data_LOGGED]) return 1;
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "EditGroup", "d", playerid);
	EditGroup(playerid);
	return 1;
}
callback: EditGroup(playerid) {
    new rows, fields;
    new gname[MAX_PLAYER_NAME],string[256],str_tablist[256];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, MAX_PLAYER_NAME);
		format(string,sizeof(string),"%s%s\n", string, gname);
	}
	format(str_tablist,sizeof(str_tablist),"{f00e5d}Создать группу\n%s",string);
	ShowPlayerDialog(playerid,3211,DIALOG_STYLE_LIST, "{f00e5d}Управление группами", str_tablist, "Изменить", "Назад");
	return 1;
}
stock EditGroups(playerid){
   	new dtext[612];
	format(dtext,sizeof(dtext),
	"1. Информация\n\
	2. Список участников\n\
	3. Сделать стандартной\n\
	4. Изменить мужской скин\n\
	5. Изменить женский скин\n\
	6. Переименовать\n\
	{f00e5d}7. Удалить", "Выбрать", "Закрыть");
 	ShowPlayerDialog(playerid, 3212, DIALOG_STYLE_LIST, "{db2751}Управление группами", dtext, "Выбрать", "Назад");
}
CMD:setgroup(playerid,params[]) {
    if(PI[playerid][data_RANK] < 9) return SendClientMessage(playerid, CG, "Данная команда доступна лидерам организаций и их заместителям");
    if(sscanf(params, "u",params[0])) return SendClientMessage (playerid,CG,"Используйте: /setgroup [ID игрока]");
	if(!IsPlayerConnected(params[0])) return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Игрок не авторизован");
    if(PI[playerid][data_MEMBER] != PI[params[0]][data_MEMBER]) return SendClientMessage(playerid,CG,"Данный игрок не состоит в Вашей организации");
	if(antiflood[playerid]) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
	if(!PI[playerid][data_LOGGED]) return 1;
	SetPVarInt(playerid, "idgroup", params[0]);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d'", PI[playerid][data_MEMBER]);
	mysql_function_query(dbHandle, str_q, true, "SetGroup", "d", playerid);
	SetPVarInt(playerid, "idg", params[0]);
	SetGroup(playerid);
	return 1;
}
callback: SetGroup(playerid) {
    new rows, fields;
    new gname[45];
	new str_1[512];
	new str_3[512];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 44);
		format(str_1,sizeof(str_1),"%s%s\n", str_1, gname);
	}
	format(str_3,sizeof(str_3),"{f00e5d}Удалить из группы\n%s",str_1);
	ShowPlayerDialog(playerid,3210,DIALOG_STYLE_LIST, "{f00e5d}Выбор группы игрока", str_3, "Выбрать", "");
	return 1;
}
callback: LoadGroups() {
    new rows, fields, temp[60],time = GetTickCount();
    cache_get_data(rows, fields);
    if(rows) {
    	for(new g = 0; g < rows; g++) {
	        cache_get_field_content(g, "id", temp), group[g][g_ID] = strval (temp);
	        cache_get_field_content(g, "fraction", group[g][g_FRACTION], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(g, "group_name", group[g][g_NAME], dbHandle, 50);
	        cache_get_field_content(g, "skin_m", temp), group[g][g_SKIN] = strval (temp);
	        cache_get_field_content(g, "skin_g", temp), group[g][g_SKING] = strval (temp);
	        cache_get_field_content(g, "standart", temp), group[g][g_STANDART] = strval (temp);
	    }
        printf("[INFO]  Load group. Load: %d g. Time: %d ms.",TotalGroup,GetTickCount()-time);
  	}
    return 1;
}
callback: SetGroupPlayer(playerid) {
    new rows, fields;
    new id,temp[32],gname[32],skin_m,skin_g;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), id = strval(temp);
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		cache_get_field_content(i, "skin_m", temp), skin_m = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skin_g = strval(temp);
		PI[GetPVarInt(playerid, "idg")][data_GID] = id;
		UpdatePlayerDataInt(GetPVarInt(playerid, "idg"), "GID", PI[GetPVarInt(playerid, "idg")][data_GID],25983);
		strmid(PI[GetPVarInt(playerid, "idg")][data_GRNAME], gname, 0, strlen(gname), 25);
	}
	if(PI[GetPVarInt(playerid, "idg")][data_RANK] != 10) if(skin_m == 236) return SendClientMessage(playerid, CG, "Вы не можете выдать группу лидера");
	if(PI[GetPVarInt(playerid, "idg")][data_RANK] != 10) if(skin_m == 117) return SendClientMessage(playerid, CG, "Вы не можете выдать группу лидера");
	if(PI[GetPVarInt(playerid, "idg")][data_RANK] != 10) if(skin_m == 118) return SendClientMessage(playerid, CG, "Вы не можете выдать группу лидера");
	static name[24];
	SetString(name, NameRang(playerid));
	name = NameRang(playerid);
	static name2[24];
	SetString(name2, NameRang(GetPVarInt(playerid, "idg")));
	name2 = NameRang(GetPVarInt(playerid, "idg"));
	new str[145];
	format(str,sizeof(str),"[R] %s %s[%d] включил %s %s[%d] в группу ('%s')",name,PI[playerid][data_NAME],playerid,name2,PI[GetPVarInt(playerid, "idg")][data_NAME], GetPVarInt(playerid, "idg"), PI[GetPVarInt(playerid, "idg")][data_GRNAME]);
	foreach(new q:Player) if(PI[q][data_MEMBER] == PI[playerid][data_MEMBER]) SendClientMessage(q, 0x69b867FF, str);
	if(PI[GetPVarInt(playerid, "idg")][data_RANK] < 10)
	SavePlayerData(playerid);
	{
		if(PI[GetPVarInt(playerid, "idg")][data_SEX] == 1)
		{
		    if(skin_m > 0) {
				PI[GetPVarInt(playerid, "idg")][data_SKINM] = skin_m;
				SetPlayerSkinAC(GetPVarInt(playerid, "idg"),PI[GetPVarInt(playerid, "idg")][data_SKINM]);
			}
		}
		if(PI[GetPVarInt(playerid, "idg")][data_SEX] == 2)
		{
		    if(skin_g > 0) {
				PI[GetPVarInt(playerid, "idg")][data_SKINM] = skin_g;
				SetPlayerSkinAC(GetPVarInt(playerid, "idg"),PI[GetPVarInt(playerid, "idg")][data_SKINM]);
			}
		}
	}
	DeletePVar(playerid, "idg");
	return 1;
}
callback: GPLAYER(playerid) {
    new rows, fields;
    new gname[45];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
        if(rows) {
			cache_get_field_content(i, "group_name", gname, dbHandle, 44);
			strmid(PI[playerid][data_GRNAME], gname, 0, strlen(gname), 25);
		}
		else {
		    PI[playerid][data_GID] = -1;
			UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26027);
		}
	}
    return 1;
}
callback: InfoGroup(playerid) {
    new rows, fields,gname[32],temp[60],g,m,stand;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		cache_get_field_content(g, "skin_m", temp), m = strval (temp);
		cache_get_field_content(g, "skin_g", temp), g = strval (temp);
		cache_get_field_content(g, "standart", temp), stand = strval (temp);
		new standart[64];
		switch(stand) {
			case 0: format(standart,sizeof(standart),"Нет");
			case 1: format(standart,sizeof(standart),"Да");
		}
		new skinm[64];
		switch(m) {
			case 0: format(skinm,sizeof(skinm),"Нет");
			case 1..311: format(skinm,sizeof(skinm),"%d", m);
		}
		new sking[64];
		switch(g) {
			case 0: format(sking,sizeof(sking),"Нет");
			case 1..311: format(sking,sizeof(sking),"%d", g);
		}
		new str_i[144];
		format(str_i,sizeof(str_i),"\
		{252525}Название: {3377cc}%s{252525}\n\
		Мужской скин: {3377cc}%s{252525}\n\
		Женский скин: {3377cc}%s{252525}\n\
		Стандартная: {3377cc}%s{252525}",gname,skinm,sking,standart);
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация о группе", str_i, "Закрыть", "");
	}
    return 1;
}
callback: AllMGroup(playerid) {
    new rows, fields,temp[10];
    new name[MAX_PLAYER_NAME],rank,logd1,logd2,logd3;
	new str_1[512];
	new str_3[512];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "name", name, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(i, "rank", temp), rank = strval (temp);
		cache_get_field_content(i, "logdate_day", temp), logd1 = strval (temp);
		cache_get_field_content(i, "logdate_month", temp), logd2 = strval (temp);
		cache_get_field_content(i, "logdate_year", temp), logd3 = strval (temp);
		format(str_1,sizeof(str_1),"%s {252525}%s\t%d\t%d.%d.%d\n", str_1, name, rank, logd1, logd2, logd3);
	}
	format(str_3,sizeof(str_3),"Имя\tРанг\tПоследний вход\n%s",str_1);
	ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Список участников организации с группой", str_3, "Закрыть", "");
	return 1;
}
callback: idgroup(playerid) {
    new rows, fields,temp[10];
    new idg;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), idg = strval (temp);
		new str_q[185];
		mysql_format(dbHandle,str_q,sizeof(str_q),"SELECT * FROM `accounts` WHERE `GID` = '%d'",idg);
		mysql_function_query(dbHandle, str_q, true, "AllMGroup", "d", playerid);
	}
	return 1;
}
callback: CheckStandart(playerid) {
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Ошибка", "{AFAFAF}В Вашей организации уже есть стандартная группа.\n{f00e5d}Вы можете переименовать её или же изменить скин.", "Закрыть", "");
    else {
		new grouptext[24];
		GetPVarString(playerid,"gtext", grouptext, sizeof(grouptext));
		FixSVarString(grouptext);
		new str_q[256];
		mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], grouptext);
		mysql_function_query(dbHandle, str_q, true, "SetStandart", "d", playerid);
		DeletePVar(playerid, "gtext");
	}
	return 1;
}
callback: SetStandart(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		new str_q[256];
		mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `group` SET `standart` = '1' WHERE `group_name` = '%e' AND `fraction` = '%d'",gname,PI[playerid][data_MEMBER]);
		mysql_function_query(dbHandle, str_q, false, "", "");
		SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно сделали группу {FFFF00}('%s'){00aa33} стандартной",gname);
	}
	return 1;
}
callback: SetGSTAND(playerid) {
    new rows, fields,temp[10];
    new idg,skin_m,skin_g,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), idg = strval (temp);
		cache_get_field_content(i, "skin_m", temp), skin_m = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skin_g = strval(temp);
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		strmid(PI[playerid][data_GRNAME], gname, 0, strlen(gname), 25);
		PI[playerid][data_GID] = idg;
		UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26133);
		if(PI[playerid][data_RANK] < 10)
		{
			if(PI[playerid][data_SEX] == 1)
			{
				PI[playerid][data_SKINM] = skin_m;
				SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],26140);
			}
			if(PI[playerid][data_SEX] == 2)
			{
				PI[playerid][data_SKINM] = skin_g;
				SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
				UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],26146);
			}
		}
	}
	return 1;
}
callback: ChangeSkinM(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `group` SET `skin_m` = '%d' WHERE `group_name` = '%e' AND `fraction` = '%d'",GetPVarInt(playerid, "SKIN"),gname,PI[playerid][data_MEMBER]);
		mysql_function_query(dbHandle, str_q, false, "", "");
		if(GetPVarInt(playerid, "SKIN") > 0) SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно изменили скин в группе {FFFF00}('%s'){00aa33} на {FFFF00}('%d')",gname,GetPVarInt(playerid, "SKIN"));
		else SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно сбросили скин в группе {FFFF00}('%s')",gname);
	}
	return 1;
}
callback: ChangeSkinG(playerid) {
    new rows, fields,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		new str_q[512];
		mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `group` SET `skin_g` = '%d' WHERE `group_name` = '%e' AND `fraction` = '%d'",GetPVarInt(playerid, "SKIN"),gname,PI[playerid][data_MEMBER]);
		mysql_function_query(dbHandle, str_q, false, "", "");
		if(GetPVarInt(playerid, "SKIN") > 0) SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно изменили скин в группе {FFFF00}('%s'){00aa33} на {FFFF00}('%d')",gname,GetPVarInt(playerid, "SKIN"));
		else SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно сбросили скин в группе {FFFF00}('%s')",gname);
	}
	return 1;
}
callback:CheckDelete(playerid) {
    new rows, fields,s,gname[32],temp[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "standart", temp), s = strval(temp);
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		if(s != 1) {
			new str_q[512];
			mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER], gname);
			mysql_function_query(dbHandle, str_q, true, "DeleteGroup", "d", playerid);
		}
		else ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Ошибка", "{AFAFAF}Нельзя удалить стандартную группу!\n{f00e5d}Вы можете переименовать её или же изменить скин.", "Закрыть", "");
	}
	return 1;
}
callback: DeleteGroup(playerid) {
    new rows, fields,gname[32];
	new str_1[110];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		format(str_1,sizeof(str_1),"[R] %s удалил группу '%s'",PI[playerid][data_NAME],gname);
		SendFractionMessage(PI[playerid][data_MEMBER], COLOR_TOMATO, str_1);
		SendClientMessagef(playerid, 0x00aa33AA, "Вы успешно удалили группу {FFFF00}('%s')",gname);
    	new str_q[256];
    	mysql_format(dbHandle,str_q, sizeof(str_q), "DELETE FROM `group` WHERE `fraction` = '%d' AND `group_name` = '%e'", PI[playerid][data_MEMBER],gname);
    	mysql_function_query(dbHandle, str_q, false, "", "");
	}
	return 1;
}
callback: ChangeServer0() {
	SendRconCommand("hostname Arcana РП | ОТКРЫТИЕ СЕРВЕРА");
	SetTimer("ChangeServer1", 3000, false);
}
callback: ChangeServer1() {
	SendRconCommand("hostname Arcana РП | X2 DONATE/EXP");
	SetTimer("ChangeServer2", 3000, false);
}
callback: ChangeServer2() {
	SendRconCommand("hostname Arcana РП | ГЛОБАЛЬНОЕ ОБНОВЛЕНИЕ");
	SetTimer("ChangeServer3", 3000, false);
}
callback: ChangeServer3() {
	SendRconCommand("hostname Arcana.RP | FORUM.ARCANARP.ONLINE");
	SetTimer("ChangeServer4", 3000, false);
}
callback: ChangeServer4() {
	SendRconCommand("hostname Arcana РП | КВЕСТЫ");
	SetTimer("ChangeServer0", 3000, false);
}
stock ClearGroup(playerid) {
	PI[playerid][data_GID] = -1;
	UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26243);
}
CMD:setstat(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    new id, idf, amount;
    if(sscanf(params,"udd",id,idf,amount)) {
		SendClientMessage(playerid, CG, "Используйте: /setstat [ID] [ID-функции] [кол-во]");
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Параметры", "\
		{252525}Функция №1 - отвечает за деньги\n\
		Функция №2 - отвечает за статус ВИП\n\
		Функция №3 - отвечает за сим-карту\n\
		Функция №4 - отвечает за донат-поинты\n\
		Функция №5 - отвечает за количество масок\n\
		Функция №6 - отвечает за количество патрон\n\
		Функция №7 - отвечает за количество металла\n\
		Функция №8 - отвечает за количество веществ\n\
		Функция №9 - отвечает за количество законопослушности\n\
		Функция №10 - отвечает за телефон\n\
		Функция №11 - отвечает за количество аптечек\n\
		Функция №12 - отвечает за игровой уровень", "Закрыть", "");
		SavePlayerData(playerid);
		return 1;
	}
	static text[35];
	switch(idf) {
		case 0: {
			return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Параметры", "\
			{252525}Функция №1 - отвечает за деньги\n\
			Функция №2 - отвечает за статус ВИП\n\
			Функция №3 - отвечает за сим-карту\n\
			Функция №4 - отвечает за донат-поинты\n\
			Функция №5 - отвечает за количество масок\n\
			Функция №6 - отвечает за количество патрон\n\
			Функция №7 - отвечает за количество металла\n\
			Функция №8 - отвечает за количество веществ\n\
			Функция №9 - отвечает за количество законопослушности\n\
			Функция №10 - отвечает за телефон\n\
			Функция №11 - отвечает за количество аптечек\n\
			Функция №12 - отвечает за игровой уровень", "Закрыть", "");
		}
	    case 1:	give_player_money(id,amount,"#setstat",26270), text = "деньги";
	    case 2: {
			PI[id][data_VIP] = amount;
			UpdatePlayerDataInt(id, "vip", PI[id][data_VIP],26272);
			text = "вип";
	    }
	    case 3: {
	        PI[id][data_NUMBER] = amount;
			UpdatePlayerDataInt(id, "number", PI[id][data_NUMBER],26277);
			text = "номер телефона";
	    }
	    case 4: {
	        PI[id][data_DONATE] = amount;
			UpdatePlayerDataInt(id, "donate", PI[id][data_DONATE],26282);
			text = "донат-поинты";
	    }
	    case 5: {
	        PI[id][data_MASK] = amount;
			UpdatePlayerDataInt(id, "mask", PI[id][data_MASK],26287);
			text = "маски";
	    }
	    case 6: {
	        PI[id][data_PATR] = amount;
			UpdatePlayerDataInt(id, "patr", PI[id][data_PATR],26292);
			text = "патроны";
	    }
	    case 7: {
	        PI[id][data_MET] = amount;
			UpdatePlayerDataInt(id, "met", PI[id][data_MET],26297);
			text = "металл";
	    }
	    case 8: {
	        PI[id][data_DRUGS] = amount;
			UpdatePlayerDataInt(id, "drugs", PI[id][data_DRUGS],26302);
			text = "вещества";
	    }
	    case 9: {
         	PI[id][data_ZAKON] = amount;
			UpdatePlayerDataInt(id, "zakon", PI[id][data_ZAKON],26307);
			text = "законопослушность";
	    }
		case 10: {
         	PI[id][data_PHONE] = amount;
			UpdatePlayerDataInt(id, "phone", PI[id][data_PHONE],26312);
			text = "телефон";
	    }
		case 11: {
         	PI[id][data_HEALPACK] = amount;
			UpdatePlayerDataInt(id, "healthchest", PI[id][data_HEALPACK],26317);
			text = "аптечки";
	    }
		case 12: {
         	PI[id][data_LVL] = amount;
			UpdatePlayerDataIntName(id, "lvl", PI[id][data_LVL],26322);
			SetPlayerScore(id,PI[id][data_LVL]);
			SavePlayerData(id);
			text = "уровень";
	    }
	}
	new atext[145];
	format(atext,sizeof(atext),"[%s #%d] %s[%d] изменил игроку %s параметр '%s' на %d", GSName[PI[playerid][data_ADMLVL]],PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid,PI[id][data_NAME],text,amount);
	SendAdminMessage(COLOR_ADMINCHAT, atext);
	SavePlayerData(id);
	new vk_send[250];
	format(vk_send,sizeof(vk_send),"[%s №%d] %s изменил игроку %s параметр '%s' на %d",GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],PI[id][data_NAME],text,amount);
	return SendVKTest(playerid, vk_send, 3);
}
callback: SendMessageResponse(index, response_code, data[]) {
    /*if(response_code == 200) return printf("[VK-Log] Сообщение отправлено - ответ сервера: %d", response_code, data);
    return printf("[VK-Log] Сбой в запросе, код ответа: %d", response_code,data);*/
	return 1;
}
callback: SendVKMessageResponse(index, response_code, data[]) {
    /*if(response_code == 200) return printf("[VK-SEND] Сообщение отправлено - ответ сервера: %d, дата %s", response_code,data);
    return printf("[VK-SEND] Сбой в запросе, код ответа: %d, дата %s", response_code,data);*/
	return 1;
}
stock SendServerStock(text[],type) {
    new str_vk[250];
    format(str_vk, sizeof(str_vk), "%s<br><br> — Сервер: Arcana | One",text);
    return SendServer(str_vk,type);
}
SendServer(text[],type) {
	new str_vk[250];
	for(new i, str = strlen(text); i < str; i++) if(text[i] == ' ') text[i] = '+';
	format(str_vk, sizeof str_vk, "",text,type);
	return HTTP(0, HTTP_POST, str_vk, "", "SendMessageResponse");
}
stock SendVKServer(playerid, text[],type,vkid) {
    new hour,minuite,year, mouth, day,second;
    gettime(hour,minuite,second);
    getdate(year, mouth, day);
    new str_vk[250];
    format(str_vk, sizeof(str_vk), "%s<br><br> — Сервер: Arcana | One",text);
    return SendVKMessage(playerid,str_vk,type,vkid);
}
SendVKMessage(playerid,text[],type,vkid) {
    if(type == 1) {
		new str_vk[250];
		for(new i, str = strlen(text); i < str; i++) if(text[i] == ' ') text[i] = '+';
		format(str_vk, sizeof str_vk, "",text,type,vkid);
		return HTTP(playerid, HTTP_POST, str_vk, "", "SendVKMessageResponse");
	}
	else {
		new str_vk[250];
		for(new i, str = strlen(text); i < str; i++) if(text[i] == ' ') text[i] = '+';
		format(str_vk, sizeof str_vk, "",text,type);
		return HTTP(playerid, HTTP_POST, str_vk, "", "SendMessageResponse");
	}
}
stock SendVKTest(playerid, text[], type) {
	if(type == 1) {
		new str_vk[250];
		format(str_vk, sizeof(str_vk), "%s<br><br> — Сервер: Arcana | One",text);
		return SendVKMessage(playerid, str_vk, type,0);
	}
	else {
		new hour,minuite,year, mouth, day,second;
		gettime(hour,minuite,second);
		getdate(year, mouth, day);
		new str_vk[250];
		format(str_vk, sizeof(str_vk), "%s<br><br> — Сервер: Arcana | One<br> — Время: %d.%d.%d %d:%d:%d",text,day,mouth,year,hour,minuite,second);
		return SendVKMessage(playerid, str_vk, type,0);
	}
}
public OnPlayerLeaveDynamicArea(playerid, areaid) {
	if(areaid == army_sklad_zone) {
		FullPtPlayer[playerid] = 0;
		KillTimer(army_sklad_timer[playerid]);
		cef_emit_event(playerid, "hide-ammo-notify");
	}
	if(areaid == capturezonespawn) {
		if(gangwar > 0) {
			if(IsPlayerToKvadrat(playerid, 1449.5,-1355, 1591.5, -1133)) {
				if(PI[playerid][data_MEMBER] != Command[0] && PI[playerid][data_MEMBER] != Command[1]) {
					SetPlayerPosAC(playerid, 1428.1783,-1150.3796,11.7327);
					SendClientMessage(playerid, 0xa2d0f9FF, "Вы попали в зону стрелы и были возвращены за eё пределы");
				}
				else {
					if(PI[playerid][data_MASK_M] == 1) {
						SetPlayerColorEx(playerid);
   						PI[playerid][data_MASK_M] = 0;
						SendClientMessage(playerid, 0xa2d0f9FF, "В данный момент идёт захват территории с вас автоматический была снята маска");
					}
				}
				return 1;
		    }
	    }
	}
	return 1;
}
CMD:cteam(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new string[1048], name[115], bugfix = 0;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		if(PI[i][data_MEMBER] == PI[playerid][data_MEMBER]) {
			if(IsPlayerToKvadrat(i, 1449.5,-1355, 1591.5, -1133)) {
				SetString(name, NameRang(i));
				name = NameRang(i);
				format(string,sizeof(string),"%s%s[%d]\t\t%d(%s)\t\t%d пинг\n", string, PI[i][data_NAME], i, PI[i][data_RANK], name, GetPlayerPing(i));
			}
			bugfix = 1;
		}
	}
 	if(bugfix == 0) ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Зона захвата", "На территории захвата нет игроков.", "Закрыть", "");
	else {
		new str_1[512*2];
		format(str_1,sizeof(str_1),"Имя\tРанг\tГруппа\tPing\n%s",string);
		ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_TABLIST_HEADERS, "{f00e5d}Зона захвата", str_1, "Закрыть", "");
	}
	return 1;
}
CMD:givedonate(playerid,params[]) {
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(GetPVarInt(playerid,"givedonate") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 1 минуту");
	if(sscanf(params,"ud",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /givedonate [ID игрока] [кол-во]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] > 5000)return  SendClientMessage(playerid,CG,"Можно выдать только от 1 до 5000 руб");
    SetPVarInt(playerid,"givedonate",gettime() + 59);
	PI[params[0]][data_DONATE] += params[1];
	UpdatePlayerDataInt(params[0], "donate", PI[params[0]][data_DONATE],26447);
	SendClientMessagef(params[0], CY, "Разработчик сервера изменил кол-во вашей донат-поинтов. Добавлено: {ff2457}('%d'){FFFF00}",params[1]);
	new vk_send[250];
	format(vk_send,sizeof(vk_send),"Разработчик %s выдал игроку %s %d донат-поинтов)",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[1]);
	return SendVKTest(playerid, vk_send, 3);
}
callback: LoadRecOnlineVK() {
    new rows, fields, temp[5];
    cache_get_data(rows, fields);
    if(rows) {
    	for(new i = 0; i < rows; i++) {
			cache_get_field_content(i, "onlinerecord", temp), RecVK[online] = strval (temp);
			cache_get_field_content(i, "onlineday", temp), RecVK[onlineday] = strval (temp);
		}
		printf("Загружен рекордный онлайн: %d",RecVK[online]);
  	}
    return 1;
}
cmd:saveplayers(playerid) {
	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(GetPVarInt(playerid,"saveplayers") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 1 минуту");
	new players;
	for(new i = 0; i < MAX_PLAYERS; i++) {
		SavePlayerData(i);
		players = i;
	}
	SetPVarInt(playerid,"saveplayers",gettime() + 59);
	SendClientMessagef(playerid, CY, "Вы сохранили весь сервер. Сохранили: {ff2457}('%d'){FFFF00} игроков",players);
	return 1;
}
callback: setleaderskin(playerid) {
    new rows, fields,temp[10];
    new idg,skin_m,skin_g,gname[32];
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
		cache_get_field_content(i, "id", temp), idg = strval (temp);
		cache_get_field_content(i, "skin_m", temp), skin_m = strval(temp);
		cache_get_field_content(i, "skin_g", temp), skin_g = strval(temp);
		cache_get_field_content(i, "group_name", gname, dbHandle, 32);
		strmid(PI[playerid][data_GRNAME], gname, 0, strlen(gname), 25);
		PI[playerid][data_GID] = idg;
		UpdatePlayerDataInt(playerid, "GID", PI[playerid][data_GID],26486);
		if(PI[playerid][data_SEX] == 1)
		{
			PI[playerid][data_SKINM] = skin_m;
			SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
			UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],26491);
		}
		if(PI[playerid][data_SEX] == 2)
		{
			PI[playerid][data_SKINM] = skin_g;
			SetPlayerSkinAC(playerid,PI[playerid][data_SKINM]);
			UpdatePlayerDataInt(playerid, "skinm", PI[playerid][data_SKINM],26497);
		}
	}
	return 1;
}
CMD:givemoney(playerid, params[]) {
   	if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(GetPVarInt(playerid,"givemoney") > gettime()) return SendClientMessage(playerid, CG, "Команду можно использовать раз в 1 минуту");
	if(sscanf(params,"ud",params[0],params[1])) return SendClientMessage(playerid,CG,"Используйте: /givemoney [ID игрока] [деньги]");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(params[1] > 500000)return  SendClientMessage(playerid,CG,"Можно выдать только от 1 до 500000 руб");
    SetPVarInt(playerid,"givemoney",gettime() + 59);
	give_player_money(params[0], params[1], "#givmoeny1",26512);
	SendClientMessagef(params[0], CY, "Разработчик сервера изменил кол-во ваших денег. Добавлено: {ff2457}('%d'){FFFF00} вирт",params[1]);
	new vk_send[250];
	format(vk_send,sizeof(vk_send),"Разработчик %s выдал игроку %s %d вирт)",PI[playerid][data_NAME],PI[params[0]][data_NAME],params[1]);
	SendVKTest(playerid, vk_send, 3);
	SavePlayerData(playerid);
	return 1;
}
cmd:givemoneyall(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(sscanf(params,"d",params[0])) return SendClientMessage(playerid,CG,"Используйте: /givemoneyall [деньги]");
	if(params[0] > 55550000)return  SendClientMessage(playerid,CG,"Можно выдать только от 1 до 55550000 руб");
	for(new i = 0; i < MAX_PLAYERS; i++) {
		if(!IsPlayerConnected(i)) continue;
		give_player_money(i, params[0], "#givmoeny2",26529);
		SendClientMessagef(i, CY, "Разработчик сервера изменил кол-во ваших денег. Добавлено: {ff2457}('%d'){FFFF00} вирт",params[0]);
   	}
	new vk_send[250];
	format(vk_send,sizeof(vk_send),"Разработчик %s выдал всему серверу %d вирт)",PI[playerid][data_NAME],params[0]);
	SendVKTest(playerid, vk_send, 3);
	SavePlayerData(playerid);
	return 1;
}
stock SetCarPark(playerid) {
	new str_q[512],str_k[256];
	str_q = "UPDATE `accounts` SET ";
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposx", 2304.5645);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposy", -1827.1555);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpposz", 22.2345);
	acc_float_strcat(str_q, sizeof(str_q), "car_tpangle", 270.4927);
	strdel(str_q, strlen(str_q)-1, strlen(str_q));
	format(str_k,sizeof(str_k)," WHERE `name` = '%s' LIMIT 1",PI[playerid][data_NAME]);
	strcat(str_q, str_k);
	mysql_function_query(dbHandle, str_q, false, "", "");
	PI[playerid][data_CAR_POSX] = 2304.5645;
	PI[playerid][data_CAR_POSY] = -1827.1555;
	PI[playerid][data_CAR_POSZ] = 22.2345;
	PI[playerid][data_CAR_ANGLE] = 270.4927;
}
stock CarInfo(playerid) {
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Руководство по эксплуатации", "\
	{252525}Этот гайд поможем Вам изучить управление новым транспортом.\n\
	{252525}Меню личного транспорта - команда {f00e5d}/car\n\n\
	{3377cc}1. Загрузка:\n\
	{252525}Чтобы загрузить транспорт выйдите из автосалона на парковку, затем введите {f00e5d}/car{252525},\n\
	{252525}найдите в списке {f00e5d}'%s'{252525} и нажмите 'Загрузить'. Транспорт повявится на парковке.\n\n\
	{3377cc}2. Выгрузка:\n\
	{252525}Чтобы выгрузить транспорт введите {f00e5d}/car{252525} и выберите пункт 'Выгрузить'.\n\
	{252525}Транспорт будет автоматически выгружен в случае выхода из игры.\n\n\
	{3377cc}3. Ключ зажигания:\n\
	{252525}Вставив ключ зажигания {f00e5d}(команда /key){252525}, Вы сможете завести двигатель.\n\
	{252525}Обратите внимание, что если Ваш  транспорт будет открыт, его сможет угнать другой игрок!\n\n\
	{3377cc}4. Центральный замок:\n\
	{252525}Открытие и закрытие дверей осуществляется {f00e5d}командой /lock{252525}.\n\
	{252525}Для управления центральным замком необходимо находиться рядом с транспортом\n\n\
	{3377cc}5. Парковка:\n\
	{252525}Вы можете припарковать Ваш транспорт командой {f00e5d}/park{252525} практически везде.\n\
	{252525}После парковки транспорт будет загружаться на новой позиции (например, около дома).\n\n\
	{f00e5d}Удачи на дороне, соблюдайте Правила Дорожного Движения!", "Закрыть", "");
	return 1;
}
callback: DialogPravilaAdm(playerid) {
	new str_1[5];
	format(str_1, sizeof(str_1), "%d", pDialogCurrectTime[playerid] - gettime() );
	new str_3[1048];
	format(str_3,sizeof(str_3),"\
	{252525}Этот гайд поможем Вам изучить систему администрирования.\n\n\
	{3377cc}1. Наказания:\n\
	{252525}Основные команды для наказаний: {f00e5d}/kick, /mute, /ban, /vmute, /jail\n\
	{252525}Так-же на нашем сервере есть система быстрых наказаний:{f00e5d} /prison\n\n\
	{3377cc}2. Главная Администрация:\n\
	{252525}Основатель сервера: {f00e5d}Colmon_Jordan{252525}, разработчик сервера: {f00e5d}Danila_Winchester\n\
	{252525}Главный администратор: {f00e5d}вакантно\n\n\
	{3377cc}3. Основые правила:\n\
	{252525}- Игровой мастер это {f00e5d}NonRP персонаж{252525}, при убийстве которого нельзя выдавать наказания\n\
	{252525}- Наказывать нужно строго по регламенту правил на нашем форуме - {f00e5d}forum.arcanarp.online\n\
	{252525}- Нельзя создавать помеху в {f00e5d}РП ситуациях{252525}, ведь у главной администрации есть логи, то есть\n\
	{252525}если вашего друга садят полицейские его нельзя спасать в помощью админских привелегий и прочего\n\
	{252525}- Нельзя называть игрокам ники администрации сервера\n\
	{252525}- Нельзя говорить игрокам что Вы игроков мастер. Остальные правила Вы можете уточнить у {f00e5d}GM+\n\n\
	{3377cc}4. Команды администрации:\n\
	{252525}Все команды: {f00e5d}/ahelp\n\
	{252525}Быстрые наказания: {f00e5d}/prison\n\n\
	{f00e5d}Удачи на посту, соблюдайте Правила");
	CEF__Dialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Подсказка", str_3, (pDialogCurrectTime[playerid] < gettime()) ? ("Ок") : (str_1), "Закрыть" );
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
cmd:giveskill(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
    if(sscanf(params,"u",params[0])) return SendClientMessage(playerid,CG,"Используйте: /giveskill [ID игрока]");
	if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	PI[params[0]][data_PISTOL] = 100;
	PI[params[0]][data_SDPISTOL] = 100;
	PI[params[0]][data_DEAGLE] = 100;
	PI[params[0]][data_SHOTGUN] = 100;
	PI[params[0]][data_MP5] = 100;
	PI[params[0]][data_AK47] = 100;
	PI[params[0]][data_SNIPERRIFLE] = 100;
	return SetPlayerSkills(params[0]);
}
CMD:settings(playerid) return ShowSettings(playerid);
stock ShowSettings(playerid) {
	new settings[300];
	format(settings, sizeof settings, "\
	1. Изменить пароль\t\t{f00e5d}...\n\
	2. Изменить стиль боя\t\t{f00e5d}...\n\
	3. Изменить стиль походки\t{f00e5d}...\n\
	4. Отображение FPS\t\t{f00e5d}%s",
	(PI[playerid][data_SHOWFPS]) ? ("Включено") : ("Отключено"));
	return ShowPlayerDialog(playerid, dialog_SETTING_PER, DIALOG_STYLE_LIST, "{f00e5d}Настройки аккаунта", settings, "Изменить", "Назад");
}
cmd:i(playerid) {
	ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_LIST, "{f00e5d}Получение предметов инвентаря", "\
	1. Получить скин\n\
	2. Получить игровую валюту\n\
	3. Получить транспортное средство\n\
	4. Получить донат-рубли\n\
	5. Активировать бустер", "Далее", "Закрыть");
}
cmd:promo(playerid) {
	if(PI[playerid][data_PROMOCODE] == 1) return SendClientMessage(playerid, CG, "Вы уже использовали промокод");
	return ShowPlayerDialog(playerid, 8100, DIALOG_STYLE_INPUT, "{f00e5d}Промокод", "Напишите название промокода в поле ниже\nПромокод Вы можете получить от ютубера сервера!", "Продолжить", "Закрыть");
}
callback: PromoCode(playerid) {
    new rows, fields,name[32],temp[60],m,d,v,ac,l;
    cache_get_data(rows, fields);
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_field_content(i, "code", name, dbHandle, 32);
			cache_get_field_content(i, "money", temp), m = strval (temp);
			cache_get_field_content(i, "donate", temp), d = strval (temp);
			cache_get_field_content(i, "vip", temp), v = strval (temp);
			cache_get_field_content(i, "level", temp), l = strval (temp);
			cache_get_field_content(i, "activation", temp), ac = strval (temp);
			PI[playerid][data_DONATE] += d;
			PI[playerid][data_VIP] += v;
			PI[playerid][data_PROMOCODE] = 1;
			UpdatePlayerDataInt(playerid, "vip", PI[playerid][data_VIP],26786);
			UpdatePlayerDataInt(playerid, "donate", PI[playerid][data_DONATE],26787);
			UpdatePlayerDataInt(playerid, "promocode", PI[playerid][data_PROMOCODE],26788);
			if(l == 1) {
				if(ac > 10) {
					new str_q[256];
					mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `promocode` SET `level` = '2' WHERE `code` = '%e'",ac,name);
					mysql_function_query(dbHandle, str_q, false, "", "");
				}
				new str_i[300];
				format(str_i,sizeof(str_i),"\
				{252525}1. Название: {3377cc}%s\n\
				{252525}2. Бонус №1: {3377cc}%d донат-поинтов\n\
				{252525}3. Бонус №2: {3377cc}%d вирт\n\
				{252525}4. Бонус №3: {3377cc}%d дней\n\
				{252525}5. Бонус №3: {3377cc}лицензии",name,d,m,v);
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Промокод активирован (LVL: 1)", str_i, "Закрыть", "");
				PI[playerid][data_LICB] = 1;
				if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
				SavePlayerData(playerid);
			}
			if(l == 2) {
				if(ac > 30) {
					new str_q[256];
					mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `promocode` SET `level` = '3' WHERE `code` = '%e'",ac,name);
					mysql_function_query(dbHandle, str_q, false, "", "");
				}
				new str_i[300];
				format(str_i,sizeof(str_i),"\
				{252525}1. Название: {3377cc}%s\n\
				{252525}2. Бонус №1: {3377cc}%d донат-поинтов\n\
				{252525}3. Бонус №2: {3377cc}%d вирт\n\
				{252525}4. Бонус №3: {3377cc}%d дней\n\
				{252525}5. Бонус №3: {3377cc}скиллы\n\
				{252525}6. Бонус №3: {3377cc}лицензии",name,d,m,v);
				ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Промокод активирован (LVL: 2)", str_i, "Закрыть", "");
				PI[playerid][data_LICB] = 1;
				if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
				PI[playerid][data_DEAGLE] = 100;
				SetPlayerSkills(playerid);
			}
			if(l == 3) {
				new str_i[300];
				format(str_i,sizeof(str_i),"\
				{252525}1. Название: {3377cc}%s\n\
				{252525}2. Бонус №1: {3377cc}%d донат-поинтов\n\
				{252525}3. Бонус №2: {3377cc}%d вирт\n\
				{252525}4. Бонус №3: {3377cc}%d дней\n\
				{252525}5. Бонус №3: {3377cc}скиллы\n\
				{252525}6. Бонус №3: {3377cc}лицензии",name,d,m,v);
				ShowPlayerDialog(playerid, 7891, DIALOG_STYLE_MSGBOX, "{f00e5d}Промокод активирован (LVL: 3)", str_i, "Дальше", "");
				PI[playerid][data_LICB] = 1;
				if(PI[playerid][data_LICNUM] == 0) PI[playerid][data_LICNUM] = RandomEX(1111111, 6666666);
				PI[playerid][data_PISTOL] = 100;
				PI[playerid][data_SDPISTOL] = 100;
				PI[playerid][data_DEAGLE] = 100;
				PI[playerid][data_SHOTGUN] = 100;
				PI[playerid][data_MP5] = 100;
				PI[playerid][data_AK47] = 100;
				PI[playerid][data_SNIPERRIFLE] = 100;
				SetPlayerSkills(playerid);
			}
			ac = ac+1;
			new str_q[256];
			mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `promocode` SET `activation` = '%d' WHERE `code` = '%e'",ac,name);
			mysql_function_query(dbHandle, str_q, false, "", "");
			give_player_money(playerid,m,"#71",26794);
			SavePlayerData(playerid);
			new a_str[115];
			format(a_str,sizeof(a_str),"[Внимание] %s[%d] использовал промокод ('%s', lvl: %d) получено: (денег - %d) (донат - %d)", PI[playerid][data_NAME], playerid, name, l, m, d);
			SendAdminMessage(COLOR_RED, a_str);
		}
	}
	else SendClientMessage(playerid, CG, "Промокод не найден");
    return 1;
}
cmd:info(playerid) return ShowDialogResurs(playerid);
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(result == -1) {
		SendClientMessage(playerid, CG, "Неизвестная команда! Введите /help для просмотра доступных функций.");
		return 0;
	}
    return 1;
}
stock GenerateBanCode(size)
{
    static bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"},
        numbers[10][] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
        code[7];
	code[0] = EOS;
    if(size > sizeof(code)) size = sizeof(code);
    for(new i = 0; i < size; i ++) {
        switch(random(2)) {
            case 0: strcat(code, bigletters[random(sizeof(bigletters))]);
            case 1: strcat(code, numbers[random(sizeof(numbers))]);
        }
    }
    return code;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);
callback: CheckBan(playerid) {
	print("CheckBan");
    new rows, fields,temp[174];
    cache_get_data(rows, fields);
	new str_3[512];
    if(rows) {
 	    new day, text[50], id;
        cache_get_field_content(0, "id",temp), id = strval (temp);
        cache_get_field_content(0, "day",temp), day = strval (temp);
		cache_get_field_content(0, "text", text, dbHandle);
  		format(str_3,sizeof(str_3),"{ffffff}Никнейм: {396cac}%s\n\
		{FFFFFF}ID аккаунта: {396cac}%s\n\
		{ffffff}Причина блокировки: {FFFFFF}%s\n\
		{ffffff}Срок блокировки: {FFFFFF}%d дня/дней\n\
		{d6d886}Советуем сделать скриншот (клавиша F8), чтобы иметь\n\
		{d6d886}возможность обжаловать бан на форуме", PI[playerid][data_NAME],id,text,day);
		ShowPlayerDialog(playerid, dialog_BAN, DIALOG_STYLE_MSGBOX,"{f00e5d}Аккаунт заблокирован", str_3, "Закрыть", "");
	 	Kick(playerid);
		new gpcitoken[65],name[25];
    	gpci(playerid, gpcitoken, sizeof(gpcitoken));
		GetPlayerName(playerid, name, sizeof(name));
		printf("Игрок: %s попытался войти на сервер с BAN id: %d reason: %s",name,id,text);
	 	return 1;
  	}
	else {
		new query[300];
		mysql_format(dbHandle, query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%e' AND `password` = MD5('%s')",PI[playerid][data_NAME],PI[playerid][data_PASSWORD]), print("Login");
		mysql_function_query(dbHandle, query, true, "LoadPlayerData", "d", playerid);
	}
    return 1;
}
callback: CheckBanPC(playerid) {
	print("CheckBanPC");
    new rows, fields,code[30],temp[10],id;
    cache_get_data(rows, fields);
    if(rows) {
        cache_get_field_content(0, "code", code, dbHandle, 7);
		cache_get_field_content(0, "id_account", temp), id = strval (temp);
        new hour, minute, second, year, month, day;
        gettime(hour, minute, second);
        getdate(year,month,day);
        new monthname[9];
        switch(month) {
            case 1: monthname = "января";
            case 2: monthname = "февраля";
            case 3: monthname = "марта";
            case 4: monthname = "апреля";
            case 5: monthname = "мая";
            case 6: monthname = "июня";
            case 7: monthname = "июля";
            case 8: monthname = "августа";
            case 9: monthname = "сентября";
            case 10: monthname = "октября";
            case 11: monthname = "ноября";
            case 12: monthname = "декабря";
        }
        new dtext[480];
        format(dtext,sizeof(dtext), "{FFFFFF}Вы заблокированны и больше не можете играть на сервере Arcana.\n\n\
        {FFFFFF}ID аккаунта: {27b947}%d\n\
        {FFFFFF}ID блокировки: {27b947}%s\n\
        {FFFFFF}Дата и время: {27b947}%d:%d:%d (%d %s %d г)\n\n\
        {4682c5}Если вы уверенны что блокировка ошибочная - обратитесь в техническую\n\
        поддержу прекрепив к своему обращению скриншот данного диалога (F8)",id,code,hour,minute,second,day,monthname, year);
        ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{db2751}Упс", dtext, "Ок", "");
        SendClientMessage(playerid, 0x8b8b85FF, "Введите /q, чтобы выйти из игры");
        new banip[50];
        new ip[59+(-2+15)+1];
	    GetPlayerIp(playerid, ip, sizeof ip);
        format(banip, sizeof(banip), "banip %s", ip);
  	    SendRconCommand(banip);
		new gpcitoken[65];
    	gpci(playerid, gpcitoken, sizeof(gpcitoken));
		new name[25];
		GetPlayerName(playerid, name, sizeof(name));
        Kick(playerid);
  	}
	if(!rows) return Autorisation(playerid);
    return 1;
}
CMD:sban(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(sscanf(params,"iii", params[0])) return SendClientMessage(playerid, CG, "Используйте: /sban [ID игрока]");
    if(params[0] == playerid) return SendClientMessage(playerid, CG, "Нельзя применить на себе");
    if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, CG, "Игрока нет в сети, вы не можете заблокировать его GPCI-ID (/sbanoff)");
    new gpcitoken[65];
    gpci(params[0], gpcitoken, sizeof(gpcitoken));
	static code[7];
	code = GenerateBanCode(7);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `gpci_ban`(`gpci`,`code`) VALUES ('%s','%s')", gpcitoken, code);
	mysql_function_query(dbHandle, str_q, false, "", "");
    new mess[145];
    format(mess, sizeof(mess), "[GPCI] %s[%d] заблокировал игрока %s[%d] навсегда",  PI[playerid][data_NAME],playerid, PI[params[0]][data_NAME], params[0]);
    SendAdminMessage(CY, mess);
    SendClientMessage(params[0], CG, "Ваш аккаунт был заблокирован. Вы больше не можете находиться на сервере");
    SendClientMessage(params[0], CG, "Введите /q, чтобы выйти из игры");
    return Kick(params[0]);
}
CMD:sbanoff(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
    if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CG, "Используйте: /sbanoff [GPCI-TOKEN]");
	static code[7];
	SetString(code, GenerateBanCode(7));
	code = GenerateBanCode(7);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof str_q, "INSERT INTO `gpci_ban`(`gpci`,`code`) VALUES ('%s','%s')", params[0], code);
	mysql_function_query(dbHandle, str_q, false, "", "");
    new mess[145];
    format(mess, sizeof(mess), "[GPCI] %s[%d] заблокировал GPCI %s навсегда",  PI[playerid][data_NAME],playerid, params[0]);
    SendAdminMessage(CY, mess);
    return 1;
}
CMD:check(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 4) return 1;
	if(sscanf(params,"s[25]", params[0])) return SendClientMessage(playerid, CG, "Используйте: /check [имя]");
	new string[144];
	mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM `accounts` WHERE `name` = '%e'", params[0]);
 	return mysql_tquery(dbHandle, string, "InfoPlayer", "d", playerid);
}
callback: InfoPlayer(playerid) {
    new rows;
    new rows2;
    cache_get_data(rows, rows2);
    if(rows) {
		SendClientMessage(playerid, CG, "Чтобы вывести текст в чат нажмите на него два раза.");
     	new nameadm[24],versionn[24],ip_reg[32],ip_last[32],gpcireg[70],gpcilast[70],email[60],dtext[500];
		cache_get_field_content(0, "name", nameadm, dbHandle, 24);
		cache_get_field_content(0, "version", versionn, dbHandle, 24);
        cache_get_field_content(0, "register_ip", ip_reg, dbHandle, 32);
        cache_get_field_content(0, "last_ip", ip_last, dbHandle, 32);
        cache_get_field_content(0, "GPCI_REG", gpcireg, dbHandle, 70);
        cache_get_field_content(0, "GPCI", gpcilast, dbHandle, 70);
        cache_get_field_content(0, "email", email, dbHandle, 60);
	    format(dtext,sizeof(dtext),"Никнейм:\t\t\t\t{bfbfbf}%s\n\
		ID аккаунта:\t\t\t\t{bfbfbf}%d\n\
        Версия клиента:\t\t\t{bfbfbf}%s\n\
        Последний IP-адрес:\t\t\t{bfbfbf}%s\n\
        IP-адрес регистрации\t\t\t{bfbfbf}%s\n\
        E-mail\t\t\t\t\t{bfbfbf}%s\n\
        Текущий GPCI - ключ:\t\t\t{bfbfbf}%s\n\
        GPCI ключ регистрации:\t\t{bfbfbf}%s",
        nameadm,cache_get_field_content_int(0, "id"),versionn,ip_last,ip_reg,email,gpcilast,gpcireg);
	    ShowPlayerDialog(playerid, 502, DIALOG_STYLE_LIST, "{db2751}Информация об аккаунте", dtext, "Закрыть", "");
    }
	if(!rows) SendClientMessage(playerid,CG, "Игрок не найден в базе-данных");
	return true;
}
cmd:rasform(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 7) return 1;
	rasform[playerid]++;
	if(rasform[playerid] != 2) return SendClientMessage(playerid, COLOR_RED, "[Внимание]: {FFFFFF}если Вы напишите ещё раз данную команду все территории будут расформированы");
	rasform[playerid] = 0;
    for(new i = 0; i < totalgz; i++) {
		gz_info[i][gzopg] = gz_info[i][standart_opg];
		SaveGZ(gz_info[i][standart_opg], i);
		foreach(new pl:Player) {
			if(PI[pl][data_MEMBER] == 5 || PI[pl][data_MEMBER] == 6 || PI[pl][data_MEMBER] == 7) {
				GangZoneHideForPlayer(pl, i);
				GangZoneShowForPlayer(pl, i, GetGZFrac(i));
			}
		}
    }
    return CEF__Dialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Расформ территорий", "Вы успешно распустили все территории ОПГ!", "Закрыть", "");
}
callback: MinutTimer() {
	foreach(new id:Player) SavePlayerData(id);
	if(m_kavkaz > 0) m_kavkaz--,SaveWarehouse();
	if(m_gopota > 0) m_gopota--,SaveWarehouse();
	if(m_skinhead > 0) m_skinhead--,SaveWarehouse();
	return 1;
}
callback: GzInfo(playerid) {
    new rows, fields, GzS, GzG, GzO;
    cache_get_data(rows, fields);
    for(new i = 0; i < rows; i++) {
	   	if(gz_info[i][gzopg] == 5) GzS++;
        if(gz_info[i][gzopg] == 6) GzG++;
        if(gz_info[i][gzopg] == 7) GzO++;
    }
	static time[15],time1[15],time2[15];
	if(m_kavkaz > 60) time = "час(ов)";
	else time = "минут(а)";
	if(m_skinhead > 60) time1 = "час(ов)";
	else time1 = "минут(а)";
	if(m_gopota > 60) time2 = "час(ов)";
	else time2 = "минут(а)";
	new gz[40],gz1[40],gz2[40];
	switch(m_kavkaz) {
	    case 0: format(gz, sizeof gz, "-");
		case 1..3000: {
			new t;
			if(m_kavkaz > 60) t = m_kavkaz/60;
			else t = m_kavkaz;
			format(gz, sizeof gz, "%d %s", t, time);
		}
	}
	switch(m_skinhead) {
	    case 0: format(gz1, sizeof gz1, "-");
		case 1..3000: {
			new t;
			if(m_skinhead > 60) t = m_skinhead/60;
			else t = m_skinhead;
			format(gz1, sizeof gz1, "%d %s", t, time1);
		}
	}
	switch(m_gopota) {
	    case 0: format(gz2, sizeof gz2, "-");
		case 1..3000: {
			new t;
			if(m_gopota > 60) t = m_gopota/60;
			else t = m_gopota;
			format(gz2, sizeof gz2, "%d %s", t, time2);
		}
	}
	new str_3[365];
    format(str_3, sizeof(str_3), "\
	{663399}Скинхеды {252525}(кол-во территорий: {4086ff}%d{252525})\nЗаморозка стрелы: %s\n\n\
	{66CCFF}Гопота {252525}(кол-во территорий: {4086ff}%d{252525})\nЗаморозка стрелы: %s\n\n\
	{339933}Кавказцы {252525}(кол-во территорий: {4086ff}%d{252525})\nЗаморозка стрелы: %s", GzS,gz1, GzG,gz2, GzO,gz);
    return CEF__Dialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация об ОПГ", str_3, "Закрыть", "");
}
cmd:stopwar(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 7) return 1;
	SetPVarInt(playerid,"frac", playerid);
	return ShowPlayerDialog(playerid, 7610, DIALOG_STYLE_LIST, "{f00e5d}Выберете организацию", "1. Скинхеды\n2. Гопота\n3. Кавказцы", "Выбрать", "Отмена");
}
/*callback: CheckAccount(playerid) {
	print("CheckAccount");
    new rows, fields, lip[16], nip[16];
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "enter_ip", lip, dbHandle, 32);
	    GetPlayerIp(playerid, nip, sizeof(nip));
	    if(strcmp(nip, lip, true) == 0 && strval(lip) != 0) {
			SetPVarInt(playerid,"JoinGame", 1);
	        new str_ca[200];
	        mysql_format(dbHandle, str_ca, sizeof(str_ca), "SELECT * FROM `accounts` WHERE `name` = '%e'",PI[playerid][data_NAME]);
			mysql_function_query(dbHandle, str_ca, true, "LoadPlayerData", "d", playerid);
	    }
		else Dialog_PLAYER_LOGIN(playerid);
	}
	return 1;
}*/
stock ChangeSkin(playerid) {
    if(PI[playerid][data_SEX] == 1) {
    	switch(random(4)) {
			case 0: {
				PI[playerid][data_SKIN] = 134;
				SetPlayerSkinAC(playerid, 134);
			}
			case 1: {
				PI[playerid][data_SKIN] = 135;
				SetPlayerSkinAC(playerid, 135);
			}
			case 2: {
				PI[playerid][data_SKIN] = 137;
				SetPlayerSkinAC(playerid, 137);
			}
			case 3: {
				PI[playerid][data_SKIN] = 230;
				SetPlayerSkinAC(playerid, 230);
			}
		}
    }
    else if(PI[playerid][data_SEX] == 2) {
    	switch(random(3)) {
			case 0: {
				PI[playerid][data_SKIN] = 10;
				SetPlayerSkinAC(playerid, 10);
			}
			case 1: {
				PI[playerid][data_SKIN] = 39;
				SetPlayerSkinAC(playerid, 39);
			}
			case 2: {
				PI[playerid][data_SKIN] = 54;
				SetPlayerSkinAC(playerid, 54);
			}
		}
    }
	SavePlayerData(playerid);
	return 1;
}
CMD:editmp(playerid) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(gomp_status == false) return SendClientMessage(playerid, CG, "Мероприятие не создано. (/setmp)");
	new plmp;
    for(new i = 0; i < MAX_PLAYERS; i++) {
        if(!IsPlayerConnected(i)) continue;
        if(PI[i][data_MP] == 1) plmp++;
    }
	new str_3[365];
	format(str_3, sizeof str_3, "\
	1. Изменить позицию телепорта\n\
	2. Выдать одежду в радиусе\n\
	3. Выдать оружие в радиусе\n\
	4. Выдать бронижелет в радиусе\n\
	5. Выдать здоровья в радиусе\n\
	{f00e5d}Включить/Выключить ТК на МП.\n\
	{f00e5d}Завершить МП\n\
	{f00e5d}Завершить МП (без респавна)\n\
	{f00e5d}Игроков на МП: %d", plmp);
    return  CEF__Dialog(playerid, 5898, DIALOG_STYLE_LIST, "{f00e5d}Настройки МП", str_3, "Выбрать", "Закрыть");
}
CMD:setmp(playerid)
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(gomp_status == false) {
		GetPlayerPos(playerid, gomp_pos[0],gomp_pos[1],gomp_pos[2]);
        gomp_status = true;
		mptk = false;
		new str_1[144];
		format(str_1,sizeof(str_1),"[%s #%d] %s[%d] создал точку телепорта на мероприятие", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME], playerid);
		SendAdminMessage(0x8fbedb00,str_1);
		PI[playerid][data_MPA]++;
		UpdatePlayerDataInt(playerid, "mp_adm", PI[playerid][data_MPA],27190);
	}
	else SendClientMessage(playerid, CG, "Точка телепорта уже создана, настроки: /editmp");
	return 1;
}
CMD:mp(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(gomp_status == false) return SendClientMessage(playerid, CG, "Игровой мастер не создал точку телепорта");
	if(PI[playerid][data_JAIL] != 0) return SendClientMessage(playerid, CG, "Нельзя телепортироваться на мероприятие в КПЗ");
	if(PI[playerid][data_DEMORGAN] != 0) return SendClientMessage(playerid, CG, "Нельзя телепортироваться на мероприятие в деморгане");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid,CG,"Нельзя телепортироваться на мероприятие в машине");
	if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid,CG,"Попасть на мероприятие можно только на улице");
	return  CEF__Dialog(playerid, 1231, DIALOG_STYLE_MSGBOX, "{f00e5d}Телепортация на мероприятие", "Вы действительно хотите телепортитоватся на мероприятие?\n{f00e5d}Если Вы захотите покинуть мероприятие досрочно, используйте /back", "Да", "Нет");
}
CMD:back(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_MP] != 1) return SendClientMessage(playerid, CG, "Вы не участвуете в мероприятии");
	return  CEF__Dialog(playerid, 1232, DIALOG_STYLE_MSGBOX, "{f00e5d}Покинуть мероприятие", "Вы действительно хотите покинуть мероприятие?", "Да", "Нет");
}
stock ChangeNameMenu(playerid) return ShowPlayerDialog(playerid, dialog_CHANGE_NAME, DIALOG_STYLE_LIST, "{f00e5d}Выбор типа", "1. Изменить на случайный никнейм\t\t{f00e5d}Бесплатно\n2. Изменить на свой никнейм\t\t{3377cc}Платно", "Выбор", "Закрыть");
stock RandomName(playerid) {
	new rand = random(sizeof(nname));
	SetPVarString(playerid, "randomame", nname[rand]);
	new query[100+MAX_PLAYER_NAME];
	mysql_format(dbHandle,query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%e'", nname[rand]);
	mysql_function_query(dbHandle, query, true, "NameCallback", "d", playerid);
}
callback: NameCallback(playerid)
{
    new rows, fields;
    cache_get_data(rows, fields);
    if(rows) SendClientMessage(playerid, COLOR_BLACK, "Случайный никнейм уже занят другим игроком!"), DeletePVar(playerid, "randomame");
    else {
		new name[24];
		GetPVarString(playerid,"randomame", name, sizeof(name));
		FixSVarString(name);
		new str_n[240];
		format(str_n, sizeof str_n, "Вы хотите изменить никнейм своего персонажа на {3377cc}'%s'{252525}?\n\n\
		{f00e5d}Обратите внимание, что если Вы измените никнейм во время\n\
		проверки на Вас жалобы, Вы будете заблокированы на 7 дней.", name);
		ShowPlayerDialog(playerid, dialog_SETNAME, DIALOG_STYLE_MSGBOX, "{f00e5d}Случайное изменение никнейма", str_n, "Да", "Нет");
	}
	return true;
}
CMD:prize(playerid) {
	if(PI[playerid][data_LOGGED] == false) return 1;
	if(PI[playerid][data_PRIZEGIVE] == 1) return SendClientMessage(playerid, 0x33ccffFF, "Вы уже получили приз");
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
	new str[512];
	format(str, sizeof(str), "\
	Отыграно {FFFF33}%d из 100 часов.\n\n\
	{252525}Отыграйте 100 часов и получите 300 донат-поинтов {FFFF33}(часы добавляет в PayDay)\n\n\
	{252525}На что их можно потратить можно узнать - {FFFF33}/donate\n\n\
	{252525}Вы можете получить донат-поинты не играя {FFFF33}100 часов, Вы можете купить их у нас на сайте!\n\
	{252525}Сайт: {FFFF33}arcanarp.online (X3 пополение)\n\
	{FFFF33}X3 пополение - это когда сумму котрую Вы донатите умножается в 3-раза!", PI[playerid][data_PRIZETIME]);
	CEF__Dialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Порадок", str, "Закрыть", "");
	return 1;
}
/*CMD:vk(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	new str_3[512];
	format(str_3, sizeof(str_3), "\
	Перейдите в нашу группу {4086ff}ВКонтакте{252525} затем напишите: Аркан привязать %s\n\
	Затем в течении 10 секунд в игре Вам в чат напишет код, который Вы должны ввести в нашей группе {4086ff}ВКонтакте{252525}, {4086ff}Аркан код (и код с игры)\n\
	{696969}Пример: Аркан код 565678\n\n\
	Группа {4086ff}ВКонтакте{252525} и другие контакты: {4086ff}/info{252525}",PI[playerid][data_NAME]);
    return ShowPlayerDialog(playerid,dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Привязка ВКонтакте", str_3, "Закрыть", "");
}*/
CMD:pheal(playerid,params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(!IsPlayerCops(playerid)) return SendClientMessage(playerid,CG,"Данная команда Вам недоступна");
    if(sscanf(params, "ud", params[0])) return SendClientMessage(playerid,CG,"Используйте: /pheal [ID игрока] [причина]");
	if(PI[playerid][data_HEALPACK] == 0) return SendClientMessage(playerid, CG, "У Вас нет медицинской аптечки");
    if(!IsPlayerConnected(params[0]))return  SendClientMessage(playerid,CG,"Игрок не в сети");
	if(PI[params[0]][data_LOGGED] == false)return  SendClientMessage(playerid,CG,"Игрок не авторизован");
	if(GetPVarInt(params[0], "Sleep") == 1) return SendClientMessage(playerid, CG, "Игрок спит");
	if(GetPVarInt(params[0], "PlayerObmorok") == 0) return SendClientMessagef(playerid,CG, "Игрок не нуждается в лечении");
	SendClientMessagef(playerid,CG,"Вы подняли игрока %s[%d] из состояния обморока", PI[params[0]][data_NAME],params[0]);
	SendClientMessagef(params[0],CG,"Сотрудник %s[%d] подняли Вас из состояния обморока", PI[playerid][data_NAME],playerid);
	return 1;
}
CMD:checkuid(playerid,params[]) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid,CG,"Используйте: /checkuid [ID игрока]");
	new query[100+MAX_PLAYER_NAME];
	mysql_format(dbHandle,query, sizeof(query), "SELECT * FROM `accounts` WHERE `id` = '%d'", params[0]);
	mysql_function_query(dbHandle, query, true, "CheckUID", "d", playerid);
	return 1;
}
callback: CheckUID(playerid)
{
    new rows,fields,name[24],temp[5],vkid;
    cache_get_data(rows, fields);
    if(rows) {
		cache_get_field_content(0, "name", name, dbHandle, 24);
		cache_get_field_content(0, "vkid", temp), vkid = strval (temp);
		new str_3[256];
		format(str_3,sizeof(str_3),"{f00e5d}Никнейм: \t\t%s\nСтраница ВКонтакте: vk.com/id%d\nУзнать историю смен ников - /aname (по UID: /uidname)",name,vkid);
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", str_3, "Закрыть", "");
	}
    else SendClientMessagef(playerid, COLOR_BLACK, "Уникальный ID игрока не найден в базе. Проверьте правильность ввода.");
	return true;
}
CMD:uidname(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params, "d", params[0]))return SendClientMessage(playerid, CG,"Используйте: /uidname [UID]");
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", params[0]);
	mysql_tquery(dbHandle, query_string, "_namestore_callback", "i", playerid);
	return 1 ;
}
CMD:aname(playerid, params[]) {
    if(PI[playerid][data_ADMLVL] < 2) return 1;
	if(sscanf(params, "s[30]", params[0]))return SendClientMessage(playerid, CG,"Используйте: /aname [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	mysql_format(dbHandle, query_string, sizeof query_string, "SELECT `id` FROM `accounts` WHERE `name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(dbHandle, query_string, "namestore_callback", "i", playerid);
	return 1 ;
}
callback:namestore_callback(playerid) {
	new rows, fields ;
	cache_get_data(rows, fields);
	if (!rows) return SendClientMessage(playerid, COLOR_BLACK,"Игрок с данным никнеймом не найден в базе данных.");
	new db_increment = cache_get_field_content_int(0, "id", dbHandle);
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(dbHandle, query_string, "_namestore_callback", "i", playerid);
	return 1 ;
}
callback:_namestore_callback(playerid) {
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, COLOR_BLACK,"История никнеймов данного игрока пуста.");
	new str_3[256];
	strcat(str_3, "{f00e5d}Старый никнейм - Новый никнейм - Дата изменения никнейма\n\n{252525}");
	for(new j = 0; j < rows; j ++ ) {
		new _nh_oldname[MAX_PLAYER_NAME ],_nh_newname[MAX_PLAYER_NAME ],_nh_date[20],line_string[68];
		cache_get_field_content(j, "nh_oldname", _nh_oldname, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, dbHandle, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, dbHandle, 20 );
		format(line_string, sizeof (line_string), "%s - %s - %s\n", _nh_oldname, _nh_newname, _nh_date);
		strcat(str_3, line_string);
	}
	return ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}История никнеймов", str_3, "Закрыть", "");
}
CMD:j(playerid,params[])
{
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(PI[playerid][data_START_JOB] < 1) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(sscanf(params,"s[100]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /j [текст]");
	NotReklama(playerid, params[0]);
	static job[24];
	SetString(job, NameJob(playerid));
	job = NameJob(playerid);
	new str[145];
	format(str,sizeof(str),"[J | %s] %s[%d]: %s",job,PI[playerid][data_NAME],playerid,params[0]);
	foreach(new i:Player) if(PI[i][data_START_JOB] == PI[playerid][data_START_JOB]) SendClientMessage(i, 0x69b867FF, str);
	SetPlayerChatBubble(playerid, "сообщил нечто в рацию", 0xcd7a7aFF, 20.0, 4000);
	return 1;
}
stock NameJob(id) {
	new name[15];
	switch(PI[id][data_START_JOB]) {
	    case 1:format(name,sizeof(name),"Анашан");
	    case 2:format(name,sizeof(name),"Лесоруб");
	    case 3:format(name,sizeof(name),"Шахтёр");
	    case 4:format(name,sizeof(name),"Дайвер");
     	case 5:format(name,sizeof(name),"Фермер");
   		case 6:format(name,sizeof(name),"Автобаза");
	    case 7:format(name,sizeof(name),"Автобаза (2)");
		case 8:format(name,sizeof(name),"Развозчик");
		case 9:format(name,sizeof(name),"Дальнобойщик");
	}
    return name;
}
CMD:buygun(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(gangwar != 0) return SendClientMessage(playerid, CG, "Нельзя покупать оружие/здоровье во время захвата территории.");
	if(PI[playerid][data_LVL] < 2) return SendClientMessage(playerid, COLOR_BLACK, "Для преобретения оружия Вы должны иметь как минимум 2 уровень");
	return ShowPlayerDialog(playerid, dialog_BGUN, DIALOG_STYLE_LIST, "{f00e5d}Покупка оружия", "\
		{252525}1. Desert Eagle \t\t{3377CC}(10 тыс / 100 пт)\n\
		{252525}2. AK-47 \t\t\t{3377CC}(10 тыс / 250 пт)\n\
		{252525}3. Малого пакет\t\t{3377CC}(15 тыс)\n\
		{252525}4. Средний пакет\t\t{3377CC}(20 тыс)\n\
		{252525}5. Большой пакет\t\t{3377CC}(35 тыс)\n\
		{252525}6. 176 здоровья\t\t{3377CC}(5 тыс)", "Далее", "Закрыть");
}
stock AC_Kick(playerid, code) {
	new a_str[145];
	format(a_str,sizeof(a_str),"[Анти-чит (Особый варнинг)] %s[%d] (op-code: #%d)", PI[playerid][data_NAME], playerid, code);
	SendAdminMessage(COLOR_ADMINCHAT, a_str);
	return 1;
}
static const AC_CODE_NAME[AC_MAX_CODES][AC_MAX_CODE_NAME_LENGTH] = {
	"AirBreak пешком",
	"AirBreak в ТС",
	"Телепорт пешком",
	"Телепорт в ТС",
	"Телепорт между ТС",
	"Телепорт в ТС к игроку",
	"Телепорт pickup",
	"FlyHack пешком",
	"FlyHack в ТС",
	"SpeedHack пешом",
	"SpeedHack в ТС",
	"Health hack в ТС",
	"Health hack пешком",
	"Armour hack",
	"Money hack",
	"Weapon hack",
	"Ammo hack ++",
	"Ammo hack бесконечный",
	"Неопределенный взлом",
	"GodMode пешком",
	"GodMode в ТС",
	"Invisible",
	"Lagcomp-spoof",
	"Тюнинг взлом",
	"Паркур мод",
	"Быстрая очередь",
	"Быстрый огонь",
	"Fake-Spawn",
	"Fake-Kill",
	"AimBot",
	"Run hack",
	"CarShot",
	"CarJack",
	"Разморозка",
	"AFK призрак",
	"Full Aiming",
 	"Fake NPC",
 	"Переподключение",
 	"Высокий пинг",
 	"Dialog hack",
 	"Песочница hack",
 	"Ошиба версии игрока",
	"SR-Rcon hack",
	"Tuning crasher",
	"Invalid seat crasher",
	"Dialog crasher",
	"Attached object crasher",
	"Weapon Crasher",
	"Connects to one slot",
	"Флуд вызываемыми функциями",
	"Флуд смены места",
	"DDos",
	"Nop"
};
new AC_CODE_TRIGGER_TYPE[AC_MAX_CODES] = {
	AC_CODE_TRIGGER_TYPE_WARNING, // Airbreak (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // Airbreak (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (into/between vehicles)
	AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (vehicle to player)
	AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (pickups)
	AC_CODE_TRIGGER_TYPE_WARNING, // FlyHack (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // FlyHack (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // SpeedHack (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // SpeedHack (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // Health hack (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // Health hack (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // Money hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Weapon hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Ammo hack (add)
	AC_CODE_TRIGGER_TYPE_WARNING, // Ammo hack (infinite)
	AC_CODE_TRIGGER_TYPE_WARNING, // Special actions hack
	AC_CODE_TRIGGER_TYPE_WARNING, // GodMode from bullets (onfoot)
	AC_CODE_TRIGGER_TYPE_WARNING, // GodMode from bullets (in vehicle)
	AC_CODE_TRIGGER_TYPE_WARNING, // Invisible hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Lagcomp-spoof
	AC_CODE_TRIGGER_TYPE_WARNING, // Tuning hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Parkour mod
	AC_CODE_TRIGGER_TYPE_WARNING, // Quick turn
	AC_CODE_TRIGGER_TYPE_WARNING, // Rapid fire
	AC_CODE_TRIGGER_TYPE_WARNING, // FakeSpawn
	AC_CODE_TRIGGER_TYPE_WARNING, // FakeKill
	AC_CODE_TRIGGER_TYPE_WARNING, // Pro Aim
	AC_CODE_TRIGGER_TYPE_WARNING, // CJ run
	AC_CODE_TRIGGER_TYPE_WARNING, // CarShot
	AC_CODE_TRIGGER_TYPE_WARNING, // CarJack
	AC_CODE_TRIGGER_TYPE_WARNING, // UnFreeze
	AC_CODE_TRIGGER_TYPE_WARNING, // AFK Ghost
	AC_CODE_TRIGGER_TYPE_WARNING, // Full Aiming
	AC_CODE_TRIGGER_TYPE_WARNING, // Fake NPC
	AC_CODE_TRIGGER_TYPE_WARNING, // Reconnect
	AC_CODE_TRIGGER_TYPE_WARNING, // High Ping
	AC_CODE_TRIGGER_TYPE_WARNING, // Dialog Hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Sandbox
	AC_CODE_TRIGGER_TYPE_WARNING, // Invalid Version
	AC_CODE_TRIGGER_TYPE_WARNING, // Rcon hack
	AC_CODE_TRIGGER_TYPE_WARNING, // Tuning crasher
	AC_CODE_TRIGGER_TYPE_WARNING, // Invalid seat crasher
	AC_CODE_TRIGGER_TYPE_WARNING, // Dialog crasher
	AC_CODE_TRIGGER_TYPE_WARNING, // Attached object crasher
	AC_CODE_TRIGGER_TYPE_WARNING, // Weapon crasher
	AC_CODE_TRIGGER_TYPE_WARNING, // Connects to one slot
	AC_CODE_TRIGGER_TYPE_WARNING, // Flood callback functions
	AC_CODE_TRIGGER_TYPE_WARNING, // Flood change seat
	AC_CODE_TRIGGER_TYPE_WARNING, // DDos
	AC_CODE_TRIGGER_TYPE_WARNING // NOP`s
};
callback: OnCheatDetected(playerid, const ip_address[], type, code) {
	if(type == AC_GLOBAL_TRIGGER_TYPE_PLAYER) {
	    if(code == 3 || code == 39 || code == 27 || code == 40) return 1;
		new string[88 - 10 + MAX_PLAYER_NAME + 5 + AC_MAX_CODE_NAME_LENGTH + AC_MAX_CODE_LENGTH],
		trigger_type = AC_CODE_TRIGGER_TYPE[code];
		if(trigger_type == AC_CODE_TRIGGER_TYPE_WARNING && PI[playerid][data_ADMLVL] < 1) {
			if(PI[playerid][data_CHEAT] >= 15) {
				if(PI[playerid][data_ASCHEAT] == 1) return 1;
				else {
					if(code == 2) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					if(code == 52) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					if(code == 32) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					PI[playerid][data_CHEAT] = 0;
					new atext[144];
					format(atext,sizeof(atext),"[Анти-чит] кикнул игрока %s.  Причина: %s (code: %d)", getName(playerid),AC_CODE_NAME[code],code);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					return AntiCheatKickWithDesync(playerid, code);
				}
		    }
			else {
				PI[playerid][data_CHEAT] += 1;
				if(code == 6) return 1;
				if(PI[playerid][data_ASCHEAT] == 1) return 1; {
					format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
					SendAdminMessage(0xa0bbbbFF, string);
				}
			}
		}
		else {
			if(PI[playerid][data_ADMLVL] < 1) {
				if(PI[playerid][data_ASCHEAT] == 1) return 1;
				else {
					if(code == 32) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					if(code == 2) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					if(code == 52) {
						format(string, sizeof(string), "[Анти-чит] Подозрение %s[%d] (#%d/%d: %s)", PI[playerid][data_NAME], playerid, code, PI[playerid][data_CHEAT], AC_CODE_NAME[code]);
						return SendAdminMessage(0xa0bbbbFF, string);
					}
					PI[playerid][data_CHEAT] = 0;
					new atext[144];
					format(atext,sizeof(atext),"[Анти-чит] кикнул игрока %s. Причина: %s (code: %d)", getName(playerid),AC_CODE_NAME[code],code);
					SendAdminMessage(COLOR_ADMINCHAT, atext);
					return AntiCheatKickWithDesync(playerid, code);
				}
			}
		}
	}
	return 1;
}
callback: CheckSimCard(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) return ShowPlayerDialog(playerid, 6990, DIALOG_STYLE_INPUT, "{f00e5d}Покупка номера телефона", "Введите желаем {3377cc}6-значный{252525} номер телефона\nНовая SIM-карта заменит текущую (при eё наличии).\n{696969}Отменить это действие будет невозможно", "Купить", "Назад");
	if(!rows) {
		new b = GetPVarInt(playerid,"business"),cena = 300;
		new sim = GetPVarInt(playerid,"simcard");
		give_player_money(playerid,-cena,"#39",27580);
		BUSINESS_DATA[b][data_BANK] += cena;
		BUSINESS_DATA[b][data_PROD] -= 1;
		PI[playerid][data_NUMBER] = sim;
		UpdatePlayerDataInt(playerid, "number", PI[playerid][data_NUMBER], 28023);
		cef_emit_event(playerid, "show-notify-no-img", CEFSTR("Покупка сим-карты"), CEFSTR("fb4949"), CEFSTR("-300P"));
		new text[75];
		format(text,sizeof(text),"Поздравляем!\nВы купили SIM-карту c номером {3377cc}%d",sim);
		ShowPlayerDialog(playerid, dialog_OK, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка SIM-карты", text, "Закрыть", "Назад");
		UpdateBusinessData(b);
	}
	return 1;
}

callback: DeathMute(playerid) return SvMutePlayerDisable(playerid);
CMD:stopcapture(playerid,params[]) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 7) return 1;
	if(gangwar == 0) return SendClientMessage(playerid, CG, "В текущее время захват территории не идёт.");
	if(sscanf(params,"s[35]",params[0])) return SendClientMessage(playerid,CG,"Используйте: /stopcapture [причина]");
	foreach(new i:Player)  {
		if(5 <= PI[i][data_MEMBER] || PI[i][data_MEMBER] >= 7) {
			GangZoneHideForPlayer(i, CaptZone);
			GangZoneStopFlashForPlayer(i, WarZone);
			GangZoneHideForPlayer(i, WarZone);
			GangZoneShowForPlayer(i, WarZone, GetGZFrac(Command[1]));
			cef_emit_event(i, "hide-capture");
			SendClientMessagef(i, COLOR_TOMATO, "Игровой мастер #%d остановил захват территории. Причина: %s", PI[playerid][ADMINSNUMBER], params[0]);
			gangwar = 0;
		}
	}
	new str_1[185];
	format(str_1, sizeof(str_1), "[%s #%d] %s[%d] остановил захват территории. Причина: %s", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER], PI[playerid][data_NAME],playerid,params[0]);
    return SendAdminMessage(COLOR_BLUE, str_1);
}
callback: SetGSNumber(playerid) {
	new rows, fields;
    cache_get_data(rows, fields);
    if(rows) {
		new code = RandomEX(1, 1000);
		new str_q[185];
		mysql_format(dbHandle, str_q, sizeof(str_q), "SELECT * FROM `accounts` WHERE `adminsnumber` = '%d'",code);
		mysql_function_query(dbHandle, str_q, true, "CheckGSNumber", "d", playerid);
		SetPVarInt(playerid, "AdmNumber",code);
	}
	else {
		new n = GetPVarInt(playerid, "AdmNumber");
	    SendClientMessagef(playerid, CY, "[GM-SYSTEM] Вам был установлен номер следящего - {f00e5d}%d", n);
	    PI[playerid][ADMINSNUMBER] = n;
		DeletePVar(playerid, "AdmNumber");
		SavePlayerData(playerid);
	}
}
callback: LoadPlayerDataReg(playerid) {
	print("LoadPlayerDataReg");
	new rows, fields, temp[10],login_ip[32];
    cache_get_data(rows, fields);
	cache_get_field_content(0, "id", temp), PI[playerid][data_ID] = strval (temp);
	cache_get_field_content(0, "uid", temp), PI[playerid][data_UID] = strval (temp);
	cache_get_field_content(0, "sex", temp), PI[playerid][data_SEX] = strval (temp);
	cache_get_field_content(0, "skin", temp), PI[playerid][data_SKIN] = strval (temp);
	cache_get_field_content(0, "skinm", temp), PI[playerid][data_SKINM] = strval (temp);
	cache_get_field_content(0, "money", temp), PI[playerid][data_MONEY] = strval (temp);
	cache_get_field_content(0, "snow", temp), PI[playerid][data_SNOW] = strval (temp);
	cache_get_field_content(0, "showfps", temp), PI[playerid][data_SHOWFPS] = strval (temp);
	cache_get_field_content(0, "GPCIBAN", PI[playerid][data_GPCIBAN], dbHandle, 8);
	cache_get_field_content(0, "bang", temp), PI[playerid][data_BANG] = strval (temp);
	cache_get_field_content(0, "bangun", temp), PI[playerid][data_BANGTIME] = strval (temp);
	cache_get_field_content(0, "GID", temp), PI[playerid][data_GID] = strval (temp);
	cache_get_field_content(0, "exp", temp), PI[playerid][data_EXP] = strval (temp);
	cache_get_field_content(0, "member", temp), PI[playerid][data_MEMBER] = strval (temp);
	cache_get_field_content(0, "leader", temp), PI[playerid][data_LEADER] = strval (temp);
	cache_get_field_content(0, "rank", temp), PI[playerid][data_RANK] = strval (temp);
	cache_get_field_content(0, "admlvl", temp), PI[playerid][data_ADMLVL] = strval (temp);
	cache_get_field_content(0, "pgive", temp), PI[playerid][data_PRIZEGIVE] = strval (temp);
	cache_get_field_content(0, "ptime", temp), PI[playerid][data_PRIZETIME] = strval (temp);
	cache_get_field_content(0, "promocode", temp), PI[playerid][data_PROMOCODE] = strval (temp);
	cache_get_field_content(0, "Myaso", temp), PI[playerid][data_Myaso] = strval (temp);
	cache_get_field_content(0, "ADMINSNUMBER", temp), PI[playerid][ADMINSNUMBER] = strval (temp);
	cache_get_field_content(0, "contry", temp), PI[playerid][data_CONTRY] = strval (temp);
	cache_get_field_content(0, "register_ip", PI[playerid][data_REGISTER_IP], dbHandle, 32);
	cache_get_field_content(0, "login_ip", login_ip, dbHandle, 32);
	cache_get_field_content(0, "vkbot", temp), PI[playerid][data_ADMBOT] = strval (temp);
	cache_get_field_content(0, "email", PI[playerid][data_EMAIL], dbHandle, 50);
	cache_get_field_content(0, "regdate_day", temp), PI[playerid][data_REGDATE_DAY] = strval (temp);
	cache_get_field_content(0, "regdate_month", temp), PI[playerid][data_REGDATE_MONTH] = strval (temp);
	cache_get_field_content(0, "regdate_year", temp), PI[playerid][data_REGDATE_YEAR] = strval (temp);
	cache_get_field_content(0, "mute", temp), PI[playerid][data_MUTE] = strval (temp);
	cache_get_field_content(0, "mutetime", temp), PI[playerid][data_MUTETIME] = strval (temp);
	cache_get_field_content(0, "vmute", temp), PI[playerid][data_VMUTE] = strval (temp);
	cache_get_field_content(0, "vmutetime", temp), PI[playerid][data_VMUTETIME] = strval (temp);
	cache_get_field_content(0, "warn", temp), PI[playerid][data_WARN] = strval (temp);
	cache_get_field_content(0, "warntime", temp), PI[playerid][data_WARNTIME] = strval (temp);
	cache_get_field_content(0, "salary", temp), PI[playerid][data_SALARY] = strval (temp);
	cache_get_field_content(0, "bank", temp), PI[playerid][data_BANK] = strval (temp);
	cache_get_field_content(0, "licb", temp), PI[playerid][data_LICB] = strval (temp);
	cache_get_field_content(0, "licg", temp), PI[playerid][data_LICG] = strval (temp);
	cache_get_field_content(0, "licnum", temp), PI[playerid][data_LICNUM] = strval (temp);
	cache_get_field_content(0, "business", temp), PI[playerid][data_BUSINESS] = strval (temp);
	cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
	cache_get_field_content(0, "vip", temp), PI[playerid][data_VIP] = strval (temp);
	cache_get_field_content(0, "time", temp), PI[playerid][data_TIME] = strval (temp);
	cache_get_field_content(0, "car_1", temp), PI[playerid][data_CAR][0] = strval (temp);
	cache_get_field_content(0, "carfuel_1", temp), PI[playerid][data_CARFUEL][0] = strval (temp);
	cache_get_field_content(0, "car_color1_1", temp), PI[playerid][data_CAR_COLOR1][0] = strval (temp);
	cache_get_field_content(0, "car_color2_1", temp), PI[playerid][data_CAR_COLOR2][0] = strval (temp);
	cache_get_field_content(0, "car_2", temp), PI[playerid][data_CAR][1] = strval (temp);
	cache_get_field_content(0, "carfuel_2", temp), PI[playerid][data_CARFUEL][1] = strval (temp);
	cache_get_field_content(0, "car_color1_2", temp), PI[playerid][data_CAR_COLOR1][1] = strval (temp);
	cache_get_field_content(0, "car_color2_2", temp), PI[playerid][data_CAR_COLOR2][1] = strval (temp);
	cache_get_field_content(0, "HIDEME", temp), PI[playerid][data_HIDEME] = strval (temp);
	cache_get_field_content(0, "ASACHAT", temp), PI[playerid][data_CADMIN] = strval (temp);
	cache_get_field_content(0, "KILLFIST", temp), PI[playerid][data_SPAWNKULLAK] = strval (temp);
	cache_get_field_content(0, "BOOST", temp), PI[playerid][data_BOOST] = strval (temp);
	cache_get_field_content(0, "CAPTUREKILL", temp), PI[playerid][data_CAPTUREKILL] = strval (temp);
	cache_get_field_content(0, "CAPTURECMD", temp), PI[playerid][data_CAPTURECMD] = strval (temp);
	cache_get_field_content(0, "rep_adm", temp), PI[playerid][data_REPA] = strval (temp);
	cache_get_field_content(0, "admvig", temp), PI[playerid][data_AWARN] = strval (temp);
	cache_get_field_content(0, "mp_adm", temp), PI[playerid][data_MPA] = strval (temp);
	cache_get_field_content(0, "patr", temp), PI[playerid][data_PATR] = strval (temp);
	cache_get_field_content(0, "drugs", temp), PI[playerid][data_DRUGS] = strval (temp);
	cache_get_field_content(0, "usedrugs", temp), PI[playerid][data_USEDRUGS] = strval (temp);
	cache_get_field_content(0, "met", temp), PI[playerid][data_MET] = strval (temp);
	cache_get_field_content(0, "wanted", temp), PI[playerid][data_WANTED] = strval (temp);
	cache_get_field_content(0, "zakon", temp), PI[playerid][data_ZAKON] = strval (temp);
	cache_get_field_content(0, "number", temp), PI[playerid][data_NUMBER] = strval (temp);
	cache_get_field_content(0, "number_m", temp), PI[playerid][data_NUMBER_M] = strval (temp);
	cache_get_field_content(0, "pstatus", temp), PI[playerid][data_PHONESTATUS] = strval (temp);
	cache_get_field_content(0, "reports", temp), PI[playerid][data_REPORTS] = strval (temp);
	cache_get_field_content(0, "jail", temp), PI[playerid][data_JAIL] = strval (temp);
	cache_get_field_content(0, "jailtime", temp), PI[playerid][data_JAILTIME] = strval (temp);
	cache_get_field_content(0, "demorgan", temp), PI[playerid][data_DEMORGAN] = strval (temp);
	cache_get_field_content(0, "demorgan_time", temp), PI[playerid][data_DEMORGANTIME] = strval (temp);
	cache_get_field_content(0, "donate", temp), PI[playerid][data_DONATE] = strval (temp);
	cache_get_field_content(0, "donate_p", temp), PI[playerid][data_DONATE_P] = strval (temp);
	cache_get_field_content(0, "returnadm", temp), PI[playerid][data_ADMRETURN] = strval (temp);
	cache_get_field_content(0, "accessory_1", temp), PI[playerid][data_AKS1] = strval (temp);
	cache_get_field_content(0, "accessory_2", temp), PI[playerid][data_AKS2] = strval (temp);
	cache_get_field_content(0, "accessory_3", temp), PI[playerid][data_AKS3] = strval (temp);
	cache_get_field_content(0, "accessory_4", temp), PI[playerid][data_AKS4] = strval (temp);
	cache_get_field_content(0, "accessory_5", temp), PI[playerid][data_AKS5] = strval (temp);
	cache_get_field_content(0, "accessory_6", temp), PI[playerid][data_AKS6] = strval (temp);
	cache_get_field_content(0, "accessory_7", temp), PI[playerid][data_AKS7] = strval (temp);
	cache_get_field_content(0, "accessory_8", temp), PI[playerid][data_AKS8] = strval (temp);
	cache_get_field_content(0, "accessory_9", temp), PI[playerid][data_AKS8] = strval (temp);
	cache_get_field_content(0, "accessory_10", temp), PI[playerid][data_AKS10] = strval (temp);
	cache_get_field_content(0, "takeaks", temp), PI[playerid][data_TAKEAKS] = strval (temp);
	cache_get_field_content(0, "accessory_use", temp), PI[playerid][data_AKS_USE] = strval (temp);
	cache_get_field_content(0, "donate_all", temp), PI[playerid][data_DONATE_ALL] = strval (temp);
	cache_get_field_content(0, "phone", temp), PI[playerid][data_PHONE] = strval (temp);
	cache_get_field_content(0, "phonebook", temp), PI[playerid][data_PHONEBOOK] = strval (temp);
	cache_get_field_content(0, "dir", temp), PI[playerid][data_DIR] = strval (temp);
	cache_get_field_content(0, "satiety", temp), PI[playerid][data_SATIETY] = strval (temp);
	cache_get_field_content(0, "arm", temp), PI[playerid][data_ARM] = strval (temp);
	cache_get_field_content(0, "med", temp), PI[playerid][data_MED] = strval (temp);
	cache_get_field_content(0, "mednum", temp), PI[playerid][data_MEDNUM] = strval (temp);
	cache_get_field_content(0, "spawn", temp), PI[playerid][data_SPAWN] = strval (temp);
	cache_get_field_content(0, "pistol_skill", temp), PI[playerid][data_PISTOL] = strval (temp);
	cache_get_field_content(0, "sdpistol_skill", temp), PI[playerid][data_SDPISTOL] = strval (temp);
	cache_get_field_content(0, "deagle_skill", temp), PI[playerid][data_DEAGLE] = strval (temp);
	cache_get_field_content(0, "shotgun_skill", temp), PI[playerid][data_SHOTGUN] = strval (temp);
	cache_get_field_content(0, "mp5_skill", temp), PI[playerid][data_MP5] = strval (temp);
	cache_get_field_content(0, "ak47_skill", temp), PI[playerid][data_AK47] = strval (temp);
	cache_get_field_content(0, "rifle_skill", temp), PI[playerid][data_SNIPERRIFLE] = strval (temp);
	cache_get_field_content(0, "job", temp), PI[playerid][data_JOB] = strval (temp);
	cache_get_field_content(0, "house", temp), PI[playerid][data_HOUSE] = strval (temp);
	cache_get_field_content(0, "business", temp), PI[playerid][data_BUSINESS] = strval (temp);
	cache_get_field_content(0, "kv", temp), PI[playerid][data_KV] = strval (temp);
	cache_get_field_content(0, "jb", temp), PI[playerid][data_JB] = strval (temp);
	cache_get_field_content(0, "ab", temp), PI[playerid][data_AB] = strval (temp);
	cache_get_field_content(0, "padik", temp), PI[playerid][data_PADIK] = strval (temp);
	cache_get_field_content(0, "d_skill", temp), PI[playerid][data_DSKILL] = strval (temp);
	cache_get_field_content(0, "d_exp", temp), PI[playerid][data_DEXP] = strval (temp);
	cache_get_field_content(0, "gun0", temp), PI[playerid][data_GUN][0] = strval (temp);
	cache_get_field_content(0, "gun1", temp), PI[playerid][data_GUN][1] = strval (temp);
	cache_get_field_content(0, "gun2", temp), PI[playerid][data_GUN][2] = strval (temp);
	cache_get_field_content(0, "gun3", temp), PI[playerid][data_GUN][3] = strval (temp);
	cache_get_field_content(0, "gun4", temp), PI[playerid][data_GUN][4] = strval (temp);
	cache_get_field_content(0, "gun5", temp), PI[playerid][data_GUN][5] = strval (temp);
	cache_get_field_content(0, "gun6", temp), PI[playerid][data_GUN][6] = strval (temp);
	cache_get_field_content(0, "gun7", temp), PI[playerid][data_GUN][7] = strval (temp);
	cache_get_field_content(0, "gun8", temp), PI[playerid][data_GUN][8] = strval (temp);
	cache_get_field_content(0, "gun9", temp), PI[playerid][data_GUN][9] = strval (temp);
	cache_get_field_content(0, "gun10", temp), PI[playerid][data_GUN][10] = strval (temp);
	cache_get_field_content(0, "gun11", temp), PI[playerid][data_GUN][11] = strval (temp);
	cache_get_field_content(0, "gun12", temp), PI[playerid][data_GUN][12] = strval (temp);
	cache_get_field_content(0, "ammo0", temp), PI[playerid][data_AMMO][0] = strval (temp);
	cache_get_field_content(0, "ammo1", temp), PI[playerid][data_AMMO][1] = strval (temp);
	cache_get_field_content(0, "ammo2", temp), PI[playerid][data_AMMO][2] = strval (temp);
	cache_get_field_content(0, "ammo3", temp), PI[playerid][data_AMMO][3] = strval (temp);
	cache_get_field_content(0, "ammo4", temp), PI[playerid][data_AMMO][4] = strval (temp);
	cache_get_field_content(0, "ammo5", temp), PI[playerid][data_AMMO][5] = strval (temp);
	cache_get_field_content(0, "ammo6", temp), PI[playerid][data_AMMO][6] = strval (temp);
	cache_get_field_content(0, "ammo7", temp), PI[playerid][data_AMMO][7] = strval (temp);
	cache_get_field_content(0, "ammo8", temp), PI[playerid][data_AMMO][8] = strval (temp);
	cache_get_field_content(0, "ammo9", temp), PI[playerid][data_AMMO][9] = strval (temp);
	cache_get_field_content(0, "ammo10", temp), PI[playerid][data_AMMO][10] = strval (temp);
	cache_get_field_content(0, "ammo11", temp), PI[playerid][data_AMMO][11] = strval (temp);
	cache_get_field_content(0, "ammo12", temp), PI[playerid][data_AMMO][12] = strval (temp);
	cache_get_field_content(0, "healthchest", temp), PI[playerid][data_HEALPACK] = strval (temp);
	cache_get_field_content(0, "HEALPACKSKLAD", temp), PI[playerid][data_HEALPACKSKLAD] = strval (temp);
	cache_get_field_content(0, "mask", temp), PI[playerid][data_MASK] = strval (temp);
	cache_get_field_content(0, "startx", temp), PI[playerid][STARTX] = floatstr (temp);
	cache_get_field_content(0, "starty", temp), PI[playerid][STARTY] = floatstr (temp);
	cache_get_field_content(0, "startz", temp), PI[playerid][STARTZ] = floatstr (temp);
	cache_get_field_content(0, "virtw", temp), PI[playerid][VIRTW] = strval (temp);
	cache_get_field_content(0, "virti", temp), PI[playerid][VIRTI] = strval (temp);
	cache_get_field_content(0, "car_tpposx", temp), PI[playerid][data_CAR_POSX] = floatstr (temp);
	cache_get_field_content(0, "car_tpposy", temp), PI[playerid][data_CAR_POSY] = floatstr (temp);
	cache_get_field_content(0, "car_tpposz", temp), PI[playerid][data_CAR_POSZ] = floatstr (temp);
	cache_get_field_content(0, "car_tpangle", temp), PI[playerid][data_CAR_ANGLE] = floatstr (temp);
	cache_get_field_content(0, "vkid", temp), PI[playerid][data_VKID] = strval (temp);
	cache_get_field_content(0, "twarn", temp), PI[playerid][TWARN] = strval (temp);
	cache_get_field_content(0, "fixnabor", temp), PI[playerid][data_FIXCOMPL] = strval (temp);
	cache_get_field_content(0, "timerank", temp), PI[playerid][data_TIMERANK] = strval (temp);
	cache_get_field_content(0, "military", temp), PI[playerid][data_MILITARY] = strval (temp);
	cache_get_field_content(0, "medcard", temp), PI[playerid][data_MEDCARD] = strval (temp);
	return 1;
}
CMD:stopgm(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	SendClientMessage(playerid, CY, "Вы покинули на время должность игрового мастера. Чтобы вернуться используйте команду: {f00e5d}/returngm");
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "[ @m1028882 @id673066779 ] Игровой мастер %s покинул должность на время (%d уровень)",PI[playerid][data_NAME],PI[playerid][data_ADMLVL]);
	SendVKTest(playerid, vk_send, 3);
	PI[playerid][data_ADMRETURN] = PI[playerid][data_ADMLVL];
	PI[playerid][data_ADMLVL] = 0;
	return SavePlayerData(playerid);
}
CMD:returngm(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMRETURN] < 1) return 1;
	SendClientMessage(playerid, CY, "Вы вернулись на должность игрового мастера. {f00e5d}Приятной игры!");
	PI[playerid][data_ADMLVL] = PI[playerid][data_ADMRETURN];
	UpdatePlayerDataInt(playerid, "admlvl", PI[playerid][data_ADMLVL],27918);
	PI[playerid][data_ADMRETURN] = 0;
	new vk_send[250];
	format(vk_send, sizeof(vk_send), "[ @m1028882 @id673066779 ] Игровой мастер %s вернулся на должность (%d уровень)",PI[playerid][data_NAME],PI[playerid][data_ADMLVL]);
	SendVKTest(playerid, vk_send, 3);
	return SavePlayerData(playerid);
}
CMD:bomb(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(!IsPlayerOPG(playerid)) return SendClientMessage(playerid, CG, "Вы не состоите в ОПГ");
	if(bombacitve == 1) return SendClientMessage(playerid, COLOR_BLACK,"Забор Войсковой части уже взорван");
	if(bombplayer[playerid] == 1) return SendClientMessage(playerid, COLOR_BLACK,"У Вас уже есть бомба");
	if(PI[playerid][data_MET] < 15) return SendClientMessage(playerid, COLOR_BLACK,"Для создания бомбы нужно 15 металла");
	if(!PlayerToPoint(200.0, playerid, 1756.5381, 1731.6260, 15.3168)) return SendClientMessage(playerid, COLOR_BLACK,"Нужно находиться возле территории ВЧ!");
	new str1[144];
	format(str1,sizeof(str1),"%s снял портфель со спины",PI[playerid][data_NAME]);
	ProxDetector(25.0, playerid, str1, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF, 0xFF99CCFF ,0xFF99CCFF);
	pCurrectMessageBomb[playerid] = 2;
	pTimerMessageBomb[playerid] = gettime() + 1;
	PI[playerid][data_MET] -= 15;
	return SavePlayerData(playerid);
}
callback: BombVCH() {
	Bomb(1700.1427,1838.3263,15.7956);
	bombacitve = 1;
	foreach(new pl:Player) RemoveBuildingForPlayer(pl, 985, 1700.1240, 1837.8086, 14.2100, 0.25);
	SetTimer("BombVCHReturn", 1000*60*15, 1);
}
stock Bomb(Float:x,Float:y,Float:z) {
	CreateExplosion(x, y, z, 7, 10.0);
    CreateExplosion(x, y+4.0, z, 7, 10.0);
    CreateExplosion(x, y-4.0, z, 7, 10.0);
    CreateExplosion(x+4.0, y, z, 7, 10.0);
    CreateExplosion(x-4.0, y, z, 7, 10.0);
}
callback: BombVCHReturn() {
	bombacitve = 0;
	CreateDynamicObject(985, 1700.1240, 1837.8086, 14.2100, 0.00, 0.00, 2.45);
}
CMD:apanel(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 8) return 1;
	return ShowApanel(playerid);
}
stock ShowApanel(playerid) {
	new settings[300];
	format(settings, sizeof settings, "\
	1. Лимит на захват-территории\t\t{f00e5d}...",
	(capturetime) ? ("Включен") : ("Отключен"));
	return ShowPlayerDialog(playerid, 9888, DIALOG_STYLE_LIST, "{f00e5d}Настройки разработчика", settings, "Изменить", "Закрыть");
}
stock RemoveBuild(playerid) {//==================Удаление Маппинга====================//
	RemoveBuildingForPlayer(playerid, 3166, 1538.4900, 1833.2900, 18.1000, 0.25);
}
stock CreateObjectMode() {//=======================Маппинг ctrl+V=============//
}
callback: AddLog(tablename[], tname[], itext[]) {
	new hour,minute,second,timestr[64];
	gettime(hour,minute,second);
	format(timestr,sizeof(timestr),"%02d:%02d:%02d",hour,minute,second);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `%s` (`name`,`date`, `time`, `text`) VALUES ('%s',NOW(), '%s', '%s')", tablename, tname, timestr, itext);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
callback: SetRang(tablename[], name[], rank, namegive[], text[]) {
	new hour,minute,second,timestr[64];
	gettime(hour,minute,second);
	format(timestr,sizeof(timestr),"%02d:%02d:%02d",hour,minute,second);
	new str_q[256];
	mysql_format(dbHandle,str_q, sizeof(str_q), "INSERT INTO `%s` (`name`,`name_give`, `rank`, `reason`) VALUES ('%s', '%s', '%d', '%s')", tablename, name, namegive, rank, text);
	mysql_function_query(dbHandle, str_q, true, "", "");
	return 1;
}
stock Checker(string[], str[]) {
	if(!strcmp(string, str, true)) return true;
	return false;
}
callback: OnCefBrowserCreated(playerid, browser_id, status_code) {
	if(status_code != 200) {
		SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}у Вас проблемы с интернетом, {FFFF33}проверьте подключение!");
		return Kick(playerid);
	}
	else PI[playerid][data_CEFLOAD] = SetTimerEx("CefLoad", 3200, false, "d", playerid);
	if(status_code != 200) cef_create_browser(playerid, CEF_INTERFACE_BROWSER_ID, "http://f0838161.xsph.ru/arcanacef/index.htm", false, false);
	return 1;
}
callback: OnCefInitialize(playerid, success)  {
	if(success != 1) SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}загрузка плагина произошла неуспешно, {FFFF33}перезайдите в игру"), SetPVarInt(playerid, "cefload", 0);
	if(success == 1) SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}загрузка плагина произошла успешно, {FFFF33}приятной игры!"), SetPVarInt(playerid, "cefload", 1);
	return;
}
CMD:reload(playerid) {
	if(PI[playerid][data_LOGGED] == false) return 1;
	cef_create_browser(playerid, CEF_INTERFACE_BROWSER_ID, "http://f0838161.xsph.ru/arcanacef/index.htm", false, false);
	return SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}интерфейсы перезапущены, {FFFF33}приятной игры!");
}
stock ReloadCef(playerid) {
	if(gangwar > 0) {
		SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}захват территорий загружен, {FFFF33}приятной игры!");
		if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
			static name_org[15], nameorg[15];
			switch(Command[0]) {
				case 5: name_org = "Скинхеды";
				case 6: name_org = "Гопота";
				case 7: name_org = "Кавказцы";
			}
			switch(Command[1]) {
				case 5: nameorg = "Скинхеды";
				case 6: nameorg = "Гопота";
				case 7: nameorg = "Кавказцы";
			}
			cef_emit_event(playerid, "show-capture");
			cef_emit_event(playerid, "capture-text", CEFSTR("подготовка"));
			cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
			cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
			cef_emit_event(playerid, "show_kill_list");
		}
	}
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
}
CMD:awarn(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(PI[playerid][data_AWARN] < 1) return SendClientMessage(playerid, COLOR_BLACK, "У Вас не выговоров");
	new str_3[512];
	format(str_3,sizeof(str_3),"\
	{252525}Информация для снятия выговора:\n\n\
	{3377cc}1. Мероприятие:\n\
	{252525}Проведите 5 мероприятия: {f00e5d}проведено %d\n\n\
	{3377cc}2. Репорт:\n\
	{252525}Ответьте на 45 репорта: {f00e5d}отвечено %d\n\n\
	{f00e5d}Удачи на посту, соблюдайте правила!", PI[playerid][data_MPA], PI[playerid][data_REPA]);
	return ShowPlayerDialog(playerid, 7565, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", str_3, "Проверить", "Закрыть");
}
callback: CefLoad(playerid) {
	KillTimer(PI[playerid][data_CEFLOAD]);
	if(gangwar > 0) {
		SendClientMessage(playerid, 0x7394dcFF, "[CEF-client] {FFFFFF}захват территорий загружен, {FFFF33}приятной игры!");
		if(PI[playerid][data_MEMBER] == 7 || PI[playerid][data_MEMBER] == 6 || PI[playerid][data_MEMBER] == 5) {
			static name_org[15], nameorg[15];
			switch(Command[0]) {
				case 5: name_org = "Скинхеды";
				case 6: name_org = "Гопота";
				case 7: name_org = "Кавказцы";
			}
			switch(Command[1]) {
				case 5: nameorg = "Скинхеды";
				case 6: nameorg = "Гопота";
				case 7: nameorg = "Кавказцы";
			}
			cef_emit_event(playerid, "show-capture");
			cef_emit_event(playerid, "capture-text", CEFSTR("подготовка"));
			cef_emit_event(playerid, "capture-score", CEFINT(CommandKill[0]), CEFINT(CommandKill[1]));
			cef_emit_event(playerid, "capture-info-name", CEFSTR(name_org), CEFSTR(nameorg));
			cef_emit_event(playerid, "show_kill_list");
		}
	}
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
}
CMD:aup(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(PI[playerid][data_ADMLVL] == 8) return SendClientMessage(playerid, COLOR_BLACK, "Вы уже игровой мастер максимального уровня");
	if(PI[playerid][data_AWARN] != 0) return SendClientMessage(playerid, COLOR_BLACK, "У Вас есть выговор, снимите его используя команду: /awarn");
	new str_3[512];
	format(str_3,sizeof(str_3),"\
	{252525}Информация для повышения:\n\n\
	{3377cc}1. Мероприятие:\n\
	{252525}Проведите %d мероприятия: {f00e5d}проведено %d\n\
	{3377cc}2. Репорт:\n\
	{252525}Ответьте на %d репорта: {f00e5d}отвечено %d\n\
	{f00e5d}Удачи на посту, соблюдайте правила!", 2*PI[playerid][data_ADMLVL], PI[playerid][data_MPA], 15*PI[playerid][data_ADMLVL], PI[playerid][data_REPA]);
	return ShowPlayerDialog(playerid, 7566, DIALOG_STYLE_MSGBOX, "{f00e5d}Информация", str_3, "Проверить", "Закрыть");
}
CMD:admbot(playerid) {
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
    if(PI[playerid][data_ADMLVL] < 1) return 1;
	if(PI[playerid][data_ADMBOT] == 1) return SendClientMessage(playerid, COLOR_BLACK, "У Вас есть доступ в данному боту.");
	new str_3[365];
	format(str_3,sizeof(str_3),"\
	{252525}Доступ к многофункциональному роботу:\n\
	{3377cc}После покупки доступ будет выдан в течении 24 часов\n\n\
	{252525}Цена: {f00e5d}%d донат-поинтов", 300*XDON);
	return ShowPlayerDialog(playerid, 7567, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка доступа", str_3, "Купить", "Закрыть");
}
CMD:vc(playerid, params[])
{
	if(antiflood[playerid] > 0) return SendClientMessage(playerid, COLOR_BLACK,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Вы не авторизованы");
    if(PI[playerid][data_MUTE] == 1) return SendClientMessage(playerid,CG,"Ваш чат временно заблокирован");
	if(PI[playerid][data_VIP] == 0) return SendClientMessage(playerid, CG, "Данная команда Вам недоступна");
	if(GetPVarInt(playerid,"vrchat")>gettime())return SendClientMessage(playerid,CG, !"Отправлять сообщения в этот чат, можно раз в 15 секунд");
    static text[86];
    if(sscanf(params, "s[86]", text)) return SendClientMessage(playerid, CG, !"Используйте: /vc [текст]");
	new str_vip[144];
    if(PI[playerid][data_ADMLVL] < 1) format(str_vip,sizeof(str_vip),"{%s}[VIP-C] {FFFFFF}({%s}%s{FFFFFF}) %s[%i]:{FFFFFF} %s", ColorTeam[PI[playerid][data_MEMBER]], ColorTeam[PI[playerid][data_MEMBER]], Fraction_Name[PI[playerid][data_MEMBER]],PI[playerid][data_NAME], playerid, text);
	else format(str_vip,sizeof(str_vip),"{FCC645}[VIP-C] [Игровой мастер #%d]: {FFFFFF}%s", PI[playerid][ADMINSNUMBER], text);
    SendVIPMessage(-1, str_vip);
    SetPVarInt(playerid,"vrchat",gettime()+15);
    return 1;
}
stock SetBizFin() {
	for(new b = 0; b < TotalBusiness; b++) {
		if(BUSINESS_DATA[b][data_OWNED] == 1) {
			new fin = RandomEX(350000, 580000);
			BUSINESS_DATA[b][data_BANK] += fin;
			BUSINESS_DATA[b][data_CLIENT] = 0;
			new str_q[256];
			mysql_format(dbHandle,str_q, sizeof(str_q), "UPDATE `accounts` SET `clients` = '0', `bank` = '%d' WHERE `business` = '%d'",BUSINESS_DATA[b][data_BANK],b);
			mysql_function_query(dbHandle, str_q, false, "", "");
			SaveBusinessData(b);
		}
	}
	bizfin = 0;
	return 1;
}
stock CreateAcc(playerid) {
	if(GetPVarInt(playerid,"reg_account") == 0) return Kick(playerid);
    if(PI[playerid][data_SEX] == 1) {
    	switch(random(4)) {
			case 0: {
				PI[playerid][data_SKIN] = 134;
				SetPlayerSkinAC(playerid, 134);
			}
			case 1: {
				PI[playerid][data_SKIN] = 135;
				SetPlayerSkinAC(playerid, 135);
			}
			case 2: {
				PI[playerid][data_SKIN] = 137;
				SetPlayerSkinAC(playerid, 137);
			}
			case 3: {
				PI[playerid][data_SKIN] = 230;
				SetPlayerSkinAC(playerid, 230);
			}
		}
    }
    else if(PI[playerid][data_SEX] == 2) {
    	switch(random(3)) {
			case 0: {
				PI[playerid][data_SKIN] = 196;
				SetPlayerSkinAC(playerid, 196);
			}
			case 1: {
				PI[playerid][data_SKIN] = 197;
				SetPlayerSkinAC(playerid, 197);
			}
			case 2: {
				PI[playerid][data_SKIN] = 199;
				SetPlayerSkinAC(playerid, 199);
			}
		}
    }
	SetPVarInt(playerid,"JoinGame", 1);
	new l,m;
	l = PI[playerid][data_LVL];
	m = PI[playerid][data_MONEY];
    PI[playerid][data_ZAKON] = 1;
    PI[playerid][data_DEMORGAN] = 0;
	PI[playerid][data_HP] = 100;
	PI[playerid][data_HOSPITAL] = 0;
    PI[playerid][data_LOGGED] = true;
	PI[playerid][data_LVL] = 1;
    TogglePlayerControllable(playerid, true);
    DeletePVar(playerid,"player_auth");
	SendClientMessage(playerid, 0xFF9999FF, "Поздравляем с успешно регистрацией на нашем сервере {f00e5d}Arcana РП");
	SendClientMessage(playerid, 0xFF9999FF, "Рекомендуем сразу же привязать страницу ВКонтакте чтобы в будующем Вы могли восстановить свой аккаунт");
	SendClientMessage(playerid, 0xFF9999FF, "Для привязки страницы используйте команду {f00e5d}/vk");
	SendClientMessage(playerid, 0xFF9999FF, "Если у Вас есть вопросы которые относятся к серверу Вы их всегда можете задать нам используя команду: {f00e5d}/report");
	SendClientMessage(playerid, 0xFF9999FF, "Для быстрого развития Вы можете использовать промокоды от ютуберов. Используйте команду: {f00e5d}/promo");
	CreateAccount(playerid);
	printf("%s %d %d (set: m %d, l %d) (do: m %d, l %d)", getName(playerid), GetPVarInt(playerid,"reg_account"), GetPVarInt(playerid,"select_skin"),PI[playerid][data_LVL],PI[playerid][data_MONEY],m,l);
	SetPlayerToSpawn(playerid);
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
	new a_str[115];
	format(a_str,sizeof(a_str),"[Регистрация] %s[%d] только что создал аккаунт, получено: (денег - %d) (донат - %d)", PI[playerid][data_NAME], playerid, PI[playerid][data_MONEY], PI[playerid][data_DONATE]);
	SendAdminMessage(COLOR_RED, a_str);
	DeletePVar(playerid,"select_skin");
	DeletePVar(playerid,"reg_account");
	return 1;
}
public void:OnPlayerKeyDown(playerid, keyid) {
	/*new buffer[64];
	format(buffer, sizeof(buffer), "KeyDown: %d", keyid);
	SendClientMessage(playerid, -1, buffer);*/
	if(keyid == 74) if(PI[playerid][data_RANK] > 8) open_lmenu(playerid);
	if(keyid == 66) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1799.7273,2506.5293,15.8725)) ShowPlayerDialog(playerid, 3434, DIALOG_STYLE_LIST, "{db2751}Взаимодействие с дурачком", "1. Можете помочь, пожалуйста?\n2. Хочу арендовать велосепед", "Далее", "Закрыть");
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2313.4927,-1845.1414,21.9900)) ShowPlayerDialog(playerid, 3435, DIALOG_STYLE_LIST, "{db2751}Взаимодействие с дурачком", "1. Можете помочь, пожалуйста?\n2. Хочу арендовать скутер", "Далее", "Закрыть");
		for(new g = 0; g < TotalBusiness; g++) if(IsPlayerInRangeOfPoint(playerid, 1.3, BUSINESS_DATA[g][data_BUYX], BUSINESS_DATA[g][data_BUYY], BUSINESS_DATA[g][data_BUYZ])) ShowBusinessMenu(playerid, g);
		if(IsPlayerInRangeOfPoint(playerid, 25.0, 1565.9385, 1810.2889, 15.5197)) {
			switch(PI[playerid][data_MEMBER]) {
				case 2,5,6,7: {
					if(IsPlayerInRangeOfPoint(playerid, 1.0, 1565.9385, 1810.2889, 15.5197)) {
						ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
						MoveObject(VchSkladGate, 1568.7144, 1809.5629, 19.4385, 2.5, 0.00, 0.00, 92.00);
						SkladTimer5 = SetTimer("SkladClose", 7000, 0);
					}
					else
					if(IsPlayerInRangeOfPoint(playerid, 1.0, 1571.5328, 1809.0415, 15.3236)) {
						ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN", 4.1, 0, 0, 0, 0, 0 ,1);
						MoveObject(VchSkladGate, 1568.7144, 1809.5629, 19.4385, 2.5, 0.00, 0.00, 92.00);
						SkladTimer5 = SetTimer("SkladClose", 7000, 0);
					}
				}
			}
		}
		else if(PlayerToPoint(1.0, playerid, 1534.6836,1820.4808,578.6213) || PlayerToPoint(1.0, playerid, 1537.8619,1820.2335,578.6213) || PlayerToPoint(1.0, playerid, 1540.8298,1820.5121,578.6213)) {
			new str_3[185];
			format(str_3,sizeof(str_3),"1. Банковская карта {f00e5d}(№ %d)\n{252525}2. Оплата имущества\n3. Медицинские услуги", PI[playerid][data_ID]);
			ShowPlayerDialog(playerid, 7999, DIALOG_STYLE_LIST, "{f00e5d}Банк", str_3, "Далее", "Закрыть");
		}
	}
	if(keyid == 16) {
		if(GetPVarInt(playerid, "AnimOn") != 0) {
			cef_emit_event(playerid, "hide-button");
			ClearAnimations(playerid);
			SetPVarInt(playerid, "AnimOn", 0);
			SetPVarInt(playerid,"UseAnim", 0);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		}
		else if(GetPVarInt(playerid, "SpecBool") == 1 && GetPVarInt(playerid, "FlyMode") == 0) {
			TogglePlayerSpectating(playerid, false);
			HideAdmInfo(playerid);
		}
	}
	if(keyid == 17) {
		if(GetPVarInt(playerid, "SpecBool") == 1 && GetPVarInt(playerid, "FlyMode") == 0) {
			if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "specid"))) {
				new carid = GetPlayerVehicleID(GetPVarInt(playerid, "specid"));
				PlayerSpectateVehicle(playerid, carid);
			}
			else PlayerSpectatePlayer(playerid,GetPVarInt(playerid, "specid"));
			ShowAdmInfo(playerid, GetPVarInt(playerid, "specid"));
		}
	}
	if(keyid == 20) {
		if(GetPVarInt(playerid, "SpecBool") == 1 && GetPVarInt(playerid, "FlyMode") == 0) {
			new str[50];
			format(str,sizeof str,"%s", PI[GetPVarInt(playerid, "specid")][data_NAME]);
			callcmd::get(playerid,str);
		}
	}
}
public void:OnPlayerKeyUp(playerid, keyid) {
	if(keyid == 77) callcmd::menu(playerid);
	if(keyid == 80) {
		if(PI[playerid][data_PHONE] != 0) callcmd::phone(playerid);
		else SendClientMessage(playerid, CG, "У Вас нет телефона, купить его можно в любом Мазагине 24/7");
	}
	if(keyid == 76) callcmd::lock(playerid);
	if(keyid == 113) callcmd::tp(playerid);
}
CMD:vvcheck(playerid) SendClientMessagef(playerid, -1, "Вы в виртуальном мире под номером: %d", GetPlayerVirtualWorld(playerid));
callback: CallbackDialogResponse(playerid, const arguments[]) {
	new dId, responsed, list, input[64];
	sscanf(arguments, "P< >ddds[64]", dId, responsed, list, input);
	OnDialogResponse(playerid, dId, responsed, list, input);
	return 1;
}
stock CEF__Dialog(playerid, dialogId, dialogType, dHeader[], dText[], button_1[], button_2[]) {
 	if(GetPVarInt(playerid, "cefload") == 1) {
		if(cef_player_has_plugin(playerid) == 1) cef_emit_event(playerid, "show_dialog", CEFINT(dialogId), CEFINT(dialogType), CEFSTR(dHeader), CEFSTR(dText), CEFSTR(button_1), CEFSTR(button_2));
		else {
			new str3[60],str4[2048],str5[60],str6[60];
			format(str3, sizeof str3, "%s", dHeader);
			format(str4, sizeof str4, "%s", dText);
			format(str5, sizeof str5, "%s", button_1);
			format(str6, sizeof str6, "%s", button_2);
			ShowPlayerDialog(playerid, dialogId, dialogType, str3, str4, str5, str6);
		}
	}
	else {
		new str3[60],str4[2048],str5[60],str6[60];
		format(str3, sizeof str3, "%s", dHeader);
		format(str4, sizeof str4, "%s", dText);
		format(str5, sizeof str5, "%s", button_1);
		format(str6, sizeof str6, "%s", button_2);
		ShowPlayerDialog(playerid, dialogId, dialogType, str3, str4, str5, str6);
	}
	return 1;
}
callback: AuthPlayer(playerid) {
	KillTimer(PI[playerid][data_AUTHPL]);
	if(PI[playerid][data_ID] != -1) Dialog_PLAYER_LOGIN(playerid);
	else Dialog_PLAYER_REGISTER(playerid);
}
CMD:sellgun(playerid, params[]) {
    if(antiflood[playerid] > 0) return SendClientMessage(playerid, CG,"Пожалуйста, подождите пару секунд...");
    antiflood[playerid]++;
    if(PI[playerid][data_LOGGED] == false) return 1;
	if(!IsPlayerOPG(playerid))  return SendClientMessage(playerid, CG, "Вы не состоите в ОПГ");
 	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid,CG,"Используйте: /givegun [ID игрока] [количество] [цена]");
	if(150 < params[2] > 200 ) return SendClientMessage(playerid, CG, "Используйте: /givegun [ID игрока] [количество] [цена (от 150 до 200 руб)]");
    if(PI[params[0]][data_BANGTIME] > 0) return SendClientMessage(playerid, CG, "У данного игрока блокировка оружия");
	if(playerid == params[0]) return SendClientMessage(playerid, CG, "Нельзя передавать самому себе");
	if(PI[params[0]][data_LOGGED] == false) return SendClientMessage(playerid,CG,"Данный игрок не прошел авторизацию");
	if(PI[params[0]][data_LVL] < 2) return SendClientMessage(playerid, CG, "У игрока нет 2-го уровня");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid, x,y,z);
    if(!PlayerToPoint(5.0, params[0], x,y,z)) return SendClientMessage(playerid,CG,"Нужно находиться возле игрока");
	new gun = GetPlayerWeapon(playerid);
	new gunslot = getWeaponIdSlot(gun);
	if(gun == 38 && gun == 34 && gun == 35 && gun == 36 && gun == 37 && gun == 39 && gun == 40) return SendClientMessage(playerid, CG, "Нельзя передать данное оружие");
	if(params[1] < 1) return SendClientMessage(playerid, CG, "Недопустимое значение");
	if(PI[playerid][data_GUN][gunslot] == 0 || gunslot == 0) return SendClientMessage(playerid,CG,"Чтобы передать оружие, нужно взять его в руки");
	if(PI[playerid][data_AMMO][gunslot] < params[1]) return SendClientMessage(playerid,CG, "У Вас нет такого количества патронов");
	SetPVarInt(playerid, "pt", params[1]);
	SetPVarInt(playerid, "cena", params[2]);
	return SendProposition(playerid, params[0], PROPOSITION_TYPE_SELLGUN, params[1]);
}
callback: DialogTimerSellGun(playerid) {
	new str[5];
	format(str, sizeof(str), "%d", pDialogCurrectTime[playerid] - gettime() );
    new gun = GetPlayerWeapon(GetPVarInt(playerid, "proposition"));
	new str_3[256];
	new cena = GetPVarInt(playerid, "cena")/GetPVarInt(playerid, "pt");
	format(str_3,sizeof(str_3),"Продавец: %s[%d]\nОружие: %s (%d пт)\nСтоимость: %d руб (%d за 1 пт)\n\nВы действительно хотите принять это предложение", PI[GetPVarInt(playerid, "proposition")][data_NAME],GetPVarInt(playerid, "proposition"),weapon_names[gun],GetPVarInt(playerid, "value_1"),GetPVarInt(playerid, "cena"),cena);
	ShowPlayerDialog(playerid, 8791, DIALOG_STYLE_MSGBOX, "{f00e5d}Покупка оружия", str_3, (pDialogCurrectTime[playerid] < gettime()) ? ("Купить") : (str), "Нет");
	if pDialogCurrectTime[playerid] < gettime() *then clearDialogTimer(playerid);
	return 1;
}
stock Dialog_PLAYER_REGISTER(playerid) {
	SetPlayerSkinAC(playerid,60);
	TogglePlayerControllable(playerid, false);
	SetPlayerVirtualWorld(playerid, playerid+10);
	SetPlayerPos(playerid, 1835.58, 2073.23, 16.06+5);
	InterpolateCameraLookAt(playerid, 1835.58, 2073.23, 16.06+5, 1839.09, 2092.53, 16.08+5, 150000, CAMERA_MOVE);
	new simvol1[450] = {
		"{FFFFFF}-Добро пожаловать на {f00e5d}Аrcana{FFFFFF}\n\n\
	Этот аккаунт {f00e5d}не зарегистрирован {FFFFFF}на нашем сервере.\n\
	Для регистрации введите пароль.\n\
	Он будет использоваться для авторизации на нашем сервере.\n\n\
	{BF2F2F}\tПримечания:\n\
	\t- Длина пароля от 6 до 30 символов\n\
	\t- Пароль должен состоять из букв и цифр\n\
	\t- Пароль чувствителен к регистру"
	};
	new simvol[450+24];
 	format(simvol,sizeof(simvol),"%s", simvol1, PI[playerid][data_NAME]);
    ShowPlayerDialog(playerid, dialog_REGISTER, DIALOG_STYLE_PASSWORD, "{f00e5d}Регистрация", simvol, "Далее", "");
   	return SetPlayerVirtualWorld(playerid, playerid);
}
stock Dialog_PLAYER_LOGIN(playerid) {
	SetPVarInt(playerid,"reg_account", 0);
	ShowPlayerDialog(playerid, dialog_LOGIN, DIALOG_STYLE_PASSWORD, "{f00e5d}Авторизация","{FFFFFF}Добро пожаловать на {f00e5d}Arcana{FFFFFF}\n\nВведите свой пароль\n{FFFFFF}Попыток для ввода пароля: {f00e5d}3","Принять","");
	return SetPlayerVirtualWorld(playerid, playerid);
}
stock Autorisation(playerid)
{
    SetPlayerVirtualWorld(playerid, 1228);
	if(PI[playerid][data_ID] != -1) Dialog_PLAYER_LOGIN(playerid);
	else Dialog_PLAYER_REGISTER(playerid);
	return 1;
}
callback: MysqlLoadingAccount(playerid) {
	if(cache_get_row_count(dbHandle) > 0) {
		PI[playerid][data_ID] = cache_get_row_int(0, 0, dbHandle);
	}
	else {
		PI[playerid][data_ID] = -1;
	}
	SetPlayerSkinAC(playerid,60);
	TogglePlayerControllable(playerid, false);
	SetPlayerVirtualWorld(playerid, playerid+10);
	SetPlayerPos(playerid, 1835.58, 2073.23, 16.06+5);
	InterpolateCameraLookAt(playerid, 1835.58, 2073.23, 16.06+5, 1839.09, 2092.53, 16.08+5, 150000, CAMERA_MOVE);
	new gpcitoken[65],str[200];
	gpci(playerid, gpcitoken, sizeof(gpcitoken));
	mysql_format(dbHandle, str, sizeof(str), "SELECT * FROM `gpci_ban` WHERE `gpci` = '%e'", gpcitoken);
	mysql_tquery(dbHandle, str, "CheckBanPC", "d", playerid);
}
stock LoadAccount(playerid) {
	cef_emit_event(playerid, "update-player-info", CEFINT(19), CEFINT(playerid), CEFINT(PI[playerid][data_ID]));
	if(PI[playerid][data_SHOWFPS] == 1) cef_emit_event(playerid, "show-fps");
	new nip[45];
	GetPlayerIp(playerid, nip, sizeof(nip));
	if(strcmp(nip, PI[playerid][data_REGISTER_IP], false) == 0 && strval(PI[playerid][data_REGISTER_IP]) == 0) {
		new str[MAX_PLAYER_NAME+105];
		format(str,sizeof(str),"[Anti-Hack] [%s] %s[%d] возможно взломан (REGIP: %s,IP: %s)", GSName[PI[playerid][data_ADMLVL]], PI[playerid][data_NAME],playerid,PI[playerid][data_REGISTER_IP],nip);
		SendAdminMessage(COLOR_RED,str);
	}
	if(PI[playerid][data_MEMBER] == 5) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_MEMBER] == 6) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_MEMBER] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_SKIN] == 0) return ChangeSkin(playerid);
	SendClientMessagef(playerid,0x3399FF00,"Добро пожаловать в Arcana");
 	SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Загружаем данные игровой сессии, пожалуйста подождите...");
	SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Меню помощи - /help стандартное управление голосовым чатом: X (англ) - говорить");
	SendClientMessage(playerid, 0x7394dcFF, "[Подсказка] {FFFFFF}включен автоматический донат, пополнить баланс можно на сайте {FFFF33}arcanarp.online");
	if(PI[playerid][data_PRIZEGIVE] == 0) SendClientMessage(playerid, 0x7394dcFF, "[Подсказка] {FFFFFF}отыграй нужное время и получи {FFFF33}100{FFFFFF} донат-поинтов! Информация: {FFFF33}/prize");
	if(PI[playerid][data_BOOST] > 0) SendClientMessage(playerid, COLOR_TOMATO, "[!!!] {FFFF99}У Вас активен бустер! Подробнее в {FF6347}/boost");
	SendClientMessage(playerid, COLOR_TOMATO, "[!!!] {FFFF99}если зависли интерфейсы используйте новую команду: {FF6347}/reload");
	if(!IsPlayerOPG(playerid)) {
		if(PI[playerid][data_MEMBER] == 7) if(m_kavkaz != 0) SendClientMessage(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {FF6347}/ginfo");
		if(PI[playerid][data_MEMBER] == 6) if(m_gopota != 0) SendClientMessage(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {FF6347}/ginfo");
		if(PI[playerid][data_MEMBER] == 5) if(m_skinhead != 0) SendClientMessage(playerid, COLOR_TOMATO, "[!!!] {FFFF99}Стрела в Вашей ОПГ заморожена! Подробнее в {FF6347}/ginfo");
	}
	new gpcitoken[80], vers[24];
	GetPlayerVersion(playerid, vers, sizeof(vers));
	gpci(playerid, gpcitoken, sizeof(gpcitoken));
	MysqlUpdatePlayerStr(playerid, "version", vers);
	MysqlUpdatePlayerStr(playerid, "GPCI", gpcitoken);
	MysqlUpdatePlayerStr(playerid, "last_password", PI[playerid][data_PASSWORD]);
	if(GetPVarInt(playerid, "Auth") != 0) {
		SetPVarInt(playerid,"JoinGame",1);
		if(PI[playerid][STARTX] == 0 && PI[playerid][STARTY] == 0 && PI[playerid][STARTZ] == 0 || PI[playerid][VIRTI] != 0 || PI[playerid][data_HOSPITAL] != 0) {
			DeletePVar(playerid,"player_auth");
			PI[playerid][data_LOGGED] = true;
			CancelSelectTextDraw(playerid);
			TogglePlayerControllable(playerid, true);
			TogglePlayerSpectating(playerid, 0);
			SpawnPlayerAC(playerid);
			SetPVarInt(playerid, "Auth",0);
			for(new i = 0; i < 13; i++) if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
			return 1;
		}
		else {
			if(PI[playerid][data_JAIL] != 0 || PI[playerid][data_DEMORGAN] != 0) {
				DeletePVar(playerid,"player_auth");
				PI[playerid][data_LOGGED] = true;
				CancelSelectTextDraw(playerid);
				TogglePlayerControllable(playerid, true);
				TogglePlayerSpectating(playerid, 0);
				SpawnPlayerAC(playerid);
				SetPVarInt(playerid, "Auth",0);
				for(new i = 0; i < 13; i++) if(PI[playerid][data_GUN][i] != 0 && PI[playerid][data_AMMO][i] != 0) GivePlayerWeapon(playerid, PI[playerid][data_GUN][i], PI[playerid][data_AMMO][i]);
			}
			ShowPlayerDialog(playerid, dialog_SPAWNLAST, DIALOG_STYLE_MSGBOX, "{f00e5d}Спавн", "{FFFFFF}Вы хотите появьтся на месте выхода из игры?", "Да", "Нет");
		}
	}
	else SetPVarInt(playerid,"JoinGame",1), SetPlayerToSpawn(playerid);
	if(PI[playerid][data_ADMLVL] >= 1) {
		new str[MAX_PLAYER_NAME+75];
		format(str,sizeof(str),"[%s #%d] %s[%d] вошел на сервер", GSName[PI[playerid][data_ADMLVL]], PI[playerid][ADMINSNUMBER],PI[playerid][data_NAME],playerid);
		SendAdminMessage(COLOR_ADMINCHAT,str);
	}
	GetPlayerIp(playerid, PI[playerid][LAST_IP], 16);
	new str_q2[144];
	format(str_q2, sizeof(str_q2), "UPDATE `accounts` SET `enter_ip` = '%s' WHERE `id` = '%d'", PI[playerid][LAST_IP], PI[playerid][data_ID]);
	mysql_query(dbHandle, str_q2, false);
	if(PI[playerid][data_VMUTE] != 0) SvMutePlayerEnable(playerid);
	if(PI[playerid][data_MEMBER] == 5) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_MEMBER] == 6) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_MEMBER] == 7) for(new g; g <= totalgz; g++) GangZoneShowForPlayer(playerid, g, GetGZFrac(g));
	if(PI[playerid][data_MEMBER] == 1) SetPlayerTeam(playerid, 1);
	if(PI[playerid][data_MEMBER] == 2) SetPlayerTeam(playerid, 2);
	if(PI[playerid][data_MEMBER] == 3) SetPlayerTeam(playerid, 3);
	if(PI[playerid][data_MEMBER] == 4) SetPlayerTeam(playerid, 4);
	if(PI[playerid][data_MEMBER] == 5) SetPlayerTeam(playerid, 5);
	if(PI[playerid][data_MEMBER] == 6) SetPlayerTeam(playerid, 6);
	if(PI[playerid][data_MEMBER] == 7) SetPlayerTeam(playerid, 7);
	if(PI[playerid][data_MEMBER] == 8) SetPlayerTeam(playerid, 8);
	return 1;
}
